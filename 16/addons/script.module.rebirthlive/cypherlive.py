import base64;exec base64.b64decode('aW1wb3J0IHhibWMgLCB4Ym1jZ3VpICwgeGJtY3BsdWdpbgppbXBvcnQgdXJsbGliMiAsIHVybGxpYiAsIGNnaSAsIHJlCmlmIDY0IC0gNjQ6IGkxMWlJaWlJaWkKaWYgNjUgLSA2NTogTzAgLyBpSWlpMUkxMUkxSUkxICUgT29vb29vb29PTyAtIGkxSUlpCmltcG9ydCB1cmxwYXJzZQppbXBvcnQgSFRNTFBhcnNlcgppbXBvcnQgeGJtY2FkZG9uCmZyb20gb3BlcmF0b3IgaW1wb3J0IGl0ZW1nZXR0ZXIKaW1wb3J0IHRyYWNlYmFjayAsIGNvb2tpZWxpYgppbXBvcnQgYmFzZTY0ICwgb3MgLCBiaW5hc2NpaQppbXBvcnQgQ3VzdG9tUGxheWVyICwgdXVpZAppbXBvcnQgY2hlY2tiYWQKZnJvbSB0aW1lIGltcG9ydCB0aW1lCmltcG9ydCBiYXNlNjQKI2ltcG9ydCBzc2wKaWYgNzMgLSA3MzogSUkxMTFpaWlpCklpSUkxSWlpSWlJMSA9IE5vbmUKdHJ5IDoKIGZyb20gbHhtbEVSUlJPUlJSUiBpbXBvcnQgZXRyZWUKIHByaW50ICggInJ1bm5pbmcgd2l0aCBseG1sLmV0cmVlIiApCmV4Y2VwdCBJbXBvcnRFcnJvciA6CiB0cnkgOgogIGltcG9ydCB4bWwgLiBldHJlZSAuIEVsZW1lbnRUcmVlIGFzIGV0cmVlCiAgcHJpbnQgKCAicnVubmluZyB3aXRoIEVsZW1lbnRUcmVlIG9uIFB5dGhvbiAyLjUrIiApCiBleGNlcHQgSW1wb3J0RXJyb3IgOgogIHRyeSA6CiAgIGlmIDQwIC0gNDA6IG9vICogT29PME8wMAogICBpbXBvcnQgY0VsZW1lbnRUcmVlIGFzIGV0cmVlCiAgIHByaW50ICggInJ1bm5pbmcgd2l0aCBjRWxlbWVudFRyZWUiICkKICBleGNlcHQgSW1wb3J0RXJyb3IgOgogICB0cnkgOgogICAgaWYgMiAtIDI6IG9vT08wMG9PbyAlIG9PbzBPME9vbyAqIE9vbzAwb09vMDBvIC4gb09vTzBvbzBPT09vICsgaWlpaUlpMTFpCiAgICBpbXBvcnQgZWxlbWVudHRyZWUgLiBFbGVtZW50VHJlZSBhcyBldHJlZQogICAgcHJpbnQgKCAicnVubmluZyB3aXRoIEVsZW1lbnRUcmVlIiApCiAgIGV4Y2VwdCBJbXBvcnRFcnJvciA6CiAgICBwcmludCAoICJGYWlsZWQgdG8gaW1wb3J0IEVsZW1lbnRUcmVlIGZyb20gYW55IGtub3duIHBsYWNlIiApCiAgICBpZiAyNCAtIDI0OiBJSTExaWlJSSAvIE9vT08wb29PT29vME8gKyBvMDAwMG9Pb09vTzBvICogaTFJMWlpMUlJMWlJSSAlIG9vb08wb28wb09PT08KdHJ5IDoKIGltcG9ydCBqc29uCmV4Y2VwdCA6CiBpbXBvcnQgc2ltcGxlanNvbiBhcyBqc29uCiBpZiA1MyAtIDUzOiBvMG9vMG8gLyBPbyArIG8wb28wbyAvIG9vb08wb28wb09PT08gKiBPb29vb29vb09PICsgaTFJMWlpMUlJMWlJSQpfX2FkZG9uX18gPSB4Ym1jYWRkb24gLiBBZGRvbiAoICkKX19hZGRvbm5hbWVfXyA9IF9fYWRkb25fXyAuIGdldEFkZG9uSW5mbyAoICduYW1lJyApCl9faWNvbl9fID0gX19hZGRvbl9fIC4gZ2V0QWRkb25JbmZvICggJ2ljb24nICkKT09vMG9PMG9vb09vTyA9ICdzY3JpcHQubW9kdWxlLnJlYmlydGhsaXZlJwpvb08wMG9Pb28gPSB4Ym1jYWRkb24gLiBBZGRvbiAoIGlkID0gT09vMG9PMG9vb09vTyApCk8wT09vID0geGJtYyAuIHRyYW5zbGF0ZVBhdGggKCBvb08wMG9Pb28gLiBnZXRBZGRvbkluZm8gKCAncHJvZmlsZScgKSApCmlmIDggLSA4OiBPb28wMG9PbzAwbyAqIG9Pb08wb28wT09PbyAqIGlJaWkxSTExSTFJSTEgLiBvb29PMG9vMG9PT09PIC8gb29vTzBvbzBvT09PTyAlIG9vb08wb28wb09PT08KaTExID0gJycKaWYgNDEgLSA0MTogbzBvbzBvIC4gT28gKiBvb29PMG9vMG9PT09PICUgaTExaUlpaUlpaQppZiA3NCAtIDc0OiBpMUkxaWkxSUkxaUlJICogb29vTzBvbzBvT09PTwpvbzAwbzBPbzBvbyA9IHhibWNhZGRvbiAuIEFkZG9uICggKSAuIGdldEFkZG9uSW5mbyAoICJwYXRoIiApCmkxaUlJMUkxaTFpMSA9IHhibWNhZGRvbiAuIEFkZG9uICggKSAuIGdldEFkZG9uSW5mbyAoICJ2ZXJzaW9uIiApCmlmIDI3IC0gMjc6IG9vT08wMG9PbwpvT09PbzBvME8gPSB4Ym1jIC4gdHJhbnNsYXRlUGF0aCAoIG9vTzAwb09vbyAuIGdldEFkZG9uSW5mbyAoICdwYXRoJyApIC4gZGVjb2RlICggJ3V0Zi04JyApICkKaWYgNzIgLSA3MjogT29PME8wMCAlIElJMTFpaUlJIC4gb28gLyBPb09PMG9vT09vbzBPICogb28KaWYgMzEgLSAzMTogSUkxMTFpaWlpICsgb29PTzAwb09vIC4gbzBvbzBvCk9vT29vT09PTyA9ICdXVFZDb29raWVGaWxlLmx3cCcKT29Pb29PT09PID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgT29Pb29PT09PICkKaTExaWlJSSA9ICdaZW1Db29raWVGaWxlLmx3cCcKaTExaWlJSSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPME9PbyAsIGkxMWlpSUkgKQppZiAzNCAtIDM0OiBJSTExaWlJSSAlIE9vb29vb29vT08gLyBpMUlJaSAuIGkxSTFpaTFJSTFpSUkgKyBPMAppZiA0MiAtIDQyOiBJSTExaWlJSSAvIGkxSUlpICsgaTExaUlpaUlpaSAtIG8wMDAwb09vT29PMG8Kb28wT29vMCA9ICdZcENvb2tpZUZpbGUubHdwJwpvbzBPb28wID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgb28wT29vMCApCmlmIDQ2IC0gNDY6IE9vICUgT28gLSBpaWlpSWkxMWkgKiBPb28wMG9PbzAwbyAlIGkxSTFpaTFJSTFpSUkKT09vb08wT09vbyA9ICdIRENhc3RDb29raWVGaWxlLmx3cCcKT09vb08wT09vbyA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPME9PbyAsIE9Pb29PME9Pb28gKQppZiAyOSAtIDI5OiBPb28wMG9PbzAwbyAvIGlJaWkxSTExSTFJSTEKSWlJSUlpSTFJMSA9ICdUVlBDb29raWVGaWxlLmx3cCcKSWlJSUlpSTFJMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPME9PbyAsIElpSUlJaUkxSTEgKQppZiA4NiAtIDg2OiBpMTFpSWlpSWlpICsgbzAwMDBvT29Pb08wbyArIE9vICogT29PTzBvb09Pb28wTyArIE9vbzAwb09vMDBvCmlmIDYxIC0gNjE6IG9vT08wMG9PbyAvIGkxMWlJaWlJaWkKSWlJaUlpID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDNkM2R5NTZaVzEwZGk1amIyMHZZMkYwWldkdmNua3ZjR0ZyYVhOMFlXNXBMdz09JyApCklJID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDNkM2R5NTZaVzEwZGk1amIyMHZiR2wyWlMxd1lXdHBjM1JoYm1rdGJtVjNjeTFqYUdGdWJtVnNjeTg9JyApCmlJID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDNkM2R5NTZaVzEwZGk1amIyMHZZMkYwWldkdmNua3ZkbWx5WVd3dGRtbGtaVzl6THc9PScgKQppZiAyMiAtIDIyOiBPb08wTzAwICUgbzAwMDBvT29Pb08wbwppZiA4NCAtIDg0OiBpMTFpSWlpSWlpIC4gT29vMDBvT28wMG8KbzBPMDBvb29vID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDNkM2R5NWxZbTkxYm1SelpYSjJhV05sY3k1amIyMDZPRGc0T0M5MWMyVnljeTl5WlhndmJWOXNhWFpsTG5Cb2NEOWhjSEE5SlhNbWMzUnlaV0Z0UFNWeicgKQpPMDBvID0gb29PMDBvT29vIC4gZ2V0U2V0dGluZyAoICJkb25vdGNhY2hlIiApID09ICJ0cnVlIgppZiBub3Qgb29PMDBvT29vIC4gZ2V0U2V0dGluZyAoICJkdW1teSIgKSA9PSAidHJ1ZSIgOgogb29PMDBvT29vIC4gc2V0U2V0dGluZyAoICJkdW1teSIgLCAidHJ1ZSIgKQogaWYgNjEgLSA2MTogaTFJMWlpMUlJMWlJSSAuIGlJaWkxSTExSTFJSTEgKiBvbyAuIE9vICUgT29PME8wMApjbGFzcyBvT28wME9vMDBPICggdXJsbGliMiAuIEhUVFBFcnJvclByb2Nlc3NvciApIDoKIGRlZiBodHRwX3Jlc3BvbnNlICggc2VsZiAsIHJlcXVlc3QgLCByZXNwb25zZSApIDoKICByZXR1cm4gcmVzcG9uc2UKIGh0dHBzX3Jlc3BvbnNlID0gaHR0cF9yZXNwb25zZQogaWYgNDMgLSA0Mzogb28gLSBpMUkxaWkxSUkxaUlJICogaUlpaTFJMTFJMUlJMQpkZWYgTzBPMDBvME9PTzAgKCBGcm9tdXJsICkgOgogb29PMDBvT29vIC4gb3BlblNldHRpbmdzICggKQogaWYgMjcgLSAyNzogTzAgJSBpMUlJaSAqIGlpaWlJaTExaSArIGkxMWlJaWlJaWkgKyBPb29vb29vb09PICogaTFJSWkKZGVmIG8wb28wbzBPMDBPTyAoIEZyb211cmwgKSA6CiBvMG9PID0geGJtY2d1aSAuIERpYWxvZyAoICkKIEkxaTFpaWkgPSBvMG9PIC4gb2sgKCAnU3RhdHVzJyAsIGkxaWlJMTFJICggJ2h0dHA6Ly9wYXN0ZWJpbi5jb20vcmF3L2YzRUJUeE0zJyApICkKIGlmIDI5IC0gMjk6IE9vb29vb29vT08KIGlmIDIzIC0gMjM6IE9vbzAwb09vMDBvIC4gSUkxMTFpaWlpCmRlZiBPbzBPME9PT29vICggbmFtZSAsIHVybCAsIGljb25pbWFnZSApIDoKIEkxaTFpaWkgPSBUcnVlCiBvT29Pb29PbzBvMCA9IHhibWNndWkgLiBMaXN0SXRlbSAoIG5hbWUgLCBpY29uSW1hZ2UgPSAiRGVmYXVsdFZpZGVvLnBuZyIgLCB0aHVtYm5haWxJbWFnZSA9IGljb25pbWFnZSApCiBvT29Pb29PbzBvMCAuIHNldEluZm8gKCB0eXBlID0gIlZpZGVvIiAsIGluZm9MYWJlbHMgPSB7ICJUaXRsZSIgOiBuYW1lIH0gKQogSTFpMWlpaSA9IHhibWNwbHVnaW4gLiBhZGREaXJlY3RvcnlJdGVtICggaGFuZGxlID0gaW50ICggc3lzIC4gYXJndiBbIDEgXSApICwgdXJsID0gdXJsICwgbGlzdGl0ZW0gPSBvT29Pb29PbzBvMCApCiByZXR1cm4gSTFpMWlpaQogaWYgNjEgLSA2MTogT29vMDBvT28wMG8gLyBvb09PMDBvT28gKyBPbyAqIGlpaWlJaTExaSAvIGlpaWlJaTExaQogaWYgNzUgLSA3NTogaTFJSWkgLyBPb29vb29vb09PIC0gTzAgLyBvT28wTzBPb28gLiBJSTExMWlpaWkgLSBpMUlJaQpkZWYgTzAwME9PMCAoIG5hbWUgLCB1cmwgLCBtb2RlICwgaWNvbmltYWdlICwgc2hvd0NvbnRleHQgPSBGYWxzZSAsIHNob3dMaXZlQ29udGV4dCA9IEZhbHNlICwgaXNJdEZvbGRlciA9IFRydWUgLCBsaW5rVHlwZSA9IE5vbmUgKSA6CiBpZiA0MyAtIDQzOiBvMG9vMG8gLSBPMCAlIG9vIC4gT29PTzBvb09Pb28wTwogbzAwID0gc3lzIC4gYXJndiBbIDAgXSArICI/dXJsPSIgKyB1cmxsaWIgLiBxdW90ZV9wbHVzICggdXJsICkgKyAiJm1vZGU9IiArIHN0ciAoIG1vZGUgKSArICImbmFtZT0iICsgdXJsbGliIC4gcXVvdGVfcGx1cyAoIG5hbWUgKQogSTFpMWlpaSA9IFRydWUKIG9Pb09vb09vMG8wID0geGJtY2d1aSAuIExpc3RJdGVtICggbmFtZSAsIGljb25JbWFnZSA9ICJEZWZhdWx0Rm9sZGVyLnBuZyIgLCB0aHVtYm5haWxJbWFnZSA9IGljb25pbWFnZSApCiBvT29Pb29PbzBvMCAuIHNldEluZm8gKCB0eXBlID0gIlZpZGVvIiAsIGluZm9MYWJlbHMgPSB7ICJUaXRsZSIgOiBuYW1lIH0gKQogaWYgOTUgLSA5NTogTzAgKyBvb09PMDBvT28gLiBJSTExMWlpaWkgLyBPMAogaWYgc2hvd0NvbnRleHQgPT0gVHJ1ZSA6CiAgTzAwMG9vME8gPSAiWEJNQy5SdW5QbHVnaW4oJXMmbGlua1R5cGU9JXMpIiAlICggbzAwICwgIkRNIiApCiAgT09PTyA9ICJYQk1DLlJ1blBsdWdpbiglcyZsaW5rVHlwZT0lcykiICUgKCBvMDAgLCAiRE1BU0xJVkUiICkKICBpMTFpMSA9ICJYQk1DLlJ1blBsdWdpbiglcyZsaW5rVHlwZT0lcykiICUgKCBvMDAgLCAiTElOSyIgKQogIElJSWlpMUlJMUlJID0gIlhCTUMuUnVuUGx1Z2luKCVzJmxpbmtUeXBlPSVzKSIgJSAoIG8wMCAsICJZb3V0dWJlIiApCiAgaTFJMWlJID0gIlhCTUMuUnVuUGx1Z2luKCVzJmxpbmtUeXBlPSVzKSIgJSAoIG8wMCAsICJQTEFZV0lSRSIgKQogIG9vME9vb09PbzAgPSAiWEJNQy5SdW5QbHVnaW4oJXMmbGlua1R5cGU9JXMpIiAlICggbzAwICwgIkVCT1VORCIgKQogIG8wTyA9ICJYQk1DLlJ1blBsdWdpbiglcyZsaW5rVHlwZT0lcykiICUgKCBvMDAgLCAiUExBWVdJUkUiICkKICBPMDBvTyA9ICJYQk1DLlJ1blBsdWdpbiglcyZsaW5rVHlwZT0lcykiICUgKCBvMDAgLCAiVklEUkFJTCIgKQogIGlmIDM5IC0gMzk6IG9vb08wb28wb09PT08gLSBJSTExMWlpaWkgKiBvb09PMDBvT28gJSBPb28wMG9PbzAwbyAqIElJMTExaWlpaSAlIElJMTExaWlpaQogIGlmIDU5IC0gNTk6IGlJaWkxSTExSTFJSTEgKyBvbyAtIE9vbzAwb09vMDBvIC0gb28gKyBJSTExaWlJSSAvIG9Pb08wb28wT09PbwogIG9Pb09vb09vMG8wIC4gYWRkQ29udGV4dE1lbnVJdGVtcyAoIFsgKCAnU2hvdyBBbGwgU291cmNlcycgLCBvME8gKSAsICggJ1BsYXkgVmlkcmFpbCB2aWRlbycgLCBPMDBvTyApICwgKCAnUGxheSBFYm91bmQgdmlkZW8nICwgb28wT29vT09vMCApICwgKCAnUGxheSBQbGF5d2lyZSB2aWRlbycgLCBpMUkxaUkgKSAsICggJ1BsYXkgWW91dHViZSB2aWRlbycgLCBJSUlpaTFJSTFJSSApICwgKCAnUGxheSBEYWlseU1vdGlvbiB2aWRlbycgLCBPMDAwb28wTyApICwgKCAnUGxheSBEYWlseU1vdGlvbiBBcyBMaXZlIHZpZGVvJyAsIE9PT08gKSAsICggJ1BsYXkgVHVuZS5wayB2aWRlbycgLCBpMTFpMSApIF0gKQogaWYgbGlua1R5cGUgOgogIG8wMCA9ICJYQk1DLlJ1blBsdWdpbiglcyZsaW5rVHlwZT0lcykiICUgKCBvMDAgLCBsaW5rVHlwZSApCiAgaWYgMjQgLSAyNDogT29PTzBvb09Pb28wTyAuIGkxSTFpaTFJSTFpSUkgJSBJSTExaWlJSSArIE9vICUgb09vME8wT29vCiAgaWYgNCAtIDQ6IG9vb08wb28wb09PT08gLSBvb09PMDBvT28gKiBvT28wTzBPb28gLSBPb09PMG9vT09vbzBPCiAgaWYgNDEgLSA0MTogb09vME8wT29vIC4gb28gKiBpaWlpSWkxMWkgJSBvb29PMG9vMG9PT09PCiAgaWYgODYgLSA4Njogb28gKyBvMDAwMG9Pb09vTzBvICUgaTExaUlpaUlpaSAqIGlpaWlJaTExaSAuIE9vICogT29PTzBvb09Pb28wTwogIGlmIDQ0IC0gNDQ6IGlpaWlJaTExaQogIGlmIDg4IC0gODg6IG8wb28wbyAlIG8wMDAwb09vT29PMG8gLiBJSTExMWlpaWkKIEkxaTFpaWkgPSB4Ym1jcGx1Z2luIC4gYWRkRGlyZWN0b3J5SXRlbSAoIGhhbmRsZSA9IGludCAoIHN5cyAuIGFyZ3YgWyAxIF0gKSAsIHVybCA9IG8wMCAsIGxpc3RpdGVtID0gb09vT29vT28wbzAgLCBpc0ZvbGRlciA9IGlzSXRGb2xkZXIgKQogcmV0dXJuIEkxaTFpaWkKIGlmIDM4IC0gMzg6IE9vbzAwb09vMDBvCmRlZiBPbzBPICggY2hhbm5lbE5hbWUgKSA6CiBpZiAyNSAtIDI1OiBvT28wTzBPb28gLiBJSTExMWlpaWkgLyBpMUkxaWkxSUkxaUlJIC4gSUkxMWlpSUkgKiBvb09PMDBvT28gLiBvbwogT28wb09PbyA9IG8wTzAwb29vbyAuIHJlcGxhY2UgKCAnJXMnICwgY2hhbm5lbE5hbWUgKSA7CiBPbzBPb08wMG9PTzBvID0gdXJsbGliMiAuIFJlcXVlc3QgKCBPbzBvT09vICkKIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChXaW5kb3dzOyBVOyBXaW5kb3dzIE5UIDUuMTsgZW4tR0I7IHJ2OjEuOS4wLjMpIEdlY2tvLzIwMDgwOTI0MTcgRmlyZWZveC8zLjAuMycgKQogT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICkKIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiBPT08wME8gLiBjbG9zZSAoICkKIGlmIDk4IC0gOTg6IGkxSTFpaTFJSTFpSUkgKiBpMUkxaWkxSUkxaUlJIC8gaTFJMWlpMUlJMWlJSSArIE9vT08wb29PT29vME8KIGlmIDM0IC0gMzQ6IE9vCiBJMTExMUkxaUlJMTEgPSByZSAuIGNvbXBpbGUgKCAnXCIoaHR0cC4qP3BsYXlsaXN0Lm0zdS4qPylcIicgKSAuIGZpbmRhbGwgKCBPT29PTzBvbzBvb08gKQogaWYgNTkgLSA1OTogaUlpaTFJMTFJMUlJMSAqIGkxMWlJaWlJaWkgLyBvT29PMG9vME9PT28gKiBpMUlJaSAqIE8wCiBpZiA4MyAtIDgzOiBvb09PMDBvT28gLyBvMG9vMG8gLiBvT28wTzBPb28gLyBvb29PMG9vMG9PT09PIC4gb09vME8wT29vIC4gSUkxMWlpSUkKIE8wb09vT08gPSBJMTExMUkxaUlJMTEgWyAwIF0KIGlmIDk2IC0gOTY6IE9vTzBPMDAKIE9vME9vTzAwb09PMG8gPSB1cmxsaWIyIC4gUmVxdWVzdCAoIE8wb09vT08gKQogT28wT29PMDBvT08wbyAuIGFkZF9oZWFkZXIgKCAnVXNlci1BZ2VudCcgLCAnTW96aWxsYS81LjAoaVBhZDsgVTsgQ1BVIGlQaG9uZSBPUyAzXzIgbGlrZSBNYWMgT1MgWDsgZW4tdXMpIEFwcGxlV2ViS2l0LzUzMS4yMS4xMCAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wLjQgTW9iaWxlLzdCMzE0IFNhZmFyaS81MzEuMjEuMTAnICkKIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1JlZmVyZXInICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDNkM2R5NWxZbTkxYm1SelpYSjJhV05sY3k1amIyMDZPRGc0T0M5MWMyVnljeTl5WlhndmJWOXNhWFpsTG5Cb2NBPT0nICkgKQogT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICkKIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiBPT08wME8gLiBjbG9zZSAoICkKIGlmIDQ1IC0gNDU6IE8wICogT29vMDBvT28wMG8gJSBPb08wTzAwICogT29vb29vb29PTyArIGkxSTFpaTFJSTFpSUkgLiBvT28wTzBPb28KIEkxMTExSTFpSUkxMSA9IHJlIC4gY29tcGlsZSAoICdcIihodHRwLio/aGFzaEFFU2tleT0uKj8pXCInICkgLiBmaW5kYWxsICggT09vT08wb28wb29PICkKIGlmIDY3IC0gNjc6IGkxMWlJaWlJaWkgLSBpMUlJaSAlIG9Pb08wb28wT09PbyAuIE8wCiBPMG9Pb09PID0gSTExMTFJMWlJSTExIFsgMCBdCiBpZiA3NyAtIDc3OiBvb29PMG9vMG9PT09PIC8gb28KIEkxID0geGJtY2d1aSAuIExpc3RJdGVtICggY2hhbm5lbE5hbWUgKQogSTEgLiBzZXRJbmZvICggJ3ZpZGVvJyAsIHsgJ1RpdGxlJyA6IGNoYW5uZWxOYW1lICwgJ0dlbnJlJyA6ICdMaXZlIFRWJyB9ICkKIGlpSWlpID0geGJtYyAuIFBsYXlMaXN0ICggeGJtYyAuIFBMQVlMSVNUX1ZJREVPICkKIGlpSWlpIC4gY2xlYXIgKCApCiBpaUlpaSAuIGFkZCAoIE8wb09vT08gKQogaWYgNzkgLSA3OTogT29vb29vb29PTyAvIE8wCiB4Ym1jIC4gUGxheWVyICggKSAuIHBsYXkgKCBpaUlpaSApCiByZXR1cm4KIGlmIDc1IC0gNzU6IG9PbzBPME9vbyAlIE9vbzAwb09vMDBvICUgT29vMDBvT28wMG8gLiBvMG9vMG8KZGVmIGkxaWlJMTFJICggdXJsICwgY29va2llSmFyID0gTm9uZSAsIHBvc3QgPSBOb25lICwgdGltZW91dCA9IDIwICwgaGVhZGVycyA9IE5vbmUgLCBqc29ucG9zdCA9IEZhbHNlICkgOgogaWYgNSAtIDU6IE9vbzAwb09vMDBvICogT28gKyBvT28wTzBPb28gLiBJSTExaWlJSSArIG9PbzBPME9vbwogaWYgOTEgLSA5MTogTzAKIGlmIDYxIC0gNjE6IElJMTExaWlpaQogaWYgNjQgLSA2NDogT28gLyBvT28wTzBPb28gLSBPMCAtIE9vT08wb29PT29vME8KIGlmIDg2IC0gODY6IE9vT08wb29PT29vME8gJSBvT28wTzBPb28gLyBvbyAvIG9PbzBPME9vbwogaUlJaTFpMSA9IHVybGxpYjIgLiBIVFRQQ29va2llUHJvY2Vzc29yICggY29va2llSmFyICkKIGlmIDEwIC0gMTA6IE9vT08wb29PT29vME8KIE9Pb29PTzAwMCA9IHVybGxpYjIgLiBidWlsZF9vcGVuZXIgKCBpSUlpMWkxICwgdXJsbGliMiAuIEhUVFBCYXNpY0F1dGhIYW5kbGVyICggKSAsIHVybGxpYjIgLiBIVFRQSGFuZGxlciAoICkgKQogaWYgOTcgLSA5Nzogb09vTzBvbzBPT09vICsgSUkxMWlpSUkgLyBpSWlpMUkxMUkxSUkxIC8gaTFJMWlpMUlJMWlJSQogSTExMTFJSWkgPSBOb25lCiBpZiAnfCcgaW4gdXJsIDoKICB1cmwgLCBJMTExMUlJaSA9IHVybCAuIHNwbGl0ICggJ3wnICkKIE9vME9vTzAwb09PMG8gPSB1cmxsaWIyIC4gUmVxdWVzdCAoIHVybCApCiBpZiA5MyAtIDkzOiBPb29vb29vb09PIC8gb28gJSBpMTFpSWlpSWlpICsgb09vTzBvbzBPT09vICogb29PTzAwb09vCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoICdVc2VyLUFnZW50JyAsICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMzMuMC4xNzUwLjE1NCBTYWZhcmkvNTM3LjM2JyApCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoICdBY2NlcHQtRW5jb2RpbmcnICwgJ2d6aXAnICkKIGlmIDE1IC0gMTU6IE9vT08wb29PT29vME8gLiBvb09PMDBvT28gLyBPb08wTzAwICsgT29PTzBvb09Pb28wTwogaWYgaGVhZGVycyA6CiAgZm9yIE9vbyAsIE9PT09vIGluIGhlYWRlcnMgOgogICBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoIE9vbyAsIE9PT09vICkKIGlmIEkxMTExSUlpIDoKICBJMTExMUlJaSA9IEkxMTExSUlpIC4gc3BsaXQgKCAnJicgKQogIGlmIDc2IC0gNzY6IG9vT08wMG9PbwogIGZvciBPb28gaW4gSTExMTFJSWkgOgogICBpZiBsZW4gKCBPb28gLiBzcGxpdCAoICc9JyApICkgPT0gMiA6CiAgICBJMWlJSWlpICwgaWlpMWkgPSBPb28gLiBzcGxpdCAoICc9JyApCiAgIGVsc2UgOgogICAgSTExaTFpaTEgPSBPb28gLiBzcGxpdCAoICc9JyApCiAgICBJMWlJSWlpID0gSTExaTFpaTEgWyAwIF0KICAgIGlpaTFpID0gJz0nIC4gam9pbiAoIEkxMWkxaWkxIFsgMSA6IF0gKQogICAgaWYgODcgLSA4NzogT29PTzBvb09Pb28wTyAtIGlJaWkxSTExSTFJSTEgKyBvbyAuIGkxSTFpaTFJSTFpSUkKICAgIGlmIDYyIC0gNjI6IE8wICogaTFJSWkgKiBPb28wMG9PbzAwbyAtIG9vICsgb28KICAgT28wT29PMDBvT08wbyAuIGFkZF9oZWFkZXIgKCBJMWlJSWlpICwgaWlpMWkgKQogICBpZiAzNCAtIDM0OiBpSWlpMUkxMUkxSUkxIC0gT29vMDBvT28wMG8KIGlmIGpzb25wb3N0IDoKICBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoICdDb250ZW50LVR5cGUnICwgJ2FwcGxpY2F0aW9uL2pzb24nICkKIE9PTzAwTyA9IE9Pb29PTzAwMCAuIG9wZW4gKCBPbzBPb08wMG9PTzBvICwgcG9zdCAsIHRpbWVvdXQgPSB0aW1lb3V0ICkKIGlmIE9PTzAwTyAuIGluZm8gKCApIC4gZ2V0ICggJ0NvbnRlbnQtRW5jb2RpbmcnICkgPT0gJ2d6aXAnIDoKICBmcm9tIFN0cmluZ0lPIGltcG9ydCBTdHJpbmdJTwogIGltcG9ydCBnemlwCiAgbzAwb29vTzBPbyA9IFN0cmluZ0lPICggT09PMDBPIC4gcmVhZCAoICkgKQogIG8wTzBPT08wT29vID0gZ3ppcCAuIEd6aXBGaWxlICggZmlsZW9iaiA9IG8wMG9vb08wT28gKQogIE9Pb09PMG9vMG9vTyA9IG8wTzBPT08wT29vIC4gcmVhZCAoICkKIGVsc2UgOgogIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiBPT08wME8gLiBjbG9zZSAoICkKIHJldHVybiBPT29PTzBvbzBvb08gOwogaWYgNDUgLSA0NTogTzAgLyBPb28wMG9PbzAwbwpkZWYgaTEgKCApIDoKIElJSUlJMTFJMUlpSSA9IFsgXQogaTFJID0gc3lzIC4gYXJndiBbIDIgXQogaWYgbGVuICggaTFJICkgPj0gMiA6CiAgT29PTyA9IHN5cyAuIGFyZ3YgWyAyIF0KICBvb09PTzAgPSBPb09PIC4gcmVwbGFjZSAoICc/JyAsICcnICkKICBpZiAoIE9vT08gWyBsZW4gKCBPb09PICkgLSAxIF0gPT0gJy8nICkgOgogICBPb09PID0gT29PTyBbIDAgOiBsZW4gKCBPb09PICkgLSAyIF0KICBvMG8gPSBvb09PTzAgLiBzcGxpdCAoICcmJyApCiAgSUlJSUkxMUkxSWlJID0geyB9CiAgZm9yIE8wT09vTzAwT08wbyBpbiByYW5nZSAoIGxlbiAoIG8wbyApICkgOgogICBJMTExMUlJSUlJaSA9IHsgfQogICBJMTExMUlJSUlJaSA9IG8wbyBbIE8wT09vTzAwT08wbyBdIC4gc3BsaXQgKCAnPScgKQogICBpZiAoIGxlbiAoIEkxMTExSUlJSUlpICkgKSA9PSAyIDoKICAgIElJSUlJMTFJMUlpSSBbIEkxMTExSUlJSUlpIFsgMCBdIF0gPSBJMTExMUlJSUlJaSBbIDEgXQogICAgaWYgMjIgLSAyMjogaTFJSWkgKyBPMCAuIGlJaWkxSTExSTFJSTEgKiBpMUkxaWkxSUkxaUlJICUgaTExaUlpaUlpaSAqIG9vCiByZXR1cm4gSUlJSUkxMUkxSWlJCiBpZiA3NyAtIDc3OiBPb08wTzAwCiBpZiAxNyAtIDE3OiBpMUkxaWkxSUkxaUlJICUgb29PTzAwb09vIC4gSUkxMWlpSUkgKyBvb09PMDBvT28gLyBJSTExMWlpaWkKZGVmIG9vME8wTzAwICggdXJsICkgOgogT28wT29PMDBvT08wbyA9IHVybGxpYjIgLiBSZXF1ZXN0ICggSWlJaUlpICkKIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChXaW5kb3dzOyBVOyBXaW5kb3dzIE5UIDUuMTsgZW4tR0I7IHJ2OjEuOS4wLjMpIEdlY2tvLzIwMDgwOTI0MTcgRmlyZWZveC8zLjAuMycgKQogT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICkKIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiBPT08wME8gLiBjbG9zZSAoICkKIGlmIDQ3IC0gNDc6IE9vbzAwb09vMDBvICsgT28KIGlmIDgyIC0gODI6IElJMTExaWlpaSAuIG9vb08wb28wb09PT08gLSBpSWlpMUkxMUkxSUkxIC0gb29vTzBvbzBvT09PTyAqIElJMTExaWlpaQogaWYgNzcgLSA3NzogaUlpaTFJMTFJMUlJMSAqIG9vT08wMG9PbwogaWYgOTUgLSA5NTogb28gKyBpMTFpSWlpSWlpCiBpZiA2IC0gNjogT28gLyBpMTFpSWlpSWlpICsgaTFJMWlpMUlJMWlJSSAqIGlpaWlJaTExaQogaWYgODAgLSA4MDogSUkxMTFpaWlpCiBpZiA4MyAtIDgzOiBPb09PMG9vT09vbzBPIC4gaTExaUlpaUlpaSArIElJMTExaWlpaSAuIE9vbzAwb09vMDBvICogT29PTzBvb09Pb28wTwogSTExMTFJMWlJSTExID0gcmUgLiBmaW5kYWxsICggJ29uY2xpY2s9InBsYXlDaGFubmVsXChcJyguKj8pXCdcKTsiLj8+KC4qPyk8L2E+JyAsIE9Pb09PMG9vMG9vTyAsIHJlIC4gRE9UQUxMIHwgcmUgLiBJR05PUkVDQVNFICkKIGlmIDUzIC0gNTM6IElJMTExaWlpaQogaWYgMzEgLSAzMTogb29PTzAwb09vCiBJMTExMUkxaUlJMTEgPSBzb3J0ZWQgKCBJMTExMUkxaUlJMTEgLCBrZXkgPSBpdGVtZ2V0dGVyICggMSApICkKIGZvciBvME9JaUlJIGluIEkxMTExSTFpSUkxMSA6CiAgaWYgbzBPSWlJSSBbIDAgXSA8PiAnJyA6CiAgIE8wMDBPTzAgKCBvME9JaUlJIFsgMSBdICwgbzBPSWlJSSBbIDAgXSAsIDEgLCAnJyAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiByZXR1cm4KIGlmIDI1IC0gMjU6IE8wIC0gTzAgKiBPb28wMG9PbzAwbwpkZWYgT09PTzBvbzAgKCApIDoKIE8wMDBPTzAgKCAnTGF0ZXN0IFNob3dzIChaZW1UdiknICwgJ1Nob3dzJyAsIDIgLCBvcyAuIHBhdGggLiBqb2luICggb09PT28wbzBPICwgJ2ljb25zJyAsICdTaG93c2Zyb21aZW1Udi5wbmcnICkgKQogTzAwME9PMCAoICdMYXRlc3QgU2hvd3MgKFNpYXNhdC5wayknICwgJ2h0dHA6Ly93d3cuc2lhc2F0LnBrL2ZvcnVtL2ZvcnVtZGlzcGxheS5waHA/MjktRGFpbHktVGFsay1TaG93cycgLCAyICwgb3MgLiBwYXRoIC4gam9pbiAoIG9PT09vMG8wTyAsICdpY29ucycgLCAnU2hvd3MgZnJvbSBTaWFzYXQucG5nJyApICkKIE8wMDBPTzAgKCAnQWxsIFByb2dyYW1zIGFuZCBUYWxrIFNob3dzJyAsICdQcm9nVGFsa1Nob3dzJyAsIDIgLCBvcyAuIHBhdGggLiBqb2luICggb09PT28wbzBPICwgJ2ljb25zJyAsICdBbGwgUHJvZ3JhbXMgYW5kIFRhbGsgc2hvd3MucG5nJyApICkKIE8wMDBPTzAgKCAnVmlyYWwgVmlkZW9zIChaZW1UdiknICwgJ3ZpcmFsdmlkZW9zJyAsIDIgLCBvcyAuIHBhdGggLiBqb2luICggb09PT28wbzBPICwgJ2ljb25zJyAsICdTaG93c2Zyb21aZW1Udi5wbmcnICkgKQogaWYgMzUgLSAzNTogbzAwMDBvT29Pb08wbyAtIG9vICUgT29vMDBvT28wMG8gLiBPb29vb29vb09PICUgbzAwMDBvT29Pb08wbwpkZWYgSTFpMUlpaWlpICggKSA6CiBpZiA5NCAtIDk0OiBPb28wMG9PbzAwbyAqIG8wMDAwb09vT29PMG8gLyBPb08wTzAwIC8gbzAwMDBvT29Pb08wbwogaWYgODcgLSA4NzogT29PME8wMCAuIG9vb08wb28wb09PT08KIGlmIDc1IC0gNzU6IE9vICsgb09vME8wT29vICsgT29vMDBvT28wMG8gKiBPb09PMG9vT09vbzBPICUgaWlpaUlpMTFpIC4gaTFJMWlpMUlJMWlJSQogaWYgNTUgLSA1NTogSUkxMWlpSUkgLiBvbwogaWYgNjEgLSA2MTogT29PME8wMCAlIG9vb08wb28wb09PT08gLiBPb08wTzAwCiBpZiAxMDAgLSAxMDA6IG8wb28wbyAqIE8wCiBPMDAwT08wICggJ0N5cGhlcicgLCAnTGl2ZScgLCAxMyAsIG9zIC4gcGF0aCAuIGpvaW4gKCBvT09PbzBvME8gLCAnaWNvbnMnICwgJ1Nwb3J0cy5wbmcnICkgKQogdHJ5IDoKICBpbXBvcnQgdGVzdGFyZWEKICBpZiB0ZXN0YXJlYSAuIHRlc3RlbmFibGVkICggKSA6CiAgIE8wMDBPTzAgKCAnVGVzdCBBcmVhJyAsICdUVUZKVGc9PScgLCA5OSAsIG9zIC4gcGF0aCAuIGpvaW4gKCBvT09PbzBvME8gLCAnaWNvbnMnICwgJ1Nwb3J0cy5wbmcnICkgKQogZXhjZXB0IDogdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiBpZiA2NCAtIDY0OiBJSTExaWlJSSAlIGlJaWkxSTExSTFJSTEgKiBpaWlpSWkxMWkKIGlmIDc5IC0gNzk6IE8wCiBpZiA3OCAtIDc4OiBvT29PMG9vME9PT28gKyBJSTExaWlJSSAtIG8wb28wbwogcmV0dXJuCiBpZiAzOCAtIDM4OiBPb28wMG9PbzAwbyAtIGlpaWlJaTExaSArIGlJaWkxSTExSTFJSTEgLyBvT28wTzBPb28gJSBPb08wTzAwCmRlZiBvTzBvMCAoIHVybCApIDoKIGlmIDUwIC0gNTA6IG9vb08wb28wb09PT08KIGlmIDQ2IC0gNDY6IE8wICsgaTFJMWlpMUlJMWlJSSAlIG9vIC8gT29vMDBvT28wMG8gLiBvb29PMG9vMG9PT09PICogT29PTzBvb09Pb28wTwogaWYgOTMgLSA5MzogT29vMDBvT28wMG8gJSBpMUlJaSAuIG8wMDAwb09vT29PMG8gLiBpMTFpSWlpSWlpCiBvT09vbzAwTzAwbyA9IFsgKCAnUmVmZXJlcicgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMM053YjNKMGN6UjFMblIyTDJWdFltVmtMMU5yZVMxemNHOXlkSE10TVM1d2FIQT0nICkgKSBdCiBPME8wME9vID0gaTFpaUkxMUkgKCB1cmwgLCBoZWFkZXJzID0gb09Pb28wME8wMG8gKQogb29vb29vME8wMDBvID0gJ3N0cmVhbWVyXCcsW1wnIl0oLio/KVtcJyJdJwogT29PID0gJ1wnZmlsZVwnLFwnKC4qPylcJycKIGlmIDUxIC0gNTE6IE9vb29vb29vT08gKiBJSTExaWlJSQogT08wb29PT08wT09PID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggImFIUjBjRG92TDJac1lYTm9kSFl1WTI4dlpWQnNZWGxsY25JdWMzZG0iICkKIG9PMDBvb29PT29PbzAgPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiYUhSMGNEb3ZMMlpzWVhOb2RIWXVZMjh2WlcxaVpXUnZMbkJvY0Q5c2FYWmxQWE5yYTNreEpuWjNQVFkxTUNaMmFEMDBPREE9IiApCiBPb09Pb09vb29vT09vID0gcmUgLiBmaW5kYWxsICggb29vb29vME8wMDBvICwgTzBPMDBPbyApIFsgMCBdCiBvT28wTyA9IHJlIC4gZmluZGFsbCAoIE9vTyAsIE8wTzAwT28gKSBbIDAgXQogaWYgNTIgLSA1MjogaTExaUlpaUlpaSAvIE9vbzAwb09vMDBvICogT28KIGlmIDIyIC0gMjI6IG9PbzBPME9vbyAuIElJMTFpaUlJICogb09vME8wT29vCiBPMDAwT09PID0gJyVzIHBsYXlwYXRoPSVzIHBhZ2VVcmw9JXMgc3dmVXJsPSVzIHRva2VuPSVzIHRpbWVvdXQ9MjAnICUgKCBPb09Pb09vb29vT09vICwgb09vME8gLCBvTzAwb29vT09vT28wICwgT08wb29PT08wT09PICwgJyVaWnJpKG5LYUAjWicgKQogaWYgMjAgLSAyMDogT29vMDBvT28wMG8gLiBJSTExMWlpaWkgJSBJSTExaWlJSSAqIGlJaWkxSTExSTFJSTEKIGlpSWlpID0geGJtYyAuIFBsYXlMaXN0ICggMSApCiBpaUlpaSAuIGNsZWFyICggKQogSTEgPSB4Ym1jZ3VpIC4gTGlzdEl0ZW0gKCBsYWJlbCA9IHN0ciAoIG9PMDBvT09vb29PICkgLCBpY29uSW1hZ2UgPSAiRGVmYXVsdFZpZGVvLnBuZyIgLCB0aHVtYm5haWxJbWFnZSA9IHhibWMgLiBnZXRJbmZvSW1hZ2UgKCAiTGlzdEl0ZW0uVGh1bWIiICkgKQogaWlJaWkgLiBhZGQgKCBPMDAwT09PICwgSTEgKQogSWlJaTExaUkgPSB4Ym1jIC4gUGxheWVyICggKQogSWlJaTExaUkgLiBwbGF5ICggaWlJaWkgKQogaWYgODMgLSA4MzogSUkxMTFpaWlpICUgT29PME8wMCAlIE9vICUgb09vTzBvbzBPT09vCmRlZiBPb08wMDBPME9vICggdXJsICkgOgogT28wbzBvb29vME8wID0geGJtY2d1aSAuIERpYWxvZ1Byb2dyZXNzICggKQogT28wbzBvb29vME8wIC4gY3JlYXRlICggJ1Byb2dyZXNzJyAsICdGZXRjaGluZyBTdHJlYW1pbmcgSW5mbycgKQogT28wbzBvb29vME8wIC4gdXBkYXRlICggMTAgLCAiIiAsICJGaW5kaW5nIGxpbmtzLi4iICwgIiIgKQogaWYgOTMgLSA5MzogTzAgJSBpMUlJaSAuIElJMTFpaUlJIC8gb28gLSBvMG9vMG8gLyBvbwogTzBPMDBPbyA9IGkxaWlJMTFJICggdXJsICkKIElJMUlpaUlpMWkgPSAnPGlmcmFtZSBmcmFtZWJvcmRlcj0iMCIgbWFyZ2luaGVpZ2h0PSIwIi4qP3NyYz0iKC4qPykiIGlkPSJpZnJhbWUiJwogaWlJMTFpaTFJMSA9IHJlIC4gZmluZGFsbCAoIElJMUlpaUlpMWkgLCBPME8wME9vICkgWyAwIF0KIG9PT29vMDBPMDBvID0gWyAoICdSZWZlcmVyJyAsIHVybCApIF0KIE8wTzAwT28gPSBpMWlpSTExSSAoIGlpSTExaWkxSTEgLCBoZWFkZXJzID0gb09Pb28wME8wMG8gKQogT29vME9Pb09vTzAgPSBOb25lCiBvT28wT09vTzAgPSBGYWxzZQogaWYgJ3RoZWFjdGlvbmxpdmUuY29tLycgaW4gTzBPMDBPbyA6CiAgb09vME9Pb08wID0gVHJ1ZQogIE9vMG8wb29vbzBPMCAuIHVwZGF0ZSAoIDMwICwgIiIgLCAiRmluZGluZyBsaW5rcy4uc3RhZ2UyIiAsICIiICkKICBJSTFJaWlJaTFpID0gImlkPScoLio/KScuKj93aWR0aD0nKC4qKScuKj9oZWlnaHQ9JyguKj8pJyIKICBJSW8wT28wb08wb09PMDAgLCBvbzAwT08wMDAwb08gLCBJMUlJMSA9IHJlIC4gZmluZGFsbCAoIElJMUlpaUlpMWkgLCBPME8wME9vICkgWyAwIF0KICBvT09vbzAwTzAwbyA9IFsgKCAnUmVmZXJlcicgLCBpaUkxMWlpMUkxICkgXQogIG9vb08gPSAnaHR0cDovL3RoZWFjdGlvbmxpdmUuY29tL2xpdmVnYW1lY3IyLnBocD9pZD0lcyZ3aWR0aD0lcyZoZWlnaHQ9JXMmc3RyZXRjaGluZz0nICUgKCBJSW8wT28wb08wb09PMDAgLCBvbzAwT08wMDAwb08gLCBJMUlJMSApCiAgTzBPMDBPbyA9IGkxaWlJMTFJICggb29vTyAsIGhlYWRlcnMgPSBvT09vbzAwTzAwbyApCiAgaWYgJ2JpZ2dlc3RwbGF5ZXIubWUnIGluIE8wTzAwT28gOgogICBPbzBvMG9vb28wTzAgLiB1cGRhdGUgKCA1MCAsICIiICwgIkZpbmRpbmcgbGlua3MuLnN0YWdlMyIgLCAiIiApCiAgIElJMUlpaUlpMWkgPSAiaWQ9JyguKj8pJy4qP3dpZHRoPScoLiopJy4qP2hlaWdodD0nKC4qPyknIgogICBJSW8wT28wb08wb09PMDAgLCBvbzAwT08wMDAwb08gLCBJMUlJMSA9IHJlIC4gZmluZGFsbCAoIElJMUlpaUlpMWkgLCBPME8wME9vICkgWyAwIF0KICAgb09Pb28wME8wMG8gPSBbICggJ1JlZmVyZXInICwgb29vTyApIF0KICAgaWYgMjYgLSAyNjogbzAwMDBvT29Pb08wbyAlIG9Pb08wb28wT09PbwogICBJSTFJaWlJaTFpID0gInNyYz0nKC4qPyknIgogICBvMDBPbzBvb29vb28gPSByZSAuIGZpbmRhbGwgKCBJSTFJaWlJaTFpICwgTzBPMDBPbyApIFsgMCBdCiAgIE8wb08wID0gaTFpaUkxMUkgKCBvMDBPbzBvb29vb28gKQogICBJSTFJaWlJaTFpID0gIlwubWVcLyguKj8pXD8iCiAgIGlJSTExID0gcmUgLiBmaW5kYWxsICggSUkxSWlpSWkxaSAsIE8wb08wICkgWyAwIF0KICAgaWlJaWlpMUlJSUlJID0gJ2h0dHA6Ly9iaWdnZXN0cGxheWVyLm1lLyVzP2lkPSVzJndpZHRoPSVzJmhlaWdodD0lcycgJSAoIGlJSTExICwgSUlvME9vMG9PMG9PTzAwICwgb28wME9PMDAwMG9PICwgSTFJSTEgKQogICBPbzBvMG9vb28wTzAgLiB1cGRhdGUgKCA4MCAsICIiICwgIkZpbmRpbmcgbGlua3MuLmxhc3Qgc3RhZ2UiICwgIiIgKQogICBPME8wME9vID0gaTFpaUkxMUkgKCBpaUlpaWkxSUlJSUkgLCBoZWFkZXJzID0gb09Pb28wME8wMG8gKQogICBJSTFJaWlJaTFpID0gJ2ZpbGU6ICIoLio/KSInCiAgIE9vbzBPT29Pb08wID0gcmUgLiBmaW5kYWxsICggSUkxSWlpSWkxaSAsIE8wTzAwT28gKSBbIDAgXSA7CiAgIG9PT29vMDBPMDBvID0gWyAoICdSZWZlcmVyJyAsIGlpSWlpaTFJSUlJSSApIF0KICAgT29vME9Pb09vTzAgKz0gJ3xSZWZlcmVyPScgKyBpaUlpaWkxSUlJSUkKIGlmICd3d3cucmV5dHYuY28nIGluIE8wTzAwT28gOgogIG9PbzBPT29PMCA9IFRydWUKICBPbzBvMG9vb28wTzAgLiB1cGRhdGUgKCAzMCAsICIiICwgIkZpbmRpbmcgbGlua3MuLnN0YWdlMiIgLCAiIiApCiAgSUkxSWlpSWkxaSA9ICJmaWQ9JyguKj8pJy4qP3Zfd2lkdGg9KC4qPyk7Lio/dl9oZWlnaHQ9KC4qPyk7IgogIElJbzBPbzBvTzBvT08wMCAsIG9vMDBPTzAwMDBvTyAsIEkxSUkxID0gcmUgLiBmaW5kYWxsICggSUkxSWlpSWkxaSAsIE8wTzAwT28gKSBbIDAgXQogIG9PT29vMDBPMDBvID0gWyAoICdSZWZlcmVyJyAsIGlpSTExaWkxSTEgKSBdCiAgb29vTyA9ICdodHRwOi8vcmV5dHYuY28vZW1iZWRvLnBocD9saXZlPSVzJndpZHRoPSVzJmhlaWdodD0lcycgJSAoIElJbzBPbzBvTzBvT08wMCAsIG9vMDBPTzAwMDBvTyAsIEkxSUkxICkKICBPbzBvMG9vb28wTzAgLiB1cGRhdGUgKCA1MCAsICIiICwgIkZpbmRpbmcgbGlua3MuLnN0YWdlMyIgLCAiIiApCiAgTzBPMDBPbyA9IGkxaWlJMTFJICggb29vTyAsIGhlYWRlcnMgPSBvT09vbzAwTzAwbyApCiAgaWYgNjcgLSA2NzogbzAwMDBvT29Pb08wbyAvIG9vb08wb28wb09PT08KICBJSTFJaWlJaTFpID0gJ2ZpbGU6ICIoLio/KSInCiAgaWlJaUlJSWlpSSA9IHJlIC4gZmluZGFsbCAoIElJMUlpaUlpMWkgLCBPME8wME9vICkgWyAwIF0KICBJSTFJaWlJaTFpID0gJ3NlY3VyZXRva2VuOiAiKC4qPykiJwogIGlpSTFJSUlpID0gcmUgLiBmaW5kYWxsICggSUkxSWlpSWkxaSAsIE8wTzAwT28gKSBbIDAgXQogIE9vbzBPT29Pb08wID0gaWlJaUlJSWlpSSArICcgdG9rZW49JyArIGlpSTFJSUlpICsgJyBwYWdlVXJsPScgKyBvb29PICsgJyBzd2ZVcmw9aHR0cDovL3AuandwY2RuLmNvbS82LzEyL2p3cGxheWVyLmZsYXNoLnN3ZicgKyAnIHRpbWVvdXQ9MjAnCiAgaWYgNDcgLSA0NzogT29PME8wMCAlIE9vT08wb29PT29vME8gJSBpMTFpSWlpSWlpIC0gTzAgKyBPbwogaWYgT29vME9Pb09vTzAgYW5kIGxlbiAoIE9vbzBPT29Pb08wICkgPiAwIDoKICBpaUlpaSA9IHhibWMgLiBQbGF5TGlzdCAoIDEgKQogIGlpSWlpIC4gY2xlYXIgKCApCiAgSTEgPSB4Ym1jZ3VpIC4gTGlzdEl0ZW0gKCBsYWJlbCA9IHN0ciAoIG9PMDBvT09vb29PICkgLCBpY29uSW1hZ2UgPSAiRGVmYXVsdFZpZGVvLnBuZyIgLCB0aHVtYm5haWxJbWFnZSA9IHhibWMgLiBnZXRJbmZvSW1hZ2UgKCAiTGlzdEl0ZW0uVGh1bWIiICkgKQogIGlpSWlpIC4gYWRkICggT29vME9Pb09vTzAgLCBJMSApCiAgSWlJaTExaUkgPSB4Ym1jIC4gUGxheWVyICggKQogIElpSWkxMWlJIC4gcGxheSAoIGlpSWlpICkKIGVsc2UgOgogIG8wb08gPSB4Ym1jZ3VpIC4gRGlhbG9nICggKQogIGlmIG5vdCBvT28wT09vTzAgOgogICBJMWkxaWlpID0gbzBvTyAuIG9rICggJ05vdCBTdXBwb3J0ZWQnICwgJ1RoaXMgY2hhbm5lbCBpcyBub3Qgc3VwcG9ydGVkIHlldCcgKQogICBpZiA5NCAtIDk0OiBvMG9vMG8KZGVmIGkxMUlJMUkxMUkxICggbCApIDoKIE9Pb09PMG9vbyA9IGxhbWJkYSBJSTFpSWkxMSA6IGludCAoIElJMWlJaTExICkgaWYgSUkxaUlpMTEgLiBpc2RpZ2l0ICggKSBlbHNlIElJMWlJaTExCiBpZiAxMiAtIDEyOiBvMDAwMG9Pb09vTzBvICsgaTExaUlpaUlpaSAqIGlJaWkxSTExSTFJSTEgLyBvT29PMG9vME9PT28gLiBPb09PMG9vT09vbzBPCiBJaWkxaUkgPSBsYW1iZGEgSWlJMWlpaUlpaSA6IFsgT09vT08wb29vICggYyApIGZvciBjIGluIHJlIC4gc3BsaXQgKCAnKFswLTldKyknICwgSWlJMWlpaUlpaSBbIDEgXSApIF0KIHJldHVybiBzb3J0ZWQgKCBsICwga2V5ID0gSWlpMWlJICkKZGVmIEkxSUlJMTExMWlJaSAoIHVybCApIDoKIEkxaTExMUkgPSAicGU9J3RleHRcL2phdmFzY3JpcHQnPmNoPScoLio/KSciCiBPME8wME9vID0gaTFpaUkxMUkgKCAiaHR0cDovL2MyNDcudHYvIiApCiBPb29PbzBvbzBPMG8wME8gPSByZSAuIGZpbmRhbGwgKCBJMWkxMTFJICwgTzBPMDBPbyApCiBPb29PbzBvbzBPMG8wME8gPSBzb3J0ZWQgKCBPb29PbzBvbzBPMG8wME8gLCBrZXkgPSBsYW1iZGEgSTFpMTEgOiBJMWkxMSBbIDAgXSAuIGxvd2VyICggKSApCiBpZiAxMiAtIDEyOiBpMUlJaSArIGkxSUlpIC0gb09vTzBvbzBPT09vICogT29PME8wMCAlIE9vTzBPMDAgLSBJSTExMWlpaWkKIGlmIDUyIC0gNTI6IE9vIC4gaTFJMWlpMUlJMWlJSSArIG8wb28wbwogZm9yIE8wT09vTzAwT08wbyBpbiBPb29PbzBvbzBPMG8wME8gOgogIE8wMDBPTzAgKCAnJXMgUDNHLlR2JyAlICggTzBPT29PMDBPTzBvIC4gcmVwbGFjZSAoICdfJyAsICcnICkgKSAsICdodHRwOi8vYzI0Ny50di9saXZlLnBocD9jaD0lcycgJSBPME9Pb08wME9PMG8gLCAxNyAsICcnICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKICBpZiAzOCAtIDM4OiBpMUlJaSAtIElJMTExaWlpaSAuIG8wb28wbwogIGlmIDU4IC0gNTg6IG9vIC4gaTFJMWlpMUlJMWlJSSArIG9PbzBPME9vbwogIGlmIDY2IC0gNjY6IGkxSTFpaTFJSTFpSUkgLyBpaWlpSWkxMWkgKiBPb29vb29vb09PICsgT29vb29vb29PTyAlIE9vT08wb29PT29vME8KZGVmIElJaWkxMTExICggdXJsICkgOgogSTFpMTExSSA9ICc8bGkuKj8+PGEgaHJlZj0iKC4qPykiLio/Y2hhbm5lbHMtaWNvbiAoLio/KSInCiBPME8wME9vID0gaTFpaUkxMUkgKCAiaHR0cDovL2NyaWNmcmVlLnN4LyIgKQogT29vT28wb28wTzBvMDBPID0gcmUgLiBmaW5kYWxsICggSTFpMTExSSAsIE8wTzAwT28gKQogaWYgNDIgLSA0MjogT29PTzBvb09Pb28wTyAvIE9vbzAwb09vMDBvIC4gaWlpaUlpMTFpICsgaWlpaUlpMTFpICUgb09vME8wT29vICsgaTExaUlpaUlpaQogSTFpMTExSSA9ICc8bGk+PGEgaHJlZj0iKC4qPykiLio/XDxzcGFuIGNsYXNzPSJjaGNsYXNzMyJcPiguKj8pPCcKIE9vb09vMG9vME8wbzAwTyArPSByZSAuIGZpbmRhbGwgKCBJMWkxMTFJICwgTzBPMDBPbyApCiBpZiA1NiAtIDU2OiBPb28wMG9PbzAwbwogT29vT28wb28wTzBvMDBPID0gaTExSUkxSTExSTEgKCBPb29PbzBvbzBPMG8wME8gKQogZm9yIG8wMCAsIEkxaUlJaWkgaW4gT29vT28wb28wTzBvMDBPIDoKICBPMDAwT08wICggSTFpSUlpaSAuIGNhcGl0YWxpemUgKCApICwgbzAwICwgNDIgLCAnJyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiAgaWYgMjggLSAyODogaTFJMWlpMUlJMWlJSSAuIGkxSTFpaTFJSTFpSUkgJSBpSWlpMUkxMUkxSUkxICogaUlpaTFJMTFJMUlJMSAuIE9vbzAwb09vMDBvIC8gaTFJMWlpMUlJMWlJSQogIGlmIDI3IC0gMjc6IG9vT08wMG9PbyArIE9vIC0gaTFJSWkKICBpZiA2OSAtIDY5OiBvb29PMG9vMG9PT09PIC0gTzAgJSBvT29PMG9vME9PT28gKyBpMTFpSWlpSWlpIC4gb09vME8wT29vIC8gb29PTzAwb09vCiAgaWYgNzkgLSA3OTogTzAgKiBpMTFpSWlpSWlpIC0gb29vTzBvbzBvT09PTyAvIG9vb08wb28wb09PT08KICBpZiA0OCAtIDQ4OiBPMAogIGlmIDkzIC0gOTM6IGkxMWlJaWlJaWkgLSBvbyAqIG9Pb08wb28wT09PbyAqIE9vT08wb29PT29vME8gJSBPMCArIE9vb29vb29vT08KICBpZiAyNSAtIDI1OiBvb29PMG9vMG9PT09PICsgbzAwMDBvT29Pb08wbyAvIE9vIC4gT29vMDBvT28wMG8gJSBPMCAqIG9vT08wMG9PbwpkZWYgbzBPMG9vME9PME8gKCB1cmwgKSA6CiBPMDAwT08wICggJ3NzIDEnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDJac1lYTm9kSFl1WTI4dlpXMWlaV1J2TG5Cb2NEOXNhWFpsUFhOcmEza3hKblozUFRZMU1DWjJhRDAwT0RBPScgKSAsIDMyICwgJycgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogTzAwME9PMCAoICdzcyAyJyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyWnNZWE5vZEhZdVkyOHZaVzFpWldSdkxuQm9jRDlzYVhabFBYTnJhM2t5Sm5aM1BUWTFNQ1oyYUQwME9EQT0nICkgLCAzMiAsICcnICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKIE8wMDBPTzAgKCAnc3MgMycgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMMlpzWVhOb2RIWXVZMjh2WlcxaVpXUnZMbkJvY0Q5c2FYWmxQWE5yYTNrekpuWjNQVFkxTUNaMmFEMDBPREE9JyApICwgMzIgLCAnJyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiBPMDAwT08wICggJ3NzIDQnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDJac1lYTm9kSFl1WTI4dlpXMWlaV1J2TG5Cb2NEOXNhWFpsUFhOcmEzazBKblozUFRZMU1DWjJhRDAwT0RBPScgKSAsIDMyICwgJycgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogTzAwME9PMCAoICdzcyA1JyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyWnNZWE5vZEhZdVkyOHZaVzFpWldSdkxuQm9jRDlzYVhabFBYTnJhM2sxSm5aM1BUWTFNQ1oyYUQwME9EQT0nICkgLCAzMiAsICcnICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKIGlmIDY4IC0gNjg6IGlpaWlJaTExaSAuIE9vT08wb29PT29vME8gJSBPb29vb29vb09PIC4gT29PTzBvb09Pb28wTwogaWYgNjQgLSA2NDogaUlpaTFJMTFJMUlJMSAvIG9vIC4gSUkxMTFpaWlpICsgT29vb29vb29PTyAuIG9vT08wMG9PbwogaWYgNTYgLSA1NjogT29PME8wMCAuIG9Pb08wb28wT09PbyAuIG9vCmRlZiBpaTExMUkgKCB1cmwgKSA6CiBJMTExMUkxaUlJMTEgPSBbIF0KIGlmIDEgPT0gMiA6CiAgSTExMTFJMWlJSTExIC4gYXBwZW5kICggKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnVTJ0NUlGTndiM0owSURFPScgKSArICcgW05vdCB3b3JraW5nXScgLCAnbWFudWFsJyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwycHdlRzFzTG1waFpHOXZkSFl1WTI5dEwzWjFlRzFzTG5Cb2NDOXFZV1J2YjNodGJDOXdiR0Y1THpNeE5nPT0nICkgLCAnJyApICkKICBJMTExMUkxaUlJMTEgLiBhcHBlbmQgKCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdVMnQ1SUZOd2IzSjBJREk9JyApICsgJyBbTm90IHdvcmtpbmddJyAsICdtYW51YWwnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDJwd2VHMXNMbXBoWkc5dmRIWXVZMjl0TDNaMWVHMXNMbkJvY0M5cVlXUnZiM2h0YkM5d2JHRjVMek15Tmc9PScgKSAsICcnICkgKQogIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1UydDVJRk53YjNKMElETT0nICkgKyAnIFtOb3Qgd29ya2luZ10nICwgJ21hbnVhbCcgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMMjE1YW1Ga2IyOTBkaTVxWVdSdmIzUjJMbU52YlM5cWJXRnlhM012WW05NEwzQnNZWGxXYVdSbGJ5NXdhSEEvY0d4aGVWVnliRDF5ZEcxd09pOHZjWFZwYm5wbGJHbDJaV1p6TG1ad2JHbDJaUzV1WlhRdmNYVnBibnBsYkdsMlpTMXNhWFpsTDNOcmVYTndiM0owY3pNdWMzUnlaV0Z0UDNObFkzVnlhWFI1ZEhsd1pUMHknICkgLCAnJyApICkKICBJMTExMUkxaUlJMTEgLiBhcHBlbmQgKCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdVMnQ1SUZOd2IzSjBJRFE9JyApICsgJyBbTm90IHdvcmtpbmddJyAsICdtYW51YWwnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDJwd2VHMXNMbXBoWkc5dmRIWXVZMjl0TDNaMWVHMXNMbkJvY0M5cVlXUnZiM2h0YkM5d2JHRjVMek14TlE9PScgKSAsICcnICkgKQogIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1UydDVJRk53YjNKMElEVT0nICkgKyAnIFtOb3Qgd29ya2luZ10nICwgJ21hbnVhbCcgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMMjE1YW1Ga2IyOTBkaTVxWVdSdmIzUjJMbU52YlM5cWJXRnlhM012WW05NEwzQnNZWGxXYVdSbGJ5NXdhSEEvY0d4aGVWVnliRDF5ZEcxd09pOHZjWFZwYm5wbGJHbDJaV1p6TG1ad2JHbDJaUzV1WlhRdmNYVnBibnBsYkdsMlpTMXNhWFpsTDNOcmVYTndiM0owY3pVdWMzUnlaV0Z0UDNObFkzVnlhWFI1ZEhsd1pUMHknICkgLCAnJyApICkKICBpZiAxNyAtIDE3OiBvbyAuIE8wICsgb29PTzAwb09vCiBpZiAxID09IDIgOgogIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1UydDVJRk53YjNKMElERT0nICkgKyAnIGFsdCBIRCcgLCAnZ2VuJyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyTmtjeTVoTTJjMmREaHRPUzVvZDJOa2JpNXVaWFF2WTJGc2FYWmxiM0pwWjJsdUwzTnJlWE53YjNKMGN6RXVjM1J5WldGdEwzQnNZWGxzYVhOMExtMHpkVGc9JyApICwgJycgKSApCiAgSTExMTFJMWlJSTExIC4gYXBwZW5kICggKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnVTJ0NUlGTndiM0owSURJPScgKSArICcgYWx0IEhEJyAsICdnZW4nICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDJOa2N5NWhNMmMyZERodE9TNW9kMk5rYmk1dVpYUXZZMkZzYVhabGIzSnBaMmx1TDNOcmVYTndiM0owY3pJdWMzUnlaV0Z0TDNCc1lYbHNhWE4wTG0wemRUZz0nICkgLCAnJyApICkKICBJMTExMUkxaUlJMTEgLiBhcHBlbmQgKCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdVMnQ1SUZOd2IzSjBJRE09JyApICsgJyBhbHQgSEQnICwgJ2dlbicgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMMk5rY3k1aE0yYzJkRGh0T1M1b2QyTmtiaTV1WlhRdlkyRnNhWFpsYjNKcFoybHVMM05yZVhOd2IzSjBjek11YzNSeVpXRnRMM0JzWVhsc2FYTjBMbTB6ZFRnPScgKSAsICcnICkgKQogIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1UydDVJRk53YjNKMElEUT0nICkgKyAnIGFsdCBIRCcgLCAnZ2VuJyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyTmtjeTVoTTJjMmREaHRPUzVvZDJOa2JpNXVaWFF2WTJGc2FYWmxiM0pwWjJsdUwzTnJlWE53YjNKMGN6UXVjM1J5WldGdEwzQnNZWGxzYVhOMExtMHpkVGc9JyApICwgJycgKSApCiAgSTExMTFJMWlJSTExIC4gYXBwZW5kICggKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnVTJ0NUlGTndiM0owSURVPScgKSArICcgYWx0IEhEJyAsICdnZW4nICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDJOa2N5NWhNMmMyZERodE9TNW9kMk5rYmk1dVpYUXZZMkZzYVhabGIzSnBaMmx1TDNOcmVYTndiM0owY3pVdWMzUnlaV0Z0TDNCc1lYbHNhWE4wTG0wemRUZz0nICkgLCAnJyApICkKICBJMTExMUkxaUlJMTEgLiBhcHBlbmQgKCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdSMlZ2SUZOMWNHVnknICkgKyAnIGFsdCBIRCcgLCAnZ2VuJyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyTmtjeTVwT0hjM2NqVnFNaTVvZDJOa2JpNXVaWFF2YW1SdmNtbG5hVzR2YW1SSFpXOXpkWEJsY2pRM05pNXpkSEpsWVcwdmNHeGhlV3hwYzNRdWJUTjFPQT09JyApICwgJycgKSApCiAgaWYgNDMgLSA0MzogSUkxMTFpaWlpIC4gaWlpaUlpMTFpIC8gb09vTzBvbzBPT09vCiAgaWYgMjAgLSAyMDogb28KICBpZiA5NSAtIDk1OiBpMUkxaWkxSUkxaUlJIC0gb28KICBpZiAzNCAtIDM0OiBPbyAqIG9vIC4gaTFJSWkgKiBPbyAvIE9vCiBpZiAxID09IDIgOgogIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1UydDVJRk53YjNKMElEVT0nICkgKyAnIGFsdCBIRCcgLCAnZ2VuJyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdjblJ0Y0Rvdkx6RTJOeTR4TVRRdU1URTNMakl3T0M5c2FYWmxMM05yZVRWMicgKSAsICcnICkgKQogIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1UydDVJRk53YjNKMElHWXgnICkgKyAnIGFsdCBIRCcgLCAnZ2VuJyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdjblJ0Y0Rvdkx6RTJOeTR4TVRRdU1URTNMakl3T0M5c2FYWmxMM05yZVdZeGRnPT0nICkgLCAnJyApICkKICBpZiAzMCAtIDMwOiBvT29PMG9vME9PT28gKyBPb08wTzAwIC8gT29PME8wMCAlIG9Pb08wb28wT09PbyAuIG9Pb08wb28wT09PbwogIGlmIDU1IC0gNTU6IE9vIC0gT29PTzBvb09Pb28wTyArIElJMTExaWlpaSArIGkxSTFpaTFJSTFpSUkgJSBvMDAwMG9Pb09vTzBvCiAgaWYgNDEgLSA0MTogaTFJSWkgLSBPb09PMG9vT09vbzBPIC0gbzAwMDBvT29Pb08wbwogaWYgMSA9PSAyIDoKICBJMTExMUkxaUlJMTEgLiBhcHBlbmQgKCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdVMnQ1SUZOd2IzSjBJREU9JyApICsgJyBhbHQnICwgJ21hbnVhbCcgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnY25SdGNHVTZMeTgwTmk0eU5EWXVNamt1TVRZd09qRTVNelV2YkNCd2JHRjVjR0YwYUQxemMydDVjekVnYzNkbVZYSnNQV2gwZEhBNkx5OW9aR05oYzNRdWIzSm5MMlZ3YkdGNVpYSXVjM2RtSUd4cGRtVTlNU0J3WVdkbFZYSnNQV2gwZEhBNkx5OTNkM2N1YUdSallYTjBMbTl5Wnk5bGJXSmxaR3hwZG1VMExuQm9jRDkxUFhOemEzbHpNU1oyZHowMk5UQW1kbWc5TkRjd0ptUnZiV0ZwYmoxamNtbGpZbTk0TG5SMklIUnZhMlZ1UFVadk5WOXVNSGMvVlM1eVFUWnNNeTAzTUhjME4yTm9EUW89JyApICwgJycgKSApCiAgSTExMTFJMWlJSTExIC4gYXBwZW5kICggKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnVTJ0NUlGTndiM0owSURJPScgKSArICcgYWx0JyAsICdtYW51YWwnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2NuUnRjR1U2THk4ME5pNHlORFl1TWprdU1UWXdPakU1TXpVdmJDQndiR0Y1Y0dGMGFEMXpjMnQ1Y3pJZ2MzZG1WWEpzUFdoMGRIQTZMeTlvWkdOaGMzUXViM0puTDJWd2JHRjVaWEl1YzNkbUlHeHBkbVU5TVNCd1lXZGxWWEpzUFdoMGRIQTZMeTkzZDNjdWFHUmpZWE4wTG05eVp5OWxiV0psWkd4cGRtVTBMbkJvY0Q5MVBYTnphM2x6TVNaMmR6MDJOVEFtZG1nOU5EY3dKbVJ2YldGcGJqMWpjbWxqWW05NExuUjJJSFJ2YTJWdVBVWnZOVjl1TUhjL1ZTNXlRVFpzTXkwM01IYzBOMk5vRFFvPScgKSAsICcnICkgKQogIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1UydDVJRk53YjNKMElEST0nICkgKyAnIGFsdCAyJyAsICdtYW51YWwnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2NuUnRjRG92THpFM09DNHhPQzR6TVM0MU16bzBORE12YkdsMlpYSmxjR1ZoZEdWeUx6RTVNRFl4TkNCemQyWlZjbXc5YUhSMGNEb3ZMMkpsY201aGNtUnZkSFl1WTJ4MVlpOW1kV05yYVc1blkyOXdlUzV6ZDJZZ2NHRm5aVlZ5YkQxb2RIUndPaTh2WW1sbloyVnpkSEJzWVhsbGNpNXRaUzl6ZEhKbFlXMHVjR2h3UDJsa1BURTVNRFl4TkNCMGIydGxiajBqWVhSa0pTTWtXa2dnYkdsMlpUMHhJSFJwYldWdmRYUTlNakE9JyApICwgJycgKSApCiAgaWYgOCAtIDg6IG9vT08wMG9PbyArIG8wb28wbyAtIE9vbzAwb09vMDBvICUgT29PME8wMCAlIE9vbzAwb09vMDBvICogaWlpaUlpMTFpCiAgSTExMTFJMWlJSTExIC4gYXBwZW5kICggKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnVTJ0NUlGTndiM0owSURNPScgKSArICcgYWx0JyAsICdtYW51YWwnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2NuUnRjR1U2THk4ME5pNHlORFl1TWprdU1UWXdPakU1TXpVdmJDQndiR0Y1Y0dGMGFEMXpjMnQ1Y3pNZ2MzZG1WWEpzUFdoMGRIQTZMeTlvWkdOaGMzUXViM0puTDJWd2JHRjVaWEl1YzNkbUlHeHBkbVU5TVNCd1lXZGxWWEpzUFdoMGRIQTZMeTkzZDNjdWFHUmpZWE4wTG05eVp5OWxiV0psWkd4cGRtVTBMbkJvY0Q5MVBYTnphM2x6TVNaMmR6MDJOVEFtZG1nOU5EY3dKbVJ2YldGcGJqMWpjbWxqWW05NExuUjJJSFJ2YTJWdVBVWnZOVjl1TUhjL1ZTNXlRVFpzTXkwM01IYzBOMk5vRFFvPScgKSAsICcnICkgKQogIGlmIDkgLSA5OiBPb08wTzAwIC0gaTExaUlpaUlpaSAtIElJMTFpaUlJICogbzAwMDBvT29Pb08wbyArIE9vCiAgSTExMTFJMWlJSTExIC4gYXBwZW5kICggKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnVTJ0NUlGTndiM0owSURRPScgKSArICcgYWx0JyAsICdtYW51YWwnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2NuUnRjR1U2THk4ME5pNHlORFl1TWprdU1UWXdPakU1TXpVdmJDQndiR0Y1Y0dGMGFEMXpjMnQ1Y3pRZ2MzZG1WWEpzUFdoMGRIQTZMeTlvWkdOaGMzUXViM0puTDJWd2JHRjVaWEl1YzNkbUlHeHBkbVU5TVNCd1lXZGxWWEpzUFdoMGRIQTZMeTkzZDNjdWFHUmpZWE4wTG05eVp5OWxiV0psWkd4cGRtVTBMbkJvY0Q5MVBYTnphM2x6TVNaMmR6MDJOVEFtZG1nOU5EY3dKbVJ2YldGcGJqMWpjbWxqWW05NExuUjJJSFJ2YTJWdVBVWnZOVjl1TUhjL1ZTNXlRVFpzTXkwM01IYzBOMk5vRFFvPScgKSAsICcnICkgKQogIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1UydDVJRk53YjNKMElEVT0nICkgKyAnIGFsdCcgLCAnbWFudWFsJyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdjblJ0Y0dVNkx5ODBOaTR5TkRZdU1qa3VNVFl3T2pFNU16VXZiQ0J3YkdGNWNHRjBhRDF6YzJ0NWN6VWdjM2RtVlhKc1BXaDBkSEE2THk5b1pHTmhjM1F1YjNKbkwyVndiR0Y1WlhJdWMzZG1JR3hwZG1VOU1TQndZV2RsVlhKc1BXaDBkSEE2THk5M2QzY3VhR1JqWVhOMExtOXlaeTlsYldKbFpHeHBkbVUwTG5Cb2NEOTFQWE56YTNsek1TWjJkejAyTlRBbWRtZzlORGN3Sm1SdmJXRnBiajFqY21salltOTRMblIySUhSdmEyVnVQVVp2TlY5dU1IYy9WUzV5UVRac015MDNNSGMwTjJOb0RRbz0nICkgLCAnJyApICkKICBJMTExMUkxaUlJMTEgLiBhcHBlbmQgKCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdVMnQ1SUZOd2IzSjBJR1l4JyApICsgJyBhbHQnICwgJ21hbnVhbCcgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnY25SdGNHVTZMeTgwTmk0eU5EWXVNamt1TVRZd09qRTVNelV2YkNCd2JHRjVjR0YwYUQxemMydDVjMll4SUhOM1psVnliRDFvZEhSd09pOHZhR1JqWVhOMExtOXlaeTlsY0d4aGVXVnlMbk4zWmlCc2FYWmxQVEVnY0dGblpWVnliRDFvZEhSd09pOHZkM2QzTG1oa1kyRnpkQzV2Y21jdlpXMWlaV1JzYVhabE5DNXdhSEEvZFQxemMydDVjekVtZG5jOU5qVXdKblpvUFRRM01DWmtiMjFoYVc0OVkzSnBZMkp2ZUM1MGRpQjBiMnRsYmoxR2J6VmZiakIzUDFVdWNrRTJiRE10TnpCM05EZGphQTBLJyApICwgJycgKSApCiAgaWYgNDQgLSA0NDogSUkxMTFpaWlpCiAgaWYgNTIgLSA1Mjogb09vTzBvbzBPT09vIC0gT29PME8wMCArIG9Pb08wb28wT09PbyAlIE9vbzAwb09vMDBvCiAgaWYgMzUgLSAzNTogaUlpaTFJMTFJMUlJMQogZm9yIEkxaSBpbiBJMTExMUkxaUlJMTEgOgogIG8wT0lpSUkgPSBJMWkgWyAwIF0KICBpSUlJID0gSTFpIFsgMSBdCiAgbzBvME8gPSBJMWkgWyAyIF0KICBvb29vTzBvT29PT29PID0gJycKICBJMWkgPSAxMSBpZiBpSUlJID09ICdtYW51YWwnIGVsc2UgMzMKICBPMDAwT08wICggSTFpMTFpICggbzBPSWlJSSAuIGNhcGl0YWxpemUgKCApICwgJ1pNJyApICwgYmFzZTY0IC4gYjY0ZW5jb2RlICggbzBvME8gKSAsIEkxaSAsIG9vb29PMG9Pb09Pb08gLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogIGlmIDExIC0gMTE6IG9vIC8gSUkxMTFpaWlpICsgT29vMDBvT28wMG8gKiBvT29PMG9vME9PT28gLSBvT29PMG9vME9PT28gLSBvbwogIGlmIDg1IC0gODU6IE9vT08wb29PT29vME8gJSBpaWlpSWkxMWkgLyBpSWlpMUkxMUkxSUkxIC4gaUlpaTFJMTFJMUlJMQogIGlmIDMxIC0gMzE6IE9vbzAwb09vMDBvICUgb29PTzAwb09vCiAgaWYgMTQgLSAxNDogaWlpaUlpMTFpIC8gaWlpaUlpMTFpICUgT28KICBpZiA1NiAtIDU2OiBvbyAuIE8wICsgT29PME8wMAogIGlmIDEgLSAxOiBpMUkxaWkxSUkxaUlJCiAgaWYgOTcgLSA5NzogSUkxMWlpSUkgKyBpMUkxaWkxSUkxaUlJICsgTzAgKyBpMTFpSWlpSWlpCiAgaWYgNzcgLSA3NzogT29vMDBvT28wMG8gLyBPb29vb29vb09PCiAgaWYgNDYgLSA0NjogT29vMDBvT28wMG8gJSBpSWlpMUkxMUkxSUkxIC4gaTFJMWlpMUlJMWlJSSAlIGkxSTFpaTFJSTFpSUkgKyBpMTFpSWlpSWlpCiAgaWYgNzIgLSA3MjogaUlpaTFJMTFJMUlJMSAqIG8wMDAwb09vT29PMG8gJSBPbyAvIG9vT08wMG9PbwogIGlmIDM1IC0gMzU6IE9vICsgaTFJSWkgJSBvT29PMG9vME9PT28gJSBPb09PMG9vT09vbzBPICsgaWlpaUlpMTFpCiBPMDAwT08wICggJ0N5cGhlciBDaGFubmVscycgLCAnc3NzJyAsIDcxICwgb3MgLiBwYXRoIC4gam9pbiAoIG9PT09vMG8wTyAsICdpY29ucycgLCAnUGkgU3BvcnRzLnBuZycgKSApCiBpZiAxNyAtIDE3OiBpMUlJaQogaWYgMjEgLSAyMTogT29PME8wMAogaWYgMjkgLSAyOTogT29PTzBvb09Pb28wTyAvIElJMTExaWlpaSAvIE9vICogSUkxMWlpSUkKIGlmIDEwIC0gMTA6IG8wb28wbyAlIG9vb08wb28wb09PT08gKiBvb29PMG9vMG9PT09PIC4gT29PTzBvb09Pb28wTyAvIG8wMDAwb09vT29PMG8gJSBJSTExaWlJSQogaWYgNDkgLSA0OTogb29PTzAwb09vIC8gaWlpaUlpMTFpICsgTzAgKiBPb28wMG9PbzAwbwogaWYgMjggLSAyODogT28gKyBpMTFpSWlpSWlpIC8gT29PTzBvb09Pb28wTyAlIG9PbzBPME9vbyAlIE9vTzBPMDAgLSBPMAogaWYgNTQgLSA1NDogaTFJSWkgKyBJSTExMWlpaWkKIGlmIDgzIC0gODM6IG9Pb08wb28wT09PbyAtIG9vICsgSUkxMWlpSUkKIGlmIDUgLSA1OiBvMDAwMG9Pb09vTzBvCiBpZiA0NiAtIDQ2OiBvb29PMG9vMG9PT09PCiBpZiA0NSAtIDQ1OiBPbwogaWYgMjEgLSAyMTogaWlpaUlpMTFpIC4gbzBvbzBvIC4gSUkxMWlpSUkgLyBPb08wTzAwIC8gbzBvbzBvCiBpZiAxNyAtIDE3OiBJSTExaWlJSSAvIElJMTFpaUlJIC8gT29PTzBvb09Pb28wTwogaWYgMSAtIDE6IGkxSUlpIC4gaTExaUlpaUlpaSAlIElJMTFpaUlJCiBpZiA4MiAtIDgyOiBpSWlpMUkxMUkxSUkxICsgT29PME8wMCAuIGlJaWkxSTExSTFJSTEgJSBvb29PMG9vMG9PT09PIC8gbzAwMDBvT29Pb08wbyAuIG8wMDAwb09vT29PMG8KIGlmIDE0IC0gMTQ6IE9vbzAwb09vMDBvIC4gSUkxMWlpSUkgLiBPb09PMG9vT09vbzBPICsgT29vb29vb29PTyAtIElJMTFpaUlJICsgb29vTzBvbzBvT09PTwogaWYgOSAtIDk6IG8wMDAwb09vT29PMG8KIGlmIDU5IC0gNTk6IG9vICogSUkxMTFpaWlpIC4gTzAKIGlmIDU2IC0gNTY6IG8wMDAwb09vT29PMG8gLSBpMUkxaWkxSUkxaUlJICUgb28gLSBPb28wMG9PbzAwbwogaWYgNTEgLSA1MTogTzAgLyBPbyAqIGlJaWkxSTExSTFJSTEgKyBvT29PMG9vME9PT28gKyBPb28wMG9PbzAwbwogaWYgOTggLSA5ODogaUlpaTFJMTFJMUlJMSAqIG9Pb08wb28wT09PbyAqIElJMTFpaUlJICsgT28gJSBpMTFpSWlpSWlpICUgTzAKIGlmIDI3IC0gMjc6IE8wCiBpZiA3OSAtIDc5OiBPb28wMG9PbzAwbyAtIE9vT08wb29PT29vME8gKyBPb28wMG9PbzAwbyAuIGlpaWlJaTExaQogaWYgMjggLSAyODogaTFJSWkgLSBpMUkxaWkxSUkxaUlJCiBpZiA1NCAtIDU0OiBpMUkxaWkxSUkxaUlJIC0gTzAgJSBJSTExaWlJSQogaWYgNzMgLSA3MzogTzAgLiBvT28wTzBPb28gKyBvbyAtIE9vT08wb29PT29vME8gJSBPb09PMG9vT09vbzBPIC4gT29PTzBvb09Pb28wTwogaWYgMTcgLSAxNzogbzAwMDBvT29Pb08wbyAtIE9vb29vb29vT08gJSBvMDAwMG9Pb09vTzBvIC4gb29vTzBvbzBvT09PTyAvIGkxMWlJaWlJaWkgJSBpMUkxaWkxSUkxaUlJCiBpZiAyOCAtIDI4OiBPb09PMG9vT09vbzBPCiBpZiA1OCAtIDU4OiBvT28wTzBPb28KIGlmIDM3IC0gMzc6IE9vTzBPMDAgLSBpSWlpMUkxMUkxSUkxIC8gb09vTzBvbzBPT09vCiBpZiA3MyAtIDczOiBpMTFpSWlpSWlpIC0gb29vTzBvbzBvT09PTwogaWYgMjUgLSAyNTogT29vb29vb29PTyArIG9vb08wb28wb09PT08gKiBvT29PMG9vME9PT28KZGVmIE9vTzBvb08gKCBwYWdldXJsICkgOgogT28wbzBvb29vME8wID0geGJtY2d1aSAuIERpYWxvZ1Byb2dyZXNzICggKQogT28wbzBvb29vME8wIC4gY3JlYXRlICggJ1Byb2dyZXNzJyAsICdmaW5kaW5nIGxpbmtzJyApCiBPbzBvMG9vb28wTzAgLiB1cGRhdGUgKCAxMCAsICIiICwgIkdldHRpbmcgVXJscy4uIiApCiBpZiA1MSAtIDUxOiBpMUkxaWkxSUkxaUlJIC8gT28gKiBvT28wTzBPb28gLiBpMUkxaWkxSUkxaUlJIC8gb09vTzBvbzBPT09vIC8gaTExaUlpaUlpaQogT28wT29PMDBvT08wbyA9IHVybGxpYjIgLiBSZXF1ZXN0ICggcGFnZXVybCApCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoICdVc2VyLUFnZW50JyAsICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNDAuMC4yMjE0LjkzIFNhZmFyaS81MzcuMzYnICkKIE9PTzAwTyA9IHVybGxpYjIgLiB1cmxvcGVuICggT28wT29PMDBvT08wbyApCiBJSUlJSSA9IE9PTzAwTyAuIHJlYWQgKCApCiBPT08wME8gLiBjbG9zZSAoICkKIEkxaTExMUkgPSAnPGEgc3R5bGU9InRleHQtZGVjb3JhdGlvbjogbm9uZSIgaHJlZj0iKC4qPykiJwogbzBvb09vTzAwMG9PID0gcmUgLiBmaW5kYWxsICggSTFpMTExSSAsIElJSUlJICkKIE9PbyA9IG8wb29Pb08wMDBvTyBbIDAgXQogaWYgbGVuICggbzBvb09vTzAwMG9PICkgPiAxIDoKICBPT28gPSBvMG9vT29PMDAwb08gWyAxIF0KICBpZiA1MCAtIDUwOiBPbwogIGlmIDcyIC0gNzI6IG8wb28wbwogSTFpMTExSSA9ICd2YXIgbG9jYXRpb25zLio/IiguKj8pIicKIHByaW50ICdnZXR0JyAsIE9PbwogT08wb29vMG9PTyA9IGkxaWlJMTFJICggT09vICwgaGVhZGVycyA9IFsgKCAnVXNlci1BZ2VudCcgLCAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzQ5LjAuMjYyMy44NyBTYWZhcmkvNTM3LjM2JyApICwgKCAnUmVmZXJlcicgLCBwYWdldXJsICkgXSApCiBvbzAwMCA9IHJlIC4gZmluZGFsbCAoIEkxaTExMUkgLCBPTzBvb28wb09PICkgWyAwIF0KIE9vME9vTzAwb09PMG8gPSB1cmxsaWIyIC4gUmVxdWVzdCAoIG9vMDAwICkKIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS80MC4wLjIyMTQuOTMgU2FmYXJpLzUzNy4zNicgKQogT28wT29PMDBvT08wbyAuIGFkZF9oZWFkZXIgKCAnUmVmZXJlcicgLCBPT28gKQogT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICkKIElJSUlJID0gT09PMDBPIC4gcmVhZCAoICkKIE9PTzAwTyAuIGNsb3NlICggKQogaWYgJ3NjcmlwdHMvcDNnLmpzJyBpbiBJSUlJSSA6CiAgaWkgKCBPT28gKQogIHJldHVybgogdHJ5IDoKICBJMWkxMTFJID0gImZpZD1bJ1wiXSguKj8pWydcIl0uKndpZHRoPShbMC05XSopLio/aGVpZ2h0PShbMC05XSopLio/c3JjPVsnXCJdKC4qPylbJ1wiXSIKICBPb09JaWlpaWkxMTFpMWlpICwgaTFpMWlJSTEgLCBJMUlJMSAsIGlpaTExaTFJSUlJID0gcmUgLiBmaW5kYWxsICggSTFpMTExSSAsIElJSUlJICkgWyAwIF0KIGV4Y2VwdCA6CiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgSTFpMTExSSA9ICdJRlJBTUUuKj9TUkM9IiguKj8pIicKICBPT28gPSByZSAuIGZpbmRhbGwgKCBJMWkxMTFJICwgSUlJSUkgKSBbIDAgXQogIGlmIDI2IC0gMjY6IE8wIC4gb29PTzAwb09vICogbzBvbzBvIC4gb28gJSBpMTFpSWlpSWlpCiAgSTFpMTExSSA9ICJmaWQ9WydcIl0oLio/KVsnXCJdLip3aWR0aD0oWzAtOV0qKS4qP2hlaWdodD0oWzAtOV0qKS4qP3NyYz1bJ1wiXSguKj8pWydcIl0iCiAgSUlJSUkgPSBpMWlpSTExSSAoIE9PbyApCiAgT29PSWlpaWlpMTExaTFpaSAsIGkxaTFpSUkxICwgSTFJSTEgLCBpaWkxMWkxSUlJSSA9IHJlIC4gZmluZGFsbCAoIEkxaTExMUkgLCBJSUlJSSApIFsgMCBdCiBPbzBvMG9vb28wTzAgLiB1cGRhdGUgKCA0MCAsICIiICwgIlRyYW5zbGF0aW5nLi4iICkKIE9vME9vTzAwb09PMG8gPSB1cmxsaWIyIC4gUmVxdWVzdCAoIGlpaTExaTFJSUlJICkKIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS80MC4wLjIyMTQuOTMgU2FmYXJpLzUzNy4zNicgKQogT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICkKIGkxSWkxaWlpID0gT09PMDBPIC4gcmVhZCAoICkKIE9PTzAwTyAuIGNsb3NlICggKQogSTFpMTExSSA9ICcoaHR0cC4qPylcPycKIElJaUlpaWlpID0gcmUgLiBmaW5kYWxsICggSTFpMTExSSAsIGkxSWkxaWlpICkgWyAwIF0KIGlmIDg5IC0gODk6IGkxSTFpaTFJSTFpSUkgLSBPbyAlIE9vTzBPMDAgJSBPb28wMG9PbzAwbwogaWYgNDkgLSA0OTogT29PME8wMCAtIG9vIC8gb29vTzBvbzBvT09PTyAvIE8wICUgT29vMDBvT28wMG8gKiBvMDAwMG9Pb09vTzBvCiBvbzAwMCA9ICIlcz9saXZlPSVzJnZ3PSVzJnZoPSVzIiAlICggSUlpSWlpaWkgLCBPb09JaWlpaWkxMTFpMWlpICwgaTFpMWlJSTEgLCBJMUlJMSApCiBpZiAxMDAgLSAxMDA6IElJMTFpaUlJIC4gaTFJMWlpMUlJMWlJSSAvIE8wICogaTFJSWkgKiBvMDAwMG9Pb09vTzBvICogT29PME8wMAogT28wT29PMDBvT08wbyA9IHVybGxpYjIgLiBSZXF1ZXN0ICggb28wMDAgKQogT28wT29PMDBvT08wbyAuIGFkZF9oZWFkZXIgKCAnVXNlci1BZ2VudCcgLCAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzQwLjAuMjIxNC45MyBTYWZhcmkvNTM3LjM2JyApCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoICdSZWZlcmVyJyAsIE9PbyApCiBpZiA4NCAtIDg0OiBvT29PMG9vME9PT28gLyBJSTExaWlJSSAlIGkxMWlJaWlJaWkgKiBvMG9vMG8gJSBvT29PMG9vME9PT28gLSBPb29vb29vb09PCiBPT08wME8gPSB1cmxsaWIyIC4gdXJsb3BlbiAoIE9vME9vTzAwb09PMG8gKQogSUlJSUkgPSBPT08wME8gLiByZWFkICggKQogT09PMDBPIC4gY2xvc2UgKCApCiBpZiAnInIiLCJ0IiwibSInIGluIElJSUlJIDoKICBwcmludCBJSUlJSQogIE9vMG8wb29vbzBPMCAuIHVwZGF0ZSAoIDYwICwgIiIgLCAiZGVjb2RpbmcgVXJscy4uIiApCiAgSTFpMTExSSA9ICdcKChcWyJyIi4qP1xdKS4qP1wrICguKj8pXC4uKj9nZXRFbGVtZW50QnlJZFwoIiguKj8pIicKICBPb09vb29PID0gJ3ZhciAlcyA9Lio/KFxbLio/XF0pJwogIElpMTEgPSAiZmlsZTogLio/XCsgJ1wvJyBcKyguKj8pXChcKSIKICBvTyA9ICdmdW5jdGlvbi4qPyVzLio/XHtccy4qP1woKFxbLio/XF0pJwogIE8wME8wT29vb28wMCA9ICdzZWN1cmV0b2tlbjogKC4qPylccycKICBPMDAwICwgb29vMG8wMDBPICwgT08gPSByZSAuIGZpbmRhbGwgKCBJMWkxMTFJICwgSUlJSUkgKSBbIDAgXQogIE9vT29vb08gPSBPb09vb29PICUgb29vMG8wMDBPCiAgb29vMG8wMDBPID0gcmUgLiBmaW5kYWxsICggT29Pb29vTyAsIElJSUlJICkgWyAwIF0KICBPTzBvID0gJyVzPiguKj8pPCcgJSBPTwogIHByaW50IE9PMG8KICBPTzBvID0gcmUgLiBmaW5kYWxsICggT08wbyAsIElJSUlJICkgWyAwIF0KICBwcmludCAncGF0MycgLCBJaTExCiAgb28wbzBPME9vb29vbyA9IHJlIC4gZmluZGFsbCAoIElpMTEgLCBJSUlJSSApIFsgMCBdCiAgb28wbzBPME9vb29vbyA9IG9PICUgb28wbzBPME9vb29vbwogIHByaW50ICdoYXNobmFtZScgLCBvbzBvME8wT29vb29vCiAgaTExSUlJaUkxSSA9IHJlIC4gZmluZGFsbCAoIG9vMG8wTzBPb29vb28gLCBJSUlJSSApIFsgMCBdCiAgcHJpbnQgTzAwMCAsIG9vbzBvMDAwTyAsIE9PMG8gLCBpMTFJSUlpSTFJCiAgT28wb09PbyA9ICcnIC4gam9pbiAoIGV2YWwgKCBPMDAwICkgKSAuIHJlcGxhY2UgKCAnXC8nICwgJy8nICkgKyAnJyAuIGpvaW4gKCBldmFsICggb29vMG8wMDBPICkgKSArIE9PMG8gKyAnLycKICBpMTFJSUlpSTFJID0gJycgLiBqb2luICggZXZhbCAoIGkxMUlJSWlJMUkgKSApCiAgbzAgPSByZSAuIGZpbmRhbGwgKCBPMDBPME9vb29vMDAgLCBJSUlJSSApIFsgMCBdCiAgaWlpSTFJMWlJSUlpMSA9ICd2YXIgJXMgPSAiKC4qPykiJyAlIG8wCiAgSWlpID0gJ3NyYz0iKC4qandwbGF5ZXJcLmpzLio/KSInCiAgaWlpMTFpMUlJSUkgPSByZSAuIGZpbmRhbGwgKCBJaWkgLCBJSUlJSSApIFsgMCBdCiAgSTFpaWlpSTFpSSA9IGkxaWlJMTFJICggaWlpMTFpMUlJSUkgKQogIHByaW50IGlpaUkxSTFpSUlJaTEgLCBJMWlpaWlJMWlJCiAgbzAgPSByZSAuIGZpbmRhbGwgKCBpaWlJMUkxaUlJSWkxICwgSTFpaWlpSTFpSSApIFsgMCBdCiAgT28wb09PbyArPSAnIHRva2VuPSVzIHBsYXlwYXRoPSVzIGxpdmU9dHJ1ZSB0aW1lb3V0PTIwJyAlICggbzAgLCBpMTFJSUlpSTFJICkgKyAnIHN3ZlVybD1odHRwOi8vd3d3LmhkY2FzdC5pbmZvL215cGxheWVyL2p3cGxheWVyLmZsYXNoLnN3ZiBmbGFzaHZlcj1XSU5cMjAyMSwwLDAsMTgyJyArICcgcGFnZVVybD0nICsgb28wMDAKICBPbzBvMG9vb28wTzAgLiB1cGRhdGUgKCA5MCAsICIiICwgImFsbW9zdCBkb25lLi4iICkKICBwcmludCBPbzBvT09vCiAgaWYgNDMgLSA0MzogaWlpaUlpMTFpIC0gT29vb29vb29PTwogZWxzZSA6CiAgaWYgMyAtIDM6IE8wIC8gaTFJMWlpMUlJMWlJSQogIGlJaUlpMUkgPSAnZmlsZTouPy4/IiguKj8pIicKICBpaWlpMTFpID0gJ3N0cmVhbWVyOi4/Lj8iKC4qPykiJwogIE8wME8wT29vb28wMCA9ICdzZWN1cmV0b2tlbjouPy4/IiguKj8pIicKICBJSUkxMUlJMUkxSWkxID0gcmUgLiBmaW5kYWxsICggaUlpSWkxSSAsIElJSUlJICkgWyAwIF0KICBPMDBPbzBvMDAwb08gPSByZSAuIGZpbmRhbGwgKCBpaWlpMTFpICwgSUlJSUkgKQogIGlmIGxlbiAoIE8wME9vMG8wMDBvTyApID4gMCA6CiAgIE8wME9vMG8wMDBvTyA9ICcgcGxheXBhdGg9JyArIE8wME9vMG8wMDBvTyBbIDAgXQogIGVsc2UgOgogICBPMDBPbzBvMDAwb08gPSAnJwogICBpZiA5OSAtIDk5OiBpaWlpSWkxMWkgKiBJSTExMWlpaWkgKiBvMG9vMG8KICBPMDBPME9vb29vMDAgPSByZSAuIGZpbmRhbGwgKCBPMDBPME9vb29vMDAgLCBJSUlJSSApCiAgaWYgbGVuICggTzAwTzBPb29vbzAwICkgPiAwIDoKICAgTzAwTzBPb29vbzAwID0gJyB0b2tlbj0nICsgTzAwTzBPb29vbzAwIFsgMCBdCiAgZWxzZSA6CiAgIE8wME8wT29vb28wMCA9ICcnCiAgIGlmIDkyIC0gOTI6IE9vTzBPMDAKICAgaWYgNDAgLSA0MDogb09vME8wT29vIC8gb29vTzBvbzBvT09PTwogIE9vMG9PT28gPSAnJXMlcyVzIHBhZ2VVcmw9JXMgc3dmVXJsPWh0dHA6Ly9wLmp3cGNkbi5jb20vNi8xMi9qd3BsYXllci5mbGFzaC5zd2YnICUgKCBJSUkxMUlJMUkxSWkxIC4gc3BsaXQgKCAnLmZsdicgKSBbIDAgXSAsIE8wME9vMG8wMDBvTyAsIE8wME8wT29vb28wMCAsIG9vMDAwICkgKyAnIGxpdmU9dHJ1ZSB0aW1lb3V0PTIwJwogIGlmIDc5IC0gNzk6IG9vT08wMG9PbyAtIGlJaWkxSTExSTFJSTEgKyBvMDAwMG9Pb09vTzBvIC0gbzBvbzBvCiAgaWYgOTMgLSA5MzogSUkxMTFpaWlpIC4gb28gLSBPb08wTzAwICsgb09vME8wT29vCiAgaWYgNjEgLSA2MTogSUkxMTFpaWlpCiBpaUlpaSA9IHhibWMgLiBQbGF5TGlzdCAoIDEgKQogaWYgMTUgLSAxNTogaTExaUlpaUlpaSAlIG9vICogT29PTzBvb09Pb28wTyAvIG8wb28wbwogaWYgOTAgLSA5MDogaTFJMWlpMUlJMWlJSQogaWYgMzEgLSAzMTogSUkxMWlpSUkgKyBPMAogaWlJaWkgLiBjbGVhciAoICkKIEkxID0geGJtY2d1aSAuIExpc3RJdGVtICggbGFiZWwgPSBzdHIgKCBvTzAwb09Pb29vTyApICwgaWNvbkltYWdlID0gIkRlZmF1bHRWaWRlby5wbmciICwgdGh1bWJuYWlsSW1hZ2UgPSB4Ym1jIC4gZ2V0SW5mb0ltYWdlICggIkxpc3RJdGVtLlRodW1iIiApICkKIGlpSWlpIC4gYWRkICggT28wb09PbyAsIEkxICkKIElpSWkxMWlJID0geGJtYyAuIFBsYXllciAoICkKIElpSWkxMWlJIC4gcGxheSAoIGlpSWlpICkKIGlmIDg3IC0gODc6IE9vCiBpZiA0NSAtIDQ1OiBvb09PMDBvT28gLyBPb29vb29vb09PIC0gaTFJMWlpMUlJMWlJSSAvIG8wMDAwb09vT29PMG8gJSBvb29PMG9vMG9PT09PCmRlZiBPb09JaWkxMWlJMTFpMUkgKCB1cmwgKSA6CiBpaUlpaSA9IHhibWMgLiBQbGF5TGlzdCAoIDEgKQogaWYgNjQgLSA2NDogaTExaUlpaUlpaQogdXJsID0gJ3J0bXA6Ly9ydG1wLnBvcGVvZnRoZXBsYXllcnMuZXU6MTkzNS9yZWRpcmVjdCBwbGF5cGF0aD0nICsgdXJsICsgYmFzZTY0IC4gYjY0ZGVjb2RlICggJyBzd2ZWZnk9dHJ1ZSBzd2ZVcmw9aHR0cDovL3BvcGVvZnRoZXBsYXllcnMuZXUvYXRkZWRlYWQuc3dmIGZsYXNoVmVyPVdJTlwyMDE2LDAsMCwyMzUgcGFnZVVybD1odHRwOi8vcG9wZW9mdGhlcGxheWVycy5ldS9hdGRlZGVhZC5zd2YgbGl2ZT10cnVlIHRpbWVvdXQ9MjAgdG9rZW49I2F0ZCUjJFpIJyApCiBpZiAzOCAtIDM4OiBvb29PMG9vMG9PT09PIC8gb28gLSBvb29PMG9vMG9PT09PIC4gT29PTzBvb09Pb28wTwogaWlJaWkgLiBjbGVhciAoICkKIEkxID0geGJtY2d1aSAuIExpc3RJdGVtICggbGFiZWwgPSBzdHIgKCBvTzAwb09Pb29vTyApICwgaWNvbkltYWdlID0gIkRlZmF1bHRWaWRlby5wbmciICwgdGh1bWJuYWlsSW1hZ2UgPSB4Ym1jIC4gZ2V0SW5mb0ltYWdlICggIkxpc3RJdGVtLlRodW1iIiApICkKIGlpSWlpIC4gYWRkICggdXJsICwgSTEgKQogSWlJaTExaUkgPSB4Ym1jIC4gUGxheWVyICggKQogSWlJaTExaUkgLiBwbGF5ICggaWlJaWkgKQogaWYgNjkgLSA2OTogT29vb29vb29PTyArIG9Pb08wb28wT09PbwogaWYgOTcgLSA5NzogSUkxMWlpSUkgLSBvb09PMDBvT28gLyBvMDAwMG9Pb09vTzBvIC4gaTExaUlpaUlpaSAlIGlpaWlJaTExaSAqIGlpaWlJaTExaQpkZWYgaWkxSUlJSWlJMTEgKCB1cmwgKSA6CiB0cnkgOgogIHVybCA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwzZDNkeTV6ZFhCbGNuTndiM0owTG1OdmJTOXNhWFpsTFhacFpHVnYnICkKICBPbzBPb08wMG9PTzBvID0gdXJsbGliMiAuIFJlcXVlc3QgKCB1cmwgKQogIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS80MC4wLjIyMTQuOTMgU2FmYXJpLzUzNy4zNicgKQogIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ0Nvb2tpZScgLCAnVXNlcl9Jc01vYmlsZT1GYWxzZTsgc3VwZXJzcG9ydGNvb2tpZT1jb3VudHJ5PVpBJmNvdW50cnlOYW1lPVNvdXRoIEFmcmljYTsnICkKICBPT08wME8gPSB1cmxsaWIyIC4gdXJsb3BlbiAoIE9vME9vTzAwb09PMG8gKQogIElJSUlJID0gT09PMDBPIC4gcmVhZCAoICkKICBPT08wME8gLiBjbG9zZSAoICkKICBJMWkxMTFJID0gJ3NldGFsbExpdmVTdHJlYW1zVmlkZW9zXFwoLi4uKHsuKj99KVxcXFxcIlxcIlxcKTsnCiAgaWYgNDAgLSA0MDogT29vMDBvT28wMG8KICBPT09vb28gPSByZSAuIGZpbmRhbGwgKCBJMWkxMTFJICwgSUlJSUkgKSBbIDAgXQogIE9PT29vbyA9IE9PT29vbyAuIHJlcGxhY2UgKCAnXFxcXHInICwgJycgKQogIE9PT29vbyA9IE9PT29vbyA9IE9PT29vbyAuIHJlcGxhY2UgKCAnXFxcXG4nICwgJycgKQogIE9PT29vbyA9IE9PT29vbyAuIHJlcGxhY2UgKCAnXFxcXCcgLCAnXFwnICkKICBPT09vb28gPSBPT09vb28gLiByZXBsYWNlICggJ1xcIicgLCAnIicgKQogIE9PT29vbyA9IE9PT29vbyAuIHJlcGxhY2UgKCAnXFwiJyAsICciJyApCiAgaWYgOTkgLSA5OTogSUkxMTFpaWlpICogb29vTzBvbzBvT09PTyAlIGlJaWkxSTExSTFJSTEgLyBvMDAwMG9Pb09vTzBvCiAgaWYgOTAgLSA5MDogaWlpaUlpMTFpICUgSUkxMWlpSUkgLSBJSTExaWlJSSAlIElJMTExaWlpaSAqIG9vT08wMG9PbwogIGlmIDM5IC0gMzk6IE9vT08wb29PT29vME8KICBPb29PbzBvbzBPMG8wME8gPSBqc29uIC4gbG9hZHMgKCBPT09vb28gKQogIHByaW50IE9vb09vMG9vME8wbzAwTwogIGlmIDU4IC0gNTg6IGkxSUlpICUgT29vMDBvT28wMG8KICBpZiA3OSAtIDc5OiBPb28wMG9PbzAwbyAlIGkxSTFpaTFJSTFpSUkgKiBPb29vb29vb09PICogaUlpaTFJMTFJMUlJMSAuIGkxSTFpaTFJSTFpSUkgLyBvMDAwMG9Pb09vTzBvCiAgaWYgMTkgLSAxOTogTzAgKyBPb09PMG9vT09vbzBPICsgbzAwMDBvT29Pb08wbyAvIElJMTExaWlpaSAvIElJMTExaWlpaQogIE8wMDBPTzAgKCAnTWF4Yml0cmF0ZSBTZXR0aW5ncycgLCAnTGl2ZScgLCA2ICwgJycgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogIGlmIDg2IC0gODY6IG9Pb08wb28wT09PbyAqIE8wICogb29vTzBvbzBvT09PTwogIGlmIDEgPT0gMiA6CiAgIE8wMDBPTzAgKCBJMWkxMWkgKCAnTGl2ZSBFdmVudHNbTk9UIFdPUktJTkddJyAsICdFQicgLCBUcnVlICkgLCAnJyAsIC0gMSAsICcnICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKICAgdHJ5IDoKICAgIGZvciBPb28wb28gaW4gT29vT28wb28wTzBvMDBPIFsgIkV2ZW50TGl2ZVN0cmVhbU5vdyIgXSA6CiAgICAgaWYgT29vMG9vIFsgIklzTGl2ZU5vdyIgXSA6CiAgICAgIElJaTExSUlpSWlpMSA9IE9vbzBvbyBbICJUaXRsZSIgXQogICAgICBvME9JaUlJID0gT29vMG9vIFsgIkNoYW5uZWwiIF0KICAgICAgT09vT08wb28wb29PID0gT29vMG9vIFsgIkxpbmsiIF0KICAgICAgaWYgMTcgLSAxNzogbzAwMDBvT29Pb08wbyArIGlpaWlJaTExaSAuIG9vT08wMG9PbyAtIE9vTzBPMDAgKiBpMTFpSWlpSWlpCiAgICAgIGlmIDIwIC0gMjA6IG9vIC4gT29vb29vb29PTyAlIElJMTFpaUlJCiAgICAgIE8wMDBPTzAgKCAnICAnICsgbzBPSWlJSSArICcgJyArIElJaTExSUlpSWlpMSAsIE9Pb09PMG9vMG9vTyAsIDM1ICwgJycgLCBGYWxzZSAsIEZhbHNlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKICAgZXhjZXB0IDogdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgIGlmIDYzIC0gNjM6IG9vICUgaUlpaTFJMTFJMUlJMQogIE8wMDBPTzAgKCBJMWkxMWkgKCAnQ2hhbm5lbHMnICwgJ0VCJyAsIFRydWUgKSAsICcnICwgLSAxICwgJycgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogIHRyeSA6CiAgIGZvciBPb28wb28gaW4gT29vT28wb28wTzBvMDBPIFsgIkNoYW5uZWxTdHJlYW0iIF0gOgogICAgaWYgMzkgLSAzOTogaTFJMWlpMUlJMWlJSSAvIElJMTExaWlpaSAvIG9Pb08wb28wT09PbyAlIG9vCiAgICBJSWkxMUlJaUlpaTEgPSBPb28wb28gWyAiTm93UGxheWluZyIgXSBbICJFdmVudE5vd1BsYXlpbmciIF0KICAgIG8wT0lpSUkgPSBPb28wb28gWyAiTm93UGxheWluZyIgXSBbICJDaGFubmVsIiBdCiAgICBPT29PTzBvbzBvb08gPSBPb28wb28gWyAiTm93UGxheWluZyIgXSBbICJMaW5rIiBdCiAgICBpZiA4OSAtIDg5OiBvMG9vMG8gKyBPb29vb29vb09PICsgbzBvbzBvICogaTFJSWkgKyBpSWlpMUkxMUkxSUkxICUgT29PTzBvb09Pb28wTwogICAgaWYgbm90IE9Pb09PMG9vMG9vTyBpcyBOb25lIDoKICAgICBpZiBJSWkxMUlJaUlpaTEgaXMgTm9uZSA6IElJaTExSUlpSWlpMSA9ICcnCiAgICAgaWYgNTkgLSA1OTogSUkxMWlpSUkgKyBpMTFpSWlpSWlpCiAgICAgTzAwME9PMCAoIHUnICAnICsgbzBPSWlJSSArIHUnICcgKyBJSWkxMUlJaUlpaTEgLCBPT29PTzBvbzBvb08gLCAzNSAsICcnICwgRmFsc2UgLCBGYWxzZSAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiAgICAgaWYgODggLSA4ODogaTExaUlpaUlpaSAtIE9vCiAgICAgaWYgNjcgLSA2NzogSUkxMWlpSUkgLiBPb08wTzAwICsgb09vME8wT29vIC0gT29vb29vb29PTwogIGV4Y2VwdCA6IHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogIGlmIDcwIC0gNzA6IElJMTFpaUlJIC8gSUkxMTFpaWlpIC0gaUlpaTFJMTFJMUlJMSAtIGkxSTFpaTFJSTFpSUkKIGV4Y2VwdCA6IHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogaWYgMTEgLSAxMTogaUlpaTFJMTFJMUlJMSAuIE9vb29vb29vT08gLiBJSTExMWlpaWkgLyBpMUlJaSAtIE9vT08wb29PT29vME8KIGlmIDMwIC0gMzA6IG9PbzBPME9vbwpkZWYgSWkxMTEgKCBtb3ZpZXMgPSBGYWxzZSApIDoKIG9PMCA9IFsgXQogdHJ5IDoKICBpMWlJID0gaWlvbzBvME9vT09PICggKQogIG9vTzBvTzAwTzBvID0gZXRyZWUgLiBmcm9tc3RyaW5nICggaTFpSSApCiAgaWYgNzAgLSA3MDogbzBvbzBvCiAgZm9yIGkxMWlJSWkxMSBpbiBvb08wb08wME8wbyAuIGZpbmRhbGwgKCAnaXRlbXMnICkgOgogICBpZiBub3QgaTExaUlJaTExIC4gZmluZHRleHQgKCAncHJvZ3JhbUNhdGVnb3J5JyApIGluIG9PMCA6CiAgICBwcmludCBpMTFpSUlpMTEgLiBmaW5kdGV4dCAoICdwcm9ncmFtQ2F0ZWdvcnknICkKICAgIGlmIG1vdmllcyA9PSBGYWxzZSBvciBpMTFpSUlpMTEgLiBmaW5kdGV4dCAoICdwcm9ncmFtQ2F0ZWdvcnknICkgLiBsb3dlciAoICkgLiBlbmRzd2l0aCAoICdtb3ZpZXMnICkgOgogICAgIG9PMCAuIGFwcGVuZCAoIGkxMWlJSWkxMSAuIGZpbmR0ZXh0ICggJ3Byb2dyYW1DYXRlZ29yeScgKSApCiAgaWYgbGVuICggb08wICkgPiAwIDoKICAgb08wID0gc29ydGVkICggb08wICwga2V5ID0gbGFtYmRhIEkxaTExIDogSTFpMTEgWyAwIF0gLiBsb3dlciAoICkgKQogZXhjZXB0IDoKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIHJldHVybiBvTzAKIGlmIDk4IC0gOTg6IG8wb28wbwpkZWYgaWlJMUlJMTFJSTFpICggdXJsICkgOgogbzBPME8wICwgdXJsID0gdXJsIC4gc3BsaXQgKCAnZW1vdmllczonICkKIEkxMSA9IGpzb24gLiBsb2FkcyAoIHVybCApCiBwcmludCBJMTEKIGlmIEkxMSBbICJ0eXBlIiBdID09ICJkZWNhZGUiIDoKICBvbzBvb09PICggSTExICkKIGVsaWYgSTExIFsgInR5cGUiIF0gPT0gInNlYXJjaCIgOgogIGlmICdzZWFyY2hkYXRhJyBub3QgaW4gSTExIDoKICAgaUkxSWlJSWlJSWkgPSB4Ym1jZ3VpIC4gRGlhbG9nICggKSAuIGlucHV0ICggJ0VudGVyIFNlYXJjaCcgLCB0eXBlID0geGJtY2d1aSAuIElOUFVUX0FMUEhBTlVNICkKICAgaWYgbGVuICggaUkxSWlJSWlJSWkgKSA9PSAwIDogcmV0dXJuCiAgIEkxMSBbICJzZWFyY2hkYXRhIiBdID0gaUkxSWlJSWlJSWkKICAgSWlJaTExSWlpID0gJ2Vtb3ZpZXM6JyArIGpzb24gLiBkdW1wcyAoIEkxMSApCiAgIElpSWkxMUlpaSA9ICclcz9tb2RlPTM2JnVybD0lcycgJSAoIHN5cyAuIGFyZ3YgWyAwIF0gLCB1cmxsaWIgLiBxdW90ZV9wbHVzICggSWlJaTExSWlpICkgKQogICB4Ym1jIC4gZXhlY3V0ZWJ1aWx0aW4gKCAnQ29udGFpbmVyLlVwZGF0ZSglcyknICUgSWlJaTExSWlpICkKICAgcmV0dXJuCiAgb28wb29PTyAoIEkxMSApCiBlbGlmIEkxMSBbICJ0eXBlIiBdID09ICJhbHBoYSIgOgogIGlmICdzZWFyY2hkYXRhJyBub3QgaW4gSTExIDoKICAgbzBvTyA9IHhibWNndWkgLiBEaWFsb2cgKCApCiAgIGltcG9ydCBzdHJpbmcKICAgSUlJMWkxaUkxID0gbGlzdCAoIHN0cmluZyAuIGFzY2lpX3VwcGVyY2FzZSApCiAgIG8wb29vMDBvID0gbzBvTyAuIHNlbGVjdCAoICdDaG9vc2UgU3RhcnRzIHdpdGgnICwgSUlJMWkxaUkxICkKICAgaUkxSWlJSWlJSWkgPSAiIgogICBpZiBvMG9vbzAwbyA+IC0gMSA6CiAgICBpSTFJaUlJaUlJaSA9IElJSTFpMWlJMSBbIG8wb29vMDBvIF0KICAgaWYgbGVuICggaUkxSWlJSWlJSWkgKSA9PSAwIDogcmV0dXJuCiAgIEkxMSBbICJzZWFyY2hkYXRhIiBdID0gaUkxSWlJSWlJSWkKICAgSWlJaTExSWlpID0gJ2Vtb3ZpZXM6JyArIGpzb24gLiBkdW1wcyAoIEkxMSApCiAgIElpSWkxMUlpaSA9ICclcz9tb2RlPTM2JnVybD0lcycgJSAoIHN5cyAuIGFyZ3YgWyAwIF0gLCB1cmxsaWIgLiBxdW90ZV9wbHVzICggSWlJaTExSWlpICkgKQogICB4Ym1jIC4gZXhlY3V0ZWJ1aWx0aW4gKCAnQ29udGFpbmVyLlVwZGF0ZSglcyknICUgSWlJaTExSWlpICkKICAgcmV0dXJuCiAgb28wb29PTyAoIEkxMSApCiBlbHNlIDoKICBPMDAwT08wICggJ1NlYXJjaCBNb3ZpZScgLCAnZW1vdmllczp7ImxhbmciOiIlcyIsInR5cGUiOiJzZWFyY2gifScgJSAoIEkxMSBbICJsYW5nIiBdICkgLCAzNiAsICcnICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKICBPMDAwT08wICggJ0FscGhhYmV0aWNhbGx5IExpc3QnICwgJ2Vtb3ZpZXM6eyJsYW5nIjoiJXMiLCJ0eXBlIjoiYWxwaGEifScgJSAoIEkxMSBbICJsYW5nIiBdICkgLCAzNiAsICcnICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKICBmb3IgSTFpMTEgaW4gWyAnMjAxMCcgLCAnMjAwMCcgLCAnMTk5MCcgLCAnMTk4MCcgLCAnMTk3MCcgLCAnMTk2MCcgLCAnMTk1MCcgLCAnMTk0MCcgXSA6CiAgIE8wMDBPTzAgKCAnTW92aWVzIGZyb20gJXMnICUgSTFpMTEgLCAnZW1vdmllczp7ImxhbmciOiIlcyIsInR5cGUiOiJkZWNhZGUiLCJkZWNhZGVudW0iOiIlcyJ9JyAlICggSTExIFsgImxhbmciIF0gLCBJMWkxMSApICwgMzYgLCAnJyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBUcnVlICkKICAgaWYgNjIgLSA2MjogT29PME8wMCAqIG9PbzBPME9vbwogICBpZiA3OSAtIDc5OiBvb09PMDBvT28gLiBpMUkxaWkxSUkxaUlJICogbzAwMDBvT29Pb08wbyAtIElJMTFpaUlJICsgT28KZGVmIG9vMG9vT08gKCB1cmxkYXRhICkgOgogT28wb09PbyA9ICIiCiBwcmludCAnYWRkRW1vdmllc0Zyb21TZWFyY2gnICwgdXJsZGF0YQogaWkxMUlJMWkgPSAiMSIKIE9PTyA9IHVybGRhdGEgWyAibGFuZyIgXQogTzAwMG8wID0gIiIKIGlpSTExaWkxSTEgPSAiIgogaWYgJ3BhZ2UnIGluIHVybGRhdGEgOgogIGlpMTFJSTFpID0gdXJsZGF0YSBbICJwYWdlIiBdCiBvTzBvMDAwT29Pb08wID0gaW50ICggaWkxMUlJMWkgKSAqIDIKIGlmIHVybGRhdGEgWyAidHlwZSIgXSA9PSAiZGVjYWRlIiA6CiAgT08wb29PT08wTzAwbyA9IHVybGRhdGEgWyAiZGVjYWRlbnVtIiBdCiAgTzAwMG8wID0gImh0dHBzOi8vZWludGh1c2FuLnR2L21vdmllL3Jlc3VsdHMvP2RlY2FkZT0lcyZmaW5kPURlY2FkZSZsYW5nPSVzJnBhZ2U9JXMiICUgKCBPTzBvb09PTzBPMDBvICwgT09PICwgc3RyICggb08wbzAwME9vT29PMCAtIDEgKSApCiAgaWlJMTFpaTFJMSA9ICJodHRwczovL2VpbnRodXNhbi50di9tb3ZpZS9yZXN1bHRzLz9kZWNhZGU9JXMmZmluZD1EZWNhZGUmbGFuZz0lcyZwYWdlPSVzIiAlICggT08wb29PT08wTzAwbyAsIE9PTyAsIHN0ciAoIG9PMG8wMDBPb09vTzAgKSApCiBlbGlmIHVybGRhdGEgWyAidHlwZSIgXSA9PSAic2VhcmNoIiA6CiAgT29vMG8wb28gPSB1cmxkYXRhIFsgInNlYXJjaGRhdGEiIF0KICBPMDAwbzAgPSAiaHR0cHM6Ly9laW50aHVzYW4udHYvbW92aWUvcmVzdWx0cy8/cXVlcnk9JXMmbGFuZz0lcyZwYWdlPSVzIiAlICggdXJsbGliIC4gcXVvdGVfcGx1cyAoIE9vbzBvMG9vICkgLCBPT08gLCBzdHIgKCBvTzBvMDAwT29Pb08wIC0gMSApICkKICBpaUkxMWlpMUkxID0gImh0dHBzOi8vZWludGh1c2FuLnR2L21vdmllL3Jlc3VsdHMvP3F1ZXJ5PSVzJmxhbmc9JXMmcGFnZT0lcyIgJSAoIHVybGxpYiAuIHF1b3RlX3BsdXMgKCBPb28wbzBvbyApICwgT09PICwgc3RyICggb08wbzAwME9vT29PMCApICkKIGVsaWYgdXJsZGF0YSBbICJ0eXBlIiBdID09ICJhbHBoYSIgOgogIE9vbzBvMG9vID0gdXJsZGF0YSBbICJzZWFyY2hkYXRhIiBdCiAgTzAwMG8wID0gImh0dHBzOi8vZWludGh1c2FuLnR2L21vdmllL3Jlc3VsdHMvP2FscGhhPSVzJmZpbmQ9QWxwaGFiZXRzJmxhbmc9JXMmcGFnZT0lcyIgJSAoIHVybGxpYiAuIHF1b3RlX3BsdXMgKCBPb28wbzBvbyApICwgT09PICwgc3RyICggb08wbzAwME9vT29PMCAtIDEgKSApCiAgaWlJMTFpaTFJMSA9ICJodHRwczovL2VpbnRodXNhbi50di9tb3ZpZS9yZXN1bHRzLz9hbHBoYT0lcyZmaW5kPUFscGhhYmV0cyZsYW5nPSVzJnBhZ2U9JXMiICUgKCB1cmxsaWIgLiBxdW90ZV9wbHVzICggT29vMG8wb28gKSAsIE9PTyAsIHN0ciAoIG9PMG8wMDBPb09vTzAgKSApCiAgaWYgMjYgLSAyNjogSUkxMTFpaWlpICUgaTExaUlpaUlpaSAlIGlJaWkxSTExSTFJSTEgJSBPb09PMG9vT09vbzBPICogT29PTzBvb09Pb28wTyAqIG9Pb08wb28wT09PbwogSWlJMUkxMWlJaWkgPSBzdHIgKCBpbnQgKCBpaTExSUkxaSApICsgMSApCiBPMDAwTzBPTzAwb28gPSB1cmxkYXRhCiBPMDAwTzBPTzAwb28gWyAicGFnZSIgXSA9IElpSTFJMTFpSWlpCiBvT09PID0gIiIKIG9vbzBvb29vMCA9ICIiCiB0cnkgOgogIG9vbzBvb29vMCA9IGkxaWlJMTFJICggTzAwMG8wICkKICBpZiBsZW4gKCBpaUkxMWlpMUkxICkgPiAwIDoKICAgb29vMG9vb28wICs9IGkxaWlJMTFJICggTzAwMG8wICkKIGV4Y2VwdCA6IHBhc3MKIE9PTzBvb28gPSBGYWxzZQogZm9yIElJaWlpaSBpbiByZSAuIGZpbmRhbGwgKCAiPGRpdiBjbGFzcz1cImJsb2NrMVwiPi4qP2hyZWY9WydcIl0uKj93YXRjaFwvKC4qPylcL1w/bGFuZz0oLio/KVsnXCJdLio/c3JjPVsnXCJdKC4qPylbJ1wiXS4qPzxoMz4oLio/KTwiICwgb29vMG9vb28wICkgOgogIHRyeSA6CiAgIE9PTzBvb28gPSBUcnVlCiAgIG9PT08gPSBJSWlpaWkgWyAwIF0KICAgaUkxMTFpMUkxSUkgPSBJSWlpaWkgWyAyIF0KICAgaWYgaUkxMTFpMUkxSUkgLiBzdGFydHN3aXRoICggJy8vJyApIDogaUkxMTFpMUkxSUkgPSAnaHR0cDonICsgaUkxMTFpMUkxSUkKICAgTzAwT08gPSBJSWlpaWkgWyAzIF0KICAgTzAwME9PMCAoIE8wME9PICwgYmFzZTY0IC4gYjY0ZW5jb2RlICggJ2Vtb3ZpZXM6JXMsJXMnICUgKCBvT09PICwgT09PICkgKSAsIDExICwgaUkxMTFpMUkxSUkgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogIGV4Y2VwdCA6IHBhc3MKIGlmIE9PTzBvb28gOgogIE8wMDBPTzAgKCAnTmV4dCBQYWdlICVzJyAlIElpSTFJMTFpSWlpICwgJ2Vtb3ZpZXM6JyArIGpzb24gLiBkdW1wcyAoIE8wMDBPME9PMDBvbyApICwgMzYgLCAnJyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBUcnVlICkKICBpZiAyOSAtIDI5OiBPb08wTzAwICUgb29PTzAwb09vICUgb29vTzBvbzBvT09PTyAuIE9vbzAwb09vMDBvIC8gT29vb29vb29PTyAqIE9vCiAgaWYgNTQgLSA1NDogTzAKICBpZiA2OCAtIDY4OiBvb09PMDBvT28gKiBPb28wMG9PbzAwbyAuIE9vICUgaWlpaUlpMTFpICUgbzBvbzBvCmRlZiBvb29vME9PICggdXJsICkgOgogaTFpSSA9IGlpb28wbzBPb09PTyAoICkKIG9vTzBvTzAwTzBvID0gZXRyZWUgLiBmcm9tc3RyaW5nICggaTFpSSApCiBvTzAgPSBbIF0KIGlJSWkxSSA9IEZhbHNlCiBPTzBvMG8wb28wTyA9IFsgJ2JsdWUnIF0KIGlmICd6ZW1tb3ZpZXMnID09IHVybCA6CiAgdXJsID0gJ2xhdGVzdCBtb3ZpZXMsaW5kaWFuIG1vdmllcyxlbmdsaXNoIG1vdmllcycgLiBzcGxpdCAoICcsJyApCiAgT08wbzBvMG9vME8gPSBbICdibHVlJyAsICdyZWQnICwgJ2dyZWVuJyBdCiAgaUlJaTFJID0gVHJ1ZQogZWxpZiAnemVtc3BvcnRzJyA9PSB1cmwgOgogIE8wMDBPTzAgKCBJMWkxMWkgKCAnPj5DbGljayBoZXJlIGZvciBBbGwgQ2F0ZWdvcmllczw8JyAuIGNhcGl0YWxpemUgKCApICwgJ3JlZCcgKSAsICJwdjIiICwgNjYgLCAnJyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBUcnVlICkKICB1cmwgPSBbICdzcG9ydHMnIF0KIGVsc2UgOgogIHVybCA9IFsgdXJsIF0KIE8wTzAwT28gPSBbIF0KIGZvciBpMTFpSUlpMTEgaW4gb29PMG9PMDBPMG8gLiBmaW5kYWxsICggJ2l0ZW1zJyApIDoKICBpZiBpMTFpSUlpMTEgLiBmaW5kdGV4dCAoICdwcm9ncmFtQ2F0ZWdvcnknICkgLiBsb3dlciAoICkgaW4gdXJsIG9yIGkxMWlJSWkxMSAuIGZpbmR0ZXh0ICggJ3Byb2dyYW1DYXRlZ29yeScgKSBpbiB1cmwgOgogICBvME9JaUlJID0gaTExaUlJaTExIC4gZmluZHRleHQgKCAncHJvZ3JhbVRpdGxlJyApCiAgIGlmIG8wT0lpSUkgLiBsb3dlciAoICkgLiBzdGFydHN3aXRoICggJ2hpZ2ggYWxlcnQnICkgOiBjb250aW51ZQogICBpZiA0MCAtIDQwOiBPb28wMG9PbzAwbyArIE9vTzBPMDAgLiBPb28wMG9PbzAwbyAlIE9vCiAgIEkxMUkxSUlpaUlJMSA9IGkxMWlJSWkxMSAuIGZpbmR0ZXh0ICggJ3Byb2dyYW1JRCcgKQogICBJSUlJSWlpMWlpMTEgPSBpMTFpSUlpMTEgLiBmaW5kdGV4dCAoICdwcm9ncmFtSW1hZ2UnICkgKyAnfFVzZXItQWdlbnQ9UGFrJTIwVFYvMS40IENGTmV0d29yay84MDguMi4xNiBEYXJ3aW4vMTYuMy4wJwogICBPT09vb28wT29vT29PID0gbzBPSWlJSQogICBpZiBpSUlpMUkgOgogICAgT09Pb29vME9vb09vTyA9IHN0ciAoIHVybCAuIGluZGV4ICggaTExaUlJaTExIC4gZmluZHRleHQgKCAncHJvZ3JhbUNhdGVnb3J5JyApIC4gbG93ZXIgKCApICkgKQogICBvTzAgLiBhcHBlbmQgKCAoIG8wT0lpSUkgLCBPT09vb28wT29vT29PICwgSTExSTFJSWlpSUkxICwgSUlJSUlpaTFpaTExICkgKQogICBpZiA5MSAtIDkxOiBpaWlpSWkxMWkgKyBvbwogICBpZiA1OSAtIDU5OiBvbyArIGkxMWlJaWlJaWkgKyBpMUlJaSAvIE9vT08wb29PT29vME8KIGlmIGxlbiAoIG9PMCApID4gMCA6CiAgb08wID0gc29ydGVkICggb08wICwga2V5ID0gbGFtYmRhIEkxaTExIDogSTFpMTEgWyAxIF0gLiBsb3dlciAoICkgKQogIGlmIDQ0IC0gNDQ6IE9vT08wb29PT29vME8gLiBvT28wTzBPb28gKiBvbyArIE9vb29vb29vT08gLSBpMUkxaWkxSUkxaUlJIC0gb29vTzBvbzBvT09PTwogT09Pb29vME9vb09vTyA9ICIiCiBJMWlpaSA9ICJuIgogaWYgNTEgLSA1MTogb09vTzBvbzBPT09vCiBJSUkxSTFJaTExaUkgPSBPTzBvMG8wb28wTyBbIDAgXQogZm9yIG9PMDBPb09PIGluIG9PMCA6CiAgT09Pb29vME9vb09vTyA9IG9PMDBPb09PIFsgMSBdCiAgaWYgT09Pb29vME9vb09vTyAuIGlzZGlnaXQgKCApIGFuZCBJMWlpaSA8PiBPT09vb28wT29vT29PIDoKICAgSUlJMUkxSWkxMWlJID0gT08wbzBvMG9vME8gWyBpbnQgKCBPT09vb28wT29vT29PICkgXQogICBPMDAwT08wICggSTExSUlpSWlJICggdXJsIFsgaW50ICggT09Pb29vME9vb09vTyApIF0gLiBjYXBpdGFsaXplICggKSAsIElJSTFJMUlpMTFpSSApICwgJycgLCAzNyAsICcnICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IFRydWUgKQogIEkxaWlpID0gT09Pb29vME9vb09vTwogIE8wMDBPTzAgKCBJMTFJSWlJaUkgKCBvTzAwT29PTyBbIDAgXSAuIGNhcGl0YWxpemUgKCApICwgSUlJMUkxSWkxMWlJICkgLCBiYXNlNjQgLiBiNjRlbmNvZGUgKCBvTzAwT29PTyBbIDIgXSApICwgMzcgLCBvTzAwT29PTyBbIDMgXSAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiAgaWYgNSAtIDU6IE9vTzBPMDAgKiBvT28wTzBPb28KZGVmIGlpMUkxMWlJaUlJSTEgKCB1cmwgPSBOb25lICkgOgogaWYgNTIgLSA1MjogT29vMDBvT28wMG8gKiBvb29PMG9vMG9PT09PICsgb09vME8wT29vCiBmb3IgbzBPSWlJSSAsIElpaWlJaWlJICwgbzBvME8gLCBvb29vTzBvT29PT29PIGluIG8wME8gKCApIDoKICBvME9JaUlJID0gbzBPSWlJSSAuIGVuY29kZSAoICdhc2NpaScgLCAnaWdub3JlJyApIC4gZGVjb2RlICggJ2FzY2lpJyApCiAgaTFpID0gMTEKICBPMDAwT08wICggSTExSUlpSWlJICggbzBPSWlJSSAuIGNhcGl0YWxpemUgKCApICwgJ1pNJyApICwgYmFzZTY0IC4gYjY0ZW5jb2RlICggbzBvME8gKSAsIGkxaSAsIG9vb29PMG9Pb09Pb08gLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogcmV0dXJuCiBpZiA1IC0gNTogaWlpaUlpMTFpIC4gb09vTzBvbzBPT09vIC4gSUkxMTFpaWlpIC4gT29vb29vb29PTwpkZWYgT28wT29vTzAgKCB1cmwgPSBOb25lICkgOgogaWYgODcgLSA4NzogaWlpaUlpMTFpICUgbzAwMDBvT29Pb08wbwogaWYgdXJsID09ICJzc3MiIDoKICBvbzBPT09vT28gPSBbICdDVEcgU3RhZGl1bScgLCAnVDIwIFdvcmxkIEN1cCcgLCAnTGl2ZSBDcmlja2V0JyAsICdQdHYgU3BvcnRzJyAsICdQU0wnICwgJ1BhayBWUyBOWicgLCAnSU5EIFZTIEFVUycgLCAnRU5HIFZTIFNBJyAsICdJbmRpYSBTcG9ydHMnICwgJ1dvcmxkIFNwb3J0cycgLCAnRm9vdGJhbGwgQ2x1YnMnICwgJ1BhayBTcG9ydHMnICwgJ0NyaWNrZXQnICwgJ0Zvb3RiYWwnICwgJ0dvbGYnICwgJ1dyZXN0bGluZyAmIEJveGluZycgLCAnVDIwIEJpZyBCYXNoIExlYWd1ZScgXQogIElJaWlJSWkxID0gVHJ1ZQogIE8wMDBPTzAgKCBJMTFJSWlJaUkgKCAnPj5DbGljayBoZXJlIGZvciBBbGwgQ2F0ZWdvcmllczw8JyAuIGNhcGl0YWxpemUgKCApICwgJ3JlZCcgKSAsICJwYWt0diIgLCA2NiAsICcnICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IFRydWUgKQogZWxzZSA6CiAgb28wT09Pb09vID0gWyB1cmwgXQogIElJaWlJSWkxID0gRmFsc2UKICBpZiA1MSAtIDUxOiBvT28wTzBPb28KIGZvciBvME9JaUlJICwgSWlpaUlpaUkgLCBvMG8wTyAsIG9vb29PMG9Pb09Pb08gaW4gSTExSUlJaUlpMTEgKCBvbzBPT09vT28gLCBJSWlpSUlpMSAsIGRlc2kgPSBGYWxzZSApIDoKICBvME9JaUlJID0gbzBPSWlJSSAuIGVuY29kZSAoICdhc2NpaScgLCAnaWdub3JlJyApIC4gZGVjb2RlICggJ2FzY2lpJyApCiAgaWYgSWlpaUlpaUkgPT0gJ21hbnVhbDInIDoKICAgaTFpID0gMzcKICBlbGlmIElpaWlJaWlJID09ICdtYW51YWwzJyA6CiAgIGkxaSA9IDQ1CiAgZWxzZSA6CiAgIGkxaSA9IDExCiAgTzAwME9PMCAoIEkxMUlJaUlpSSAoIG8wT0lpSUkgLiBjYXBpdGFsaXplICggKSAsICdaTScgKSAsIGJhc2U2NCAuIGI2NGVuY29kZSAoIG8wbzBPICkgLCBpMWkgLCBvb29vTzBvT29PT29PICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKIHJldHVybgogaWYgMzkgLSAzOTogbzAwMDBvT29Pb08wbyAlIE8wICUgb09vME8wT29vIC4gaTFJSWkKZGVmIG9PbzAwT29vTzBvTyAoIHVybCA9IE5vbmUgKSA6CiBpZiB1cmwgPT0gInNzcyIgOgogIElJaWlJSWkxID0gVHJ1ZQogIG9vME9PT29PbyA9IFsgJ1BTTCcgLCAnSVBMJyAsICdQdHYgU3BvcnRzJyAsICdTdGFyIFNwb3J0cycgLCAnU3BvcnRzJyAsICdCUEwgVDIwJyAsICdMaXZlIENyaWNrZXQnICwgJ0xpdmUgRm9vdGJhbCcgLCAnVGVuIFNwb3J0cycgLCAnQlQgU3BvcnRzJyAsICdFdXJvIFNwb3J0cycgXQogIE8wMDBPTzAgKCBJMTFJSWlJaUkgKCAnPj5DbGljayBoZXJlIGZvciBBbGwgQ2F0ZWdvcmllczw8JyAuIGNhcGl0YWxpemUgKCApICwgJ3JlZCcgKSAsICJwdGMiICwgNjYgLCAnJyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBUcnVlICkKIGVsc2UgOgogIG9vME9PT29PbyA9IFsgdXJsIF0KICBJSWlpSUlpMSA9IEZhbHNlCiBmb3IgbzBPSWlJSSAsIElpaWlJaWlJICwgbzBvME8gLCBvb29vTzBvT29PT29PIGluIEkxSUlpICggb28wT09Pb09vICwgSUlpaUlJaTEgLCBkZXNpID0gRmFsc2UgKSA6CiAgbzBPSWlJSSA9IG8wT0lpSUkgLiBlbmNvZGUgKCAnYXNjaWknICwgJ2lnbm9yZScgKSAuIGRlY29kZSAoICdhc2NpaScgKQogIGlmIElpaWlJaWlJID09ICdtYW51YWwyJyA6CiAgIGkxaSA9IDM3CiAgZWxpZiBJaWlpSWlpSSA9PSAnbWFudWFsMycgOgogICBpMWkgPSA0NQogIGVsc2UgOgogICBpMWkgPSAxMQogIE8wMDBPTzAgKCBJMTFJSWlJaUkgKCBvME9JaUlJIC4gY2FwaXRhbGl6ZSAoICkgLCAnWk0nICkgLCBiYXNlNjQgLiBiNjRlbmNvZGUgKCBvMG8wTyApICwgaTFpICwgb29vb08wb09vT09vTyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiByZXR1cm4KIGlmIDY5IC0gNjk6IG8wMDAwb09vT29PMG8gKyBPb08wTzAwICsgSUkxMTFpaWlpIC0gb28gLyBPb09PMG9vT09vbzBPCmRlZiBPME8wb29PT08gKCBkdCApIDoKIGlmIDcwIC0gNzA6IE9vIC4gTzAgLiBvMG9vMG8gLiBPMCArIGkxSUlpCiBpZiA5IC0gOTogT29PME8wMAogaW1wb3J0IGRhdGV0aW1lCiBpZiBoYXNhdHRyICggZGF0ZXRpbWUgLCAndG90YWxfc2Vjb25kcycgKSA6CiAgcmV0dXJuIGR0IC4gdG90YWxfc2Vjb25kcyAoICkKIGVsc2UgOgogIHJldHVybiAoIGR0IC4gbWljcm9zZWNvbmRzICsgKCBkdCAuIHNlY29uZHMgKyBkdCAuIGRheXMgKiAyNCAqIDM2MDAgKSAqIDEwICoqIDYgKSAvIDEwICoqIDYKICBpZiA5OSAtIDk5OiBPb09PMG9vT09vbzBPIC0gbzBvbzBvIC0gaWlpaUlpMTFpICUgb29PTzAwb09vCmRlZiBJaWlJSWlpaWlpaSAoICkgOgogaW1wb3J0IHRpbWUKIGZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCiBpZiAxMDAgLSAxMDA6IE9vTzBPMDAgKyBPb28wMG9PbzAwbyAtIE8wICUgSUkxMTFpaWlpIC4gaTFJMWlpMUlJMWlJSQogb29PbzBPb09vb28wMCA9IHRpbWUgLiB0aW1lICggKQogT08wME8wMDBPT08gPSBPME8wb29PT08gKCAoIGRhdGV0aW1lIC4gZnJvbXRpbWVzdGFtcCAoIG9vT28wT29Pb29vMDAgKSAtIGRhdGV0aW1lIC4gdXRjZnJvbXRpbWVzdGFtcCAoIG9vT28wT29Pb29vMDAgKSApICkgLyA2MAogaWYgMyAtIDM6IE8wCiByZXR1cm4gaW50ICggT08wME8wMDBPT08gKQogaWYgNjQgLSA2NDogaTFJSWkgJSBPbyAvIGkxMWlJaWlJaWkgLSBpMUlJaSAlIElJMTFpaUlJIC4gaTFJMWlpMUlJMWlJSQogaWYgOCAtIDg6IE9vTzBPMDAgKyBJSTExMWlpaWkgKiBJSTExaWlJSSAqIG9PbzBPME9vbyAqIE9vT08wb29PT29vME8gLyBvb29PMG9vMG9PT09PCmRlZiBpSWlpICggdyAsIGkgLCBzICwgZSApIDoKIE9PME9vT09PMCA9IDAgOwogTzAwb29PbyA9IDAgOwogb09PMG8wME8gPSAwIDsKIG9Pb08gPSBbIF0gOwogSUlJSSA9IFsgXSA7CiB3aGlsZSBUcnVlIDoKICBpZiAoIE9PME9vT09PMCA8IDUgKSA6CiAgIElJSUkgLiBhcHBlbmQgKCB3IFsgT08wT29PT08wIF0gKQogIGVsaWYgKCBPTzBPb09PTzAgPCBsZW4gKCB3ICkgKSA6CiAgIG9Pb08gLiBhcHBlbmQgKCB3IFsgT08wT29PT08wIF0gKSA7CiAgT08wT29PT08wICs9IDEgOwogIGlmICggTzAwb29PbyA8IDUgKSA6CiAgIElJSUkgLiBhcHBlbmQgKCBpIFsgTzAwb29PbyBdICkKICBlbGlmICggTzAwb29PbyA8IGxlbiAoIGkgKSApIDoKICAgb09vTyAuIGFwcGVuZCAoIGkgWyBPMDBvb09vIF0gKQogIE8wMG9vT28gKz0gMSA7CiAgaWYgKCBvT08wbzAwTyA8IDUgKSA6CiAgIElJSUkgLiBhcHBlbmQgKCBzIFsgb09PMG8wME8gXSApCiAgZWxpZiAoIG9PTzBvMDBPIDwgbGVuICggcyApICkgOgogICBvT29PIC4gYXBwZW5kICggcyBbIG9PTzBvMDBPIF0gKSA7CiAgb09PMG8wME8gKz0gMSA7CiAgaWYgKCBsZW4gKCB3ICkgKyBsZW4gKCBpICkgKyBsZW4gKCBzICkgKyBsZW4gKCBlICkgPT0gbGVuICggb09vTyApICsgbGVuICggSUlJSSApICsgbGVuICggZSApICkgOgogICBicmVhayA7CiAgIGlmIDUwIC0gNTA6IE9vTzBPMDAgJSBvb29PMG9vMG9PT09PCiBpSWkgPSAnJyAuIGpvaW4gKCBvT29PICkKIGlJSWkgPSAnJyAuIGpvaW4gKCBJSUlJICkKIE8wMG9vT28gPSAwIDsKIG9vTzAwTzAwb09PID0gWyBdIDsKIGZvciBPTzBPb09PTzAgaW4gcmFuZ2UgKCAwICwgbGVuICggb09vTyApICwgMiApIDoKICBpZiA0MCAtIDQwOiBpMUkxaWkxSUkxaUlJIC4gaWlpaUlpMTFpICsgb28gKyBvT29PMG9vME9PT28gKyBvMG9vMG8KICBpMTFJaTFJMUkxMUkgPSAtIDEgOwogIGlmICggb3JkICggaUlJaSBbIE8wMG9vT28gXSApICUgMiApIDoKICAgaTExSWkxSTFJMTFJID0gMSA7CiAgIGlmIDI5IC0gMjk6IE9vb29vb29vT08gLiBvbyAlIG9Pb08wb28wT09PbyAtIGkxSTFpaTFJSTFpSUkKICBvb08wME8wMG9PTyAuIGFwcGVuZCAoIGNociAoIGludCAoIGlJaSBbIE9PME9vT09PMCA6IE9PME9vT09PMCArIDIgXSAsIDM2ICkgLSBpMTFJaTFJMUkxMUkgKSApIDsKICBPMDBvb09vICs9IDEgOwogIGlmICggTzAwb29PbyA+PSBsZW4gKCBJSUlJICkgKSA6CiAgIE8wMG9vT28gPSAwIDsKIG9PMCA9ICcnIC4gam9pbiAoIG9vTzAwTzAwb09PICkKIGlmICdldmFsKGZ1bmN0aW9uKHcsaSxzLGUpJyBpbiBvTzAgOgogIGlmIDggLSA4OiBpMUlJaQogIG9PMCA9IHJlIC4gY29tcGlsZSAoICdldmFsXChmdW5jdGlvblwodyxpLHMsZVwpLip9XCgoLio/KVwpJyApIC4gZmluZGFsbCAoIG9PMCApIFsgMCBdCiAgcmV0dXJuIGlJaUkxICggb08wICkKIGVsc2UgOgogIGlmIDM3IC0gMzc6IG9vT08wMG9PbyAqIGkxMWlJaWlJaWkgLyBJSTExaWlJSSAlIG8wb28wbwogIHJldHVybiBvTzAKZGVmIGlJaUkxICggc3RyX2V2YWwgKSA6CiBvb28wID0gIiIKIHRyeSA6CiAgbzBvb29PID0gIncsaSxzLGU9KCIgKyBzdHJfZXZhbCArICcpJwogIGV4ZWMgKCBvMG9vb08gKQogIG9vbzAgPSBpSWlpICggdyAsIGkgLCBzICwgZSApCiBleGNlcHQgOiB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIGlmIDg5IC0gODk6IElJMTExaWlpaSAvIGlpaWlJaTExaQogcmV0dXJuIG9vbzAKIGlmIDE0IC0gMTQ6IElJMTFpaUlJIC4gb28gKiBPbyArIElJMTExaWlpaSAtIE9vICsgSUkxMWlpSUkKIGlmIDE4IC0gMTg6IGlpaWlJaTExaSAtIE9vbzAwb09vMDBvIC0gb28gLSBvbwpkZWYgT09vb28wMCAoIHJlc291cmNlcyApIDoKIGlmIDM1IC0gMzU6IG8wb28wbyAuIG9PbzBPME9vbyAqIGkxMWlJaWlJaWkKIGlpSUkgPSB4Ym1jZ3VpIC4gRGlhbG9nUHJvZ3Jlc3MgKCApCiBvTzAgPSBpaUlJIC4gY3JlYXRlICggJ1hCTUMnICwgJ2NoZWNraW5nIFVwZGF0ZXMuLi4nICkKIG8wT2lpMTExMWkgPSBsZW4gKCByZXNvdXJjZXMgKQogTzBvb09PID0gMAogaW1wb3J0IGhhc2hsaWIKIElpaUkgPSBGYWxzZQogdHJ5IDoKICBmb3IgaTExaWkgaW4gcmVzb3VyY2VzIDoKICAgaWYgaWlJSSAuIGlzY2FuY2VsZWQgKCApIDogcmV0dXJuCiAgIGkxMUkxID0gKCBPMG9vT08gKiA4MCApIC8gbzBPaWkxMTExaQogICBJaTFpSWkxMTFpMWkxID0gaTExaWkgWyAwIF0KICAgSUlPTzBvb09vME9vT28wID0gaTExaWkgWyAxIF0KICAgb09vID0gaGFzaGxpYiAuIG1kNSAoIElJT08wb29PbzBPb09vMCArIGkxaUlJMUkxaTFpMSApIC4gaGV4ZGlnZXN0ICggKQogICBpMWlJSUlpaWlJID0gb29PMDBvT29vIC4gZ2V0U2V0dGluZyAoICJFdGFnaWQiICsgb09vICkKICAgaWYgaTFpSUlJaWlpSSA9PSAiIiA6IGkxaUlJSWlpaUkgPSBOb25lCiAgIHRyeSA6CiAgICBpZiBpMTFpaSBbIDIgXSA6IGkxaUlJSWlpaUkgPSBOb25lCiAgIGV4Y2VwdCA6IHBhc3MKICAgT29PMDBvbzAwID0gMjAwCiAgIGlmIDc2IC0gNzY6IE9vb29vb29vT08gKyBPb08wTzAwICUgb29vTzBvbzBvT09PTyAuIG9vT08wMG9PbyArIElJMTExaWlpaQogICBvTzBvID0gTm9uZQogICB0cnkgOgogICAgT28wT29PMDBvT08wbyA9IHVybGxpYjIgLiBSZXF1ZXN0ICggSUlPTzBvb09vME9vT28wICkKICAgIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8zMy4wLjE3NTAuMTU0IFNhZmFyaS81MzcuMzYnICkKICAgIGlmIDg0IC0gODQ6IE8wIC0gSUkxMTFpaWlpIC4gT29PME8wMCAvIGlpaWlJaTExaSAuIE9vb29vb29vT08gKyBpMTFpSWlpSWlpCiAgICBpZiBpMWlJSUlpaWlJIDoKICAgICBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoICdJZi1Ob25lLU1hdGNoJyAsIGkxaUlJSWlpaUkgKQogICAgT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICkKICAgIE9vTzAwb28wMCA9IE9PTzAwTyAuIGdldGNvZGUgKCApCiAgICBpZiBPb08wMG9vMDAgPD4gMzA0IDoKICAgICB0cnkgOgogICAgICBvTzBvID0gT09PMDBPIC4gaW5mbyAoICkgLiBnZXRoZWFkZXIgKCAnRXRhZycgKQogICAgIGV4Y2VwdCA6IHBhc3MKICAgICBPME9PID0gT09PMDBPIC4gcmVhZCAoICkKICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBJSUlpSWlJIDoKICAgIEkxaTExID0gc3RyICggSUlJaUlpSSApCiAgICBpZiAnTm90IE1vZGlmaWVkJyAuIGxvd2VyICggKSBpbiBJMWkxMSAuIGxvd2VyICggKSA6IE9vTzAwb28wMCA9IDMwNAogICAgTzBPTyA9ICcnCiAgIGlmICggJ0V4ZWMgZm9ybWF0IGVycm9yOiBleGVjJyBpbiBPME9PIG9yICdBIGZpbGUgcGVybWlzc2lvbnMgZXJyb3IgaGFzIG9jY3VycmVkJyBpbiBPME9PICkgYW5kICd4Ym1jcGx1Z2luJyBub3QgaW4gTzBPTyA6CiAgICBPME9PID0gJycKICAgIGlmIDcgLSA3OiBvb29PMG9vMG9PT09PIC4gb09vME8wT29vIC8gb09vTzBvbzBPT09vIC4gSUkxMWlpSUkgKiBPb09PMG9vT09vbzBPIC0gSUkxMTFpaWlpCiAgIGlmIGxlbiAoIE8wT08gKSA+IDAgOgogICAgd2l0aCBvcGVuICggb3MgLiBwYXRoIC4gam9pbiAoIG9vMDBvME9vMG9vICwgSWkxaUlpMTExaTFpMSApICwgIndiIiApIGFzIEkxaWkxaUkxSUkxMWlpIDoKICAgICBJMWlpMWlJMUlJMTFpaSAuIHdyaXRlICggTzBPTyApCiAgICAgSWlpSSA9IFRydWUKICAgICBpZiBvTzBvIDoKICAgICAgb29PMDBvT29vIC4gc2V0U2V0dGluZyAoIGlkID0gIkV0YWdpZCIgKyBvT28gLCB2YWx1ZSA9IG9PMG8gKQogICAgaWlJSSAuIHVwZGF0ZSAoIDIwICsgaTExSTEgLCAnaW1wb3J0ZWQgLi4uJyArIElpMWlJaTExMWkxaTEgKQogICBlbGlmIE9vTzAwb28wMCA9PSAzMDQgOgogICAgaWlJSSAuIHVwZGF0ZSAoIDIwICsgaTExSTEgLCAnTm8gQ2hhbmdlLi4gc2tpcHBpbmcuJyArIElpMWlJaTExMWkxaTEgKQogICBlbHNlIDoKICAgIGlpSUkgLiB1cGRhdGUgKCAyMCArIGkxMUkxICwgJ0ZhaWxlZC4uemVybyBieXRlLicgKyBJaTFpSWkxMTFpMWkxICkKICAgTzBvb09PICs9IDEKIGV4Y2VwdCA6IHBhc3MKIGlpSUkgLiBjbG9zZSAoICkKIHJldHVybiBJaWlJCiBpZiA4IC0gODogT28gKiBPMAogaWYgNzMgLSA3MzogT29vMDBvT28wMG8gLyBpaWlpSWkxMWkgLyBPb09PMG9vT09vbzBPIC8gb29PTzAwb09vCmRlZiBJSUkxaWkgKCB1cmwgKSA6CiBpMUlpaUkxSTFJSWkxMWkxID0gaTFJSTFpaWkxaSAoIHVybCApCiBwcmludCBpMUlpaUkxSTFJSWkxMWkxCiBJMSA9IHhibWNndWkgLiBMaXN0SXRlbSAoIGxhYmVsID0gc3RyICggb08wMG9PT29vb08gKSAsIGljb25JbWFnZSA9ICJEZWZhdWx0VmlkZW8ucG5nIiAsIHRodW1ibmFpbEltYWdlID0geGJtYyAuIGdldEluZm9JbWFnZSAoICJMaXN0SXRlbS5UaHVtYiIgKSApCiBPT08wbyA9IEZhbHNlCiBpZiA0IC0gNDogT29PME8wMCAuIGkxSUlpIC0gaTFJMWlpMUlJMWlJSQogdHJ5IDoKICBpbXBvcnQgdWt0dnBsYXllcmxpbWl0ZWQKICBPT08wbyA9IHVrdHZwbGF5ZXJsaW1pdGVkIC4gcGxheSAoIEkxICwgaTFJaWlJMUkxSUlpMTFpMSApCiAgaWYgMTAgLSAxMDogT29PTzBvb09Pb28wTyAqIG8wMDAwb09vT29PMG8gJSBPb29vb29vb09PCiBleGNlcHQgOgogIHByaW50ICdlcnJvciBpbiBQbGF5VUtUVk5vd0NoYW5uZWxzJwogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogIHBhc3MKICBpZiA4MyAtIDgzOiBvMG9vMG8gLSBvbyAtIG9Pb08wb28wT09PbyAlIE8wIC4gbzAwMDBvT29Pb08wbwogIGlmIDM1IC0gMzU6IG9vb08wb28wb09PT08gKyBpMUlJaSAqIGlpaWlJaTExaSAtIG8wMDAwb09vT29PMG8gLiBPb08wTzAwCiAgaWYgMzEgLSAzMTogT29vMDBvT28wMG8KICBpZiAxNSAtIDE1OiBPMCAvIE9vTzBPMDAgJSBvT29PMG9vME9PT28gKyBPb28wMG9PbzAwbwogIGlmIDIzIC0gMjM6IGlJaWkxSTExSTFJSTEgKyBPMAogcmV0dXJuCiBpZiA1OCAtIDU4OiBPb08wTzAwCmRlZiBJaWlJSUlpSTFpaSAoIExpdmUgPSBUcnVlICkgOgogb08wID0gWyBdCiB0cnkgOgogIE9vMG9PT28gPSAiaHR0cDovL2FzaWFjdXAuYXBpLnl1cHBjZG4ubmV0L3l1cHBjYWNoZS5zdmMvYXNpYWN1cGRldGFpbHMiCiAgb28wT09vT29vME8wTyA9IHsgJ3R5cGUnIDogJzIwMTYnIH0KICBpZiBMaXZlIDoKICAgb28wT09vT29vME8wTyA9IHsgJ3R5cGUnIDogJ2xpdmUnIH0KICAgaWYgMTUgLSAxNTogaTFJMWlpMUlJMWlJSQogIGkxaWkxMTExaTFpID0gWyAoICdVc2VyLUFnZW50JyAsICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNDguMC4yNTY0LjExNiBTYWZhcmkvNTM3LjM2JyApICwKICggJ1JlZmVyZXInICwgJ2h0dHA6Ly93d3cueXVwcHR2LmNvbS9jcmlja2V0L2FzaWFjdXAuaHRtbCcgKSBdCiAgaWYgNDYgLSA0NjogaTFJSWkKICBvbzBPT29Pb28wTzBPID0gdXJsbGliIC4gdXJsZW5jb2RlICggb28wT09vT29vME8wTyApCiAgaWYgNTQgLSA1NDogSUkxMTFpaWlpIC0gb09vME8wT29vCiAgb29PT29vbzBPbyA9IGkxaWlJMTFJICggT28wb09PbyAsIHBvc3QgPSBvbzBPT29Pb28wTzBPICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKICBvbzBPMG8gPSBqc29uIC4gbG9hZHMgKCBvb09Pb29vME9vICkKICBmb3IgT29vMG9vIGluIG9vME8wbyBbICJWT0RTIiBdIDoKICAgbzBPSWlJSSA9IE9vbzBvbyBbICJEZXNjcmlwdGlvbiIgXQogICBvMG8wTyA9ICdkaXJlY3Q6JyArIE9vbzBvbyBbICJVUkxwYXRoIiBdCiAgIElJSUlJaWkxaWkxMSA9IE9vbzBvbyBbICJJbWdwYXRoIiBdCiAgIGlmIDg3IC0gODc6IE9vTzBPMDAgLyBPMCAqIG9vb08wb28wb09PT08gLyBPb28wMG9PbzAwbwogICBvTzAgLiBhcHBlbmQgKCAoIG8wT0lpSUkgLCAnbWFudWFsJyAsIG8wbzBPICwgSUlJSUlpaTFpaTExICkgKQogZXhjZXB0IDoKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIHJldHVybiBvTzAKIGlmIDE5IC0gMTk6IG8wb28wbyArIGkxSUlpIC4gb28gLSBPb08wTzAwCmRlZiBpSWkxSTEgKCApIDoKIG9PMCA9IFsgXQogdHJ5IDoKICBPbzBvT09vID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggImFIUjBjRG92TDNsMGVDNXRaUzl0YW5OdmJpOW5aWFJ0Wlc1MVAybHZjMkZ3Y0c1aGJXVTlZWEo2ZFE9PSIgKQogIGlmIDYzIC0gNjM6IGkxSTFpaTFJSTFpSUkgKiBvT29PMG9vME9PT28gLiBPb29vb29vb09PIC8gSUkxMWlpSUkgKiBPb08wTzAwIC4gT28KICBpMWlpMTExMWkxaSA9IFsgKCAnVXNlci1BZ2VudCcgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnUVhKNmRTOHlMakF1TWlCRFJrNWxkSGR2Y21zdk56VTRMakF1TWlCRVlYSjNhVzR2TVRVdU1DNHcnICkgKSBdCiAgb29PT29vbzBPbyA9IGkxaWlJMTFJICggT28wb09PbyAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiAgb28wTzBvID0ganNvbiAuIGxvYWRzICggb29PT29vbzBPbyApCiAgZm9yIE9vbzBvbyBpbiBvbzBPMG8gWyAibWVudUl0ZW1zIiBdIDoKICAgbzBPSWlJSSA9IE9vbzBvbyBbICJ0aXRsZSIgXQogICBvMG8wTyA9IE9vbzBvbyBbICJqc29uVVJMIiBdCiAgIG8wbzBPID0gbzBvME8gLiByZXBsYWNlICggJyVAJUAnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2VYUjRMbTFsJyApICkgKyAnYXBwPSVzJmM9JXMmcmV0dXJuaWQ9JXMnICUgKCBPb28wb28gWyAiYXBwTmFtZSIgXSAsIE9vbzBvbyBbICJjYXRlZ29yeSIgXSAsIE9vbzBvbyBbICJpZCIgXSApCiAgIElJSUlJaWkxaWkxMSA9ICcnCiAgIG9PMCAuIGFwcGVuZCAoICggbzBPSWlJSSAsICdtYW51YWwnICwgbzBvME8gLCBJSUlJSWlpMWlpMTEgKSApCiBleGNlcHQgOgogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogaWYgbGVuICggb08wICkgPiAwIDoKICBvTzAgPSBzb3J0ZWQgKCBvTzAgLCBrZXkgPSBsYW1iZGEgSTFpMTEgOiBJMWkxMSBbIDAgXSAuIGxvd2VyICggKSApCiByZXR1cm4gb08wCiBpZiA2MiAtIDYyOiBpMUlJaSAvIE9vIC4gb28gKiBPb28wMG9PbzAwbwogaWYgMjEgLSAyMTogT29vMDBvT28wMG8KZGVmIE8wT28wICggKSA6CiByZXR1cm4gZXZhbCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJleWRoY0hCZmRHRm5Kem9uWm05dmRHSmhiR3hmYUdsbmFHeHBaMmgwWDJoa0p5d25jM1J2Y21Vbk9pZHBkSFZ1WlhNbkxDZGhjSEJmZG1WeWMybHZiaWM2SnpJbkxDQW5ZWEJ3WDJGd2FWOXpaV055WlhSZmEyVjVKem9uWm05dmRHSmhiR3hmY0hKdlpIVmpkR2x2Ymw4eE1sOHpORjlBUUNkOSIgKSApCiBpZiA5OCAtIDk4OiBvMG9vMG8KZGVmIG8wb28wMDAwICggKSA6CiBJaTFpSWkxMTFpMWkxID0gJ0Zhc3RDYXRzLmpzb24nCiBJaTFpSWkxMTFpMWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgSWkxaUlpMTExaTFpMSApCiB0cnkgOgogIG9vME8wbyA9IGkxMTFpMWkgKCBJaTFpSWkxMTFpMWkxICwgMiAqIDYwICogNjAgKQogIGlmIG5vdCBvbzBPMG8gPT0gTm9uZSA6CiAgIHJldHVybiBqc29uIC4gbG9hZHMgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCBvbzBPMG8gKSApCiBleGNlcHQgOgogIHByaW50ICdmaWxlIGdldHRpbmcgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgaWYgMTkgLSAxOTogSUkxMTFpaWlpIC0gaTFJSWkgLSBJSTExaWlJSSAvIElJMTFpaUlJICsgb09vME8wT29vCiBPTzBPb29vMG9vID0gSTFpMTExSWlJaUlpMSAoICkKIGkxaWkxMTExaTFpID0gWyAoICdVc2VyLUFnZW50JyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdSR0ZzZG1sckx6RXVOaTR3SUNoTWFXNTFlRHNnVlRzZ1FXNWtjbTlwWkNBMExqUXVNanNnVTAwdFJ6a3dNRVlnUW5WcGJHUXZTMDlVTkRsSUtRPT0nICkgKSAsICggJ0F1dGhvcml6YXRpb24nICwgJ0Jhc2ljICVzJyAlIGJhc2U2NCAuIGI2NGVuY29kZSAoIE9PME9vb28wb28gWyAiREFUQSIgXSBbIDAgXSBbICJQYXNzd29yZCIgXSApICkgXQogT09vT08wb28wb29PID0gaTFpaUkxMUkgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMM04zYVdaMGMzUnlaV0Z0ZWk1amIyMHZVM2RwWm5SVGRISmxZVzB2WVhCcExuQm9jQT09JyApICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKIGlmIDM5IC0gMzk6IE9vT08wb29PT29vME8gLSBvT29PMG9vME9PT28KIG9vME8wbyA9IE5vbmUKIHRyeSA6CiAgdHJ5IDoKICAgb28wTzBvID0ganNvbiAuIGxvYWRzICggT09vT08wb28wb29PICkKICBleGNlcHQgOgogICBvbzBPMG8gPSBqc29uIC4gbG9hZHMgKCBPT29PTzBvbzBvb08gLiBzcGxpdCAoICddfScgKSBbIDAgXSArICddfScgKQogIE9PTzBvME9PME9PICggYmFzZTY0IC4gYjY0ZW5jb2RlICggT09vT08wb28wb29PICkgLCBJaTFpSWkxMTFpMWkxICkKIGV4Y2VwdCA6CiAgcHJpbnQgJ2dldEZhc3REYXRhIGZpbGUgc2F2aW5nIGVycm9yJwogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcmV0dXJuIG9vME8wbwogaWYgNjQgLSA2NDogSUkxMTFpaWlpCmRlZiBpSUlJaUlpMUkxaSAoIHYyID0gRmFsc2UgKSA6CiBpbXBvcnQgcmFuZG9tICwgc3RyaW5nCiBJMWkxMSA9IGV2YWwgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiV3ljMExqUW5MQ2MwTGpRdU5DY3NKelV1TUNjc0p6VXVNUzR4Snl3bk5pNHdKeXduTmk0d0xqRW5MQ2MzTGpBbkxDYzNMakV1TVNkZCIgKSApCiBpZiB2MiA6CiAgT29PT29PMG9PbyA9IFsgJycgLiBqb2luICggcmFuZG9tIC4gU3lzdGVtUmFuZG9tICggKSAuIGNob2ljZSAoIHN0cmluZyAuIGFzY2lpX2xldHRlcnMgKSBmb3IgXyBpbiByYW5nZSAoIDQgKyBpbnQgKCByYW5kb20gLiByYW5kb20gKCApICogMTUgKSApICkgXQogZWxzZSA6CiAgT29PT29PMG9PbyA9IGV2YWwgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiV3lkVGIyNTVJRVY0Y0dWeWFXRW5MQ2RUYjI1NUlFVjRjR1Z5YVdFZ1ZHRmliR1YwSnl3blMybHVaR3hsSUVacGNtVW5MQ2RHYVhKbElFaEVKeXduVkc5MVkyaFFZV1FuWFE9PSIgKSApCiAgaWYgNzAgLSA3MDogT29PTzBvb09Pb28wTyAlIGlJaWkxSTExSTFJSTEgLiBPb08wTzAwICsgT29PME8wMCAtIE9vbzAwb09vMDBvICUgbzBvbzBvCiAgaWYgMzggLSAzODogbzBvbzBvICUgSUkxMWlpSUkgLSBPb29vb29vb09PCiAgaWYgODcgLSA4Nzogb29PTzAwb09vICUgb28KICBpZiA3NyAtIDc3OiBpSWlpMUkxMUkxSUkxIC0gaTFJSWkgLiBpaWlpSWkxMWkKIGlJaTFpSUlJaUlpSSA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICdSR0ZzZG1sckx6RXVOaTR3SUNoTWFXNTFlRHNnVlRzZ1FXNWtjbTlwWkNBbGN6c2dKWE1nUW5WcGJHUXZKWE1wJyApICUgKCByYW5kb20gLiBjaG9pY2UgKCBJMWkxMSApICwgcmFuZG9tIC4gY2hvaWNlICggT29PT29PMG9PbyApICwgJycgLiBqb2luICggcmFuZG9tIC4gU3lzdGVtUmFuZG9tICggKSAuIGNob2ljZSAoIHN0cmluZyAuIGFzY2lpX2xldHRlcnMgKSBmb3IgXyBpbiByYW5nZSAoIGludCAoIHJhbmRvbSAuIHJhbmRvbSAoICkgKiAxNSApICkgKSApCiBpZiA2MiAtIDYyOiBpMTFpSWlpSWlpICUgSUkxMWlpSUkgLiBvb29PMG9vMG9PT09PIC4gSUkxMWlpSUkKIHJldHVybiBpSWkxaUlJSWlJaUkKIGlmIDg0IC0gODQ6IGkxMWlJaWlJaWkgKiBvb09PMDBvT28KIGlmIDE4IC0gMTg6IElJMTFpaUlJIC0gbzAwMDBvT29Pb08wbyAtIG9PbzBPME9vbyAvIG8wb28wbyAtIE8wCmRlZiBJMWkxMTFJaUlpSWkxICggKSA6CiBJaTFpSWkxMTFpMWkxID0gJ0Zhc3RkYXRhLmpzb24nCiBJaTFpSWkxMTFpMWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgSWkxaUlpMTExaTFpMSApCiB0cnkgOgogIG9vME8wbyA9IGkxMTFpMWkgKCBJaTFpSWkxMTFpMWkxICwgMiAqIDYwICogNjAgKQogIGlmIG5vdCBvbzBPMG8gPT0gTm9uZSA6CiAgIGlmIDMwIC0gMzA6IE8wICsgb09vTzBvbzBPT09vICsgSUkxMTFpaWlpCiAgIHJldHVybiBqc29uIC4gbG9hZHMgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCBvbzBPMG8gKSApCiBleGNlcHQgOgogIHByaW50ICdmaWxlIGdldHRpbmcgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgaWYgMTQgLSAxNDogT29vMDBvT28wMG8gLyBJSTExaWlJSSAtIGlJaWkxSTExSTFJSTEgLSBpaWlpSWkxMWkgJSBPbwogaUlpMWlJSUlpSWlJID0gaUlJSWlJaTFJMWkgKCApCiBpZiA0OSAtIDQ5OiBPbyAqIGlpaWlJaTExaSAvIE9vbzAwb09vMDBvIC8gT29PME8wMCAqIGlJaWkxSTExSTFJSTEKIGlmIDU3IC0gNTc6IG9PbzBPME9vbyAtIGlpaWlJaTExaSAvIE9vICUgaTExaUlpaUlpaQogaWYgMyAtIDM6IGkxSTFpaTFJSTFpSUkgLiBPbyAlIG9vICsgb09vTzBvbzBPT09vCiBpMWlpMTExMWkxaSA9IFsgKCAnVXNlci1BZ2VudCcgLCBpSWkxaUlJSWlJaUkgKSAsICggJ0F1dGhvcml6YXRpb24nICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1FtRnphV01nVlROa2NGcHVVazlhV0dNMlVVWk9NMkZYV2pCVWJWWXpVVUU5UFE9PScgKSApIF0KIE9Pb09PMG9vMG9vTyA9IGkxaWlJMTFJICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDNOM2FXWjBjM1J5WldGdGVpNWpiMjB2VTNkcFpuUlRkSEpsWVcxNkwzTjNhV1owYzNSeVpXRnRlaTV3YUhBPScgKSAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiBpZiA2NCAtIDY0OiBpMUlJaQogb28wTzBvID0gTm9uZQogdHJ5IDoKICBwcmludCAnbGluaycgLCBPT29PTzBvbzBvb08KICBPT29PTzBvbzBvb08gPSBPT29PTzBvbzBvb08gLiByZXBsYWNlICggJ1x4MGEnICwgJycgKSAuIHJlcGxhY2UgKCAnXHQnICwgJycgKQogIG9vME8wbyA9IGpzb24gLiBsb2FkcyAoIE9Pb09PMG9vMG9vTyApCiAgT09PMG8wT08wT08gKCBiYXNlNjQgLiBiNjRlbmNvZGUgKCBPT29PTzBvbzBvb08gKSAsIElpMWlJaTExMWkxaTEgKQogZXhjZXB0IDoKICBwcmludCAnZ2V0RmFzdERhdGEgZmlsZSBzYXZpbmcgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiByZXR1cm4gb28wTzBvCiBpZiAyOSAtIDI5OiBPb28wMG9PbzAwbyAvIGkxMWlJaWlJaWkgLyBvbyAlIGlpaWlJaTExaSAlIGkxMWlJaWlJaWkKZGVmIGkxMTFJSSAoIGFwcHR5cGUgKSA6CiBJaTFpSWkxMTFpMWkxID0gJ05ldHdvcmtkYXRhMiVzLmpzb24nICUgc3RyICggYXBwdHlwZSApCiBJaTFpSWkxMTFpMWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgSWkxaUlpMTExaTFpMSApCiB0cnkgOgogIG9vME8wbyA9IGkxMTFpMWkgKCBJaTFpSWkxMTFpMWkxICwgMzAgKiA2MCApCiAgaWYgbm90IG9vME8wbyA9PSBOb25lIDoKICAgcmV0dXJuIGpzb24gLiBsb2FkcyAoIGJhc2U2NCAuIGI2NGRlY29kZSAoIG9vME8wbyApICkKIGV4Y2VwdCA6CiAgcHJpbnQgJ2ZpbGUgZ2V0dGluZyBlcnJvcicKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICBpZiA2MyAtIDYzOiBvbyAtIG9vT08wMG9PbyAlIGkxSTFpaTFJSTFpSUkgJSBPb09PMG9vT09vbzBPIC8gT29vMDBvT28wMG8gLyBpMUlJaQogaUlpMWlJSUlpSWlJID0gaUlJSWlJaTFJMWkgKCApCiBpZiA2OSAtIDY5OiBPb08wTzAwICogSUkxMTFpaWlpICogT28gLiBpMUkxaWkxSUkxaUlJIC0gb09vTzBvbzBPT09vCiBpZiAzOSAtIDM5OiBvMDAwMG9Pb09vTzBvICogb28gJSBvb09PMDBvT28gLiBvT28wTzBPb28KIGlmIDI0IC0gMjQ6IGkxSUlpICogaUlpaTFJMTFJMUlJMSAvIG8wMDAwb09vT29PMG8KIGlmIGFwcHR5cGUgPT0gMSA6CiAgaTFpaTExMTFpMWkgPSBbICggJ1VzZXItQWdlbnQnICwgaUlpMWlJSUlpSWlJICkgLCAoICdBdXRob3JpemF0aW9uJyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdRbUZ6YVdNZ1ZUSTVjMkZYVWxSa1NFcHNXVmN4Tms5clFXaFZNamx6WVZkU1ZHUklTbXhaVnpFMlNWVkJQUT09JyApICkgXQogIE9Pb09PMG9vMG9vTyA9IGkxaWlJMTFJICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDNOdmJHbGtjM1J5WldGdGVpNWpiMjB2YzI5c2FXUmtZWFJoTG5Cb2NBPT0nICkgLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgLCBwb3N0ID0gJycgKQogZWxzZSA6CiAgaTFpaTExMTFpMWkgPSBbICggJ1VzZXItQWdlbnQnICwgaUlpMWlJSUlpSWlJICkgLCAoICdBdXRob3JpemF0aW9uJyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdRbUZ6YVdNZ1ZVWlNWMVV4UWxCVmJGSlVUMmxGYkVwVFJsUlZSVGxUVmtaT2QyUklXV2hLVTFWbycgKSApIF0KICBPT29PTzBvbzBvb08gPSBpMWlpSTExSSAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyRndhUzV6YjJ4cFpIaDBjbVZoYlM1amIyMHZjSFIyYzNCdmNuUXZjSFIyWkdGMFlTNXdhSEE9JyApICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICwgcG9zdCA9ICcnICkKICBpZiA3OCAtIDc4OiBpMTFpSWlpSWlpICsgT29vMDBvT28wMG8gKyBvMG9vMG8gLyBPb28wMG9PbzAwbyAlIGlJaWkxSTExSTFJSTEgJSBvb29PMG9vMG9PT09PCiBvbzBPMG8gPSBOb25lCiB0cnkgOgogIHByaW50IE9Pb09PMG9vMG9vTwogIE9vME8wT28wME8gPSBPT29PTzBvbzBvb08gWyA6IDIgXSArIE9Pb09PMG9vMG9vTyBbIDMgOiBdCiAgcHJpbnQgT28wTzBPbzAwTwogIG9vME8wbyA9IGpzb24gLiBsb2FkcyAoIGJhc2U2NCAuIGI2NGRlY29kZSAoIE9vME8wT28wME8gKSAuIHJlcGxhY2UgKCAiXG4iICwgIiIgKSApCiAgT09PMG8wT08wT08gKCBPbzBPME9vMDBPICwgSWkxaUlpMTExaTFpMSApCiBleGNlcHQgOgogIHByaW50ICdnZXROZXR3b3JrVFZEYXRhMiBkZWMgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiByZXR1cm4gb28wTzBvCiBpZiA5IC0gOTogT29vMDBvT28wMG8gLiBvbyAtIG9Pb08wb28wT09PbwogaWYgMzIgLSAzMjogT29vb29vb29PTyAvIG9vIC8gaUlpaTFJMTFJMUlJMSArIElJMTExaWlpaSAuIGlpaWlJaTExaSAuIE9vbzAwb09vMDBvCiBpZiAyMSAtIDIxOiBpSWlpMUkxMUkxSUkxIC8gSUkxMTFpaWlpICUgaTFJSWkKZGVmIElJaUkxaSAoICkgOgogSWkxaUlpMTExaTFpMSA9ICdOZXR3b3JrZGF0YS5qc29uJwogSWkxaUlpMTExaTFpMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPME9PbyAsIElpMWlJaTExMWkxaTEgKQogdHJ5IDoKICBvbzBPMG8gPSBpMTExaTFpICggSWkxaUlpMTExaTFpMSAsIDMwICogNjAgKQogIGlmIG5vdCBvbzBPMG8gPT0gTm9uZSA6CiAgIHJldHVybiBqc29uIC4gbG9hZHMgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCBvbzBPMG8gKSApIFsgImRhdGEiIF0gWyAwIF0KIGV4Y2VwdCA6CiAgcHJpbnQgJ2ZpbGUgZ2V0dGluZyBlcnJvcicKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICBpZiA2IC0gNjogb09vTzBvbzBPT09vIC8gaTFJMWlpMUlJMWlJSSAtIElJMTFpaUlJCiBpMWlpMTExMWkxaSA9IFsgKCAnYXBwbGljYXRpb24taWQnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1FVWXhNa1kwTjBZdE1FTTVReTB6UWtNeExVWkdOa1l0Tnprek5VVXdRekJEUXpBdycgKSApICwgKCAnc2VjcmV0LWtleScgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnTVRBelEwSkZOa1l0TkVZeU1pMHlSVGxDTFVaR1F6RXRNalZDUlVORU0wUXlSakF3JyApICkgLCAoICdhcHBsaWNhdGlvbi10eXBlJyAsICdSRVNUJyApIF0KIE9Pb09PMG9vMG9vTyA9IGkxaWlJMTFJICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjSE02THk5aGNHa3VZbUZqYTJWdVpHeGxjM011WTI5dEwzWXhMMlJoZEdFdlFYQndRMjl1Wm1sblFXeHdhR0U9JyApICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKIG9vME8wbyA9IE5vbmUKIHRyeSA6CiAgb28wTzBvID0ganNvbiAuIGxvYWRzICggT09vT08wb28wb29PIC4gcmVwbGFjZSAoICdceDBhJyAsICcnICkgKQogIGlmIDYyIC0gNjI6IE9vT08wb29PT29vME8gJSBJSTExaWlJSQogIE9PTzBvME9PME9PICggYmFzZTY0IC4gYjY0ZW5jb2RlICggT09vT08wb28wb29PICkgLCBJaTFpSWkxMTFpMWkxICkKIGV4Y2VwdCA6CiAgcHJpbnQgJ2dldEZhc3REYXRhIGZpbGUgc2F2aW5nIGVycm9yJwogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcmV0dXJuIG9vME8wbyBbICJkYXRhIiBdIFsgMCBdCiBpZiA1NCAtIDU0OiBvT28wTzBPb28gJSBpMUkxaWkxSUkxaUlJIC4gb09vME8wT29vICogSUkxMWlpSUkgKyBvT28wTzBPb28gJSBpMUlJaQogaWYgMjMgLSAyMzogbzBvbzBvIC0gSUkxMWlpSUkgKyBvMDAwMG9Pb09vTzBvIC0gb09vME8wT29vICogb09vME8wT29vIC4gT29PME8wMAogaWYgNDcgLSA0NzogaWlpaUlpMTFpICUgaUlpaTFJMTFJMUlJMQpkZWYgSWlJMUlJSUlJMUkgKCApIDoKIElpMWlJaTExMWkxaTEgPSAnTmV0d29ya2RhdGEuanNvbicKIElpMWlJaTExMWkxaTEgPSBvcyAuIHBhdGggLiBqb2luICggTzBPT28gLCBJaTFpSWkxMTFpMWkxICkKIHRyeSA6CiAgb28wTzBvID0gaTExMWkxaSAoIElpMWlJaTExMWkxaTEgLCA2MCAqIDYwICkKICBpZiBub3Qgb28wTzBvID09IE5vbmUgOgogICByZXR1cm4ganNvbiAuIGxvYWRzICggYmFzZTY0IC4gYjY0ZGVjb2RlICggb28wTzBvICkgKQogZXhjZXB0IDoKICBwcmludCAnZmlsZSBnZXR0aW5nIGVycm9yJwogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogIGlmIDM1IC0gMzU6IG8wMDAwb09vT29PMG8gLSBvMDAwMG9Pb09vTzBvICsgaTFJSWkgLSBPMCAtIG8wb28wbwogb28wT09vT29vME8wTyA9ICd7InJldHVyblNlY3VyZVRva2VuIjp0cnVlfScKIGlmIDU4IC0gNTg6IG9PbzBPME9vbyAtIGkxSTFpaTFJSTFpSUkgLSBPb29vb29vb09PCiBpZiA5NiAtIDk2OiBpSWlpMUkxMUkxSUkxCiBpZiA4MiAtIDgyOiBvT28wTzBPb28gKyBPMCAtIG9vb08wb28wb09PT08gJSBpaWlpSWkxMWkgKiBpMTFpSWlpSWlpCiBpZiAxNSAtIDE1OiBPb28wMG9PbzAwbwogaTFpaTExMTFpMWkgPSBbICggJ1gtQW5kcm9pZC1QYWNrYWdlJyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdZMjl0TG14cGRtVnVaWFF1YVhCMGRnPT0nICkgKSAsICggJ1gtQW5kcm9pZC1DZXJ0JyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdNRU0xUkRCRFJFSTNRelUxTVRGRE56RTRNVFkwT1RRMU9UYzJNRFk0TVRnNVFVVTBRekpFTUE9PScgKSApIF0KIGlmIDM5IC0gMzk6IElJMTFpaUlJIC8gb09vTzBvbzBPT09vIC8gb28gKiBvMG9vMG8KIElpaTFJaSA9IGkxaWlJMTFJICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjSE02THk5M2QzY3VaMjl2WjJ4bFlYQnBjeTVqYjIwdmFXUmxiblJwZEhsMGIyOXNhMmwwTDNZekwzSmxiSGxwYm1kd1lYSjBlUzl6YVdkdWRYQk9aWGRWYzJWeVAydGxlVDFCU1hwaFUzbEVkRUZJYVhseGEzWmFUMDlyZVVSTmRqTlFiMVIwZFZJNWJ6VkVOMVZ4ZW5jPScgKSAsIHBvc3QgPSBvbzBPT29Pb28wTzBPICwganNvbnBvc3QgPSBUcnVlICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKIGlmIDMwIC0gMzA6IE8wIC0gaTFJMWlpMUlJMWlJSSAlIE9vTzBPMDAKIHByaW50IElpaTFJaQogSWlpMUlpID0ganNvbiAuIGxvYWRzICggSWlpMUlpICkKIGlmIDg3IC0gODc6IE9vT08wb29PT29vME8gLyBvbyArIE9vTzBPMDAgKyBJSTExaWlJSSAtIE9vb29vb29vT08gKyBPb08wTzAwCiBPT29PTzBvbzBvb08gPSBpMWlpSTExSSAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0hNNkx5OXNhWFpsYm1WMExXbHdkSFl1Wm1seVpXSmhjMlZwYnk1amIyMHZRWEJ3UTI5dVptbG5RV3h3YUdFdWFuTnZiajl3Y21sdWREMXdjbVYwZEhrbVlYVjBhRDBsY3c9PScgKSAlIElpaTFJaSBbICJpZFRva2VuIiBdICkKIG9vME8wbyA9IE5vbmUKIHRyeSA6CiAgb28wTzBvID0ganNvbiAuIGxvYWRzICggT09vT08wb28wb29PIC4gcmVwbGFjZSAoICdceDBhJyAsICcnICkgKQogIGlmIDkzIC0gOTM6IE9vIC4gaUlpaTFJMTFJMUlJMSAlIGkxMWlJaWlJaWkgLiBvT28wTzBPb28gJSBPbyArIE8wCiAgT09PMG8wT08wT08gKCBiYXNlNjQgLiBiNjRlbmNvZGUgKCBPT29PTzBvbzBvb08gKSAsIElpMWlJaTExMWkxaTEgKQogZXhjZXB0IDoKICBwcmludCAnZ2V0RmFzdERhdGEgZmlsZSBzYXZpbmcgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiByZXR1cm4gb28wTzBvCiBpZiA2NSAtIDY1OiBvMDAwMG9Pb09vTzBvICsgb29PTzAwb09vIC0gT29vb29vb29PTwogaWYgNTEgLSA1MTogT29PME8wMCArIGlpaWlJaTExaSAvIGkxSTFpaTFJSTFpSUkgLSBpMUlJaQpkZWYgb08wTzBvTzAgKCApIDoKIElpMWlJaTExMWkxaTEgPSAnZm9vdGJhbGxkYXRhLmpzb24nCiBJaTFpSWkxMTFpMWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgSWkxaUlpMTExaTFpMSApCiB0cnkgOgogIG9vME8wbyA9IGkxMTFpMWkgKCBJaTFpSWkxMTFpMWkxICwgMiAqIDYwICogNjAgKQogIGlmIG5vdCBvbzBPMG8gPT0gTm9uZSA6CiAgIHJldHVybiBqc29uIC4gbG9hZHMgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCBvbzBPMG8gKSApCiBleGNlcHQgOgogIHByaW50ICdmaWxlIGdldHRpbmcgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgaWYgMTUgLSAxNTogT28gKiBvT28wTzBPb28gJSBvb29PMG9vMG9PT09PIC4gb09vME8wT29vIC4gT29PTzBvb09Pb28wTwogIGlmIDk3IC0gOTc6IGlpaWlJaTExaQogb28wT09vT29vME8wTyA9IE8wT28wICggKQogb28wT09vT29vME8wTyA9IHVybGxpYiAuIHVybGVuY29kZSAoIG9vME9Pb09vbzBPME8gKQogaTFpaTExMTFpMWkgPSBbICggJ1VzZXItQWdlbnQnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1RHbDJaU0JHYjI5MFltRnNiQ0J2YmlCVVZpQXpMakF1TVNBb2FWQm9iMjVsT3lCcFVHaHZibVVnVDFNZ09TNHdMakk3SUdWdVgwZENLUT09JyApICkgXQogT09vT08wb28wb29PID0gaTFpaUkxMUkgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMMmRoYldWelpYSjJhV05sY3k1eWFXOXRiM1JwY3k1amIyMHZZWEJwTDJOdmJtWnBaeTg9JyApICwgcG9zdCA9IG9vME9Pb09vbzBPME8gLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogaWYgODAgLSA4MDogb28gLiBvMDAwMG9Pb09vTzBvCiBvbzBPMG8gPSBOb25lCiB0cnkgOgogIG9vME8wbyA9IGpzb24gLiBsb2FkcyAoIE9Pb09PMG9vMG9vTyApCiAgT09PMG8wT08wT08gKCBiYXNlNjQgLiBiNjRlbmNvZGUgKCBPT29PTzBvbzBvb08gKSAsIElpMWlJaTExMWkxaTEgKQogZXhjZXB0IDoKICBwcmludCAnZ2V0Rm9vdGJhbGxEYXRhIGZpbGUgc2F2aW5nIGVycm9yJwogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcmV0dXJuIG9vME8wbwogaWYgNDcgLSA0NzogT29PTzBvb09Pb28wTyArIE9vICsgSUkxMTFpaWlpICUgaTExaUlpaUlpaQogaWYgOTMgLSA5Mzogb09vTzBvbzBPT09vICUgb09vME8wT29vIC4gTzAgLyBpMUkxaWkxSUkxaUlJICogaWlpaUlpMTFpCmRlZiBpMWlpaTFpaSAoICkgOgogb08wID0gWyBdCiB0cnkgOgogIGlmIDE4IC0gMTg6IG9vT08wMG9PbyAuIElJMTExaWlpaSAlIG9PbzBPME9vbyAlIG8wMDAwb09vT29PMG8KICBvbzBPMG8gPSBvTzBPMG9PMCAoICkKICBmb3IgT29vMG9vIGluIG9vME8wbyBbICJjb21wZXRpdGlvbnMiIF0gOgogICBvME9JaUlJID0gT29vMG9vIFsgIm5hbWUiIF0KICAgbzBvME8gPSAiQ00sIiArIE9vbzBvbyBbICJpZCIgXSArICcsMCcKICAgSUlJSUlpaTFpaTExID0gT29vMG9vIFsgImxvZ28iIF0KICAgT09Pb29vME9vb09vTyA9IE9vbzBvbyBbICJwb3B1bGFyX3BvaW50IiBdCiAgIG9PMCAuIGFwcGVuZCAoICggbzBPSWlJSSAsICdtYW51YWwnICwgbzBvME8gLCBJSUlJSWlpMWlpMTEgLCBPT09vb28wT29vT29PICkgKQogZXhjZXB0IDoKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIGlmIGxlbiAoIG9PMCApID4gMCA6CiAgb08wID0gc29ydGVkICggb08wICwga2V5ID0gbGFtYmRhIEkxaTExIDogaW50ICggSTFpMTEgWyA0IF0gKSApCiByZXR1cm4gb08wCiBpZiA4NyAtIDg3OiBpSWlpMUkxMUkxSUkxIC4gT29vb29vb29PTyAqIG9PbzBPME9vbwpkZWYgT09PbyAoIHVybCA9IE5vbmUgKSA6CiB0cnkgOgogIE8wMDBPTzAgKCAnUmVjZW50IEZvb3RiYWxsIEhpZ2hsaWdodHMvTGl2ZSBTdHJlYW1zJyAsICdITCwwLDAnICwgODcgLCAnJyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBUcnVlICkKICBPMDAwT08wICggJ1JlY2VudCBGb290YmFsbCBWaWRlb3MgW05vdCBBbGwgV29ya2luZ10nICwgJ1ZELDAsMCcgLCA4OCAsICcnICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IFRydWUgKQogIE9vb09vMG9vME8wbzAwTyA9IGkxaWlpMWlpICggKQogIGlmIGxlbiAoIE9vb09vMG9vME8wbzAwTyApID4gMCA6CiAgIGZvciBvME9JaUlJICwgSWlpaUlpaUkgLCBvMG8wTyAsIG9vb29PMG9Pb09Pb08gLCBPT09vb28wT29vT29PIGluIE9vb09vMG9vME8wbzAwTyA6CiAgICBvME9JaUlJID0gbzBPSWlJSSAuIGVuY29kZSAoICdhc2NpaScgLCAnaWdub3JlJyApIC4gZGVjb2RlICggJ2FzY2lpJyApCiAgICBPMDAwT08wICggSTExSUlpSWlJICggbzBPSWlJSSAsICdibHVlJyApICwgJycgLCAwICwgb29vb08wb09vT09vTyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBUcnVlICkKICAgIE8wMDBPTzAgKCAnICAgLUhpZ2hsaWdodHMvTGl2ZSBTdHJlYW1zJyAsIG8wbzBPICwgODcgLCBvb29vTzBvT29PT29PICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IFRydWUgKQogICAgTzAwME9PMCAoICcgICAtVmlkZW9zJyAsIG8wbzBPICwgODggLCBvb29vTzBvT29PT29PICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IFRydWUgKQogZXhjZXB0IDoKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICBpZiA3NCAtIDc0OiBvMDAwMG9Pb09vTzBvIC0gT29vb29vb29PTyAuIE9vTzBPMDAKZGVmIElJSTFJaTFpMUkxICggdXJsICkgOgogb08wID0gWyBdCiBPME8wME9vb08gPSBOb25lCiB0cnkgOgogIEkxSWlJMWlJMTEgPSBvTzBPMG9PMCAoICkKICBvbzBPT29Pb28wTzBPID0gTzBPbzAgKCApCiAgaUlpaWkgLCBPME8wbzBvTzBPMDAgLCBvME8wb08wID0gdXJsIC4gc3BsaXQgKCAnLCcgKQogIG9vME9Pb09vbzBPME8gWyAndG90YWwnIF0gPSAxNgogIG9vME9Pb09vbzBPME8gWyAnZnJvbV9pbmRleCcgXSA9IG8wTzBvTzAKICBpZiA3NyAtIDc3OiBPMCAuIG8wMDAwb09vT29PMG8KICBPME8wME9vb08gPSBpSWlpaSArICcsJyArIE8wTzBvMG9PME8wMCArICIsIiArIHN0ciAoIGludCAoIG8wTzBvTzAgKSArIDE2ICkKICBpZiB1cmwgLiBzdGFydHN3aXRoICggIlZELCIgKSA6CiAgIGkxaTFJaUlpMSA9IEkxSWlJMWlJMTEgWyAiQVBJX1VSTFMiIF0gWyBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiUjBWVVgweEJVMVJGVTFSZlZrbEVSVTg9IiApIF0KICBlbHNlIDoKICAgaTFpMUlpSWkxID0gSTFJaUkxaUkxMSBbICJBUElfVVJMUyIgXSBbIGJhc2U2NCAuIGI2NGRlY29kZSAoICJSMFZVWDFaSlJFVlBYMEpaWDBOUFRWQkZWRWxVU1U5T1gwbEUiICkgXQogICBvbzBPT29Pb28wTzBPIFsgJ2NvbXBldGl0aW9uX2lkJyBdID0gTzBPMG8wb08wTzAwCiAgIGlmIDIyIC0gMjI6IE9vT08wb29PT29vME8gKiBPMCAuIElJMTExaWlpaSAtIG9vT08wMG9PbwogIG9vME9Pb09vbzBPME8gPSB1cmxsaWIgLiB1cmxlbmNvZGUgKCBvbzBPT29Pb28wTzBPICkKICBpMWlpMTExMWkxaSA9IFsgKCAnVXNlci1BZ2VudCcgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnVEdsMlpTQkdiMjkwWW1Gc2JDQnZiaUJVVmlBekxqQXVNU0FvYVZCb2IyNWxPeUJwVUdodmJtVWdUMU1nT1M0d0xqSTdJR1Z1WDBkQ0tRPT0nICkgKSBdCiAgaWYgOTAgLSA5MDogaWlpaUlpMTFpCiAgb28wTzBvID0ganNvbiAuIGxvYWRzICggaTFpaUkxMUkgKCBpMWkxSWlJaTEgLCBwb3N0ID0gb28wT09vT29vME8wTyAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApICkKICBpbXBvcnQgZGF0ZXRpbWUKICBpZiA5NCAtIDk0OiBPb09PMG9vT09vbzBPIC8gb09vTzBvbzBPT09vICogbzBvbzBvIC0gb09vME8wT29vCiAgaWYgNDQgLSA0NDogbzAwMDBvT29Pb08wbyAlIGkxMWlJaWlJaWkgLSBpMUkxaWkxSUkxaUlJICogb09vTzBvbzBPT09vICsgT29PME8wMCAqIElJMTFpaUlJCiAgZm9yIE9vbzBvbyBpbiBvbzBPMG8gWyAidmlkZW9zIiBdIDoKICAgSWlJMWlJMUlpaUlpMSA9IE9vbzBvbyBbICJkYXRlIiBdIC8gMTAwMAogICBJaUkxaUkxSWlpSWkxID0gZGF0ZXRpbWUgLiBkYXRldGltZSAuIGZyb210aW1lc3RhbXAgKCBpbnQgKCBJaUkxaUkxSWlpSWkxICkgKSAuIHN0cmZ0aW1lICggJyVZLSVtLSVkJyApCiAgIG8wT0lpSUkgPSBJaUkxaUkxSWlpSWkxICsgJyAnICsgT29vMG9vIFsgInRpdGxlIiBdCiAgIE9vTzBvbyA9IE9vbzBvbyBbICJ2aWRlb19saW5rIiBdIFsgMCBdIFsgIm1lZGlhX3VybCIgXQogICBPb09vTzBPID0gT29vMG9vIFsgInZpZGVvX2xpbmsiIF0gWyAwIF0gWyAibWVkaWFfdHlwZSIgXQogICBvMG8wTyA9IE9vT29PME8gKyAnLCcgKyBiYXNlNjQgLiBiNjRlbmNvZGUgKCBPb08wb28gKQogICBJSUlJSWlpMWlpMTEgPSBPb28wb28gWyAidGh1bWJuYWlsIiBdCiAgIG9PMCAuIGFwcGVuZCAoICggbzBPSWlJSSAsICdtYW51YWwnICwgbzBvME8gLCBJSUlJSWlpMWlpMTEgKSApCiBleGNlcHQgOgogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcmV0dXJuIG9PMCAsIE8wTzAwT29vTwogaWYgMTAwIC0gMTAwOiBPMApkZWYgbzAwSWlJMWlpSUkxaTFpICggdXJsICkgOgogdHJ5IDoKICBPb29PbzBvbzBPMG8wME8gLCBPME8wME9vb08gPSBJSUkxSWkxaTFJMSAoIHVybCApCiAgaWYgbGVuICggT29vT28wb28wTzBvMDBPICkgPiAwIDoKICAgZm9yIG8wT0lpSUkgLCBJaWlpSWlpSSAsIG8wbzBPICwgb29vb08wb09vT09vTyBpbiBPb29PbzBvbzBPMG8wME8gOgogICAgbzBPSWlJSSA9IG8wT0lpSUkgLiBlbmNvZGUgKCAnYXNjaWknICwgJ2lnbm9yZScgKSAuIGRlY29kZSAoICdhc2NpaScgKQogICAgTzAwME9PMCAoIG8wT0lpSUkgLCBvMG8wTyAsIDkxICwgb29vb08wb09vT09vTyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBUcnVlICkKICBpZiBPME8wME9vb08gOgogICBPMDAwT08wICggJ05leHQgUGFnZScgLCBPME8wME9vb08gLCBpMUlpSSAsICcnICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IFRydWUgKQogZXhjZXB0IDoKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICBpZiA4MiAtIDgyOiBvT28wTzBPb28KICBpZiA4MCAtIDgwOiBvb09PMDBvT28gJSBpMUkxaWkxSUkxaUlJCmRlZiBPME9vME9Pb29PME9PMCAoIHVybCApIDoKIG9PMCA9IFsgXQogTzBPMDBPb29PID0gTm9uZQogdHJ5IDoKICBJMUlpSTFpSTExID0gb08wTzBvTzAgKCApCiAgb28wT09vT29vME8wTyA9IE8wT28wICggKQogIGlJaWlpICwgTzBPMG8wb08wTzAwICwgbzBPMG9PMCA9IHVybCAuIHNwbGl0ICggJywnICkKICBvbzBPT29Pb28wTzBPIFsgJ3RvdGFsJyBdID0gMTYKICBvbzBPT29Pb28wTzBPIFsgJ2Zyb21faW5kZXgnIF0gPSBvME8wb08wCiAgaWYgNSAtIDU6IGkxSTFpaTFJSTFpSUkKICBPME8wME9vb08gPSBpSWlpaSArICcsJyArIE8wTzBvMG9PME8wMCArICIsIiArIHN0ciAoIGludCAoIG8wTzBvTzAgKSArIDE2ICkKICBpZiB1cmwgLiBzdGFydHN3aXRoICggIkhMLCIgKSA6CiAgIGkxaTFJaUlpMSA9IEkxSWlJMWlJMTEgWyAiQVBJX1VSTFMiIF0gWyBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiUjBWVVgweEJVMVJGVTFSZlNFbEhTRXhKUjBoVSIgKSBdCiAgZWxzZSA6CiAgIGkxaTFJaUlpMSA9IEkxSWlJMWlJMTEgWyAiQVBJX1VSTFMiIF0gWyBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiUjBWVVgwaEpSMGhNU1VkSVZGOUNXVjlEVDAxUVJWUkpWRWxQVGw5SlJBPT0iICkgXQogICBvbzBPT29Pb28wTzBPIFsgJ2NvbXBldGl0aW9uX2lkJyBdID0gTzBPMG8wb08wTzAwCiAgIGlmIDYyIC0gNjI6IG9PbzBPME9vbyAuIE9vb29vb29vT08gLiBJSTExaWlJSSAuIG9vT08wMG9PbyAqIGkxSTFpaTFJSTFpSUkKICBvbzBPT29Pb28wTzBPID0gdXJsbGliIC4gdXJsZW5jb2RlICggb28wT09vT29vME8wTyApCiAgaTFpaTExMTFpMWkgPSBbICggJ1VzZXItQWdlbnQnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1RHbDJaU0JHYjI5MFltRnNiQ0J2YmlCVVZpQXpMakF1TVNBb2FWQm9iMjVsT3lCcFVHaHZibVVnVDFNZ09TNHdMakk3SUdWdVgwZENLUT09JyApICkgXQogIGlmIDc4IC0gNzg6IGlpaWlJaTExaSAvIG9vT08wMG9PbyAtIGlpaWlJaTExaSAqIE9vb29vb29vT08gLiBvT28wTzBPb28KICBvbzBPMG8gPSBqc29uIC4gbG9hZHMgKCBpMWlpSTExSSAoIGkxaTFJaUlpMSAsIHBvc3QgPSBvbzBPT29Pb28wTzBPICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkgKQogIGltcG9ydCBkYXRldGltZQogIGlmIDk2IC0gOTY6IG9vICUgaTFJSWkgLiBPb28wMG9PbzAwbyAuIE8wCiAgaWYgMzcgLSAzNzogaTFJSWkgLSBJSTExaWlJSSAlIE9vb29vb29vT08gLyBJSTExaWlJSSAlIE9vCiAgZm9yIE9vbzBvbyBpbiBvbzBPMG8gWyAibWF0Y2hzIiBdIDoKICAgSWlJMWlJMUlpaUlpMSA9IE9vbzBvbyBbICJkYXRlIiBdIC8gMTAwMAogICBJaUkxaUkxSWlpSWkxID0gZGF0ZXRpbWUgLiBkYXRldGltZSAuIGZyb210aW1lc3RhbXAgKCBpbnQgKCBJaUkxaUkxSWlpSWkxICkgKSAuIHN0cmZ0aW1lICggJyVZLSVtLSVkJyApCiAgIGlpSWlJSTExaTEgPSAiZ3JlZW4iCiAgIG9PbzAwT29vMG8wID0gIiIKICAgbzBvME8gPSBiYXNlNjQgLiBiNjRlbmNvZGUgKCBqc29uIC4gZHVtcHMgKCBPb28wb28gKSApCiAgIGlmIE9vbzBvbyBbICJpc19saXZlX3N0cmVhbWluZyIgXSA6CiAgICBpaUlpSUkxMWkxID0gImJsdWUiCiAgICBvT28wME9vbzBvMCA9ICJsaXZlIgogICAgbzBvME8gPSBPb28wb28gWyAiaGlnaGxpZ2h0IiBdIFsgMCBdIFsgIm1lZGlhX3VybCIgXQogICBvME9JaUlJID0gSTExSUlpSWlJICggSWlJMWlJMUlpaUlpMSArICcgJyArIE9vbzBvbyBbICJob21lX3RlYW0iIF0gWyAibmFtZSIgXSArICcgJyArIHN0ciAoIE9vbzBvbyBbICJob21lX3Njb3JlIiBdICkgKyAnLScgKyBzdHIgKCBPb28wb28gWyAiZ3Vlc3Rfc2NvcmUiIF0gKSArICcgJyArIE9vbzBvbyBbICJndWVzdF90ZWFtIiBdIFsgIm5hbWUiIF0gLCBpaUlpSUkxMWkxICkgKyAnXG4nICsgSTExSUlpSWlJICggT29vMG9vIFsgImNvbXBldGl0aW9uIiBdIFsgIm5hbWUiIF0gLCAncmVkJyApCiAgIGlmIDMzIC0gMzM6IE9vT08wb29PT29vME8KICAgSUlJSUlpaTFpaTExID0gT29vMG9vIFsgInNjcmVlbnNob3QiIF0KICAgaWYgODcgLSA4Nzogb09vME8wT29vIC8gb29vTzBvbzBvT09PTyArIGlJaWkxSTExSTFJSTEKICAgb08wIC4gYXBwZW5kICggKCBvME9JaUlJICwgb09vMDBPb28wbzAgLCBvMG8wTyAsIElJSUlJaWkxaWkxMSApICkKIGV4Y2VwdCA6CiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiByZXR1cm4gb08wICwgTzBPMDBPb29PCiBpZiA5MyAtIDkzOiBpSWlpMUkxMUkxSUkxICsgaWlpaUlpMTFpICUgT28KZGVmIGlpaTFJaUkxSTEgKCB1cmwgKSA6CiB0cnkgOgogIE9vb09vMG9vME8wbzAwTyAsIE8wTzAwT29vTyA9IE8wT28wT09vb08wT08wICggdXJsICkKICBpZiBsZW4gKCBPb29PbzBvbzBPMG8wME8gKSA+IDAgOgogICBmb3IgbzBPSWlJSSAsIElpaWlJaWlJICwgbzBvME8gLCBvb29vTzBvT29PT29PIGluIE9vb09vMG9vME8wbzAwTyA6CiAgICBvME9JaUlJID0gbzBPSWlJSSAuIGVuY29kZSAoICdhc2NpaScgLCAnaWdub3JlJyApIC4gZGVjb2RlICggJ2FzY2lpJyApCiAgICBpZiBJaWlpSWlpSSA9PSAibGl2ZSIgOgogICAgIE8wMDBPTzAgKCBvME9JaUlJICwgIkxJVkUsIiArIGJhc2U2NCAuIGI2NGVuY29kZSAoIG8wbzBPICkgLCA5MSAsIG9vb29PMG9Pb09Pb08gLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogICAgZWxzZSA6CiAgICAgTzAwME9PMCAoIG8wT0lpSUkgLCBvMG8wTyAsIDg5ICwgb29vb08wb09vT09vTyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBUcnVlICkKICBpZiBPME8wME9vb08gOgogICBPMDAwT08wICggJ05leHQgUGFnZScgLCBPME8wME9vb08gLCBpMUlpSSAsICcnICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IFRydWUgKQogZXhjZXB0IDoKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICBpZiA2NCAtIDY0OiBPbyAvIE8wICogb09vME8wT29vICogT28KZGVmIE8wMG9vICggdXJsICkgOgogdHJ5IDoKICBPb28wb28gPSBqc29uIC4gbG9hZHMgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCB1cmwgKSApCiAgT29PbzBvTzBvID0gWyBdCiAgZm9yIG8wT29PbzAwb29PIGluIE9vbzBvbyBbICJoaWdobGlnaHQiIF0gOgogICBPb09vMG9PMG8gLiBhcHBlbmQgKCAoIG8wT29PbzAwb29PIFsgIm1lZGlhX3VybCIgXSAsIG8wT29PbzAwb29PIFsgIm1lZGlhX3R5cGUiIF0gKSApCiAgZm9yIG8wT29PbzAwb29PIGluIE9vbzBvbyBbICJmdWxsbWF0Y2giIF0gOgogICBPb09vMG9PMG8gLiBhcHBlbmQgKCAoIG8wT29PbzAwb29PIFsgIm1lZGlhX3VybCIgXSAsIG8wT29PbzAwb29PIFsgIm1lZGlhX3R5cGUiIF0gKSApCiAgIGlmIDEwIC0gMTA6IE9vT08wb29PT29vME8gLyBPb09PMG9vT09vbzBPICogaTExaUlpaUlpaQogICBpZiA0NiAtIDQ2OiBvb09PMDBvT28gKiBPb08wTzAwICUgaWlpaUlpMTFpICsgTzAgKiBvb29PMG9vMG9PT09PCiAgIGlmIDM0IC0gMzQ6IG9vT08wMG9PbwogICBpZiAyNyAtIDI3OiBvMDAwMG9Pb09vTzBvIC0gTzAgJSBPb09PMG9vT09vbzBPICogbzBvbzBvIC4gb29vTzBvbzBvT09PTyAlIGlJaWkxSTExSTFJSTEKICBJaUlpMWkgPSBzZXQgKCApCiAgT29PbzBvTzBvID0gWyBvTzBPMG9PIGZvciBvTzBPMG9PIGluIE9vT28wb08wbyBpZiBvTzBPMG9PIFsgMCBdIG5vdCBpbiBJaUlpMWkgYW5kIG5vdCBJaUlpMWkgLiBhZGQgKCBvTzBPMG9PIFsgMCBdICkgXQogIElpSUlJID0gMAogIGlmIGxlbiAoIE9vT28wb08wbyApID4gMCA6CiAgIGZvciBvMG8wTyAsIElpaWlJaWlJIGluIE9vT28wb08wbyA6CiAgICBJaUlJSSArPSAxCiAgICBPMDAwT08wICggJ3ZpZGVvICMnICsgc3RyICggSWlJSUkgKSArICcgWyVzXScgJSBJaWlpSWlpSSAsIElpaWlJaWlJICsgJywnICsgYmFzZTY0IC4gYjY0ZW5jb2RlICggbzBvME8gKSAsIDkxICwgJycgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogZXhjZXB0IDoKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICBpZiAxMyAtIDEzOiBPb28wMG9PbzAwbyAlIGlpaWlJaTExaSAvIG8wb28wbyAlIG8wb28wbyAlIE8wCmRlZiBvMElpMSAoIHVybCA9IE5vbmUgKSA6CiB0cnkgOgogIE9vb09vMG9vME8wbzAwTyA9IGlJaTFJMSAoICkKICBpZiBsZW4gKCBPb29PbzBvbzBPMG8wME8gKSA+IDAgOgogICBmb3IgbzBPSWlJSSAsIElpaWlJaWlJICwgbzBvME8gLCBvb29vTzBvT29PT29PIGluIE9vb09vMG9vME8wbzAwTyA6CiAgICBvME9JaUlJID0gbzBPSWlJSSAuIGVuY29kZSAoICdhc2NpaScgLCAnaWdub3JlJyApIC4gZGVjb2RlICggJ2FzY2lpJyApCiAgICBpZiA1MCAtIDUwOiBpaWlpSWkxMWkgLSBPbyAvIGlJaWkxSTExSTFJSTEgLSBvb09PMDBvT28gKyBJSTExMWlpaWkgLSBPMAogICAgTzAwME9PMCAoIG8wT0lpSUkgLCBvMG8wTyAsIDg0ICwgb29vb08wb09vT09vTyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBUcnVlICkKIGV4Y2VwdCA6CiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgaWYgODggLSA4ODogaWlpaUlpMTFpICogb29PTzAwb09vCmRlZiBJSTExSSAoIHVybCApIDoKIG9PMCA9IFsgXQogdHJ5IDoKICBpZiAzMSAtIDMxOiBvMDAwMG9Pb09vTzBvCiAgaTFpaTExMTFpMWkgPSBbICggJ1VzZXItQWdlbnQnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2RtbGtaVzkxZEM4eUxqQWdLR2xRYUc5dVpUc2dhVTlUSURrdU1DNHlPeUJUWTJGc1pTOHlMakF3S1E9PScgKSApIF0KICBvb09Pb29vME9vID0gaTFpaUkxMUkgKCB1cmwgLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogIGkxMWlJSWkgPSB1cmwgLiBzcGxpdCAoICdhcHA9JyApIFsgMSBdIC4gc3BsaXQgKCAnJicgKSBbIDAgXQogIG9vME8wbyA9IGpzb24gLiBsb2FkcyAoIG9vT09vb28wT28gKQogIGZvciBPb28wb28gaW4gb28wTzBvIFsgInNob3dzIiBdIDoKICAgbzBPSWlJSSA9IE9vbzBvbyBbICJ0aXRsZSIgXQogICB0eXBlID0gODUKICAgaWYgbm90ICd2aWRlb0lkJyBpbiBPb28wb28gOgogICAgTzAwME8gPSBPb28wb28gWyAidGl0bGUiIF0gLiBsb3dlciAoICkgLiByZXBsYWNlICggJyAnICwgJ18nICkKICAgIG8wbzBPID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDNsMGVDNXRaUzl0YW5OdmJpOW5aWFJxYzI5dVAyNWhiV1U5SlhNbWMzUmhjblE5TUNaaGNIQTlKWE1tYldGNFBUSTFNQT09JyApICUgKCBPMDAwTyAsIGkxMWlJSWkgKQogICBlbHNlIDoKICAgIG8wbzBPID0gT29vMG9vIFsgInZpZGVvSWQiIF0KICAgIHR5cGUgPSAxMQogICAgbzBvME8gPSBiYXNlNjQgLiBiNjRlbmNvZGUgKCAnZGlyZWN0OnBsdWdpbjovL3BsdWdpbi52aWRlby55b3V0dWJlLz9hY3Rpb249cGxheV92aWRlbyZ2aWRlb2lkPSVzJyAlIG8wbzBPICkKICAgSUlJSUlpaTFpaTExID0gT29vMG9vIFsgImltYWdldXJsIiBdCiAgIGlmIG5vdCBJSUlJSWlpMWlpMTEgLiBzdGFydHN3aXRoICggJ2h0dHAnICkgOiBJSUlJSWlpMWlpMTEgPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMM2wwZUM1dFpTOXRhbk52Ymk5amIyNW1Mdz09JyApICsgSUlJSUlpaTFpaTExCiAgIG9PMCAuIGFwcGVuZCAoICggbzBPSWlJSSAsIHR5cGUgLCBvMG8wTyAsIElJSUlJaWkxaWkxMSApICkKIGV4Y2VwdCA6CiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiBpZiBsZW4gKCBvTzAgKSA+IDAgOgogIG9PMCA9IHNvcnRlZCAoIG9PMCAsIGtleSA9IGxhbWJkYSBJMWkxMSA6IEkxaTExIFsgMCBdIC4gbG93ZXIgKCApICkKIHJldHVybiBvTzAKIGlmIDE2IC0gMTY6IG9vIC4gaUlpaTFJMTFJMUlJMQpkZWYgaWlpSUlJaWkgKCB1cmwgKSA6CiB0cnkgOgogIE9vb09vMG9vME8wbzAwTyA9IElJMTFJICggdXJsICkKICBpZiBsZW4gKCBPb29PbzBvbzBPMG8wME8gKSA+IDAgOgogICBmb3IgbzBPSWlJSSAsIElpaWlJaWlJICwgbzBvME8gLCBvb29vTzBvT29PT29PIGluIE9vb09vMG9vME8wbzAwTyA6CiAgICBvME9JaUlJID0gbzBPSWlJSSAuIGVuY29kZSAoICdhc2NpaScgLCAnaWdub3JlJyApIC4gZGVjb2RlICggJ2FzY2lpJyApCiAgICBpZiA5MyAtIDkzOiBpSWlpMUkxMUkxSUkxICsgb28gKyBpMTFpSWlpSWlpCiAgICBpZiBJaWlpSWlpSSA9PSAxMSA6CiAgICAgTzAwME9PMCAoIG8wT0lpSUkgLCBvMG8wTyAsIElpaWlJaWlJICwgb29vb08wb09vT09vTyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiAgICBlbHNlIDoKICAgICBPMDAwT08wICggbzBPSWlJSSAsIG8wbzBPICwgSWlpaUlpaUkgLCBvb29vTzBvT29PT29PICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IFRydWUgKQogZXhjZXB0IDoKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICBpZiA3NCAtIDc0OiBPb09PMG9vT09vbzBPIC8gSUkxMTFpaWlpICsgT28gKiBpSWlpMUkxMUkxSUkxIC0gbzBvbzBvIC0gb29PTzAwb09vCmRlZiBPb09vTzBPb29PT28gKCB1cmwgKSA6CiBvTzAgPSBbIF0KIHRyeSA6CiAgaWYgOTQgLSA5NDogT29vMDBvT28wMG8gLiBvb09PMDBvT28KICBpMWlpMTExMWkxaSA9IFsgKCAnVXNlci1BZ2VudCcgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnZG1sa1pXOTFkQzh5TGpBZ0tHbFFhRzl1WlRzZ2FVOVRJRGt1TUM0eU95QlRZMkZzWlM4eUxqQXdLUT09JyApICkgXQogIG9vT09vb28wT28gPSBpMWlpSTExSSAoIHVybCAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiAgaTExaUlJaSA9IHVybCAuIHNwbGl0ICggJ2FwcD0nICkgWyAxIF0gLiBzcGxpdCAoICcmJyApCiAgb28wTzBvID0ganNvbiAuIGxvYWRzICggb29PT29vbzBPbyApCiAgZm9yIE9vbzBvbyBpbiBvbzBPMG8gWyAicGxheWxpc3RpdGVtcyIgXSA6CiAgIG8wT0lpSUkgPSBPb28wb28gWyAidGl0bGUiIF0KICAgbzBvME8gPSBPb28wb28gWyAidmlkZW9pZCIgXQogICBvMG8wTyA9IGJhc2U2NCAuIGI2NGVuY29kZSAoICdkaXJlY3Q6cGx1Z2luOi8vcGx1Z2luLnZpZGVvLnlvdXR1YmUvP2FjdGlvbj1wbGF5X3ZpZGVvJnZpZGVvaWQ9JXMnICUgbzBvME8gKQogICBJSUlJSWlpMWlpMTEgPSBPb28wb28gWyAiaW1hZ2V1cmwiIF0KICAgaWYgbm90IElJSUlJaWkxaWkxMSAuIHN0YXJ0c3dpdGggKCAnaHR0cCcgKSA6IElJSUlJaWkxaWkxMSA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwzbDBlQzV0WlM5dGFuTnZiaTlqYjI1bUx3PT0nICkgKyBJSUlJSWlpMWlpMTEKICAgb08wIC4gYXBwZW5kICggKCBvME9JaUlJICwgJ21hbnVhbCcgLCBvMG8wTyAsIElJSUlJaWkxaWkxMSApICkKIGV4Y2VwdCA6CiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgaWYgNjggLSA2ODogT29vMDBvT28wMG8KICBpZiAyMCAtIDIwOiBvMG9vMG8gLSBvMG9vMG8KIHJldHVybiBvTzAKIGlmIDM3IC0gMzc6IG9vb08wb28wb09PT08KZGVmIGlJMTFpICggdXJsICkgOgogdHJ5IDoKICBPb29PbzBvbzBPMG8wME8gPSBPb09vTzBPb29PT28gKCB1cmwgKQogIGlmIGxlbiAoIE9vb09vMG9vME8wbzAwTyApID4gMCA6CiAgIGZvciBvME9JaUlJICwgSWlpaUlpaUkgLCBvMG8wTyAsIG9vb29PMG9Pb09Pb08gaW4gT29vT28wb28wTzBvMDBPIDoKICAgIG8wT0lpSUkgPSBvME9JaUlJIC4gZW5jb2RlICggJ2FzY2lpJyAsICdpZ25vcmUnICkgLiBkZWNvZGUgKCAnYXNjaWknICkKICAgIGlmIDczIC0gNzM6IGkxSTFpaTFJSTFpSUkgKiBpMUkxaWkxSUkxaUlJIC8gT28KICAgIE8wMDBPTzAgKCBvME9JaUlJICwgbzBvME8gLCAxMSAsIG9vb29PMG9Pb09Pb08gLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogZXhjZXB0IDoKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICBpZiA0MyAtIDQzOiBvT29PMG9vME9PT28gLiBpMUlJaSAuIG9vb08wb28wb09PT08gKyBPMCAqIG8wMDAwb09vT29PMG8gKiBPMAogIGlmIDQxIC0gNDE6IG9Pb08wb28wT09PbyArIG8wMDAwb09vT29PMG8gJSBPb29vb29vb09PIC4gb09vTzBvbzBPT09vICsgaTFJMWlpMUlJMWlJSSAuIGkxSTFpaTFJSTFpSUkKICBpZiAzMSAtIDMxOiBpMTFpSWlpSWlpICsgSUkxMTFpaWlpIC4gaTFJMWlpMUlJMWlJSSAqIG9PbzBPME9vbwpkZWYgT08wb29vMCAoIHVybCA9IE5vbmUgKSA6CiB0cnkgOgogIGlmIDcgLSA3OiBvT29PMG9vME9PT28gLSBpaWlpSWkxMWkgKiBJSTExaWlJSSArIE9vbzAwb09vMDBvIC4gb09vTzBvbzBPT09vCiAgTzAwME9PMCAoIEkxMUlJaUlpSSAoICJMaXZlIFN0cmVhbXMiIC4gY2FwaXRhbGl6ZSAoICkgLCAnWk0nICkgLCAiIiAsIC0gMSAsICIiICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKICBPb29PbzBvbzBPMG8wME8gPSBJaWlJSUlpSTFpaSAoIExpdmUgPSBUcnVlICkKICBpZiBsZW4gKCBPb29PbzBvbzBPMG8wME8gKSA+IDAgOgogICBmb3IgbzBPSWlJSSAsIElpaWlJaWlJICwgbzBvME8gLCBvb29vTzBvT29PT29PIGluIE9vb09vMG9vME8wbzAwTyA6CiAgICBvME9JaUlJID0gbzBPSWlJSSAuIGVuY29kZSAoICdhc2NpaScgLCAnaWdub3JlJyApIC4gZGVjb2RlICggJ2FzY2lpJyApCiAgICBpMWkgPSAxMQogICAgaWYgODUgLSA4NTogTzAKICAgIE8wMDBPTzAgKCBvME9JaUlJICwgYmFzZTY0IC4gYjY0ZW5jb2RlICggbzBvME8gKSAsIGkxaSAsIG9vb29PMG9Pb09Pb08gLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogIGVsc2UgOgogICBPMDAwT08wICggIi0tIE5vIExpdmUgU3RyZWFtcyBBdmFpbGFibGUiICwgIiIgLCAtIDEgLCBvb29vTzBvT29PT29PICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKIGV4Y2VwdCA6IHBhc3MKIHRyeSA6CiAgaWYgMzIgLSAzMjogT29vb29vb29PTyAuIG9vT08wMG9PbyAvIE9vTzBPMDAgKiBPb28wMG9PbzAwbyAvIE9vbzAwb09vMDBvICogbzAwMDBvT29Pb08wbwogIE8wMDBPTzAgKCBJMTFJSWlJaUkgKCAiUmVjb3JkZWQvSGlnaGxpZ2h0cyIgLiBjYXBpdGFsaXplICggKSAsICdaTScgKSAsICIiICwgLSAxICwgIiIgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogIE9vb09vMG9vME8wbzAwTyA9IElpaUlJSWlJMWlpICggTGl2ZSA9IEZhbHNlICkKICBpZiBsZW4gKCBPb29PbzBvbzBPMG8wME8gKSA+IDAgOgogICBmb3IgbzBPSWlJSSAsIElpaWlJaWlJICwgbzBvME8gLCBvb29vTzBvT29PT29PIGluIE9vb09vMG9vME8wbzAwTyA6CiAgICBvME9JaUlJID0gbzBPSWlJSSAuIGVuY29kZSAoICdhc2NpaScgLCAnaWdub3JlJyApIC4gZGVjb2RlICggJ2FzY2lpJyApCiAgICBpMWkgPSAxMQogICAgaWYgMTkgLSAxOTogbzAwMDBvT29Pb08wbwogICAgTzAwME9PMCAoIG8wT0lpSUkgLCBiYXNlNjQgLiBiNjRlbmNvZGUgKCBvMG8wTyApICwgaTFpICwgb29vb08wb09vT09vTyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiAgZWxzZSA6CiAgIE8wMDBPTzAgKCAiLS0gTm8gUmVjb3JkZWQgU3RyZWFtcyBBdmFpbGFibGUiICwgIiIgLCAtIDEgLCBvb29vTzBvT29PT29PICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKIGV4Y2VwdCA6IHBhc3MKIGlmIDU1IC0gNTU6IElJMTFpaUlJICUgSUkxMWlpSUkgLyBPMCAlIGkxSTFpaTFJSTFpSUkgLSBPb28wMG9PbzAwbyAuIE9vTzBPMDAKIGlmIDQ5IC0gNDk6IGlJaWkxSTExSTFJSTEgKiBpMUlJaSAuIE9vb29vb29vT08KIGlmIDkwIC0gOTA6IE9vbzAwb09vMDBvICUgb09vTzBvbzBPT09vIC0gaUlpaTFJMTFJMUlJMSAlIG9PbzBPME9vbwogcmV0dXJuCmRlZiBJSWlJMTFJMUkxaTFpICggdXJsID0gTm9uZSApIDoKIG9vME9PT29PbyA9IFsgXQogaWYgdXJsID09ICJzc3MiIDoKICBvbzBPT09vT28gPSAnMTQnCiAgTzAwME9PMCAoIEkxaTExaSAoICc+PkNsaWNrIGhlcmUgZm9yIEFsbCBDYXRlZ29yaWVzPDwnIC4gY2FwaXRhbGl6ZSAoICkgLCAncmVkJyApICwgIm1vbmEiICwgNjYgLCAnJyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBUcnVlICkKICBpZiA4NiAtIDg2OiBpMUlJaQogZWxzZSA6CiAgb28wT09Pb09vID0gdXJsCiBmb3IgbzBPSWlJSSAsIElpaWlJaWlJICwgbzBvME8gLCBvb29vTzBvT29PT29PIGluIGkxbzBvbzBPb29vbzAgKCBvbzBPT09vT28gKSA6CiAgaWYgNzYgLSA3NjogaTFJSWkgKiBPb29vb29vb09PICogTzAgKyBvMG9vMG8gKiBvMG9vMG8KICBpMWkgPSAxMQogIGlmIDM1IC0gMzU6IE9vbzAwb09vMDBvCiAgaWYgNzMgLSA3MzogTzAgLSBvT29PMG9vME9PT28KICBpZiAyIC0gMjogSUkxMTFpaWlpIC8gbzBvbzBvCiAgTzAwME9PMCAoIG8wT0lpSUkgLiBlbmNvZGUgKCAidXRmLTgiICkgLCBiYXNlNjQgLiBiNjRlbmNvZGUgKCBvMG8wTyApICwgaTFpICwgb29vb08wb09vT09vTyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiByZXR1cm4KIGlmIDU0IC0gNTQ6IGkxSUlpIC4gT29PTzBvb09Pb28wTyAtIG9Pb08wb28wT09PbyArIE9vICsgT29PME8wMCAvIE9vTzBPMDAKZGVmIGkxaWkxSWlpaWlJaTFJICggdXJsID0gTm9uZSApIDoKIGltcG9ydCB0ZXN0YXJlYQogZm9yIG8wT0lpSUkgLCBJaWlpSWlpSSAsIG8wbzBPICwgb29vb08wb09vT09vTyAsIG9vbzBPMG8wT29PTyBpbiB0ZXN0YXJlYSAuIGdldENoYW5uZWxzICggdXJsICwgaTFJaUkgKSA6CiAgcHJpbnQgbzBPSWlJSSAsIElpaWlJaWlJICwgbzBvME8gLCBvb29vTzBvT29PT29PICwgb29vME8wbzBPb09PCiAgbzBPSWlJSSA9IG8wT0lpSUkgLiBlbmNvZGUgKCAnYXNjaWknICwgJ2lnbm9yZScgKSAuIGRlY29kZSAoICdhc2NpaScgKQogIGlJaTExaSA9IEZhbHNlCiAgaWYgb29vME8wbzBPb09PID09ICJmb2xkZXIiIDoKICAgaTFpID0gOTkKICAgaUlpMTFpID0gVHJ1ZQogIGVsc2UgOgogICBpMWkgPSAxMQogICBpZiA5OCAtIDk4OiBPbyAtIGkxSTFpaTFJSTFpSUkgLiBPb09PMG9vT09vbzBPCiAgTzAwME9PMCAoIEkxMUlJaUlpSSAoIG8wT0lpSUkgLiBjYXBpdGFsaXplICggKSAsICdaTScgKSAsIGJhc2U2NCAuIGI2NGVuY29kZSAoIG8wbzBPICkgLCBpMWkgLCBvb29vTzBvT29PT29PICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IGlJaTExaSApCiByZXR1cm4KIGlmIDI4IC0gMjg6IElJMTExaWlpaSAtIGlpaWlJaTExaSAlIG9PbzBPME9vbyArIG9vT08wMG9PbyAtIG9PbzBPME9vbwpkZWYgSWlJICggdXJsID0gTm9uZSApIDoKIG9vME9PT29PbyA9IFsgXQogaWYgdXJsID09ICJzc3MiIDoKICBvbzBPT09vT28gPSBbICdzcG9ydHMnIF0KICBPMDAwT08wICggSTFpMTFpICggJz4+Q2xpY2sgaGVyZSBmb3IgQWxsIENhdGVnb3JpZXM8PCcgLiBjYXBpdGFsaXplICggKSAsICdyZWQnICkgLCAidWt0diIgLCA2NiAsICcnICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IFRydWUgKQogIGlmIDYzIC0gNjM6IE8wCiBlbHNlIDoKICBvbzBPT09vT28gPSBbIHVybCBdCiBmb3IgbzBPSWlJSSAsIElpaWlJaWlJICwgbzBvME8gLCBvb29vTzBvT29PT29PIGluIGkxSTFpSWlpMTEgKCBvbzBPT09vT28gKSA6CiAgbzBPSWlJSSA9IG8wT0lpSUkgLiBlbmNvZGUgKCAnYXNjaWknICwgJ2lnbm9yZScgKSAuIGRlY29kZSAoICdhc2NpaScgKQogIGkxaSA9IDExCiAgaWYgODAgLSA4MDogb09vME8wT29vIC0gSUkxMTFpaWlpCiAgaWYgMzUgLSAzNTogT28gLSBvb09PMDBvT28gLiBPb08wTzAwICogT29PME8wMCAvIGkxMWlJaWlJaWkgKyBvT29PMG9vME9PT28KICBPMDAwT08wICggSTExSUlpSWlJICggbzBPSWlJSSAuIGNhcGl0YWxpemUgKCApICwgJ1pNJyApICwgYmFzZTY0IC4gYjY0ZW5jb2RlICggbzBvME8gKSAsIGkxaSAsIG9vb29PMG9Pb09Pb08gLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogcmV0dXJuCiBpZiA4NyAtIDg3OiBvT28wTzBPb28gJSBpSWlpMUkxMUkxSUkxCmRlZiBvME9PME9PTzBPICggdXJsID0gTm9uZSApIDoKIGZvciBvME9JaUlJICwgbzBvME8gaW4gSWlpMUkgKCBjYWxsZXIgPSB1cmwgKSA6CiAgdHJ5IDoKICAgaWYgNzUgLSA3NTogb29vTzBvbzBvT09PTwogICBvME9JaUlJID0gbzBPSWlJSQogICBpZiAzNSAtIDM1OiBvbwogICBPMDAwT08wICggSTExSUlpSWlJICggbzBPSWlJSSAuIGNhcGl0YWxpemUgKCApICwgJ1pNJyApICwgbzBvME8gLCA2MSAsICIiICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IFRydWUgKQogIGV4Y2VwdCA6IHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcmV0dXJuCiBpZiAzNiAtIDM2OiBpMUlJaSAtIG9Pb08wb28wT09PbyAtIG8wb28wbwpkZWYgaWlpSTFJICggdXJsID0gTm9uZSApIDoKIG9PME9PTzBvME8gPSBGYWxzZQogaWYgbm90IGkxSWlJID09IDY3IDoKICBPMDAwT08wICggSTFpMTFpICggJz4+Q2xpY2sgSGVyZSBmb3IgQWxsIENoYW5uZWxzPDwnIC4gY2FwaXRhbGl6ZSAoICkgLCAncmVkJyApICwgdXJsICwgNjcgLCAiIiAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBUcnVlICkKICBvTzBPT08wbzBPID0gVHJ1ZQogIGlmIDUxIC0gNTE6IGlpaWlJaTExaSArIG9vT08wMG9PbyArIGkxSTFpaTFJSTFpSUkgKyBpMUkxaWkxSUkxaUlJICUgT29vMDBvT28wMG8KIGZvciBvME9JaUlJICwgSWlpaUlpaUkgLCBvMG8wTyAsIG9vb29PMG9Pb09Pb08gaW4gaUlpMWkxaUlpMUlpMSAoIFsgdXJsIF0gLCBUcnVlICwgc29ydCA9IG9PME9PTzBvME8gKSA6CiAgdHJ5IDoKICAgaWYgNjYgLSA2Njogb29PTzAwb09vICUgT29vMDBvT28wMG8KICAgbzBPSWlJSSA9IG8wT0lpSUkKICAgaTFpID0gMTEKICAgaWYgMjEgLSAyMTogb09vME8wT29vIC0gT29vb29vb29PTyAlIGkxMWlJaWlJaWkKICAgaWYgNzEgLSA3MTogaTFJSWkgLSBPb09PMG9vT09vbzBPICogbzBvbzBvICsgaWlpaUlpMTFpIC0gb29PTzAwb09vICUgb09vTzBvbzBPT09vCiAgIE8wMDBPTzAgKCBJMTFJSWlJaUkgKCBvME9JaUlJIC4gY2FwaXRhbGl6ZSAoICkgLCAnWk0nICkgLCBiYXNlNjQgLiBiNjRlbmNvZGUgKCBvMG8wTyApICwgaTFpICwgb29vb08wb09vT09vTyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiAgZXhjZXB0IDogdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiByZXR1cm4KIGlmIDYzIC0gNjM6IGlJaWkxSTExSTFJSTEgKyBJSTExaWlJSSAuIG9vT08wMG9PbyAvIG9vCmRlZiBvTzBPICggdXJsID0gTm9uZSApIDoKIGlmIDI2IC0gMjY6IGlJaWkxSTExSTFJSTEgKyBpMUlJaSAvIG9PbzBPME9vbyAlIG9Pb08wb28wT09PbwogaWYgdXJsID09ICJzc3MiIDoKICBvbzBPT09vT28gPSBbICdleHRyYSB0aW1lIGZvb3RiYWxsJyAsICd0c24nICwgJ2N0aCBzdGFkaXVtJyAsICd1ZmMnICwgJ3QyMCB3b3JsZCBjdXAnICwgJ2hvcnNlIHJhY2luZycgLCAnY3JpY2tldCcgLCAnZm9vdGJhbCcgLCAnZ29sZicgLCAnYm94aW5nICYgd3Jlc3RsaW5nJyAsICd0MjAgYmlnIGJhc2ggbGVhZ3VlJyAsICduZmwgbGl2ZScgLCAnZm9vdGJhbCBjbHVicycgLCAnc3BvcnRzIHRpbWUnICwgJ2RhcnRzJyAsICdlbmcgdnMgaW5kJyBdCiAgSUlpaUlJaTEgPSBUcnVlCiAgTzAwME9PMCAoIEkxaTExaSAoICc+PkNsaWNrIGhlcmUgZm9yIEFsbCBDYXRlZ29yaWVzPDwnIC4gY2FwaXRhbGl6ZSAoICkgLCAncmVkJyApICwgInd0diIgLCA2NiAsICcnICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IFRydWUgKQogZWxzZSA6CiAgb28wT09Pb09vID0gWyB1cmwgXQogIElJaWlJSWkxID0gRmFsc2UKICBpZiA0NCAtIDQ0OiBPb29vb29vb09PIC4gSUkxMTFpaWlpIC4gSUkxMWlpSUkgJSBPb29vb29vb09PCiBmb3IgbzBPSWlJSSAsIElpaWlJaWlJICwgbzBvME8gLCBvb29vTzBvT29PT29PIGluIE9vMG9PMDAgKCBvbzBPT09vT28gLCBJSWlpSUlpMSAsIGRlc2kgPSBGYWxzZSApIDoKICBvME9JaUlJID0gbzBPSWlJSSAuIGVuY29kZSAoICdhc2NpaScgLCAnaWdub3JlJyApIC4gZGVjb2RlICggJ2FzY2lpJyApCiAgaWYgSWlpaUlpaUkgPT0gJ21hbnVhbDInIDoKICAgaTFpID0gMzcKICBlbGlmIElpaWlJaWlJID09ICdtYW51YWwzJyA6CiAgIGkxaSA9IDQ1CiAgZWxzZSA6CiAgIGkxaSA9IDExCiAgTzAwME9PMCAoIEkxMUlJaUlpSSAoIG8wT0lpSUkgLiBjYXBpdGFsaXplICggKSAsICdaTScgKSAsIGJhc2U2NCAuIGI2NGVuY29kZSAoIG8wbzBPICkgLCBpMWkgLCBvb29vTzBvT29PT29PICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKIHJldHVybgogaWYgNDEgLSA0MTogTzAgLSBPb09PMG9vT09vbzBPICogaUlpaTFJMTFJMUlJMQpkZWYgSUkxMTFpMWlpMWlJSSAoIHVybCA9IE5vbmUgKSA6CiBpZiA3NSAtIDc1OiBpSWlpMUkxMUkxSUkxICsgT29vb29vb29PTwogaWYgdXJsID09ICJzc3MiIDoKICBvbzBPT09vT28gPSBbICdBc3RvIFNwb3J0cycgLCAnVFNOIFNwb3J0cycgLCAnT1NOIFNwb3J0cycgLCAnU3BvcnRzIFRpbWUgVFYnICwgJ1QyMCBXb3JsZCBDdXAnICwgJ0hvcnNlIFJhY2luZycgLCAnQ3JpY2tldCBNYXRjaGVzJyAsICdGb290YmFsJyAsICdHb2xmJyAsICdCb3hpbmcgJiBGaWdodCcgLCAnVDIwIEJpZyBCYXNoIExlYWd1ZScgLCAnTkZMIExpdmUnICwgJ0Zvb3RiYWwgQ2x1YnMnICwgJ1Nwb3J0cyBIRCcgLCAnU3BvcnRzIEZ1bGwgSEQnICwgJ0dsb2JhbCBTcG9ydHMnIF0KICBJSWlpSUlpMSA9IFRydWUKICBPMDAwT08wICggSTFpMTFpICggJz4+Q2xpY2sgaGVyZSBmb3IgQWxsIENhdGVnb3JpZXM8PCcgLiBjYXBpdGFsaXplICggKSAsICdyZWQnICkgLCAiZ3R2IiAsIDY2ICwgJycgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gVHJ1ZSApCiBlbHNlIDoKICBvbzBPT09vT28gPSBbIHVybCBdCiAgSUlpaUlJaTEgPSBGYWxzZQogIGlmIDk3IC0gOTc6IG9Pb08wb28wT09PbyAvIE9vTzBPMDAgKyBvMG9vMG8KIGZvciBvME9JaUlJICwgSWlpaUlpaUkgLCBvMG8wTyAsIG9vb29PMG9Pb09Pb08gaW4gaTExMUkxMWkxSSAoIG9vME9PT29PbyAsIElJaWlJSWkxICkgOgogIG8wT0lpSUkgPSBvME9JaUlJIC4gZW5jb2RlICggJ2FzY2lpJyAsICdpZ25vcmUnICkgLiBkZWNvZGUgKCAnYXNjaWknICkKICBpZiBJaWlpSWlpSSA9PSAnbWFudWFsMicgOgogICBpMWkgPSAzNwogIGVsaWYgSWlpaUlpaUkgPT0gJ21hbnVhbDMnIDoKICAgaTFpID0gNDUKICBlbHNlIDoKICAgaTFpID0gMTEKICBPMDAwT08wICggSTExSUlpSWlJICggbzBPSWlJSSAuIGNhcGl0YWxpemUgKCApICwgJ1pNJyApICwgYmFzZTY0IC4gYjY0ZW5jb2RlICggbzBvME8gKSAsIGkxaSAsIG9vb29PMG9Pb09Pb08gLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogcmV0dXJuCiBpZiA4NSAtIDg1OiBJSTExaWlJSSAqIGkxSUlpICUgb28gLSBPbwogaWYgMzcgLSAzNzogb29vTzBvbzBvT09PTyAuIE9vTzBPMDAgKiBPb08wTzAwICogSUkxMTFpaWlpICogTzAKZGVmIG8wME9PbzAwME8gKCB1cmwgPSBOb25lICkgOgogZm9yIG8wT0lpSUkgLCBJaWlpSWlpSSBpbiBbICggJ0VuZ2xpc2gnICwgJ2VuJyApICwgKCAnR2VybWFuJyAsICdkZScgKSAsICggJ0ZyZW5jaCcgLCAnZnInICkgLCAoICdJdGFsaWFuJyAsICdpdCcgKSAsICggJ0R1dGNoJyAsICdubCcgKSAsICggJ1BvbGlzaCcgLCAncGwnICkgXSA6CiAgTzAwME9PMCAoIEkxMUlJaUlpSSAoIG8wT0lpSUkgLiBjYXBpdGFsaXplICggKSAsICdaTScgKSAsIGJhc2U2NCAuIGI2NGVuY29kZSAoIG8wT0lpSUkgKyAnLCcgKyBJaWlpSWlpSSApICwgNzMgLCAnJyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBUcnVlICkKIHJldHVybgogaWYgNDIgLSA0Mjogb29vTzBvbzBvT09PTyAlIGkxSTFpaTFJSTFpSUkgJSBPb28wMG9PbzAwbyAlIGlpaWlJaTExaSArIE9vT08wb29PT29vME8gJSBvT28wTzBPb28KIGlmIDMgLSAzOiBpaWlpSWkxMWkKZGVmIE9PT2lJMSAoIHRoZXNlY2hhbm5lbHMgPSBbIF0gKSA6CiBpZiA4NCAtIDg0OiBJSTExaWlJSSAqIG9vICUgT29PTzBvb09Pb28wTyArIElJMTFpaUlJIC8gaTFJMWlpMUlJMWlJSQogaTFpaTExMTFpMWkgPSBbICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS80OC4wLjI1NjQuMTE2IFNhZmFyaS81MzcuMzYnICkgXQogb28wMDBvID0gaTFpaUkxMUkgKCAnaHR0cHM6Ly90dnBsYXllci5jb20vd2F0Y2gvYmJjb25lJyAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiBPTzAwbzBvT08gPSByZSAuIGZpbmRhbGwgKCAnPGxpIC4qPyBjbGFzcz0ib25saW5lLio/ZnJlZS4qP1xzKjxhIGhyZWY9IiguKj8pIiB0aXRsZT0iKC4qPykiLio/XHMqPGltZy4qP3NyYz0iKC4qPykiJyAsIG9vMDAwbyApCiBvTzAgPSBbIF0KIGZvciBpMUlpaUkxSTFJSWkxMWkxIGluIE9PMDBvMG9PTyA6CiAgaWYgMjcgLSAyNzogT29PME8wMAogIGkxaSA9IDExCiAgSUlJMUkxSWkxMWlJID0gJ1pNJwogIG9PME8wbzBvMDAgPSBpMUlpaUkxSTFJSWkxMWkxIFsgMiBdCiAgaWYgMjkgLSAyOTogb29vTzBvbzBvT09PTyAuIE9vIC0gSUkxMTFpaWlpCiAgbzBPSWlJSSA9IGkxSWlpSTFJMUlJaTExaTEgWyAxIF0KICBpZiAnV2F0Y2ggJyBpbiBvME9JaUlJIDoKICAgbzBPSWlJSSA9IG8wT0lpSUkgLiByZXBsYWNlICggJ1dhdGNoICcgLCAnJyApCiAgbzBvME8gPSBpMUlpaUkxSTFJSWkxMWkxIFsgMCBdCiAgaWYgbm90IG8wbzBPIC4gc3RhcnRzd2l0aCAoICdodHRwJyApIDoKICAgbzBvME8gPSAnaHR0cHM6Ly90dnBsYXllci5jb20vJyArIG8wbzBPCiAgaWYgbGVuICggdGhlc2VjaGFubmVscyApID09IDAgb3IgbzBPSWlJSSAuIGxvd2VyICggKSBpbiB0aGVzZWNoYW5uZWxzIDoKICAgb08wIC4gYXBwZW5kICggKCBvME9JaUlJIC4gY2FwaXRhbGl6ZSAoICkgLCBiYXNlNjQgLiBiNjRlbmNvZGUgKCAndHZwbGF5ZXI6JyArIG8wbzBPICkgLCBpMWkgLCBvTzBPMG8wbzAwICkgKQogcmV0dXJuIG9PMAogaWYgNjggLSA2ODogaUlpaTFJMTFJMUlJMSArIElJMTExaWlpaSAvIGlpaWlJaTExaQpkZWYgb09vb28wMDAwMCAoIHVybCAsIHRoZXNlY2hhbm5lbHMgPSBbIF0gKSA6CiBPMDAwT08wICggJ1NvbWUgY2hhbm5lbHMgcmVxdWlyZXMgZnJlZSBsb2dpbiwgZW50ZXIgaW4gdGhlIHNldHRpbmdzLicgLCAnJyAsICcnICwgJycgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogZm9yIGlpSTExSTFpaUlpSUkxSSBpbiBzb3J0ZWQgKCBPT09pSTEgKCB0aGVzZWNoYW5uZWxzICkgLCBrZXkgPSBsYW1iZGEgSTFpMTEgOiBJMWkxMSBbIDAgXSAuIGxvd2VyICggKSApIDoKICBPMDAwT08wICggaWlJMTFJMWlpSWlJSTFJIFsgMCBdICwgaWlJMTFJMWlpSWlJSTFJIFsgMSBdICwgaWlJMTFJMWlpSWlJSTFJIFsgMiBdICwgaWlJMTFJMWlpSWlJSTFJIFsgMyBdICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKICBpZiA1OSAtIDU5OiBvMG9vMG8gLSBvb29PMG9vMG9PT09PCmRlZiBpaWlpaTExMSAoIHVybCApIDoKIGlmIDkzIC0gOTM6IGlpaWlJaTExaSAqIG8wMDAwb09vT29PMG8KIE9PMDBvMG9PTyA9IFsgKCAnRm9vdGJhbGwnICwgJ2h0dHA6Ly93d3cuc3RyZWFtaGQuZXUvZm9vdGJhbGwvJyApICwgKCAnJyAsICcnICkgXQogaWkxMWkxSTFpaWlpID0gJzxsaT5ccyo/PGEuKj9ocmVmPSIoLio/KSIuKj9zcmM9IiguKj8pIi4qPz4oLio/KTwnCiBpMWlpMTExMWkxaSA9IFsgKCAnVXNlci1BZ2VudCcgLCAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzQ4LjAuMjU2NC4xMTYgU2FmYXJpLzUzNy4zNicgKSBdCiBvbzAwMG8gPSBpMWlpSTExSSAoICdodHRwOi8vd3d3LnN0cmVhbWhkLmV1LycgLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogT08wMG8wb09PID0gcmUgLiBmaW5kYWxsICggaWkxMWkxSTFpaWlpICwgb28wMDBvICkKIE9PMDBvMG9PTyA9IFsgKCAnaHR0cDovL3d3dy5zdHJlYW1oZC5ldS90di8nICwgJycgLCAnTGl2ZSBTcG9ydHMgQ2hhbm5lbHMnICkgLCAoICdodHRwOi8vd3d3LnN0cmVhbWhkLmV1LycgLCAnJyAsICdBbGwgU3BvcnRzJyApICwKICggJ2h0dHA6Ly93d3cuc3RyZWFtaGQuZXUvZm9vdGJhbGwvJyAsICdodHRwOi8vd3d3LnN0cmVhbWhkLmV1L2ltYWdlcy9pY29ucy9mb290YmFsbC5wbmcnICwgJ0Zvb3RiYWwnICkKIF0gKyBPTzAwbzBvT08KIGlmIDI3IC0gMjc6IE9vICsgaTExaUlpaUlpaSAqIE9vT08wb29PT29vME8gKyBvT28wTzBPb28gKyBpMUkxaWkxSUkxaUlJCiBmb3IgaTFJaWlJMUkxSUlpMTFpMSBpbiBPTzAwbzBvT08gOgogIGlmIDg3IC0gODc6IE8wCiAgaTFpID0gNzYKICBvTzBPMG8wbzAwID0gaTFJaWlJMUkxSUlpMTFpMSBbIDEgXQogIG8wT0lpSUkgPSBpMUlpaUkxSTFJSWkxMWkxIFsgMiBdCiAgbzBvME8gPSBpMUlpaUkxSTFJSWkxMWkxIFsgMCBdCiAgaWYgbm90IG8wbzBPIC4gc3RhcnRzd2l0aCAoICdodHRwJyApIDoKICAgbzBvME8gPSAnaHR0cDovL3d3dy5zdHJlYW1oZC5ldScgKyBvMG8wTwogIE8wMDBPTzAgKCBvME9JaUlJIC4gY2FwaXRhbGl6ZSAoICkgLCBvMG8wTyAsIGkxaSAsIG9PME8wbzBvMDAgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gVHJ1ZSApCiAgaWYgODcgLSA4NzogT29vMDBvT28wMG8gLyBJSTExMWlpaWkKZGVmIE8wT09PbzAwMCAoIHVybCApIDoKIGltcG9ydCB0aW1lCiBpMWlpMTExMWkxaSA9IFsgKCAnVXNlci1BZ2VudCcgLCAnU3BvcnRzJTIwVFYvMiBDRk5ldHdvcmsvNzU4LjAuMiBEYXJ3aW4vMTUuMC4wJyApIF0KIG9vMDAwbyA9IGkxaWlJMTFJICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDNkM2R5NXViM1JwWTJsaGMzUmxiR1ZtYjI1cFlTNWxjeTl6Y0c5eWRITmlhV2QwWldRdWNHeHBjM1E9JyApICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKIG9PMCA9IFsgXQogdHJ5IDoKICBJSUkxMWlpMUlJID0gcmUgLiBmaW5kYWxsICggJzxzdHJpbmc+KC4qPyk8L3N0cmluZz4nICwgb28wMDBvICkKICBmb3IgTzBPMDAwTyBpbiBJSUkxMWlpMUlJIDoKICAgdHJ5IDoKICAgIGkxaSA9IDExCiAgICBpZiAyMiAtIDIyOiBpaWlpSWkxMWkKICAgIG9PME8wbzBvMDAgPSAnJwogICAgbzBPSWlJSSAsIG8wbzBPID0gTzBPMDAwTyAuIHNwbGl0ICggJywnICkKICAgIG9PMCAuIGFwcGVuZCAoICggbzBPSWlJSSAsIGJhc2U2NCAuIGI2NGVuY29kZSAoICdkaXJlY3QyOicgKyBvMG8wTyArICd8VXNlci1BZ2VudD1BcHBsZUNvcmVNZWRpYS8xLjAuMC4xM0E0NTIgKGlQaG9uZTsgVTsgQ1BVIE9TIDlfMF8yIGxpa2UgTWFjIE9TIFg7IGVuX2diKScgKSAsIGkxaSAsIG9PME8wbzBvMDAgKSApCiAgIGV4Y2VwdCA6CiAgICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIGV4Y2VwdCA6CiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiByZXR1cm4gc29ydGVkICggb08wICwga2V5ID0gbGFtYmRhIEkxaTExIDogSTFpMTEgWyAwIF0gLiBsb3dlciAoICkgKQogaWYgMzMgLSAzMzogTzAKZGVmIG9vMDBvMCAoIHVybCApIDoKIGlmIDE3IC0gMTc6IG8wMDAwb09vT29PMG8gLyBpSWlpMUkxMUkxSUkxIC0gb29PTzAwb09vICsgb28gJSBJSTExaWlJSQogdHJ5IDoKICBmb3IgTzBPMDAwTyBpbiBPME9PT28wMDAgKCB1cmwgKSA6CiAgIHRyeSA6CiAgICBPMDAwT08wICggTzBPMDAwTyBbIDAgXSAsIE8wTzAwME8gWyAxIF0gLCBPME8wMDBPIFsgMiBdICwgTzBPMDAwTyBbIDMgXSAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiAgIGV4Y2VwdCA6CiAgICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIGV4Y2VwdCA6CiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgaWYgMTQgLSAxNDogT29vMDBvT28wMG8gJSBvb29PMG9vMG9PT09PICsgb09vTzBvbzBPT09vICsgb29PTzAwb09vCmRlZiBPT09vT09vMG8gKCB1cmwgKSA6CiBpbXBvcnQgdGltZQogaTFpaTExMTFpMWkgPSBbICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS80OC4wLjI1NjQuMTE2IFNhZmFyaS81MzcuMzYnICkgXQogb28wMDBvID0gaTFpaUkxMUkgKCB1cmwgLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogSWlJMUlpaTEgPSBGYWxzZQogaWYgODUgLSA4NTogaTExaUlpaUlpaSAvIGkxMWlJaWlJaWkgLiBvb09PMDBvT28gLiBPMAogaWYgMSA9PSAyIGFuZCAnL3R2LycgaW4gdXJsIDoKICBJaUkxSWlpMSA9IFRydWUKICBpaTExaTFJMWlpaWkgPSAnPGEgaHJlZj0iKC4qPykiLio/Y2xhc3M9InJlLio/YWx0PSIoLio/KSIuKj8nCiAgT08wMG8wb09PID0gcmUgLiBmaW5kYWxsICggaWkxMWkxSTFpaWlpICwgb28wMDBvICkKIGVsc2UgOgogIGlmIDY3IC0gNjc6IElJMTExaWlpaSAvIE9vbzAwb09vMDBvIC4gSUkxMWlpSUkgLiBPb29vb29vb09PCiAgT08wMG8wb09PID0gb28wMDBvIC4gc3BsaXQgKCAnPGRpdiBjbGFzcz0ic2NoZWR1bGUiPicgKSBbIDEgXQogIE9PMDBvMG9PTyA9IHJlIC4gZmluZGFsbCAoICcoPGEuKj88ZGl2IGNsYXNzPSJyb3ciPi4qPyk8XC9hPicgLCBPTzAwbzBvT08gLCByZSAuIERPVEFMTCApCiB0cnkgOgogIE8wMDBPTzAgKCBJMWkxMWkgKCAnTGl2ZSBDaGFubmVscycgLCAnYmx1ZScgKSAsICdzc3MnICwgMCAsICcnICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKICBJSUkxMWlpMUlJID0gb28wMDBvIC4gc3BsaXQgKCAnPGRpdiBjbGFzcz0ic3RhbmRhcmQgcm93IGNoYW5uZWxzIj4nICkgWyAxIF0gLiBzcGxpdCAoICc8L2Rpdj4nICkgWyAwIF0KICBJSUkxMWlpMUlJID0gcmUgLiBmaW5kYWxsICggJzxhIGhyZWY9IihbXiJdKykiLio/XHMqLio/c3JjPSIoW14iXSspIi4qPzxzcGFuPihbXjxdKyk8JyAsIElJSTExaWkxSUkgKQogIGZvciBPME8wMDBPIGluIElJSTExaWkxSUkgOgogICB0cnkgOgogICAgaTFpID0gMTEKICAgIGlmIDE5IC0gMTk6IG9vb08wb28wb09PT08gLiBvT29PMG9vME9PT28gLyBvT28wTzBPb28KICAgIG9PME8wbzBvMDAgPSBPME8wMDBPIFsgMSBdCiAgICBvME9JaUlJID0gTzBPMDAwTyBbIDIgXQogICAgbzBvME8gPSBPME8wMDBPIFsgMCBdCiAgICBpZiA2OCAtIDY4OiBPbyAvIE9vb29vb29vT08gKiBPb09PMG9vT09vbzBPIC8gaWlpaUlpMTFpCiAgICBpZiA4OCAtIDg4OiBPb28wMG9PbzAwbwogICAgTzAwME9PMCAoIG8wT0lpSUkgLCBiYXNlNjQgLiBiNjRlbmNvZGUgKCAnbWFtYWhkOicgKyBvMG8wTyApICwgaTFpICwgb08wTzBvMG8wMCAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiAgIGV4Y2VwdCA6CiAgICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIGV4Y2VwdCA6CiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgaWYgMSAtIDE6IE9vb29vb29vT08KIE8wMDBPTzAgKCBJMWkxMWkgKCAnU2NoZWR1bGVkIEdhbWVzJyAsICdibHVlJyApICwgJ3NzcycgLCAwICwgJycgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogZm9yIGkxSWlpSTFJMUlJaTExaTEgaW4gT08wMG8wb09PIFsgOiAzMCBdIDoKICB0cnkgOgogICBpMWkgPSAxMQogICBpZiA0OCAtIDQ4OiBPbyAqIG9PbzBPME9vbyAtIE9vIC0gSUkxMWlpSUkgKyBJSTExaWlJSQogICBpZiBJaUkxSWlpMSA6CiAgICBvTzBPMG8wbzAwID0gJycKICAgIG8wT0lpSUkgPSBpMUlpaUkxSTFJSWkxMWkxIFsgMSBdCiAgICBvMG8wTyA9IGkxSWlpSTFJMUlJaTExaTEgWyAwIF0KICAgIGlmIG8wbzBPID09ICcjJyA6IGNvbnRpbnVlCiAgICBpZiA0MCAtIDQwOiBpMTFpSWlpSWlpIC4gaUlpaTFJMTFJMUlJMQogICBlbHNlIDoKICAgIE8wTzAwME8gPSByZSAuIGZpbmRhbGwgKCAnPGEgaHJlZj0iKFteIl0rKSIuKj88aW1nIHNyYz0iKFteIl0rKSIuKj9zdGFydD0iKFteIl0rKSIuKj9ob21lIGNlbGwuKj88c3Bhbj4oW148XSspPC4qPzxzcGFuPihbXjxdKyk8JyAsIGkxSWlpSTFJMUlJaTExaTEgLCByZSAuIERPVEFMTCApIFsgMCBdCiAgICBvTzBPMG8wbzAwID0gTzBPMDAwTyBbIDEgXQogICAgbzBPSWlJSSA9IE8wTzAwME8gWyAzIF0gKyAnIHZzICcgKyBPME8wMDBPIFsgNCBdCiAgICBvMG8wTyA9IE8wTzAwME8gWyAwIF0KICAgIElpSUlJSTFpaUlJaSA9IE8wTzAwME8gWyAyIF0KICAgIGkxSTFJaUkxaWkgPSAiIgogICAgdHJ5IDoKICAgICBpZiB0aW1lIC4gdGltZSAoICkgPiBpbnQgKCBJaUlJSUkxaWlJSWkgKSA6CiAgICAgIGkxSTFJaUkxaWkgPSAiXG5MSVZFIE5PVyIKICAgICBlbHNlIDoKICAgICAgTzAwT09vT09PTzAwTyA9IHN0ciAoIGludCAoICggaW50ICggSWlJSUlJMWlpSUlpICkgLSB0aW1lIC4gdGltZSAoICkgKSAvIDYwIC8gNjAgKSApCiAgICAgIGlmIE8wME9Pb09PT08wME8gPT0gIjAiIDoKICAgICAgIGkxSTFJaUkxaWkgPSAiXG5MSVZFIGluICVzIE1pbnV0ZXMiICUgc3RyICggaW50ICggKCBpbnQgKCBJaUlJSUkxaWlJSWkgKSAtIHRpbWUgLiB0aW1lICggKSApIC8gNjAgKSApCiAgICAgIGVsc2UgOgogICAgICAgaTFJMUlpSTFpaSA9ICJcbkxJVkUgaW4gJXMgSHJzIiAlIHN0ciAoIGludCAoICggaW50ICggSWlJSUlJMWlpSUlpICkgLSB0aW1lIC4gdGltZSAoICkgKSAvIDYwIC8gNjAgKSApCiAgICBleGNlcHQgOgogICAgIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogICAgIHBhc3MKICAgIG8wT0lpSUkgKz0gSTExSUlpSWlJICggaTFJMUlpSTFpaSAsICdyZWQnICkKICAgIGlmIDcyIC0gNzI6IG9vICsgb29vTzBvbzBvT09PTyAuIG9PbzBPME9vbyArIG9PbzBPME9vbwogICBPMDAwT08wICggbzBPSWlJSSAsIGJhc2U2NCAuIGI2NGVuY29kZSAoICdtYW1haGQ6JyArIG8wbzBPICkgLCBpMWkgLCBvTzBPMG8wbzAwICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKICBleGNlcHQgOgogICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICAgaWYgOTQgLSA5NDogaTExaUlpaUlpaSAlIE9vb29vb29vT08gLyBvbwpkZWYgaUlJMUlpaTExMTExICggdXJsICkgOgogaWYgODAgLSA4MDogaWlpaUlpMTFpICogT29PTzBvb09Pb28wTyAvIGlJaWkxSTExSTFJSTEgJSBpaWlpSWkxMWkgLyBpSWlpMUkxMUkxSUkxCiBpMWlpMTExMWkxaSA9IFsgKCAnVXNlci1BZ2VudCcgLCAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzQ4LjAuMjU2NC4xMTYgU2FmYXJpLzUzNy4zNicgKSBdCiBvbzAwMG8gPSBpMWlpSTExSSAoIHVybCAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiBJaUkxSWlpMSA9IEZhbHNlCiBpZiAnL3R2LycgaW4gdXJsIDoKICBJaUkxSWlpMSA9IFRydWUKICBpaTExaTFJMWlpaWkgPSAnPGEgaHJlZj0iKC4qPykiLio/Y2xhc3M9InJlLio/YWx0PSIoLio/KSIuKj8nCiAgT08wMG8wb09PID0gcmUgLiBmaW5kYWxsICggaWkxMWkxSTFpaWlpICwgb28wMDBvICkKIGVsc2UgOgogIE9PMDBvMG9PTyA9IHJlIC4gZmluZGFsbCAoICdldmVudHNtYWxsIj4oLio/KTwuKj9kZW4teHMiPiguKj8pPC4qXHMqPzwuKj9pbWcgc3JjPSIoLio/KSIuKj8+KC4qPyk8LipccyouKlxzKi4qPzxzcGFuPiguKj8pPC4qXHMqPy4qP2V2ZW50c21hbGwuKj9ocmVmPSIoLio/KSI+KC4qPyk8JyAsIG9vMDAwbyApCiBmb3IgaTFJaWlJMUkxSUlpMTFpMSBpbiBPTzAwbzBvT08gOgogIGlmIDQyIC0gNDI6IGkxSUlpIC8gaTExaUlpaUlpaSAuIE9vTzBPMDAgKiBpMUkxaWkxSUkxaUlJIC4gaTExaUlpaUlpaSAqIE8wCiAgaWYgNDQgLSA0NDogaTFJSWkgLiBvbyAvIGkxMWlJaWlJaWkgKyBvb29PMG9vMG9PT09PCiAgaTFpID0gMTEKICBpZiAyNyAtIDI3OiBJSTExaWlJSQogIGlmIElpSTFJaWkxIDoKICAgb08wTzBvMG8wMCA9ICcnCiAgIG8wT0lpSUkgPSBpMUlpaUkxSTFJSWkxMWkxIFsgMSBdCiAgIG8wbzBPID0gaTFJaWlJMUkxSUlpMTFpMSBbIDAgXQogICBpZiBvMG8wTyA9PSAnIycgOiBjb250aW51ZQogICBpZiA1MiAtIDUyOiBvMG9vMG8gJSBvT28wTzBPb28gKyBpSWlpMUkxMUkxSUkxICogaWlpaUlpMTFpIC4gbzAwMDBvT29Pb08wbwogIGVsc2UgOgogICBvTzBPMG8wbzAwID0gaTFJaWlJMUkxSUlpMTFpMSBbIDIgXQogICBpZiA5NSAtIDk1OiBpSWlpMUkxMUkxSUkxIC4gb29vTzBvbzBvT09PTyAtIE9vb29vb29vT08gKiBvb09PMDBvT28gLyBPb28wMG9PbzAwbwogICBvME9JaUlJID0gSTFpMTFpICggaTFJaWlJMUkxSUlpMTFpMSBbIDAgXSArIGkxSWlpSTFJMUlJaTExaTEgWyAxIF0gLCAnZ3JlZW4nICkgKyAnOiAnICsgSTFpMTFpICggaTFJaWlJMUkxSUlpMTFpMSBbIDMgXSAsICdyZWQnICkgKyAnICcgKyBpMUlpaUkxSTFJSWkxMWkxIFsgNCBdICsgJ1xuJyArIGkxSWlpSTFJMUlJaTExaTEgWyA2IF0KICAgaWYgNzQgLSA3NDogaWlpaUlpMTFpCiAgIG8wbzBPID0gaTFJaWlJMUkxSUlpMTFpMSBbIDUgXQogICBpZiAzNCAtIDM0OiBpMUkxaWkxSUkxaUlJCiAgaWYgbm90IG8wbzBPIC4gc3RhcnRzd2l0aCAoICdodHRwJyApIDoKICAgbzBvME8gPSAnaHR0cDovL3d3dy5zdHJlYW1oZC5ldScgKyBvMG8wTwogIE8wMDBPTzAgKCBvME9JaUlJICwgYmFzZTY0IC4gYjY0ZW5jb2RlICggJ3N0cmVhbWhkOicgKyBvMG8wTyApICwgaTFpICwgb08wTzBvMG8wMCAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiAgaWYgNDQgLSA0NDogaTFJSWkgJSBvbyAlIE9vbzAwb09vMDBvCiAgaWYgOSAtIDk6IE9vTzBPMDAgJSBPb29vb29vb09PIC0gbzAwMDBvT29Pb08wbwpkZWYgaUlJSTExSWlpaTEgKCB1cmwgKSA6CiB0cnkgOgogIGlmIDk1IC0gOTU6IG9vCiAgbzBPb08wT09vTzBPbzAgPSAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzQ4LjAuMjU2NC4xMTYgU2FmYXJpLzUzNy4zNicKICBpZiA5MSAtIDkxOiBJSTExMWlpaWkKICBPT29PME8wMDBPID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDNkM2R5NXNZVzlzWVRFdWRIWXZaVzR0YVc1MEwyeHBkbVV0YzJOb1pXUjFiR1U9JyApCiAgaTFpaTExMTFpMWkgPSBbICggJ1JlZmVyZXInICwgT09vTzBPMDAwTyApICwgKCAnVXNlci1BZ2VudCcgLCBvME9vTzBPT29PME9vMCApIF0KICBpSU8wbyA9IGkxaWlJMTFJICggdXJsICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKICB1cmwgPSByZSAuIGZpbmRhbGwgKCAnPGlmcmFtZSBmcmFtZWJvcmRlLipccyouKlxzKi4qP3NyYz0iKC4qPykiJyAsIGlJTzBvICkKICBpZiBsZW4gKCB1cmwgKSA9PSAwIDoKICAgdXJsID0gcmUgLiBmaW5kYWxsICggJzxpZnJhbWUuKj9zcmM9IiguKj9wbGF5ZXIucGhwLio/KSInICwgaUlPMG8gKSBbIDAgXQogIGVsc2UgOgogICB1cmwgPSB1cmwgWyAwIF0KICB0cnkgOgogICBpZiBub3QgdXJsIC4gc3RhcnRzd2l0aCAoICdodHRwOicgKSA6CiAgICBpMWkxSWlJaTEgPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMM2QzZHk1c1lXOXNZVEV1ZEhZPScgKSArIHVybAogICBwcmludCBpMWkxSWlJaTEKICAgSTFpaTFJaTEgPSBpMWlpSTExSSAoIGkxaTFJaUlpMSAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiAgIE9vT29PID0gcmUgLiBmaW5kYWxsICggInN0cmVhbWlkOiBcIiguKj8pXCIiICwgSTFpaTFJaTEgKSBbIDAgXQogIGV4Y2VwdCA6CiAgIGlmIDEzIC0gMTM6IG9PbzBPME9vbyAlIE9vCiAgIGlmIG5vdCB1cmwgLiBzdGFydHN3aXRoICggJ2h0dHA6JyApIDoKICAgIHVybCA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwzZDNkeTVsYUdaMGRpNWpiMjA9JyApICsgdXJsCiAgIHByaW50IHVybAogICBJMWlpMUlpMSA9IGkxaWlJMTFJICggdXJsICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKICAgT29Pb08gPSByZSAuIGZpbmRhbGwgKCAic3RyZWFtaWQ6IFwiKC4qPylcIiIgLCBJMWlpMUlpMSApIFsgMCBdCiAgIGlmIDgxIC0gODE6IG9vb08wb28wb09PT08gLSBPb28wMG9PbzAwbyAtIE9vTzBPMDAgLSBvMDAwMG9Pb09vTzBvIC8gSUkxMWlpSUkgJSBPb09PMG9vT09vbzBPCiAgIGlmIDUyIC0gNTI6IG9Pb08wb28wT09PbyAvIGkxSTFpaTFJSTFpSUkKICBpMWlpMUlJSUlJID0gcmUgLiBmaW5kYWxsICggInBhcnRuZXJpZDogXCIoLio/KVwiIiAsIEkxaWkxSWkxICkgWyAwIF0KICBpZiA1MiAtIDUyOiBvT28wTzBPb28gLyBvb09PMDBvT28gKyBvMG9vMG8KICB1cmwgPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMM2QzZHk1c1lXOXNZVEV1ZEhZdmMyVnlkbVZ5TDJoa1gzWnBaR1Z2TG5Cb2NEOTJQVEltY0d4aGVUMGxjeVp3WVhKMGJtVnlQU1Z6Sm5CdmNuUmhiRDFwYm5RbWRqVnBaR1Z1ZEQwbWJHRnVaejFsYmc9PScgKSAlICggT29Pb08gLCBpMWlpMUlJSUlJICkKICBJMWlpMUlpMSA9IGkxaWlJMTFJICggdXJsICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKICBpZiA0OSAtIDQ5OiBpSWlpMUkxMUkxSUkxICUgT29PTzBvb09Pb28wTyAuIE9vT08wb29PT29vME8gLiBpSWlpMUkxMUkxSUkxICogb09vME8wT29vIC8gT29PTzBvb09Pb28wTwogIGlmIDk1IC0gOTU6IGlpaWlJaTExaSAqIGlJaWkxSTExSTFJSTEgKyBvT29PMG9vME9PT28KICBpMWlJMWkgPSByZSAuIGZpbmRhbGwgKCAiO2FyZWE9KC4qPyk8IiAsIEkxaWkxSWkxICkgWyAwIF0KICBpbXBvcnQgc3RyaW5nICwgcmFuZG9tCiAgbzBvME9vTzBPT08wID0gJycgLiBqb2luICggcmFuZG9tIC4gU3lzdGVtUmFuZG9tICggKSAuIGNob2ljZSAoIHN0cmluZyAuIGFzY2lpX3VwcGVyY2FzZSApIGZvciBfIGluIHJhbmdlICggNyApICkKICBpZiA3OSAtIDc5OiBpaWlpSWkxMWkgJSBPb28wMG9PbzAwbyAlIG9PbzBPME9vbwogIE8wT08gPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiTUQxMGRpVXlSV3hoYjJ4aE1TVXlSV3hoYjJ4aGRIWWxNa1Z3Y21WdGFYVnRZMngxWWlZeFBYUjJKVEpGYkdGdmJHRXhKVEpGYkdGdmJHRjBkaVV5UlhCeVpXMXBkVzFqYkhWaUpUVkdZV3hzSlRWR1lXTmpaWE56IiApCiAgaWkxSUlpSUkxMTFJID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggImFIUjBjSE02THk5amJIVmlMbXhoYjJ4aE1TNTBkaTl6Y0M5c1lXOXNZVEV2WVhCcEwzWXpMM1Z6WlhJdmMyVnpjMmx2Ymk5d2NtVnRhWFZ0TDNCc1lYbGxjaTl6ZEhKbFlXMHRZV05qWlhOelAzWnBaR1Z2U1dROUpYTW1kR0Z5WjJWMFBURTNKbXhoWW1Wc1BTWmhjbVZoUFNWeiIgKSAlICggT29Pb08gLCBpMWlJMWkgKQogIGlmIDg3IC0gODc6IG8wMDAwb09vT29PMG8gLSBvT29PMG9vME9PT28gJSBvT29PMG9vME9PT28gLiBpaWlpSWkxMWkgLyBvT29PMG9vME9PT28KICBpZiA2IC0gNjogb09vME8wT29vIC8gaUlpaTFJMTFJMUlJMSAqIE9vb29vb29vT08gKiBpMTFpSWlpSWlpCiAgbzBPME9PbzBvTyA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwzZDNkeTVzWVc5c1lURXVkSFl2WVhOelpYUnpMM04zWmk5MmFXUmxiM0JzWVhsbGNsODNMakF1TXpJek1TNXpkMlk9JyApCiAgaTFpaTExMTFpMWkgPSBbICggJ1JlZmVyZXInICwgbzBPME9PbzBvTyApICwgKCAnVXNlci1BZ2VudCcgLCBvME9vTzBPT29PME9vMCApIF0KICBpZiA0MiAtIDQyOiBJSTExMWlpaWkgLyBPMCAuIGlJaWkxSTExSTFJSTEgLyBPMCAvIG9vT08wMG9PbyAvIE9vb29vb29vT08KICBvb2lpSTFpaSA9IGkxaWlJMTFJICggaWkxSUlpSUkxMTFJICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICwgcG9zdCA9IE8wT08gKQogIGltcG9ydCBqc29uCiAgdXJsID0ganNvbiAuIGxvYWRzICggb29paUkxaWkgKSBbICJkYXRhIiBdIFsgInN0cmVhbS1hY2Nlc3MiIF0gWyAwIF0KICBpZiA3NiAtIDc2OiBvMDAwMG9Pb09vTzBvICsgaUlpaTFJMTFJMUlJMSArIG9PbzBPME9vbyAuIG9vT08wMG9PbwogIGkxaWkxMTExaTFpID0gWyAoICdSZWZlcmVyJyAsIGlpMUlJaUlJMTExSSApICwgKCAnVXNlci1BZ2VudCcgLCBvME9vTzBPT29PME9vMCApIF0KICBpZiA0OSAtIDQ5OiBvb29PMG9vMG9PT09PIC8gT28gLyBJSTExaWlJSQogIG9vaWlJMWlpID0gaTFpaUkxMUkgKCB1cmwgLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogIGlmIDI1IC0gMjU6IG9vICUgTzAgKyBpMUlJaSAtIE9vCiAgSWlJaUlpID0gcmUgLiBmaW5kYWxsICggInVybD1cIiguKj8pXCIiICwgb29paUkxaWkgKSBbIDAgXQogIGlmIElpSWlJaSA9PSAicmVzdHJpY3RlZCIgOgogICBvb2lpSTFpaSA9IElJSTFJaUkxaTFpICggdXJsICkKICAgSWlJaUlpID0gcmUgLiBmaW5kYWxsICggInVybD1cIiguKj8pXCIiICwgb29paUkxaWkgKSBbIDAgXQogICBpZiA5NCAtIDk0OiBpMUkxaWkxSUkxaUlJIC0gT29PME8wMCArIGlpaWlJaTExaQogIHByaW50IElpSWlJaQogIE8wb29vT29PID0gcmUgLiBmaW5kYWxsICggImF1dGg9XCIoLio/KVwiIiAsIG9vaWlJMWlpICkgWyAwIF0KICBPME9vMGlJSUlpMUlpSTExSTEgPSAicGx1Z2luOi8vcGx1Z2luLnZpZGVvLmY0bVRlc3Rlci8/c3RyZWFtdHlwZT1IRFMmdXJsPSVzJnN3Zj0lcyZuYW1lPSVzIiAlICggdXJsbGliIC4gcXVvdGVfcGx1cyAoIElpSWlJaSArICc/aGRuZWE9JyArIE8wb29vT29PICsgJyZnPScgKyBvMG8wT29PME9PTzAgKyAnJmhkY29yZT0zLjguMCcgKyAnfFVzZXItQWdlbnQ9JyArIHVybGxpYiAuIHF1b3RlX3BsdXMgKCBvME9vTzBPT29PME9vMCApICsgJyZYLVJlcXVlc3RlZC1XaXRoPVNob2Nrd2F2ZUZsYXNoLzIyLjAuMC4yMDknICkgLCBvME8wT09vMG9PICwgb08wMG9PT29vb08gKQogIGlmIDcxIC0gNzE6IG8wMDAwb09vT29PMG8gLSBPMCAtIGkxSTFpaTFJSTFpSUkgLiBJSTExaWlJSSAlIE9vTzBPMDAKICBPbzAwb08gKCBiYXNlNjQgLiBiNjRlbmNvZGUgKCBPME9vMGlJSUlpMUlpSTExSTEgKSApCiAgaWYgOTQgLSA5NDogaTExaUlpaUlpaSAvIG8wb28wbyAvIE9vTzBPMDAKIGV4Y2VwdCA6CiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgcmV0dXJuCiAgaWYgOSAtIDk6IE9vT08wb29PT29vME8gLyBvT28wTzBPb28gLyBJSTExMWlpaWkgKyBvMG9vMG8KZGVmIG8wTzAgKCB1cmwgLCBtYWlucmVmICwgYWx0cmVmID0gTm9uZSApIDoKIHRyeSA6CiAgb09PME9vb28gPSBJSTFpICggKQogIE9Pb09PME8wbzAgPSB1cmwKICBJMUlJMW9PT29vID0gbWFpbnJlZgogIG8wT29PME9Pb08wT28wID0gJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS80OC4wLjI1NjQuMTE2IFNhZmFyaS81MzcuMzYnCiAgaTFpaTExMTFpMWkgPSBbICggJ1JlZmVyZXInICwgSTFJSTFvT09vbyApICwgKCAnVXNlci1BZ2VudCcgLCBvME9vTzBPT29PME9vMCApIF0KICBpSU8wbyA9IGkxaWlJMTFJICggT09vT08wTzBvMCAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSAsIGNvb2tpZUphciA9IG9PTzBPb29vICkKICBpZiA5IC0gOTogT29PTzBvb09Pb28wTyAuIG9vT08wMG9PbyAqIGkxSUlpIC4gT29vb29vb29PTwogIElJMSA9ICc8c2NyaXB0Lio/aWQ9W1wnIl0oLio/KVtcJyJdLio/d2lkdGg9W1wnIl0/KC4qPylbXCciXT9cOy4qP2hlaWdodD1bXCciXT8oLio/KVtcJyJdP1w7Lio/c3JjPVtcJyJdKC4qPylbXCciXScKICBpZCAsIG9vMDBPTzAwMDBvTyAsIEkxSUkxICwgaWlpMTFpMUlJSUkgPSByZSAuIGZpbmRhbGwgKCBJSTEgLCBpSU8wbyApIFsgMCBdCiAgT29vb09vID0gJycKICBpMWlpMTExMWkxaSA9IFsgKCAnUmVmZXJlcicgLCBJMUlJMW9PT29vICkgLCAoICdVc2VyLUFnZW50JyAsIG8wT29PME9Pb08wT28wICkgXQogIGlmIDM0IC0gMzQ6IG8wMDAwb09vT29PMG8gKiBvMDAwMG9Pb09vTzBvIC0gb09vTzBvbzBPT09vIC0gTzAgLiBpMTFpSWlpSWlpCiAgaWYgMzIgLSAzMjogaUlpaTFJMTFJMUlJMSAuIG9vT08wMG9PbyAqIGlpaWlJaTExaSAvIElJMTFpaUlJIC4gSUkxMTFpaWlpIC0gT29PME8wMAogIElJSWkgPSBpMWlpSTExSSAoIGlpaTExaTFJSUlJICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICwgY29va2llSmFyID0gb09PME9vb28gKQogIElJSTExSWlpaUlpMSA9IEZhbHNlCiAgaWYgbm90ICdicm8uYWRjYScgaW4gSUlJaSA6CiAgIElpSTFJaTFpaSA9ICdzcmM9W1wnIl0oLio/KVtcJyJdJwogICBJaTExaWlJSWlJMSA9IHJlIC4gZmluZGFsbCAoIElpSTFJaTFpaSAsIElJSWkgKSBbIDAgXQogICBJaTExaWlJSWlJMSArPSBpZCArICcmdnc9JyArIG9vMDBPTzAwMDBvTyArICcmdmg9JyArIEkxSUkxCiAgZWxzZSA6CiAgIElJSTExSWlpaUlpMSA9IFRydWUKICAgSWlJMUlpMWlpID0gInZhciB1cmwgPSAnKC4qPyknIgogICBJaTExaWlJSWlJMSA9IHJlIC4gZmluZGFsbCAoIElpSTFJaTFpaSAsIElJSWkgKSBbIDAgXQogICBJaTExaWlJSWlJMSA9ICdodHRwOi8vYnJvLmFkY2Euc3QnICsgSWkxMWlpSUlpSTEgKyBpZCArICcmd2lkdGg9JyArIG9vMDBPTzAwMDBvTyArICcmaGVpZ2h0PScgKyBJMUlJMQogIGkxaWkxMTExaTFpID0gWyAoICdSZWZlcmVyJyAsIGFsdHJlZiBpZiBub3QgYWx0cmVmID09IE5vbmUgZWxzZSBtYWlucmVmICkgLCAoICdVc2VyLUFnZW50JyAsIG8wT29PME9Pb08wT28wICkgXQogIGlJTzBvID0gaTFpaUkxMUkgKCBJaTExaWlJSWlJMSAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSAsIGNvb2tpZUphciA9IG9PTzBPb29vICkKICBpZiA2IC0gNjogb29vTzBvbzBvT09PTyAqIE9vb29vb29vT08gKyBvMG9vMG8gLyBvMDAwMG9Pb09vTzBvCiAgaWYgbm90IElJSTExSWlpaUlpMSA6CiAgIHByaW50ICdpbiBub3QgYnJvYWQnICwgSWkxMWlpSUlpSTEgLCBpSU8wbwogICBpZiAnYmxvY2tzY3JpcHQ9JyBpbiBpSU8wbyBvciAnbmFtZT0iYmxvY2tzY3JpcHQiJyBpbiBpSU8wbyA6CiAgICB0cnkgOgogICAgIEkxSWlJMUlJaUkgPSAwCiAgICAgd2hpbGUgKCAnYmxvY2tzY3JpcHQ9JyBpbiBpSU8wbyBvciAnbmFtZT0iYmxvY2tzY3JpcHQiJyBpbiBpSU8wbyApIGFuZCBJMUlpSTFJSWlJIDwgMiA6CiAgICAgIHByaW50ICdpbiB3aGlsZScKICAgICAgSTFJaUkxSUlpSSArPSAxCiAgICAgIG9vb28gPSByZSAuIGZpbmRhbGwgKCAnbmFtZT0ieCIgdmFsdWU9IiguKj8pIicgLCBpSU8wbyApIFsgMCBdCiAgICAgIG8wbzBvbzBPb28gPSByZSAuIGZpbmRhbGwgKCAnbmFtZT0idXJsIiB2YWx1ZT0iKC4qPykiJyAsIGlJTzBvICkgWyAwIF0KICAgICAgaUkxaSA9IHJlIC4gZmluZGFsbCAoICduYW1lPSJibG9ja3NjcmlwdCIgdmFsdWU9IiguKj8pIicgLCBpSU8wbyApIFsgMCBdCiAgICAgIGlmIDMgLSAzOiBvb29PMG9vMG9PT09PIC8gT29PTzBvb09Pb28wTwogICAgICBpZiAzNCAtIDM0OiBpMTFpSWlpSWlpIC8gbzBvbzBvICogSUkxMWlpSUkgLiBPb08wTzAwCiAgICAgIG9vbzBPMDAwMDBvbzAgPSAnc2NpJwogICAgICB0cnkgOgogICAgICAgb29vME8wMDAwMG9vMCA9IHJlIC4gZmluZGFsbCAoICdzY3JpcHQ9KC4qPykmJyAsIGlJTzBvICkgWyAwIF0KICAgICAgZXhjZXB0IDogcGFzcwogICAgICBpZiA4MCAtIDgwOiBPb08wTzAwICsgb09vTzBvbzBPT09vCiAgICAgIGlJMTExaTFJMUlJID0gJ2h0dHA6Ly9oZGNhc3Qub3JnL2Jsb2Nrc2NyaXB0L2RldGVjdG9yLnBocD9ibG9ja3NjcmlwdD0lcyZ4PSVzJyAlICggb29vME8wMDAwMG9vMCAsIHVybGxpYiAuIHF1b3RlX3BsdXMgKCBvb29vICkgKQogICAgICBpZiA5OCAtIDk4OiBpaWlpSWkxMWkgLiBPb29vb29vb09PCiAgICAgIGlmIG5vdCBpSTExMWkxSTFJSSAuIHN0YXJ0c3dpdGggKCAnaHR0cCcgKSA6CiAgICAgICBpSTExMWkxSTFJSSA9ICdodHRwOi8vaGRjYXN0Lm9yZycgKyBpSTExMWkxSTFJSQogICAgICBPbzAwMCA9IFsgKCAnUmVmZXJlcicgLCBJaTExaWlJSWlJMSApICwgKCAnT3JpZ2luJyAsICdodHRwOi8vaGRjYXN0Lm9yZycgKSAsICggJ1VzZXItQWdlbnQnICwgbzBPb08wT09vTzBPbzAgKSBdCiAgICAgIE9vT09JSUlJSWlJMTFJaSA9IElpaWkxSWkxSSAoIGlJMTExaTFJMUlJICwgb09PME9vb28gLCBPbzAwMCAsIEkxSWlJMUlJaUkgKQogICAgICBpZiBPb09PSUlJSUlpSTExSWkgPT0gIiIgOiBicmVhawogICAgICBvbzBPT29Pb28wTzBPID0geyAnYmxvY2tzY3JpcHQnIDogaUkxaSAsICd4JyA6IG9vb28gLCAndXJsJyA6IG8wbzBvbzBPb28gLCAndmFsJyA6IE9vT09JSUlJSWlJMTFJaSB9CiAgICAgIG9vME9Pb09vbzBPME8gPSB1cmxsaWIgLiB1cmxlbmNvZGUgKCBvbzBPT29Pb28wTzBPICkKICAgICAgaWYgOTQgLSA5NDogaUlpaTFJMTFJMUlJMSAtIG9vT08wMG9PbyAuIE9vTzBPMDAKICAgICAgaUlPMG8gPSBpMWlpSTExSSAoIElpMTFpaUlJaUkxICwgcG9zdCA9IG9vME9Pb09vbzBPME8gLCBoZWFkZXJzID0gT28wMDAgLCBjb29raWVKYXIgPSBvT08wT29vbyApCiAgICAgIG9PTzBPb29vIC4gc2F2ZSAoIE9Pb29PME9Pb28gLCBpZ25vcmVfZGlzY2FyZCA9IFRydWUgKQogICAgICBpSU8wbyA9IGkxaWlJMTFJICggSWkxMWlpSUlpSTEgLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgLCBjb29raWVKYXIgPSBvT08wT29vbyApCiAgICBleGNlcHQgOgogICAgIHByaW50ICdlcnJvciBpbiBjYXRwY2hhJwogICAgIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogICBvT09PMG9Pb28gPSByZSAuIGZpbmRhbGwgKCAnPGRpdiBpZD1bXCciXXBsYXllci4qXHMqPGlmcmFtZS4qP3NyYz0oLio/KVxzJyAsIGlJTzBvICkKICAgaWYgbGVuICggb09PTzBvT29vICkgPiAwIDoKICAgIGkxaWkxMTExaTFpID0gWyAoICdSZWZlcmVyJyAsIElpMTFpaUlJaUkxICkgLCAoICdVc2VyLUFnZW50JyAsIG8wT29PME9Pb08wT28wICkgXQogICAgbzBPMG9vb29vb28wMCA9IGkxaWlJMTFJICggb09PTzBvT29vIFsgMCBdIC4gcmVwbGFjZSAoICcmYW1wOycgLCAnJicgKSAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSAsIGNvb2tpZUphciA9IG9PTzBPb29vICkKICAgIG9PT08wb09vbyA9IHJlIC4gZmluZGFsbCAoICdmaWxlLj86Lj9bIlwnXSguKj8pWyJcJ10nICwgbzBPMG9vb29vb28wMCApCiAgICBpZiBsZW4gKCBvT09PMG9Pb28gKSA9PSAwIDoKICAgICBvT09PMG9Pb28gPSByZSAuIGZpbmRhbGwgKCAnaGxzLj86Lj9bIlwnXSguKj8pWyJcJ10nICwgbzBPMG9vb29vb28wMCApCiAgICBvT09PMG9Pb28gPSBvT09PMG9Pb28gWyAwIF0KICAgIG9PTzBPb29vIC4gc2F2ZSAoIE9Pb29PME9Pb28gLCBpZ25vcmVfZGlzY2FyZCA9IFRydWUgKQogICAgcmV0dXJuIE9vMDBvTyAoIGJhc2U2NCAuIGI2NGVuY29kZSAoIG9PT08wb09vbyArICd8VXNlci1BZ2VudD0nICsgbzBPb08wT09vTzBPbzAgKyAnJlJlZmVyZXI9JyArIElpMTFpaUlJaUkxICkgKQogICBpZiAncnRtcCcgaW4gaUlPMG8gOgogICAgcHJpbnQgJ3J0bXAnCiAgICBvT09PMG9Pb28gPSByZSAuIGZpbmRhbGwgKCAnIihydG1wLio/KSInICwgaUlPMG8gKSBbIDAgXQogICAgb09PME9vb28gLiBzYXZlICggT09vb08wT09vbyAsIGlnbm9yZV9kaXNjYXJkID0gVHJ1ZSApCiAgICByZXR1cm4gT28wMG9PICggYmFzZTY0IC4gYjY0ZW5jb2RlICggb09PTzBvT29vICsgJyB0aW1lb3V0PTIwIGxpdmU9MScgKSApCiAgIGVsc2UgOgogICAgSTExMTFpaTExSUlJSSA9ICJMaW5rcyBub3QgZm91bmQsIHRyeSBhZ2FpbiIKICAgIG8wb08gPSB4Ym1jZ3VpIC4gRGlhbG9nICggKQogICAgSTFpMWlpaSA9IG8wb08gLiBvayAoICdMaW5rIHBhcnNpbmcgZmFpbGVkJyAsIEkxMTExaWkxMUlJSUkgKQogICAgcmV0dXJuIEZhbHNlCiAgICBpZiA0OCAtIDQ4OiBpSWlpMUkxMUkxSUkxICUgaTFJSWkgKyBvT28wTzBPb28gJSBPb28wMG9PbzAwbwogIGVsc2UgOgogICBpMWlpMTExMWkxaSA9IFsgKCAnUmVmZXJlcicgLCBJaTExaWlJSWlJMSApICwgKCAnVXNlci1BZ2VudCcgLCBvME9vTzBPT29PME9vMCApICwgKCAnWC1SZXF1ZXN0ZWQtV2l0aCcgLCAnWE1MSHR0cFJlcXVlc3QnICkgXQogICBpaUkxSUlJaSA9IGkxaWlJMTFJICggJ2h0dHA6Ly9icm8uYWRjYS5zdC9nZXRUb2tlbi5waHAnICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICwgY29va2llSmFyID0gb09PME9vb28gKQogICBpaUkxSUlJaSA9IHJlIC4gZmluZGFsbCAoICcidG9rZW4iOiIoLio/KSInICwgaWlJMUlJSWkgKSBbIDAgXQogICBvT09PMG9Pb28gPSByZSAuIGZpbmRhbGwgKCAnY3VybCA9ICIoLio/KSInICwgaUlPMG8gKSBbIDAgXQogICBvT09PMG9Pb28gPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCBvT09PMG9Pb28gKQogICBvT08wT29vbyAuIHNhdmUgKCBPT29vTzBPT29vICwgaWdub3JlX2Rpc2NhcmQgPSBUcnVlICkKICAgcmV0dXJuIE9vMDBvTyAoIGJhc2U2NCAuIGI2NGVuY29kZSAoIG9PT08wb09vbyArIGlpSTFJSUlpICsgJ3xVc2VyLUFnZW50PScgKyBvME9vTzBPT29PME9vMCArICcmUmVmZXJlcj0nICsgSWkxMWlpSUlpSTEgKSApCiAgIGlmIDc5IC0gNzk6IG9PbzBPME9vbyAlIG9vICUgbzAwMDBvT29Pb08wbyAvIGkxSUlpICUgb29PTzAwb09vCiBleGNlcHQgOgogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogIHJldHVybiBGYWxzZQogIGlmIDU2IC0gNTY6IGlJaWkxSTExSTFJSTEgLSBpMTFpSWlpSWlpICogaTFJMWlpMUlJMWlJSQogIGlmIDg0IC0gODQ6IElJMTFpaUlJICsgbzAwMDBvT29Pb08wbyArIE9vbzAwb09vMDBvCiAgaWYgMzMgLSAzMzogbzAwMDBvT29Pb08wbwpjbGFzcyBvb09PTzAwb09Pb29PICggeGJtY2d1aSAuIFdpbmRvd0RpYWxvZyApIDoKIGRlZiBfX2luaXRfXyAoIHNlbGYgLCAqIGFyZ3MgLCAqKiBrd2FyZ3MgKSA6CiAgc2VsZiAuIGNwdGxvYyA9IGt3YXJncyAuIGdldCAoICdjYXB0Y2hhJyApCiAgc2VsZiAuIGltZyA9IHhibWNndWkgLiBDb250cm9sSW1hZ2UgKCAzMzUgLCAzMCAsIDUyNCAsIDkwICwgc2VsZiAuIGNwdGxvYyApCiAgaWYgNDYgLSA0NjogaUlpaTFJMTFJMUlJMSAuIGkxMWlJaWlJaWkgLSBvT28wTzBPb28gJSBPMCAvIElJMTExaWlpaSAqIGkxSUlpCiAgc2VsZiAuIGFkZENvbnRyb2wgKCBzZWxmIC4gaW1nICkKICBzZWxmIC4gc2V0UHJvcGVydHkgKCAnem9yZGVyJyAsICI5OSIgKQogIGlmIDY2IC0gNjY6IE8wCiAgaWYgNTIgLSA1Mjogb29PTzAwb09vICogT29vb29vb29PTwogZGVmIGdldCAoIHNlbGYgKSA6CiAgc2VsZiAuIHNob3cgKCApCiAgeGJtYyAuIHNsZWVwICggMzAwMCApCiAgaWYgMTIgLSAxMjogTzAgKyBvb29PMG9vMG9PT09PICogaTFJSWkgLiBvb09PMDBvT28KICBpZiA3MSAtIDcxOiBvMG9vMG8gLSBPb28wMG9PbzAwbyAtIElJMTFpaUlJCiAgaWYgMjggLSAyODogaUlpaTFJMTFJMUlJMQogIGlmIDcgLSA3OiBPb28wMG9PbzAwbyAlIG9vb08wb28wb09PT08gKiBvT28wTzBPb28KICBJSTFpSWkxMSA9IHhibWNndWkgLiBEaWFsb2cgKCApIC4gaW5wdXQgKCAnRW50ZXIgQ2FwdGNoYScgLCB0eXBlID0geGJtY2d1aSAuIElOUFVUX0FMUEhBTlVNICkKICBzZWxmIC4gY2xvc2UgKCApCiAgcmV0dXJuIElJMWlJaTExCiAgcmV0dXJuIEZhbHNlCiAgaWYgNTggLSA1ODogb29vTzBvbzBvT09PTyAvIE9vT08wb29PT29vME8gKyBJSTExMWlpaWkgJSBpMUkxaWkxSUkxaUlJIC0gT29vb29vb29PTwogZGVmIHNob3dtZSAoICkgOgogIHNlbGYgLiBzZXRQcm9wZXJ0eSAoICd6b3JkZXInICwgIi0xIiApCiAgaWYgMjUgLSAyNTogb09vME8wT29vICUgT29vb29vb29PTyAqIE9vTzBPMDAgLSBpMUlJaSAqIElJMTExaWlpaSAqIGlpaWlJaTExaQpkZWYgSTFpSTFJMWlpMSAoICkgOgogaUlJaTEgPSAiIgogaWYgMSA9PSAxIDoKICBvME9vbzBvME9vID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgImNhcHRjaGFDLmltZyIgKQogIGlmIDU1IC0gNTU6IGlJaWkxSTExSTFJSTEgKiBpMUkxaWkxSUkxaUlJCiAgaWYgODUgLSA4NTogaUlpaTFJMTFJMUlJMSAuIElJMTExaWlpaQogIGlmIDU0IC0gNTQ6IG8wMDAwb09vT29PMG8gLiBPb29vb29vb09PICUgT29PME8wMAogIGlpMTExSTExSWkgPSAiIgogIGlmIDYgLSA2OiBvMDAwMG9Pb09vTzBvCiAgaWYgNzcgLSA3NzogaTFJSWkgKyBvb09PMDBvT28gLiBvbyAqIElJMTFpaUlJIC8gb29vTzBvbzBvT09PTyAvIG8wMDAwb09vT29PMG8KICBpZiA4NCAtIDg0OiBvb09PMDBvT28gLyBpSWlpMUkxMUkxSUkxCiAgaWYgaWkxMTFJMTFJaSA9PSAiIiA6CiAgIElpSTEgPSBvb09PTzAwb09Pb29PICggY2FwdGNoYSA9IG8wT29vMG8wT28gKQogICBpSUlpMSA9IElpSTEgLiBnZXQgKCApCiAgIGlmIDEzIC0gMTM6IE9vb29vb29vT08gKyBvb09PMDBvT28KZGVmIElpaWkxSWkxSSAoIGltYWdldXJsICwgY29va2llSmFyICwgaGVhZGVycyAsIHRyaWVzICkgOgogaUlJaTEgPSAiIgogaWYgMSA9PSAxIDoKICBvME9vbzBvME9vID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgImNhcHRjaGFDJXMuaW1nIiAlIHN0ciAoIHRyaWVzICkgKQogIGlpMUlJaWkgPSBvcGVuICggbzBPb28wbzBPbyAsICJ3YiIgKQogIGlpMUlJaWkgLiB3cml0ZSAoIGkxaWlJMTFJICggaW1hZ2V1cmwgLCBjb29raWVKYXIgLCBoZWFkZXJzID0gaGVhZGVycyApICkKICBpaTFJSWlpIC4gY2xvc2UgKCApCiAgaWkxMTFJMTFJaSA9ICIiCiAgaWYgMzEgLSAzMTogaUlpaTFJMTFJMUlJMSAqIE9vIC0gT29vb29vb29PTyAqIE9vCiAgaWYgNjAgLSA2MDogSUkxMWlpSUkgJSBJSTExaWlJSSAqIGlpaWlJaTExaSAvIG9vICogb09vME8wT29vICogb28KICBpZiA2MSAtIDYxOiBpaWlpSWkxMWkgKyBvT29PMG9vME9PT28gLyBpMUlJaSAqIGlpaWlJaTExaQogIGlmIGlpMTExSTExSWkgPT0gIiIgOgogICBJaUkxID0gb29PT08wMG9PT29vTyAoIGNhcHRjaGEgPSBvME9vbzBvME9vICkKICAgaUlJaTEgPSBJaUkxIC4gZ2V0ICggKQogcmV0dXJuIGlJSWkxCiBpZiA5MCAtIDkwOiBvMDAwMG9Pb09vTzBvICUgaWlpaUlpMTFpCmRlZiBpaWlpMSAoIHVybCApIDoKIHRyeSA6CiAgaWYgNjAgLSA2MDogb28gJSBpaWlpSWkxMWkgLyBPb28wMG9PbzAwbyAlIGlpaWlJaTExaSAqIGkxMWlJaWlJaWkgLyBpMUkxaWkxSUkxaUlJCiAgaWYgMzQgLSAzNDogbzBvbzBvIC0gSUkxMWlpSUkKICBJMUlJMW9PT29vID0gdXJsCiAgT09vTzBPMDAwTyA9ICdodHRwOi8vaGRmcmVlLnR2L3R2bG9nb3MuaHRtbCcKICBpMWlpMTExMWkxaSA9IFsgKCAnUmVmZXJlcicgLCBPT29PME8wMDBPICkgLCAoICdVc2VyLUFnZW50JyAsICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNDguMC4yNTY0LjExNiBTYWZhcmkvNTM3LjM2JyApIF0KICBpSU8wbyA9IGkxaWlJMTFJICggdXJsICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKICBpZiAyNSAtIDI1OiBpaWlpSWkxMWkgJSBvbyArIGkxMWlJaWlJaWkgKyBPMCAqIE9vb29vb29vT08KICBPT29PTzBPMG8wID0gcmUgLiBmaW5kYWxsICggJzxpZnJhbWUgZnJhbWVib3JkZXI9IjAuKj9zcmM9IiguKj8pIicgLCBpSU8wbyApCiAgaWYgbGVuICggT09vT08wTzBvMCApID09IDAgOgogICBPT29PTzBPMG8wID0gcmUgLiBmaW5kYWxsICggJzxpZnJhbWUuKj9zcmM9IiguKj8pIicgLCBpSU8wbyApCiAgIGlmIDY0IC0gNjQ6IGkxSUlpCiAgT09vT08wTzBvMCA9IE9Pb09PME8wbzAgWyAwIF0KICBpZiAxMCAtIDEwOiBvMG9vMG8gJSBPMCAvIG9vICUgT29PTzBvb09Pb28wTwogIGkxaWkxMTExaTFpID0gWyAoICdSZWZlcmVyJyAsIEkxSUkxb09Pb28gKSAsICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS80OC4wLjI1NjQuMTE2IFNhZmFyaS81MzcuMzYnICkgXQogIGlJTzBvID0gaTFpaUkxMUkgKCBPT29PTzBPMG8wICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKICBpZiAyNSAtIDI1OiBJSTExMWlpaWkgLyBvb09PMDBvT28KICBJSTEgPSAnPHNjcmlwdC4qP2lkPVtcJyJdKC4qPylbXCciXS4qP3dpZHRoPSguKj8pXDsuKj9oZWlnaHQ9KC4qPylcOy4qP3NyYz1bXCciXSguKj8pW1wnIl0nCiAgaWQgLCBvbzAwT08wMDAwb08gLCBJMUlJMSAsIGlpaTExaTFJSUlJID0gcmUgLiBmaW5kYWxsICggSUkxICwgaUlPMG8gKSBbIDAgXQogIE9vb29PbyA9ICcnCiAgaTFpaTExMTFpMWkgPSBbICggJ1JlZmVyZXInICwgT09vT08wTzBvMCApICwgKCAnVXNlci1BZ2VudCcgLCAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzQ4LjAuMjU2NC4xMTYgU2FmYXJpLzUzNy4zNicgKSBdCiAgSUlJaSA9IGkxaWlJMTFJICggaWlpMTFpMUlJSUkgLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogIElpSTFJaTFpaSA9ICdzcmM9W1wnIl0oLio/KVtcJyJdJwogIElpMTFpaUlJaUkxID0gcmUgLiBmaW5kYWxsICggSWlJMUlpMWlpICwgSUlJaSApIFsgMCBdCiAgSWkxMWlpSUlpSTEgKz0gaWQgKyAnJnZ3PScgKyBvbzAwT08wMDAwb08gKyAnJnZoPScgKyBJMUlJMQogIGkxaWkxMTExaTFpID0gWyAoICdSZWZlcmVyJyAsIE9Pb09PME8wbzAgKSAsICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS80OC4wLjI1NjQuMTE2IFNhZmFyaS81MzcuMzYnICkgXQogIHByaW50IElpMTFpaUlJaUkxCiAgaUlPMG8gPSBpMWlpSTExSSAoIElpMTFpaUlJaUkxICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKICBpZiA2NCAtIDY0OiBPMCAlIE9vCiAgaUlPMG8gPSBpSU8wbyAuIHJlcGxhY2UgKCAnIiwiJyAsICcnICkgLiByZXBsYWNlICggJ1siJyAsICcnICkgLiByZXBsYWNlICggJyJdJyAsICcnICkgLiByZXBsYWNlICggJy5qb2luKCIiKScgLCAnICcgKSAuIHJlcGxhY2UgKCByJ1wvJyAsICcvJyApCiAgaWYgNDAgLSA0MDogT29vMDBvT28wMG8gKyBPb09PMG9vT09vbzBPCiAgdmFycyA9IHJlIC4gZmluZGFsbCAoICd2YXIgKC4rPylccyo9XHMqKC4rPyk7JyAsIGlJTzBvICkKICBPb08wMDBPbzBvTyA9IHJlIC4gZmluZGFsbCAoICdpZD0oLis/KT4oW148XSspPCcgLCBpSU8wbyApCiAgT29PMDAwT28wb08gPSBkaWN0ICggT29PMDAwT28wb08gKQogIGlmIDQ2IC0gNDY6IE8wIC0gb09vME8wT29vIC4gT29vb29vb29PTwogIGkxSTExMUlJID0gcmUgLiBmaW5kYWxsICggJ3NyY3MqPXMqKD86XCd8XCIpKC4rP3BsYXllclwuanMoPzouKz98KSkoPzpcJ3xcIiknICwgaUlPMG8gKQogIGlmIGxlbiAoIGkxSTExMUlJICkgPT0gMCBhbmQgJ2Nhc3Q0dS50dicgaW4gaUlPMG8gOgogICBpaTExaTFJMWlpaWkgPSAnZmlsZTogWyJcJ10oaHR0cC4qPylbIlwnXScKICAgb08wME9vT08gPSByZSAuIGZpbmRhbGwgKCBpaTExaTFJMWlpaWkgLCBpSU8wbyApCiAgIGlmIGxlbiAoIG9PMDBPb09PICkgPT0gMCA6CiAgICBpaTExaTFJMWlpaWkgPSAnZmlsZTogWyJcJ10oaHR0cC4qPylbIlwnXScKICAgIG9PMDBPb09PID0gcmUgLiBmaW5kYWxsICggaWkxMWkxSTFpaWlpICwgaUlPMG8gKQogICBvTzAwT29PTyA9IG9PMDBPb09PIFsgMCBdCiAgIE9vMDBvTyAoIGJhc2U2NCAuIGI2NGVuY29kZSAoIG9PMDBPb09PICkgKQogIGVsc2UgOgogICBpZiA2NSAtIDY1OiBpMTFpSWlpSWlpICsgT29PME8wMCAqIE9vb29vb29vT08gLSBvb09PMDBvT28KICAgaTFJMTExSUkgPSBpMUkxMTFJSSBbIDAgXQogICBpMUkxMTFJSSA9IGkxaWlJMTFJICggaTFJMTExSUkgLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogICBpaUkxSUlJaSA9IHJlIC4gZmluZGFsbCAoICdzZWN1cmV0b2tlbjogKFteXG5dKyknICwgaUlPMG8gKSBbIDAgXQogICBpaUkxSUlJaSA9IHJlIC4gZmluZGFsbCAoICd2YXJccyslc1xzKj1ccyooPzpcJ3xcIikoLis/KSg/OlwnfFwiKScgJSBpaUkxSUlJaSAsIGkxSTExMUlJICkgWyAtIDEgXQogICBpZiAyNiAtIDI2OiBPb28wMG9PbzAwbyAlIElJMTFpaUlJICsgSUkxMWlpSUkgJSBPb09PMG9vT09vbzBPICogaTExaUlpaUlpaSAvIGkxSTFpaTFJSTFpSUkKICAgZm9yIE8wT09vTzAwT08wbyBpbiByYW5nZSAoIDEwMCApIDoKICAgIGZvciBpaWkxaSBpbiB2YXJzIDoKICAgICBpSU8wbyA9IGlJTzBvIC4gcmVwbGFjZSAoICcgICsgJXMnICUgaWlpMWkgWyAwIF0gLCBpaWkxaSBbIDEgXSApCiAgIGZvciBPT29PMG9PMDBvIGluIE9vTzAwME9vMG9PIC4ga2V5cyAoICkgOgogICAgaUlPMG8gPSBpSU8wbyAuIHJlcGxhY2UgKCAnICArIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCIlcyIpLmlubmVySFRNTCcgJSBPT29PMG9PMDBvICwgT29PMDAwT28wb08gWyBPT29PMG9PMDBvIF0gKQogICAgaWYgNzggLSA3ODogT29PME8wMCAqIG8wb28wbyAtIE9vb29vb29vT08gLSBvb09PMDBvT28KICAgIGlmIDgzIC0gODM6IE9vIC8gSUkxMWlpSUkKICAgaTExaUkxID0gcmUgLiBmaW5kYWxsICggJ2Z1bmN0aW9uICguKz8pXChcKVxzKlx7XHMqcmV0dXJuXCgoW15cbl0rKScgLCBpSU8wbyApCiAgIHVybCA9IHJlIC4gZmluZGFsbCAoICdmaWxlOiguKz8pXHMqXH0nICwgaUlPMG8gKSBbIDAgXQogICBmb3IgbzBPME9PTzBPb28gaW4gaTExaUkxIDoKICAgIHVybCA9IHVybCAuIHJlcGxhY2UgKCAnJXMoKScgJSBvME8wT09PME9vbyBbIDAgXSAsIG8wTzBPT08wT29vIFsgMSBdICkKICAgdXJsID0gdXJsIC4gcmVwbGFjZSAoICcpOycgLCAnJyApIC4gc3BsaXQgKCAiICsgJy8nICsgIiApCiAgIE8wME9vMG8wMDBvTyAsIGZpbGUgPSB1cmwgWyAwIF0gLiByZXBsYWNlICggJ3J0bXBlJyAsICdydG1wJyApIC4gc3RyaXAgKCApICwgdXJsIFsgMSBdCiAgIHVybCA9IE8wME9vMG8wMDBvTyArICcvIHBsYXlwYXRoPScgKyBmaWxlICsgJyBzd2ZVcmw9aHR0cDovL3d3dy5oZGNhc3QuaW5mby9teXBsYXllci9qd3BsYXllci5mbGFzaC5zd2YgZmxhc2h2ZXI9JyArICJXSU5cMjAyMSwwLDAsMjQyIiArICcgbGl2ZT0xIHRpbWVvdXQ9MjAgdG9rZW49JyArIGlpSTFJSUlpICsgJyBwYWdlVXJsPScgKyBJaTExaWlJSWlJMQogICBpZiAzNSAtIDM1OiBPb09PMG9vT09vbzBPCiAgIHByaW50IHVybAogICBPbzAwb08gKCBiYXNlNjQgLiBiNjRlbmNvZGUgKCB1cmwgKSApCiAgIGlmIDk0IC0gOTQ6IE9vIC8gaTExaUlpaUlpaSAlIE8wCiBleGNlcHQgOgogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogIHJldHVybgogIGlmIDcwIC0gNzA6IE9vT08wb29PT29vME8gLSBPb08wTzAwIC8gT29vb29vb29PTyAlIE9vb29vb29vT08KZGVmIG9vb28wbzBPT08wICggdXJsICkgOgogaWYgMTcgLSAxNzogSUkxMTFpaWlpICsgb28KIGkxaWkxMTExaTFpID0gWyAoICdVc2VyLUFnZW50JyAsICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNDguMC4yNTY0LjExNiBTYWZhcmkvNTM3LjM2JyApIF0KIE8wMDBPTzAgKCBJMWkxMWkgKCAiQWxsIHRpbWVzIGluIFVUQywgQmx1ZSBvbmVzIGFyZSBMSVZFIG5vdyIgLCAicmVkIiApICwgIiIgLCAwICwgJycgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogb28wMDBvID0gaTFpaUkxMUkgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMM2QzZHk1c1lXOXNZVEV1ZEhZdlpXNHRhVzUwTDJ4cGRtVXRjMk5vWldSMWJHVT0nICkgLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogb29vMG9PMG9PbyA9IG9vMDAwbyAuIHNwbGl0ICggJzxsaSBjbGFzcz0iaXRlbSBsaXN0LXNwb3J0JyApCiBwcmludCAnc3RhcnRpbmcnCiBmb3IgTzBPT09PMDAwME8gaW4gb29vMG9PMG9PbyBbIDEgOiA0MCBdIDoKICBpZiAzOCAtIDM4OiBPb08wTzAwCiAgaTFJaWlJMUkxSUlpMTFpMSA9IHJlIC4gZmluZGFsbCAoICc8dGltZS4qPz4oLio/KTwuKj9kaXNwbGF5bW8uKj8+KC4qPyk8Lio/aW1nLio/c3JjPSIoW14iXSspIi4qP2gzPihbXjxdKyk8Lio/aDI+KFtePF0rKTwuKj9ocmVmPSIoW14iXSspIi4qP2RhdGEtc3N0YXR1cz0iKFteIl0rKSInICwgTzBPT09PMDAwME8gLCByZSAuIERPVEFMTCApIFsgMCBdCiAgTzBPMDBPbyA9IHJlIC4gZmluZGFsbCAoICc8ZHQgY2xhc3M9ImZ1bGwiPkF2YWlsYWJsZSBpbi4qPzxkZD4oLio/KTxcL2RkPicgLCBPME9PT08wMDAwTyAsIHJlIC4gRE9UQUxMICkKICBpMTExaUkxID0gIiIKICB0cnkgOgogICBpZiBsZW4gKCBPME8wME9vICkgPiAwIDoKICAgIE8wTzAwT28gPSBPME8wME9vIFsgMCBdCiAgICBpZiAiV29ybGR3aWRlIiBpbiBPME8wME9vIDoKICAgICBpMTExaUkxID0gIldvcmxkd2lkZSIKICAgIGlmICJleGNlcHQiIGluIE8wTzAwT28gOgogICAgIGkxMTFpSTEgKz0gIiBFeGNlcHQgIgogICAgIGkxMTFpSTEgKz0gTzBPMDBPbyAuIHNwbGl0ICggJ2V4Y2VwdCcgKSBbIDEgXSAuIHNwbGl0ICggJz4nICkgWyAxIF0gLiBzcGxpdCAoICc8JyApIFsgMCBdCiAgICBpZiBsZW4gKCBpMTExaUkxICkgPT0gMCA6CiAgICAgaTExMWlJMSA9ICJPbmx5IGluICIKICAgICBpMTExaUkxICs9IE8wTzAwT28gLiBzcGxpdCAoICc+JyApIFsgMSBdIC4gc3BsaXQgKCAnPCcgKSBbIDAgXQogIGV4Y2VwdCA6IHBhc3MKICBpZiAyOCAtIDI4OiBPb08wTzAwICUgSUkxMWlpSUkgLSBvb09PMDBvT28gKyBPbyAvIE9vCiAgaTFpID0gMTEKICBJSUkxSTFJaTExaUkgPSAnWk0nCiAgaWYgODIgLSA4MjogT29PME8wMAogIGlmIDUgLSA1OiBvb09PMDBvT28gLyBvb09PMDBvT28gLSBPMCAtIG8wb28wbyArIG8wb28wbwogIG9PMDBvT09vb29PID0gJyVzICVzICVzXG4lcycgJSAoIEkxaTExaSAoIGkxSWlpSTFJMUlJaTExaTEgWyAwIF0gLCAncmVkJyApICwgSTFpMTFpICggaTFJaWlJMUkxSUlpMTFpMSBbIDEgXSAsIElJSTFJMUlpMTFpSSApICwgaTFJaWlJMUkxSUlpMTFpMSBbIDQgXSAsIEkxaTExaSAoIGkxSWlpSTFJMUlJaTExaTEgWyA0IF0gLCAoICdibHVlJyBpZiBpMUlpaUkxSTFJSWkxMWkxIFsgNiBdID09ICI0IiBlbHNlICJ3aGl0ZSIgKSApICkKICBpZiBsZW4gKCBpMTExaUkxICkgPiAwIDoKICAgb08wMG9PT29vb08gKz0gSTFpMTFpICggJyBbJXNdJyAlIGkxMTFpSTEgLCAncmVkJyApCiAgIGlmIDk5IC0gOTk6IE9vT08wb29PT29vME8gKiBPb29vb29vb09PIC8gT29vMDBvT28wMG8gLiBvb29PMG9vMG9PT09PIC0gaUlpaTFJMTFJMUlJMSAtIG8wMDAwb09vT29PMG8KICAgaWYgMzEgLSAzMTogb29vTzBvbzBvT09PTyAtIG9vT08wMG9PbyAvIElJMTFpaUlJIC4gaTFJSWkgLyBvMDAwMG9Pb09vTzBvCiAgIGlmIDY2IC0gNjY6IG9vT08wMG9PbwogIHVybCA9IGkxSWlpSTFJMUlJaTExaTEgWyA1IF0KICBvTzBPMG8wbzAwID0gaTFJaWlJMUkxSUlpMTFpMSBbIDIgXQogIGlmIDcyIC0gNzI6IG8wb28wbwogIGlmIG5vdCBvTzBPMG8wbzAwIC4gc3RhcnRzd2l0aCAoICdodHRwJyApIDoKICAgb08wTzBvMG8wMCA9ICdodHRwOicgKyBvTzBPMG8wbzAwCiAgaWYgbm90IHVybCAuIHN0YXJ0c3dpdGggKCAnaHR0cCcgKSA6CiAgIHVybCA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwzZDNkeTVzWVc5c1lURXVkSFk9JyApICsgdXJsCiAgIGlmIDkxIC0gOTE6IElJMTExaWlpaSAvIG9vb08wb28wb09PT08gKyBpSWlpMUkxMUkxSUkxIC4gT29PTzBvb09Pb28wTyAtIE8wCiAgTzAwME9PMCAoIG9PMDBvT09vb29PICwgYmFzZTY0IC4gYjY0ZW5jb2RlICggJ2luZmk6JyArIHVybCApICwgaTFpICwgb08wTzBvMG8wMCAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBUcnVlICkKICBpZiA3MCAtIDcwOiBvMDAwMG9Pb09vTzBvICogaWlpaUlpMTFpIC0gT29PTzBvb09Pb28wTyArIE9vTzBPMDAgJSBvT29PMG9vME9PT28gLSBvb29PMG9vMG9PT09PCiAgaWYgODEgLSA4MTogTzAgLiBPMAogIGlmIDc1IC0gNzU6IGlJaWkxSTExSTFJSTEgJSBvb29PMG9vMG9PT09PICsgb09vTzBvbzBPT09vICogTzAgLiBpMUkxaWkxSUkxaUlJIC0gT28KZGVmIGkxSUlpSUlJaTEgKCB1cmwgKSA6CiBpZiA4NCAtIDg0OiBpaWlpSWkxMWkgKyBJSTExaWlJSSAuIGkxSTFpaTFJSTFpSUkKIGkxaWkxMTExaTFpID0gWyAoICdSZWZlcmVyJyAsICJodHRwOi8vY3VzdG9tZXIuc2FmZXJzdXJmLmNvbS9vbmxpbmV0di5odG1sIiApICwgKCAnVXNlci1BZ2VudCcgLCAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzQ4LjAuMjU2NC4xMTYgU2FmYXJpLzUzNy4zNicgKSAsICggJ1gtUmVxdWVzdGVkLVdpdGgnICwgJ1hNTEh0dHBSZXF1ZXN0JyApIF0KIGkxaWkxMTExaTFpID0gWyAoICdVc2VyLUFnZW50JyAsICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNDguMC4yNTY0LjExNiBTYWZhcmkvNTM3LjM2JyApIF0KIGlmIDcxIC0gNzE6IE9vIC8gT28gLiBvT28wTzBPb28gJSBpMUkxaWkxSUkxaUlJCiBvbzAwMG8gPSBpMWlpSTExSSAoICdodHRwOi8vaGRmcmVlLnR2L3R2bG9nb3MuaHRtbCcgLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogaWYgNTAgLSA1MDogT28gKyBpMUkxaWkxSUkxaUlJIC8gT29PTzBvb09Pb28wTyAvIE9vT08wb29PT29vME8gJSBPMAogaWYgODcgLSA4NzogT29PME8wMCArIE9vCiBpZiA2NiAtIDY2OiBPb28wMG9PbzAwbyAqIElJMTFpaUlJICsgbzAwMDBvT29Pb08wbyAqIE9vbzAwb09vMDBvICsgSUkxMWlpSUkgLyBPb29vb29vb09PCiBvb28wb08wb09vID0gcmUgLiBmaW5kYWxsICggJzxhIGhyZWY9W1wnIl0oLio/KVtcJyJdLio/aW1nLio/c3JjPVtcJyJdKC4qPylbXCciXScgLCBvbzAwMG8gKQogaWYgODYgLSA4NjogbzAwMDBvT29Pb08wbyAuIGkxSTFpaTFJSTFpSUkgLSBpMUkxaWkxSUkxaUlJCiBpZiA3MSAtIDcxOiBpSWlpMUkxMUkxSUkxIC4gSUkxMTFpaWlpICUgaUlpaTFJMTFJMUlJMQogaWYgMjIgLSAyMjogaTExaUlpaUlpaSAlIG9Pb08wb28wT09PbyAlIE9vICUgT28gLiBvb09PMDBvT28KIGZvciBpMUlpaUkxSTFJSWkxMWkxIGluIG9vbzBvTzBvT28gOgogIGlmIDg1IC0gODU6IE9vIC4gTzAgLyBJSTExaWlJSSAqIE9vIC0gb29PTzAwb09vIC0gaTExaUlpaUlpaQogIGkxaSA9IDExCiAgSUlJMUkxSWkxMWlJID0gJ1pNJwogIGlmIDI1IC0gMjU6IE9vICUgT29PME8wMCAtIElJMTFpaUlJCiAgaWYgODAgLSA4MDogb29vTzBvbzBvT09PTyAlIElJMTExaWlpaSAtIE9vTzBPMDAgLSBpSWlpMUkxMUkxSUkxCiAgb08wMG9PT29vb08gPSBpMUlpaUkxSTFJSWkxMWkxIFsgMCBdCiAgb08wMG9PT29vb08gPSBvTzAwb09Pb29vTyAuIHNwbGl0ICggJy8nICkgWyAtIDEgXQogIGlmIDkgLSA5OiBPb28wMG9PbzAwbyAlIG9Pb08wb28wT09PbyAuIG9Pb08wb28wT09PbwogIGlmICctbGl2ZS1zdHJlYW0nIGluIG9PMDBvT09vb29PIDoKICAgb08wMG9PT29vb08gPSBvTzAwb09Pb29vTyAuIHNwbGl0ICggJy1saXZlLXN0cmVhbScgKSBbIDAgXQogIHVybCA9IGkxSWlpSTFJMUlJaTExaTEgWyAwIF0KICBvTzBPMG8wbzAwID0gaTFJaWlJMUkxSUlpMTFpMSBbIDEgXQogIGlmIDI4IC0gMjg6IE9vb29vb29vT08gJSBpaWlpSWkxMWkgKyBvT29PMG9vME9PT28gKyBPMCAuIG8wb28wbwogIGlmIG5vdCBvTzBPMG8wbzAwIC4gc3RhcnRzd2l0aCAoICdodHRwJyApIDoKICAgb08wTzBvMG8wMCA9ICdodHRwOi8vaGRmcmVlLnR2JyArIG9PME8wbzBvMDAKICBPMDAwT08wICggSTExSUlpSWlJICggb08wMG9PT29vb08gLiBjYXBpdGFsaXplICggKSAsIElJSTFJMUlpMTFpSSApICwgYmFzZTY0IC4gYjY0ZW5jb2RlICggJ2hkZnJlZTonICsgdXJsICkgLCBpMWkgLCBvTzBPMG8wbzAwICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IFRydWUgKQogIGlmIDgwIC0gODA6IGkxMWlJaWlJaWkgJSBvT29PMG9vME9PT28KICBpZiA1NCAtIDU0OiBPb28wMG9PbzAwbyArIE9vT08wb29PT29vME8gLSBpSWlpMUkxMUkxSUkxICUgT28gJSBvb29PMG9vMG9PT09PCiAgaWYgMTkgLSAxOTogb09vTzBvbzBPT09vIC8gaUlpaTFJMTFJMUlJMSAlIGkxSUlpIC4gT29vb29vb29PTwpkZWYgTzBvTzBvbzBPMCAoIHVybCApIDoKIGltcG9ydCBzYWZlbGlua3MKIHByaW50IHVybAogbzBPSWlJSSAsIG8wTzBPT29vID0gdXJsIC4gZGVjb2RlICggImJhc2U2NCIgKSAuIHNwbGl0ICggJywnICkKIE8wMDBPTzAgKCBJMWkxMWkgKCAnQ2hhbm5lbCBMYW5ndWFnZSBbJXNdIC5cblBsZWFzZSBDbGljayBhZ2FpbiBpZiBmYWlscyBmaXJzdCB0aW1lJyAuIGNhcGl0YWxpemUgKCApICUgbzBPSWlJSSAsICdyZWQnICkgLCAnJyAsIDAgLCAnJyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiBmb3IgaTFJaWlJMUkxSUlpMTFpMSBpbiBzYWZlbGlua3MgLiBnZXRTYWZlQ2hhbm5lbHMgKCB1cmwgKSA6CiAgTzAwME9PMCAoIGkxSWlpSTFJMUlJaTExaTEgWyAwIF0gLCBpMUlpaUkxSTFJSWkxMWkxIFsgMSBdICwgaTFJaWlJMUkxSUlpMTFpMSBbIDIgXSAsIGkxSWlpSTFJMUlJaTExaTEgWyAzIF0gLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogIGlmIDgyIC0gODI6IElJMTExaWlpaSAvIGkxSTFpaTFJSTFpSUkKZGVmIE9Pb08gKCB1cmwgPSBOb25lICkgOgogaWYgOCAtIDg6IG8wb28wbyArIG9vT08wMG9PbwogaWYgdXJsID09ICJzc3MiIDoKICBvbzBPT09vT28gPSBbICdCYXJjbGF5cyBQcmVtaWVyIExlYWd1ZScgLCAnQ1RIIFN0YWRpdW0nICwgJ0Zvb3RiYWxsJyAsICdGb290YmFsbCBDbHVicycgLCAnR29sZicgLCAnR2VvIFN1cGVyJyAsICdJbmRpYW4gUHJlbWllciBMZWFndWUgOScgLCAnTGl2ZSBDcmlja2V0JyAsICdOZXRiYWxsIFN1cGVyIExlYWd1ZScgLCAnTmF0aW9uYWwgQmFkbWludG9uIExlYWd1ZScgLCAnUGFraXN0YW4gQ3VwJyAsICdQVFYgU3BvcnRzJyAsICdQcmVtaWVyIExlYWd1ZSBEYXJ0cycgLCAnUmFjaW5nJyAsICdSdWdieSBVbmlvbiAmIExlYWd1ZScgLCAnV29ybGQgU3BvcnRzJyAsICdXcmVzdGxpbmcgJiBCb3hpbmcnICwgJ1dvcmxkIFNlbmlvcnMgU25vb2tlcicgXQogIElJaWlJSWkxID0gVHJ1ZQogIE8wMDBPTzAgKCBJMWkxMWkgKCAnPj5DbGljayBoZXJlIGZvciBBbGwgQ2F0ZWdvcmllczw8JyAuIGNhcGl0YWxpemUgKCApICwgJ3JlZCcgKSAsICJwaXR2IiAsIDY2ICwgJycgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gVHJ1ZSApCiBlbHNlIDoKICBvbzBPT09vT28gPSBbIHVybCBdCiAgSUlpaUlJaTEgPSBGYWxzZQogIGlmIDkgLSA5OiBJSTExaWlJSSArIE9vbzAwb09vMDBvCiBmb3IgbzBPSWlJSSAsIElpaWlJaWlJICwgbzBvME8gLCBvb29vTzBvT29PT29PIGluIEkxaUlJMUlJaTFJaUkgKCBvbzBPT09vT28gLCBJSWlpSUlpMSApIDoKICBvME9JaUlJID0gbzBPSWlJSSAuIGVuY29kZSAoICdhc2NpaScgLCAnaWdub3JlJyApIC4gZGVjb2RlICggJ2FzY2lpJyApCiAgaWYgSWlpaUlpaUkgPT0gJ21hbnVhbDInIDoKICAgaTFpID0gMzcKICBlbGlmIElpaWlJaWlJID09ICdtYW51YWwzJyA6CiAgIGkxaSA9IDQ1CiAgZWxzZSA6CiAgIGkxaSA9IDExCiAgTzAwME9PMCAoIEkxMUlJaUlpSSAoIG8wT0lpSUkgLiBjYXBpdGFsaXplICggKSAsICdaTScgKSAsIGJhc2U2NCAuIGI2NGVuY29kZSAoIG8wbzBPICkgLCBpMWkgLCBvb29vTzBvT29PT29PICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKIHJldHVybgogaWYgOCAtIDg6IGlJaWkxSTExSTFJSTEKIGlmIDU1IC0gNTU6IGlpaWlJaTExaQogaWYgMzcgLSAzNzogb29vTzBvbzBvT09PTyAvIGkxMWlJaWlJaWkgLyBPb08wTzAwCmRlZiBvMG9vT08wME9PMG8wTyAoIHVybCA9IE5vbmUgLCBhcHB0eXBlID0gTm9uZSApIDoKIGlmIDM1IC0gMzU6IE9vbzAwb09vMDBvICogaTFJMWlpMUlJMWlJSSAtIGlJaWkxSTExSTFJSTEgKyBPb28wMG9PbzAwbyAuIE9vb29vb29vT08KIGlmIHVybCA9PSAic3NzIiA6CiAgb28wT09Pb09vID0gWyBpaTExMWlJMWkxICggIlNwb3J0cyIgLCBhcHB0eXBlID0gYXBwdHlwZSAsIGZpbmRpbiA9IFRydWUgKSBdCiAgdHJ5IDoKICAgb28wT09Pb09vIC4gYXBwZW5kICggaWkxMTFpSTFpMSAoICJjcmlja2V0IiAsIGFwcHR5cGUgPSBhcHB0eXBlICwgZmluZGluID0gVHJ1ZSApICkKICBleGNlcHQgOiBwYXNzCiAgSUlpaUlJaTEgPSBUcnVlCiAgTzAwME9PMCAoIEkxaTExaSAoICc+PkNsaWNrIGhlcmUgZm9yIEFsbCBDYXRlZ29yaWVzPDwnIC4gY2FwaXRhbGl6ZSAoICkgLCAncmVkJyApICwgIm5ldHdvcmt0djIiIGlmIGFwcHR5cGUgPT0gMSBlbHNlICJuZXR3b3JrdHYzIiAsIDY2ICwgJycgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gVHJ1ZSApCiBlbHNlIDoKICBvbzBPT09vT28gPSBbIHVybCBdCiAgSUlpaUlJaTEgPSBGYWxzZQogZm9yIG8wT0lpSUkgLCBJaWlpSWlpSSAsIG8wbzBPICwgb29vb08wb09vT09vTyBpbiBPTzAwMCAoIG9vME9PT29PbyAsIHNwb3J0cyA9IFRydWUgLCBhcHB0eXBlID0gYXBwdHlwZSApIDoKICBvME9JaUlJID0gbzBPSWlJSSAuIGVuY29kZSAoICdhc2NpaScgLCAnaWdub3JlJyApIC4gZGVjb2RlICggJ2FzY2lpJyApCiAgaWYgSWlpaUlpaUkgPT0gJ21hbnVhbDInIDoKICAgaTFpID0gMzcKICBlbGlmIElpaWlJaWlJID09ICdtYW51YWwzJyA6CiAgIGkxaSA9IDQ1CiAgZWxzZSA6CiAgIGkxaSA9IDExCiAgTzAwME9PMCAoIEkxMUlJaUlpSSAoIG8wT0lpSUkgLiBjYXBpdGFsaXplICggKSAsICdaTScgKSAsIGJhc2U2NCAuIGI2NGVuY29kZSAoIG8wbzBPICkgLCBpMWkgLCBvb29vTzBvT29PT29PICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKIHJldHVybgogaWYgMzEgLSAzMTogb29PTzAwb09vICogTzAgLyBPb09PMG9vT09vbzBPIC4gT29vb29vb29PTyAqIE9vT08wb29PT29vME8gLiBvT29PMG9vME9PT28KZGVmIElJSTFJSTExMUlJMTEgKCB1cmwgPSBOb25lICkgOgogaWYgNzIgLSA3MjogaTFJSWkgJSBPbyAlIG9vb08wb28wb09PT08gJSBpaWlpSWkxMWkgLSBpaWlpSWkxMWkKIGlmIHVybCA9PSAic3NzIiA6CiAgb28wT09Pb09vID0gWyBPT29vME8wT09PbzAgKCAiU3BvcnRzIiApIF0KICBJSWlpSUlpMSA9IFRydWUKICBPMDAwT08wICggSTFpMTFpICggJz4+Q2xpY2sgaGVyZSBmb3IgQWxsIENhdGVnb3JpZXM8PCcgLiBjYXBpdGFsaXplICggKSAsICdyZWQnICkgLCAibmV0d29ya3R2IiAsIDY2ICwgJycgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gVHJ1ZSApCiBlbHNlIDoKICBvbzBPT09vT28gPSBbIHVybCBdCiAgSUlpaUlJaTEgPSBGYWxzZQogZm9yIG8wT0lpSUkgLCBJaWlpSWlpSSAsIG8wbzBPICwgb29vb08wb09vT09vTyBpbiBJaWlpaTFJaWkxSSAoIG9vME9PT29PbyAsIHNwb3J0cyA9IFRydWUgKSA6CiAgbzBPSWlJSSA9IG8wT0lpSUkgLiBlbmNvZGUgKCAnYXNjaWknICwgJ2lnbm9yZScgKSAuIGRlY29kZSAoICdhc2NpaScgKQogIGlmIElpaWlJaWlJID09ICdtYW51YWwyJyA6CiAgIGkxaSA9IDM3CiAgZWxpZiBJaWlpSWlpSSA9PSAnbWFudWFsMycgOgogICBpMWkgPSA0NQogIGVsc2UgOgogICBpMWkgPSAxMQogIE8wMDBPTzAgKCBJMTFJSWlJaUkgKCBvME9JaUlJIC4gY2FwaXRhbGl6ZSAoICkgLCAnWk0nICkgLCBiYXNlNjQgLiBiNjRlbmNvZGUgKCBvMG8wTyApICwgaTFpICwgb29vb08wb09vT09vTyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiByZXR1cm4KIGlmIDgzIC0gODM6IG9PbzBPME9vbwpkZWYgb09vT28wICggdXJsID0gTm9uZSApIDoKIGlJaW9PbyA9IFsgXQogaWYgdXJsID09ICJzc3MiIDoKICBvbzBPT09vT28gPSBvb09vMG8gKCAnU1BPUlRTIFRWJyApCiAgSUlpaUlJaTEgPSBUcnVlCiAgTzAwME9PMCAoIEkxaTExaSAoICc+PkNsaWNrIGhlcmUgZm9yIEFsbCBDYXRlZ29yaWVzPDwnIC4gY2FwaXRhbGl6ZSAoICkgLCAncmVkJyApICwgImZhc3R0diIgLCA2NiAsICcnICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IFRydWUgKQogZWxzZSA6CiAgb28wT09Pb09vID0gdXJsCiAgSUlpaUlJaTEgPSBGYWxzZQogZm9yIG8wT0lpSUkgLCBJaWlpSWlpSSAsIG8wbzBPICwgb29vb08wb09vT09vTyBpbiBJSUkgKCBvbzBPT09vT28gLCBzcG9ydHMgPSBUcnVlICkgOgogIG8wT0lpSUkgPSBvME9JaUlJIC4gZW5jb2RlICggJ2FzY2lpJyAsICdpZ25vcmUnICkgLiBkZWNvZGUgKCAnYXNjaWknICkKICBpZiBJaWlpSWlpSSA9PSAnbWFudWFsMicgOgogICBpMWkgPSAzNwogIGVsaWYgSWlpaUlpaUkgPT0gJ21hbnVhbDMnIDoKICAgaTFpID0gNDUKICBlbHNlIDoKICAgaTFpID0gMTEKICBPMDAwT08wICggSTExSUlpSWlJICggbzBPSWlJSSAuIGNhcGl0YWxpemUgKCApICwgJ1pNJyApICwgYmFzZTY0IC4gYjY0ZW5jb2RlICggbzBvME8gKSAsIGkxaSAsIG9vb29PMG9Pb09Pb08gLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogcmV0dXJuCmRlZiBJaWlJT29PICggdXJsID0gTm9uZSApIDoKIGlmIDY3IC0gNjc6IG9Pb08wb28wT09PbyArIG8wMDAwb09vT29PMG8KIGlmIHVybCA9PSAic3NzIiA6CiAgb28wT09Pb09vID0gWyAnRXh0cmEgVGltZScgLCAnVFNOJyAsICdDdGggU3RhZGl1bScgLCAnVUZDJyAsICdUMjAgV29ybGQgQ3VwJyAsICdIb3JzZSBSYWNpbmcnICwgJ0NyaWNrZXQnICwgJ0Zvb3RiYWwnICwgJ1Nwb3J0cycgLCAnR29sZicgLCAnQm94aW5nICYgV3Jlc3RsaW5nJyAsICdUMjAgQmlnIEJhc2ggTGVhZ3VlJyAsICdORkwgTGl2ZScgLCAnRm9vdGJhbCBDbHVicycgLCAnU3BvcnRzIFRpbWUnIF0KICBJSWlpSUlpMSA9IFRydWUKICBPMDAwT08wICggSTFpMTFpICggJz4+Q2xpY2sgaGVyZSBmb3IgQWxsIENhdGVnb3JpZXM8PCcgLiBjYXBpdGFsaXplICggKSAsICdyZWQnICkgLCAidW5pdHYiICwgNjYgLCAnJyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBUcnVlICkKIGVsc2UgOgogIG9vME9PT29PbyA9IFsgdXJsIF0KICBJSWlpSUlpMSA9IEZhbHNlCiBmb3IgbzBPSWlJSSAsIElpaWlJaWlJICwgbzBvME8gLCBvb29vTzBvT29PT29PIGluIG8wTzAwT29vb29PICggb28wT09Pb09vICwgSUlpaUlJaTEgLCBkZXNpID0gRmFsc2UgKSA6CiAgbzBPSWlJSSA9IG8wT0lpSUkgLiBlbmNvZGUgKCAnYXNjaWknICwgJ2lnbm9yZScgKSAuIGRlY29kZSAoICdhc2NpaScgKQogIGlmIElpaWlJaWlJID09ICdtYW51YWwyJyA6CiAgIGkxaSA9IDM3CiAgZWxpZiBJaWlpSWlpSSA9PSAnbWFudWFsMycgOgogICBpMWkgPSA0NQogIGVsc2UgOgogICBpMWkgPSAxMQogIE8wMDBPTzAgKCBJMTFJSWlJaUkgKCBvME9JaUlJIC4gY2FwaXRhbGl6ZSAoICkgLCAnWk0nICkgLCBiYXNlNjQgLiBiNjRlbmNvZGUgKCBvMG8wTyApICwgaTFpICwgb29vb08wb09vT09vTyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiByZXR1cm4KIGlmIDc3IC0gNzc6IG9vICUgT28KZGVmIG9PMG9vICggdXJsICkgOgogb28wT09Pb09vID0gWyBdCiBvMDBvMG8wMDBPbyA9IDAKIGlmIHVybCA9PSAidW5pdHYiIDoKICBvbzBPT09vT28gPSBPb29vMDBPT28gKCApCiAgbzAwbzBvMDAwT28gPSA1MwogZWxpZiB1cmwgPT0gInd0diIgOgogIG9vME9PT29PbyA9IGlJaUlJICggKQogIG8wMG8wbzAwME9vID0gNjIKIGVsaWYgdXJsID09ICJwYWt0diIgOgogIG9vME9PT29PbyA9IE9vb09PICggKQogIG8wMG8wbzAwME9vID0gNTIKIGVsaWYgdXJsID09ICJ1a3R2IiA6CiAgb28wT09Pb09vID0gaWlvMG9vME9vICggKQogIG8wMG8wbzAwME9vID0gNTcKIGVsaWYgdXJsID09ICJwdjIiIDoKICBpZiBvTzAwb09Pb29vTyAuIGxvd2VyICggKSA9PSAibW92aWVzIiA6CiAgIG9vME9PT29PbyAuIGFwcGVuZCAoICggJ2Vtb3ZpZXM6eyJsYW5nIjoiaGluZGkiLCJ0eXBlIjoibWFpbiJ9JyAsICdIaW5kaSAtIEVpbnRodXNhbiBNb3ZpZXMnICkgKQogICBvbzBPT09vT28gLiBhcHBlbmQgKCAoICdlbW92aWVzOnsibGFuZyI6ImhpbmRpIiwidHlwZSI6Im1haW4ifScgLCAnUHVuamFiaSAtIEVpbnRodXNhbiBNb3ZpZXMnICkgKQogIG9vME9PT29PbyArPSBJaTExMSAoIFRydWUgaWYgb08wMG9PT29vb08gLiBsb3dlciAoICkgPT0gIm1vdmllcyIgZWxzZSBGYWxzZSApCiAgaWYgMTAgLSAxMDogb09vTzBvbzBPT09vCiAgaWYgODcgLSA4NzogT29PME8wMCAlIG8wMDAwb09vT29PMG8KICBvMDBvMG8wMDBPbyA9IDM2CiBlbGlmIHVybCA9PSAibW9uYSIgOgogIG9vME9PT29PbyA9IG9vTzBvMG9PMCAoICkKICBvMDBvMG8wMDBPbyA9IDY4CiBlbGlmIHVybCA9PSAicHRjIiA6CiAgb28wT09Pb09vID0gbzBvT08wMG8wbyAoICkKICBvMDBvMG8wMDBPbyA9IDUxCiBlbGlmIHVybCA9PSAiZ3R2IiA6CiAgb28wT09Pb09vID0gSTExMTEgKCApCiAgbzAwbzBvMDAwT28gPSA3MAogZWxpZiB1cmwgPT0gInBpdHYiIDoKICBvbzBPT09vT28gPSBvMG9PME9vTzBvICggKQogIG8wMG8wbzAwME9vID0gNzEKIGVsaWYgdXJsID09ICJuZXR3b3JrdHYiIDoKICBvbzBPT09vT28gPSBJMTFJMTExaTFJMSAoICkKICBvMDBvMG8wMDBPbyA9IDk0CiBlbGlmIHVybCA9PSAibmV0d29ya3R2MiIgOgogIG9vME9PT29PbyA9IGlpaTEgKCBhcHB0eXBlID0gMSApCiAgbzAwbzBvMDAwT28gPSA5NgogZWxpZiB1cmwgPT0gIm5ldHdvcmt0djMiIDoKICBvbzBPT09vT28gPSBpaWkxICggYXBwdHlwZSA9IDIgKQogIG8wMG8wbzAwME9vID0gOTgKIGVsaWYgdXJsID09ICJmYXN0dHYiIDoKICBvbzBPT09vT28gPSBbIF0KICBmb3IgTzBPb28wTyBpbiBvMG9vMDAwMCAoICkgWyAiTElWRVRWIiBdIDoKICAgb28wT09Pb09vIC4gYXBwZW5kICggKCBPME9vbzBPIFsgImNpZCIgXSAsIE8wT29vME8gWyAiY2F0ZWdvcnlfbmFtZSIgXSApICkKICBvMDBvMG8wMDBPbyA9IDkyCiBmb3IgbzBPSWlJSSBpbiBvbzBPT09vT28gOgogIHByaW50IG8wT0lpSUkKICBpZiB0eXBlICggbzBPSWlJSSApIC4gX19uYW1lX18gPT0gJ3R1cGxlJyA6CiAgIEkxMUkxSUlpaUlJMSAsIG8wT0lpSUkgPSBvME9JaUlJCiAgIG8wT0lpSUkgPSBvME9JaUlJIC4gZW5jb2RlICggInV0Zi04IiApCiAgZWxzZSA6CiAgIEkxMUkxSUlpaUlJMSA9IG8wT0lpSUkKICBPMDAwT08wICggSTExSUlpSWlJICggbzBPSWlJSSAuIGNhcGl0YWxpemUgKCApICwgJ3JlZCcgKSAsIEkxMUkxSUlpaUlJMSAsIG8wMG8wbzAwME9vICwgJycgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gVHJ1ZSApCiAgaWYgMTggLSAxODogaTFJSWkKICBpZiA0IC0gNDogb29vTzBvbzBvT09PTwogIGlmIDkzIC0gOTM6IGlpaWlJaTExaSAlIGkxSUlpCmRlZiBPT28wICggdXJsID0gTm9uZSApIDoKIG9vME8wbyA9IGkxaWlJMTFJICggJ2h0dHA6Ly92aWRlb3N0cmVhbS5kbi51YS9saXN0L0dldExlZnRNZW51U2hvcnQ/bG5nPWVuJyApCiBvb08wb08wME8wbyA9IGpzb24gLiBsb2FkcyAoIG9vME8wbyApCiBvTzAgPSBbIF0KIE8wMDBPTzAgKCAnUmVmcmVzaCcgLCAnTGl2ZScgLCAzOSAsICcnICkKIGZvciBpMTFpSUlpMTEgaW4gb29PMG9PMDBPMG8gWyAiVmFsdWUiIF0gOgogIG8wT0lpSUkgPSBJMTFJSWlJaUkgKCBpMTFpSUlpMTEgWyAiU3BvcnQiIF0gLCAnRUInICkKICBpZiA1NSAtIDU1OiBpaWlpSWkxMWkgKyBPMCAvIGkxSTFpaTFJSTFpSUkgJSBPbyAvIE9vb29vb29vT08KICBpZiBub3QgImN5YmVyIiBpbiBvME9JaUlJIC4gbG93ZXIgKCApIGFuZCBub3QgJ3hnYW1lJyBpbiBpMTFpSUlpMTEgWyAiVkkiIF0gOgogICBpZiAiT3BwMSIgaW4gaTExaUlJaTExIGFuZCBub3QgaTExaUlJaTExIFsgIk9wcDEiIF0gLiBlbmNvZGUgKCAnYXNjaWknICwgJ2lnbm9yZScgKSA9PSAiIiA6CiAgICBvME9JaUlJICs9ICIgOiIgKyBpMTFpSUlpMTEgWyAiT3BwMSIgXSAuIGVuY29kZSAoICdhc2NpaScgLCAnaWdub3JlJyApICsgIiB2cyAiICsgaTExaUlJaTExIFsgIk9wcDIiIF0gLiBlbmNvZGUgKCAnYXNjaWknICwgJ2lnbm9yZScgKQogICBlbHNlIDoKICAgIG8wT0lpSUkgKz0gIiA6IiArIGkxMWlJSWkxMSBbICJMaWdhIiBdIC4gZW5jb2RlICggJ2FzY2lpJyAsICdpZ25vcmUnICkKICAgSTExSTFJSWlpSUkxID0gaTExaUlJaTExIFsgIlZJIiBdCiAgIE8wMDBPTzAgKCBvME9JaUlJICwgYmFzZTY0IC4gYjY0ZW5jb2RlICggSTExSTFJSWlpSUkxICkgLCA0MCAsICcnICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKICAgaWYgOTggLSA5ODogbzAwMDBvT29Pb08wbyAqIGlJaWkxSTExSTFJSTEgJSBPb08wTzAwICUgSUkxMWlpSUkKICAgaWYgODggLSA4ODogaTFJMWlpMUlJMWlJSSAtIElJMTExaWlpaSAvIGkxSTFpaTFJSTFpSUkgLSBvMDAwMG9Pb09vTzBvCmRlZiBpSTFpaWkxaUkxICggdXJsICkgOgogdHJ5IDoKICB1cmwgPSAiaHR0cDovL3d3dy5oZGNyaWMuY29tL290aGVyLXNwb3J0cy1saXZlLXN0cmVhbWluZyIKICBPbzBPb08wMG9PTzBvID0gdXJsbGliMiAuIFJlcXVlc3QgKCB1cmwgKQogIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS80MC4wLjIyMTQuOTMgU2FmYXJpLzUzNy4zNicgKQogIE9PTzAwTyA9IHVybGxpYjIgLiB1cmxvcGVuICggT28wT29PMDBvT08wbyApCiAgSUlJSUkgPSBPT08wME8gLiByZWFkICggKQogIE9PTzAwTyAuIGNsb3NlICggKQogIGlmIDY1IC0gNjU6IE9vb29vb29vT08KICBpZiAxOCAtIDE4OiBPMCAtIGkxSUlpIC4gbzBvbzBvCiAgaWYgOTggLSA5ODogT29vMDBvT28wMG8KICBpZiA3MyAtIDczOiBPb08wTzAwIC0gaTFJMWlpMUlJMWlJSSAuIGlpaWlJaTExaSAlIGkxSUlpIC4gTzAKICBpZiAxNSAtIDE1OiBPbyAuIGlJaWkxSTExSTFJSTEgKiBvbyAlIE9vT08wb29PT29vME8KICBpZiAyMSAtIDIxOiBvb09PMDBvT28gLSBvbyAuIE9vb29vb29vT08KICBpZiA2IC0gNjogaUlpaTFJMTFJMUlJMSAtIGlJaWkxSTExSTFJSTEgJSBPb28wMG9PbzAwbyAvIGlJaWkxSTExSTFJSTEgKiBvMG9vMG8KICBpZiAzIC0gMzogSUkxMWlpSUkgLiBvb29PMG9vMG9PT09PIC8gT29PME8wMAogIGlmIDg5IC0gODk6IE9vb29vb29vT08gLiBpSWlpMUkxMUkxSUkxIC4gT29PME8wMCAqIGlJaWkxSTExSTFJSTEgLSBvMG9vMG8KICBpZiA5MiAtIDkyOiBPb29vb29vb09PIC0gb09vTzBvbzBPT09vIC0gT29vb29vb29PTyAlIG9vICUgb28gJSBpSWlpMUkxMUkxSUkxCiAgaWYgOTIgLSA5MjogaTFJMWlpMUlJMWlJSSAqIE8wICUgbzBvbzBvIC4gaUlpaTFJMTFJMUlJMQogIGlmIDY2IC0gNjY6IE9vT08wb29PT29vME8gKyBvMDAwMG9Pb09vTzBvCiAgaWYgNDggLSA0ODogb09vTzBvbzBPT09vCiAgaWYgOTYgLSA5NjogT28gLiBPb29vb29vb09PCiAgaWYgMzkgLSAzOTogSUkxMWlpSUkgKyBvb09PMDBvT28KICBJMWkxMTFJID0gJzxsaSBjbGFzcz0iaGFzLXN1YiI+PGEgaHJlZj0iKC4qPykiLippY29uICguKj8pIicKICBPb29PbzBvbzBPMG8wME8gPSByZSAuIGZpbmRhbGwgKCBJMWkxMTFJICwgSUlJSUkgKQogIGZvciBPb28wb28gaW4gT29vT28wb28wTzBvMDBPIDoKICAgaWYgODAgLSA4MDogSUkxMWlpSUkgJSBvb09PMDBvT28gLyBvT28wTzBPb28KICAgbzBPSWlJSSA9IE9vbzBvbyBbIDEgXQogICBJMTFJMUlJaWlJSTEgPSBPb28wb28gWyAwIF0KICAgT09PT08wMDBvbzAgPSAiIgogICBpZiAyIC0gMjogbzBvbzBvICogb28gLiBvb29PMG9vMG9PT09PICogaTFJMWlpMUlJMWlJSQogICBpZiBub3QgSTExSTFJSWlpSUkxIC4gc3RhcnRzd2l0aCAoICdodHRwJyApIDogSTExSTFJSWlpSUkxID0gdXJsICsgSTExSTFJSWlpSUkxCiAgIGlmIG5vdCBPT09PTzAwMG9vMCAuIHN0YXJ0c3dpdGggKCAnaHR0cCcgKSA6IE9PT09PMDAwb28wID0gdXJsICsgT09PT08wMDBvbzAKICAgaWYgMzAgLSAzMDogb29vTzBvbzBvT09PTwogICBpZiA5OCAtIDk4OiBpMUkxaWkxSUkxaUlJIC8gaUlpaTFJMTFJMUlJMSAuIE9vT08wb29PT29vME8gKiBpMTFpSWlpSWlpICsgT29PME8wMCAqIE9vT08wb29PT29vME8KICAgaWYgNjcgLSA2NzogaTFJMWlpMUlJMWlJSQogICBPMDAwT08wICggbzBPSWlJSSAuIGNhcGl0YWxpemUgKCApICwgSTExSTFJSWlpSUkxICwgMjcgLCBPT09PTzAwMG9vMCAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiAgIGlmIDg4IC0gODg6IE9vTzBPMDAKICAgaWYgOCAtIDg6IG9Pb08wb28wT09PbwogICBpZiA4MiAtIDgyOiBPb29vb29vb09PCiBleGNlcHQgOiB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIGlmIDc1IC0gNzU6IElJMTExaWlpaSAlIG9vICsgSUkxMWlpSUkgJSBPb29vb29vb09PIC8gb29vTzBvbzBvT09PTwogaWYgNCAtIDQ6IGkxMWlJaWlJaWkgLSBJSTExaWlJSSAlIG9Pb08wb28wT09PbyAqIG8wb28wbyAlIE9vbzAwb09vMDBvCiBpZiA3MSAtIDcxOiBPbyAuIE9vIC0gaUlpaTFJMTFJMUlJMQogaWYgMjIgLSAyMjogT29vb29vb29PTyAvIG9Pb08wb28wT09PbyAlIGkxSTFpaTFJSTFpSUkgKiBvT28wTzBPb28KZGVmIElpMUlpaWlJMWlpICggdXJsICkgOgogdHJ5IDoKICBvMG9PT29vME8gPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMM2RwYkd4dmQyWmxaV1J6TG5kcGJHeHZkeTUwZGk5M2FXeHNiM2ROWVhSamFFRnlZMmhwZG1VdWFuTnZiZz09JyApCiAgT28wT29PMDBvT08wbyA9IHVybGxpYjIgLiBSZXF1ZXN0ICggbzBvT09vbzBPICkKICBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoICdVc2VyLUFnZW50JyAsICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNDAuMC4yMjE0LjkzIFNhZmFyaS81MzcuMzYnICkKICBPT08wME8gPSB1cmxsaWIyIC4gdXJsb3BlbiAoIE9vME9vTzAwb09PMG8gKQogIGlmIE9PTzAwTyAuIGluZm8gKCApIC4gZ2V0ICggJ0NvbnRlbnQtRW5jb2RpbmcnICkgPT0gJ2d6aXAnIDoKICAgZnJvbSBTdHJpbmdJTyBpbXBvcnQgU3RyaW5nSU8KICAgaW1wb3J0IGd6aXAKICAgbzAwb29vTzBPbyA9IFN0cmluZ0lPICggT09PMDBPIC4gcmVhZCAoICkgKQogICBvME8wT09PME9vbyA9IGd6aXAgLiBHemlwRmlsZSAoIGZpbGVvYmogPSBvMDBvb29PME9vICkKICAgTzBPMDBPbyA9IG8wTzBPT08wT29vIC4gcmVhZCAoICkKICBlbHNlIDoKICAgTzBPMDBPbyA9IE9PTzAwTyAuIHJlYWQgKCApCiAgIGlmIDU3IC0gNTc6IG9vIC4gaTExaUlpaUlpaSAqIElJMTExaWlpaSArIE9vb29vb29vT08gKyBvMDAwMG9Pb09vTzBvCiAgIGlmIDczIC0gNzM6IE8wICUgT29PTzBvb09Pb28wTyArIGkxSTFpaTFJSTFpSUkgLiBvT29PMG9vME9PT28gLiBvT29PMG9vME9PT28gKyBvb29PMG9vMG9PT09PCiAgTzBPMDBPbyA9IE8wTzAwT28gLiBzcGxpdCAoICdIYW5kbGVfV0xTZXJpZXNEZXRhaWxzT2JqKCcgKSBbIDEgXSBbIDogLSAxIF0KICBwcmludCAncmVzJyAsIE8wTzAwT28KICBpMWkxMTFJID0ganNvbiAuIGxvYWRzICggTzBPMDBPbyApCiAgaWYgNzcgLSA3NzogT28KICBPT08wME8gLiBjbG9zZSAoICkKICBpZiA1MiAtIDUyOiBvMG9vMG8gLSBvMDAwMG9Pb09vTzBvICsgT29PME8wMCArIG9vT08wMG9PbyAqIG9vb08wb28wb09PT08KICBpZiA3OCAtIDc4OiBpaWlpSWkxMWkgLyBPb29vb29vb09PIC4gaWlpaUlpMTFpCiAgZm9yIEkxSSBpbiBpMWkxMTFJIDoKICAgT29vb09vbzAgPSBJMUkgWyAiTmFtZSIgXQogICBpMUlpaSA9IEkxSSBbICJJZCIgXQogICBPMDAwT08wICggT29vb09vbzAgLCBpMUlpaSAsIDI0ICwgJycgKQogZXhjZXB0IDogdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiBpZiA1NyAtIDU3OiBvb29PMG9vMG9PT09PCiBpZiA0MSAtIDQxOiBpSWlpMUkxMUkxSUkxICogaTFJMWlpMUlJMWlJSSArIE9vTzBPMDAgKiBPb28wMG9PbzAwbyAlIG9vb08wb28wb09PT08gLyBJSTExaWlJSQpkZWYgT28wbzBvb09vTyAoIHVybCApIDoKIE8wMDBPTzAgKCBJMWkxMWkgKCBvTzAwb09Pb29vTyAsICdFQicgLCBUcnVlICkgLCAnJyAsIC0gMSAsICcnICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKIHRyeSA6CiAgbzBvT09vbzBPID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDNkcGJHeHZkMlpsWldSekxuZHBiR3h2ZHk1MGRpOTNhV3hzYjNkTllYUmphRUZ5WTJocGRtVXVhbk52Ymc9PScgKQogIE9vME9vTzAwb09PMG8gPSB1cmxsaWIyIC4gUmVxdWVzdCAoIG8wb09Pb28wTyApCiAgT28wT29PMDBvT08wbyAuIGFkZF9oZWFkZXIgKCAnVXNlci1BZ2VudCcgLCAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzQwLjAuMjIxNC45MyBTYWZhcmkvNTM3LjM2JyApCiAgT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICkKICBpZiBPT08wME8gLiBpbmZvICggKSAuIGdldCAoICdDb250ZW50LUVuY29kaW5nJyApID09ICdnemlwJyA6CiAgIGZyb20gU3RyaW5nSU8gaW1wb3J0IFN0cmluZ0lPCiAgIGltcG9ydCBnemlwCiAgIG8wMG9vb08wT28gPSBTdHJpbmdJTyAoIE9PTzAwTyAuIHJlYWQgKCApICkKICAgbzBPME9PTzBPb28gPSBnemlwIC4gR3ppcEZpbGUgKCBmaWxlb2JqID0gbzAwb29vTzBPbyApCiAgIE8wTzAwT28gPSBvME8wT09PME9vbyAuIHJlYWQgKCApCiAgZWxzZSA6CiAgIE8wTzAwT28gPSBPT08wME8gLiByZWFkICggKQogICBpZiA0NyAtIDQ3OiBvT28wTzBPb28KICAgaWYgNjUgLSA2NTogTzAgKyBvMG9vMG8gJSBvMDAwMG9Pb09vTzBvICogb28gLyBPbyAvIG9PbzBPME9vbwogIE8wTzAwT28gPSBPME8wME9vIC4gc3BsaXQgKCAnSGFuZGxlX1dMU2VyaWVzRGV0YWlsc09iaignICkgWyAxIF0gWyA6IC0gMSBdCiAgaTFpMTExSSA9IGpzb24gLiBsb2FkcyAoIE8wTzAwT28gKQogIGlmIDcxIC0gNzE6IGkxMWlJaWlJaWkgLyBvT28wTzBPb28gLiBpaWlpSWkxMWkKICBPT08wME8gLiBjbG9zZSAoICkKICBpZiAzMyAtIDMzOiBpaWlpSWkxMWkKICBpZiAzOSAtIDM5OiBvb09PMDBvT28gKyBPMCArIE9vICogSUkxMTFpaWlpICUgTzAgLSBPMAogIGZvciBJMUkgaW4gaTFpMTExSSA6CiAgIE9vb29Pb28wID0gSTFJIFsgIk5hbWUiIF0KICAgaTFJaWkgPSBJMUkgWyAiSWQiIF0KICAgaWYgdXJsID09IGkxSWlpIDoKICAgIGZvciBJMTExMUkxaUlJMTEgaW4gSTFJIFsgIk1hdGNoRGV0YWlscyIgXSA6CiAgICAgTzAwT08gPSBJMTExMUkxaUlJMTEgWyAiTmFtZSIgXQogICAgIGkxSTFpMWkxSTEgPSBJMTExMUkxaUlJMTEgWyAiSWQiIF0KICAgICBpSTFpMUkxID0gSTExMTFJMWlJSTExIFsgIlN0YXJ0RGF0ZSIgXQogICAgIE8wMDBPTzAgKCBpSTFpMUkxICsgJyAtICcgKyBPMDBPTyAsIGkxSTFpMWkxSTEgLCAyMyAsICcnICkKIGV4Y2VwdCA6IHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogaWYgMzkgLSAzOTogbzAwMDBvT29Pb08wbwpkZWYgb09vMDAwMG9vTyAoICkgOgogSTFJbzBvTzBvbyA9IG9vTzAwb09vbyAuIGdldFNldHRpbmcgKCAiV2lsbG93VXNlck5hbWUiICkKIHJldHVybiBub3QgSTFJbzBvTzBvbyA9PSAiIgogaWYgOTggLSA5ODogT29vb29vb29PTyAtIG9vICsgT28KZGVmIE8wSTExSUlJSUkgKCB1cGRhdGVkVU5hbWUgPSBGYWxzZSApIDoKIG9PTzBPb29vID0gTm9uZQogdHJ5IDoKICBvT08wT29vbyA9IGNvb2tpZWxpYiAuIExXUENvb2tpZUphciAoICkKICBpZiBub3QgdXBkYXRlZFVOYW1lIDoKICAgb09PME9vb28gLiBsb2FkICggaTExaWlJSSAsIGlnbm9yZV9kaXNjYXJkID0gVHJ1ZSApCiBleGNlcHQgOgogIG9PTzBPb29vID0gTm9uZQogIGlmIDUzIC0gNTM6IE9vb29vb29vT08gLiBPb29vb29vb09PICsgT29vMDBvT28wMG8gLSBpMUkxaWkxSUkxaUlJICsgSUkxMWlpSUkKIGlmIG5vdCBvT08wT29vbyA6CiAgb09PME9vb28gPSBjb29raWVsaWIgLiBMV1BDb29raWVKYXIgKCApCiByZXR1cm4gb09PME9vb28KIGlmIDQ0IC0gNDQ6IG8wb28wbyAtIG9vb08wb28wb09PT08KZGVmIElJMWkgKCB1cGRhdGVkVU5hbWUgPSBGYWxzZSApIDoKIG9PTzBPb29vID0gTm9uZQogdHJ5IDoKICBvT08wT29vbyA9IGNvb2tpZWxpYiAuIExXUENvb2tpZUphciAoICkKICBpZiBub3QgdXBkYXRlZFVOYW1lIDoKICAgb09PME9vb28gLiBsb2FkICggT09vb08wT09vbyAsIGlnbm9yZV9kaXNjYXJkID0gVHJ1ZSApCiBleGNlcHQgOgogIG9PTzBPb29vID0gTm9uZQogIGlmIDEwMCAtIDEwMDogaWlpaUlpMTFpIC4gb29PTzAwb09vIC0gbzAwMDBvT29Pb08wbyArIE8wICogb29PTzAwb09vCiBpZiBub3Qgb09PME9vb28gOgogIG9PTzBPb29vID0gY29va2llbGliIC4gTFdQQ29va2llSmFyICggKQogcmV0dXJuIG9PTzBPb29vCiBpZiA1OSAtIDU5OiBJSTExMWlpaWkKZGVmIGlJaUlpMTEgKCB1cGRhdGVkVU5hbWUgPSBGYWxzZSApIDoKIG9PTzBPb29vID0gTm9uZQogdHJ5IDoKICBvT08wT29vbyA9IGNvb2tpZWxpYiAuIExXUENvb2tpZUphciAoICkKICBpZiBub3QgdXBkYXRlZFVOYW1lIDoKICAgb09PME9vb28gLiBsb2FkICggT29Pb29PT09PICwgaWdub3JlX2Rpc2NhcmQgPSBUcnVlICkKIGV4Y2VwdCA6CiAgb09PME9vb28gPSBOb25lCiAgaWYgNDIgLSA0MjogT29PTzBvb09Pb28wTyAlIE9vTzBPMDAgLiBJSTExMWlpaWkgLyBJSTExMWlpaWkgKiBpMUkxaWkxSUkxaUlJCiBpZiBub3Qgb09PME9vb28gOgogIG9PTzBPb29vID0gY29va2llbGliIC4gTFdQQ29va2llSmFyICggKQogcmV0dXJuIG9PTzBPb29vCiBpZiA4MCAtIDgwOiBvMG9vMG8gLyBpMTFpSWlpSWlpICsgT29vb29vb29PTwpkZWYgSUlJMTFpMWlJMTEgKCApIDoKIHRyeSA6CiAgaWYgNTggLSA1ODogaWlpaUlpMTFpCiAgT28wb09PbyA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwzZDNkeTUzYVd4c2IzY3VkSFl2UlhabGJuUk5aMjEwTDBSbFptRjFiSFF1WVhOdycgKQogIEkxSW8wb08wb28gPSBvb08wMG9Pb28gLiBnZXRTZXR0aW5nICggIldpbGxvd1VzZXJOYW1lIiApCiAgb09PbzBPTzAwT29PID0gb29PMDBvT29vIC4gZ2V0U2V0dGluZyAoICJXaWxsb3dQYXNzd29yZCIgKQogIG9PTyA9IG9vTzAwb09vbyAuIGdldFNldHRpbmcgKCAibGFzdFN1Y2Nlc3NMb2dpbiIgKQogIG9PTzBPb29vID0gaUlpSWkxMSAoIEkxSW8wb08wb28gIT0gb09PICkKICBvMG9PMG9PT09vID0gaTFpaUkxMUkgKCBPbzBvT09vICwgY29va2llSmFyID0gb09PME9vb28gKQogIGlmIDkwIC0gOTA6IGkxSUlpIC0gbzAwMDBvT29Pb08wbwogIGlmIDc5IC0gNzk6IElJMTExaWlpaSAtIGlpaWlJaTExaSAqIG9Pb08wb28wT09PbyAtIG9PbzBPME9vbyAuIG9Pb08wb28wT09PbwogIGlmICdMb2dpbi9SZWdpc3RlcicgaW4gbzBvTzBvT09PbyA6CiAgIHByaW50ICdMT0dJTiBOT1cnCiAgIGlpSUkxSUlpaTFpMSA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0hNNkx5OTNhV3hzYjNjdWRIWXZiRzluYVc0PScgKQogICBpMWlpaUlJaTExSUkgPSBpMWlpSTExSSAoIGlpSUkxSUlpaTFpMSAsIGNvb2tpZUphciA9IG9PTzBPb29vICkKICAgaWlJMUlJSWkgPSByZSAuIGZpbmRhbGwgKCAnbmFtZT0iY3NyZl90b2tlbiIuKj92YWx1ZT1bIlwnXSguKj8pWyJcJ10nICwgaTFpaWlJSWkxMUlJICkgWyAwIF0KICAgaWYgNTUgLSA1NTogT29PTzBvb09Pb28wTwogICBpMWlpMTExMWkxaSA9IFsgKCAnUmVmZXJlcicgLCBpaUlJMUlJaWkxaTEgKSAsICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS80OC4wLjI1NjQuMTE2IFNhZmFyaS81MzcuMzYnICkgLCAoICdPcmlnaW4nICwgJ2h0dHBzOi8vd3d3LndpbGxvdy50dicgKSBdCiAgIG9vME9Pb09vbzBPME8gPSB7ICdsb2dpbicgOiBJMUlvMG9PMG9vICwgJ3Bhc3N3b3JkJyA6IG9PT28wT08wME9vTyAsICdzdWJtaXQnIDogJ1NpZ24gSW4nICwgJ2NzcmZfdG9rZW4nIDogaWlJMUlJSWkgfQogICBvbzBPT29Pb28wTzBPID0gdXJsbGliIC4gdXJsZW5jb2RlICggb28wT09vT29vME8wTyApCiAgIG8wb08wb09PT28gPSBpMWlpSTExSSAoIGlpSUkxSUlpaTFpMSAsIGNvb2tpZUphciA9IG9PTzBPb29vICwgcG9zdCA9IG9vME9Pb09vbzBPME8gLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogICBvT08wT29vbyAuIHNhdmUgKCBPb09vb09PT08gLCBpZ25vcmVfZGlzY2FyZCA9IFRydWUgKQogICBvb08wMG9Pb28gLiBzZXRTZXR0aW5nICggaWQgPSAibGFzdFN1Y2Nlc3NMb2dpbiIgLCB2YWx1ZSA9IEkxSW8wb08wb28gKQogICBvMG9PMG9PT09vID0gaTFpaUkxMUkgKCBPbzBvT09vICwgY29va2llSmFyID0gb09PME9vb28gKQogICBpZiA5MyAtIDkzOiBpMTFpSWlpSWlpIC4gT29vMDBvT28wMG8KICByZXR1cm4gbm90ICdMb2dpbi9SZWdpc3RlcicgaW4gbzBvTzBvT09PbyAsIG9PTzBPb29vCiBleGNlcHQgOgogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcmV0dXJuIEZhbHNlICwgTm9uZQogaWYgMTYgLSAxNjogaTFJSWkgLiBpMUlJaSAvIG8wb28wbyAlIG9PbzBPME9vbyAvIG9vICogb09vTzBvbzBPT09vCmRlZiBJSUlpaTExICggcGFyYW1zICkgOgogTzBPTyA9IGpzb24gLiBkdW1wcyAoIHBhcmFtcyApCiBpMWkxMUkxSTEgPSB4Ym1jIC4gZXhlY3V0ZUpTT05SUEMgKCBPME9PICkKIGlmIDgyIC0gODI6IG9vT08wMG9PbyAtIE9vTzBPMDAgLSBPMCAtIE9vb29vb29vT08KIHRyeSA6CiAgT09PMDBPID0ganNvbiAuIGxvYWRzICggaTFpMTFJMUkxICkKIGV4Y2VwdCBVbmljb2RlRGVjb2RlRXJyb3IgOgogIE9PTzAwTyA9IGpzb24gLiBsb2FkcyAoIGkxaTExSTFJMSAuIGRlY29kZSAoICd1dGYtOCcgLCAnaWdub3JlJyApICkKICBpZiA0IC0gNDogSUkxMTFpaWlpIC0gaWlpaUlpMTFpICUgT29PME8wMCAqIGkxMWlJaWlJaWkKIHRyeSA6CiAgaWYgJ3Jlc3VsdCcgaW4gT09PMDBPIDoKICAgcmV0dXJuIE9PTzAwTyBbICdyZXN1bHQnIF0KICByZXR1cm4gTm9uZQogZXhjZXB0IEtleUVycm9yIDoKICBsb2dnZXIgLiB3YXJuICggIlslc10gJXMiICUgKCBwYXJhbXMgWyAnbWV0aG9kJyBdICwgT09PMDBPIFsgJ2Vycm9yJyBdIFsgJ21lc3NhZ2UnIF0gKSApCiAgcmV0dXJuIE5vbmUKICBpZiAxOCAtIDE4OiBPb08wTzAwICUgTzAKICBpZiA2NiAtIDY2OiBpSWlpMUkxMUkxSUkxICUgaTExaUlpaUlpaSAvIG9vCmRlZiBJSUlJSWlpSTExaTEgKCBwcm94eXNldHRpbmdzID0gTm9uZSApIDoKIGlmIDQzIC0gNDM6IG9vIC8gaTFJMWlpMUlJMWlJSSAvIE9vICsgaUlpaTFJMTFJMUlJMSArIE9vb29vb29vT08KIGlmIHByb3h5c2V0dGluZ3MgPT0gTm9uZSA6CiAgcHJpbnQgJ3Byb3h5IHNldCB0byBub3RoaW5nJwogIHhibWMgLiBleGVjdXRlSlNPTlJQQyAoICd7Impzb25ycGMiOiIyLjAiLCAibWV0aG9kIjoiU2V0dGluZ3MuU2V0U2V0dGluZ1ZhbHVlIiwgInBhcmFtcyI6eyJzZXR0aW5nIjoibmV0d29yay51c2VodHRwcHJveHkiLCAidmFsdWUiOmZhbHNlfSwgImlkIjoxfScgKQogZWxzZSA6CiAgaWYgMzMgLSAzMzogSUkxMTFpaWlpIC0gb29vTzBvbzBvT09PTyAtIE9vCiAgb08wMG9Pb28wMG8wID0gcHJveHlzZXR0aW5ncyAuIHNwbGl0ICggJzonICkKICBJSUkxSSA9IG9PMDBvT29vMDBvMCBbIDAgXQogIE9PT2lpID0gb08wMG9Pb28wMG8wIFsgMSBdCiAgSWlpMUkxMSA9IG9PMDBvT29vMDBvMCBbIDIgXQogIE8wbzBvID0gTm9uZQogIElpaWlJaTExMTFJID0gTm9uZQogIGlmIDQ1IC0gNDU6IE9vbzAwb09vMDBvCiAgaWYgbGVuICggb08wMG9Pb28wMG8wICkgPiAzIGFuZCAnQCcgaW4gcHJveHlzZXR0aW5ncyA6CiAgIE8wbzBvID0gb08wMG9Pb28wMG8wIFsgMyBdCiAgIElpaWlJaTExMTFJID0gcHJveHlzZXR0aW5ncyAuIHNwbGl0ICggJ0AnICkgWyAtIDEgXQogICBpZiA1OCAtIDU4OiBvbyAqIGkxSUlpICUgSUkxMTFpaWlpIC8gTzAKICBwcmludCAncHJveHkgc2V0IHRvJyAsIElpaTFJMTEgLCBJSUkxSSAsIE9PT2lpCiAgeGJtYyAuIGV4ZWN1dGVKU09OUlBDICggJ3sianNvbnJwYyI6IjIuMCIsICJtZXRob2QiOiJTZXR0aW5ncy5TZXRTZXR0aW5nVmFsdWUiLCAicGFyYW1zIjp7InNldHRpbmciOiJuZXR3b3JrLnVzZWh0dHBwcm94eSIsICJ2YWx1ZSI6dHJ1ZX0sICJpZCI6MX0nICkKICB4Ym1jIC4gZXhlY3V0ZUpTT05SUEMgKCAneyJqc29ucnBjIjoiMi4wIiwgIm1ldGhvZCI6IlNldHRpbmdzLlNldFNldHRpbmdWYWx1ZSIsICJwYXJhbXMiOnsic2V0dGluZyI6Im5ldHdvcmsuaHR0cHByb3h5dHlwZSIsICJ2YWx1ZSI6JyArIHN0ciAoIElpaTFJMTEgKSArICd9LCAiaWQiOjF9JyApCiAgeGJtYyAuIGV4ZWN1dGVKU09OUlBDICggJ3sianNvbnJwYyI6IjIuMCIsICJtZXRob2QiOiJTZXR0aW5ncy5TZXRTZXR0aW5nVmFsdWUiLCAicGFyYW1zIjp7InNldHRpbmciOiJuZXR3b3JrLmh0dHBwcm94eXNlcnZlciIsICJ2YWx1ZSI6IicgKyBzdHIgKCBJSUkxSSApICsgJyJ9LCAiaWQiOjF9JyApCiAgeGJtYyAuIGV4ZWN1dGVKU09OUlBDICggJ3sianNvbnJwYyI6IjIuMCIsICJtZXRob2QiOiJTZXR0aW5ncy5TZXRTZXR0aW5nVmFsdWUiLCAicGFyYW1zIjp7InNldHRpbmciOiJuZXR3b3JrLmh0dHBwcm94eXBvcnQiLCAidmFsdWUiOicgKyBzdHIgKCBPT09paSApICsgJ30sICJpZCI6MX0nICkKICBpZiA1NiAtIDU2OiBPb09PMG9vT09vbzBPIC0gTzAgLyBPMCAqIGkxSUlpIC4gT29vb29vb29PTyAlIGlJaWkxSTExSTFJSTEKICBpZiAyMSAtIDIxOiBvb29PMG9vMG9PT09PIC0gb28gJSBPb29vb29vb09PICsgT29vMDBvT28wMG8KICBpZiBub3QgTzBvMG8gPT0gTm9uZSA6CiAgIHhibWMgLiBleGVjdXRlSlNPTlJQQyAoICd7Impzb25ycGMiOiIyLjAiLCAibWV0aG9kIjoiU2V0dGluZ3MuU2V0U2V0dGluZ1ZhbHVlIiwgInBhcmFtcyI6eyJzZXR0aW5nIjoibmV0d29yay5odHRwcHJveHl1c2VybmFtZSIsICJ2YWx1ZSI6IicgKyBzdHIgKCBPMG8wbyApICsgJyJ9LCAiaWQiOjF9JyApCiAgIHhibWMgLiBleGVjdXRlSlNPTlJQQyAoICd7Impzb25ycGMiOiIyLjAiLCAibWV0aG9kIjoiU2V0dGluZ3MuU2V0U2V0dGluZ1ZhbHVlIiwgInBhcmFtcyI6eyJzZXR0aW5nIjoibmV0d29yay5odHRwcHJveHlwYXNzd29yZCIsICJ2YWx1ZSI6IicgKyBzdHIgKCBJaWlpSWkxMTExSSApICsgJyJ9LCAiaWQiOjF9JyApCiAgIGlmIDkyIC0gOTI6IE9vICsgb29vTzBvbzBvT09PTwogICBpZiA1MiAtIDUyOiBJSTExMWlpaWkgLyBvbyAuIGlpaWlJaTExaSAqIG9vb08wb28wb09PT08gLiBPb09PMG9vT09vbzBPCmRlZiBJaUlJICggKSA6CiBJSWkgPSBJSUlpaTExICggeyAnanNvbnJwYycgOiAnMi4wJyAsICJtZXRob2QiIDogIlNldHRpbmdzLkdldFNldHRpbmdWYWx1ZSIgLCAicGFyYW1zIiA6IHsgInNldHRpbmciIDogIm5ldHdvcmsudXNlaHR0cHByb3h5IiB9ICwgJ2lkJyA6IDEgfSApIFsgJ3ZhbHVlJyBdCiBwcmludCAncHJveHlBY3RpdmUnICwgSUlpCiBJaWkxSTExID0gSUlJaWkxMSAoIHsgJ2pzb25ycGMnIDogJzIuMCcgLCAibWV0aG9kIiA6ICJTZXR0aW5ncy5HZXRTZXR0aW5nVmFsdWUiICwgInBhcmFtcyIgOiB7ICJzZXR0aW5nIiA6ICJuZXR3b3JrLmh0dHBwcm94eXR5cGUiIH0gLCAnaWQnIDogMSB9ICkgWyAndmFsdWUnIF0KIGlmIDUxIC0gNTE6IElJMTExaWlpaSAuIGlpaWlJaTExaSAuIG9vT08wMG9PbyAlIElJMTExaWlpaQogaWYgSUlpIDoKICBJSUkxSSA9IElJSWlpMTEgKCB7ICdqc29ucnBjJyA6ICcyLjAnICwgIm1ldGhvZCIgOiAiU2V0dGluZ3MuR2V0U2V0dGluZ1ZhbHVlIiAsICJwYXJhbXMiIDogeyAic2V0dGluZyIgOiAibmV0d29yay5odHRwcHJveHlzZXJ2ZXIiIH0gLCAnaWQnIDogMSB9ICkgWyAndmFsdWUnIF0KICBPT09paSA9IHVuaWNvZGUgKCBJSUlpaTExICggeyAnanNvbnJwYycgOiAnMi4wJyAsICJtZXRob2QiIDogIlNldHRpbmdzLkdldFNldHRpbmdWYWx1ZSIgLCAicGFyYW1zIiA6IHsgInNldHRpbmciIDogIm5ldHdvcmsuaHR0cHByb3h5cG9ydCIgfSAsICdpZCcgOiAxIH0gKSBbICd2YWx1ZScgXSApCiAgTzBvMG8gPSBJSUlpaTExICggeyAnanNvbnJwYycgOiAnMi4wJyAsICJtZXRob2QiIDogIlNldHRpbmdzLkdldFNldHRpbmdWYWx1ZSIgLCAicGFyYW1zIiA6IHsgInNldHRpbmciIDogIm5ldHdvcmsuaHR0cHByb3h5dXNlcm5hbWUiIH0gLCAnaWQnIDogMSB9ICkgWyAndmFsdWUnIF0KICBJaWlpSWkxMTExSSA9IElJSWlpMTEgKCB7ICdqc29ucnBjJyA6ICcyLjAnICwgIm1ldGhvZCIgOiAiU2V0dGluZ3MuR2V0U2V0dGluZ1ZhbHVlIiAsICJwYXJhbXMiIDogeyAic2V0dGluZyIgOiAibmV0d29yay5odHRwcHJveHlwYXNzd29yZCIgfSAsICdpZCcgOiAxIH0gKSBbICd2YWx1ZScgXQogIGlmIDQxIC0gNDE6IG9PbzBPME9vbyAtIElJMTFpaUlJICsgT28gLSBpMUlJaQogIGlmIE8wbzBvIGFuZCBJaWlpSWkxMTExSSBhbmQgSUlJMUkgYW5kIE9PT2lpIDoKICAgcmV0dXJuIElJSTFJICsgJzonICsgc3RyICggT09PaWkgKSArICc6JyArIHN0ciAoIElpaTFJMTEgKSArICc6JyArIE8wbzBvICsgJ0AnICsgSWlpaUlpMTExMUkKICBlbGlmIElJSTFJIGFuZCBPT09paSA6CiAgIHJldHVybiBJSUkxSSArICc6JyArIHN0ciAoIE9PT2lpICkgKyAnOicgKyBzdHIgKCBJaWkxSTExICkKIGVsc2UgOgogIHJldHVybiBOb25lCiAgaWYgNiAtIDY6IElJMTExaWlpaQpkZWYgaUkxSSAoIG1lZGlhX3VybCAsIG5hbWUgLCBpY29uSW1hZ2UgLCBwcm94eWlwICwgcG9ydCAsIHByb2dyZXNzICkgOgogaWYgMTEgLSAxMTogSUkxMTFpaWlpICogbzAwMDBvT29Pb08wbyAvIElJMTExaWlpaSArIE9vT08wb29PT29vME8gLSBPMAogcHJvZ3Jlc3MgLiBjcmVhdGUgKCAnUHJvZ3Jlc3MnICwgJ1BsYXlpbmcgd2l0aCBjdXN0b20gcHJveHknICkKIHByb2dyZXNzIC4gdXBkYXRlICggNTAgLCAiIiAsICJzZXR0aW5nIHByb3h5Li4iICwgIiIgKQogT28wb29vbyA9IEZhbHNlCiBvT2lpMTFJID0gJycKIHRyeSA6CiAgaWYgOTcgLSA5NzogaTFJSWkgKyBpMUkxaWkxSUkxaUlJIC4gT28gLSBpMUkxaWkxSUkxaUlJCiAgb09paTExSSA9IElpSUkgKCApCiAgcHJpbnQgJ2V4aXN0aW5nX3Byb3h5JyAsIG9PaWkxMUkKICBpZiA1MyAtIDUzOiBPMCAuIG9vCiAgSUlJSUlpaUkxMWkxICggcHJveHlpcCArICc6JyArIHBvcnQgKyAnOjAnICkKICBPbzBvb29vID0gVHJ1ZQogIGlmIDc0IC0gNzQ6IE9vICUgb09vME8wT29vIC8gT29PME8wMAogIHByaW50ICdwcm94eSBzZXR0aW5nIGNvbXBsZXRlJyAsIElpSUkgKCApCiAgaWYgMiAtIDI6IG9vb08wb28wb09PT08gJSBvb29PMG9vMG9PT09PICUgbzBvbzBvCiAgcHJvZ3Jlc3MgLiB1cGRhdGUgKCA4MCAsICIiICwgInNldHRpbmcgcHJveHkgY29tcGxldGUsIG5vdyBwbGF5aW5nIiAsICIiICkKICBwcm9ncmVzcyAuIGNsb3NlICggKQogIHByb2dyZXNzID0gTm9uZQogIGltcG9ydCBDdXN0b21QbGF5ZXIKICBvMG8wME9vT28wID0gQ3VzdG9tUGxheWVyIC4gTXlYQk1DUGxheWVyICggKQogIEkxID0geGJtY2d1aSAuIExpc3RJdGVtICggbGFiZWwgPSBzdHIgKCBuYW1lICkgLCBpY29uSW1hZ2UgPSBpY29uSW1hZ2UgLCB0aHVtYm5haWxJbWFnZSA9IHhibWMgLiBnZXRJbmZvSW1hZ2UgKCAiTGlzdEl0ZW0uVGh1bWIiICkgLCBwYXRoID0gbWVkaWFfdXJsICkKICBvMG8wME9vT28wIC4gcGxheSAoIG1lZGlhX3VybCAsIEkxICkKICB4Ym1jIC4gc2xlZXAgKCAxMDAwICkKICB3aGlsZSBvMG8wME9vT28wIC4gaXNfYWN0aXZlIDoKICAgeGJtYyAuIHNsZWVwICggMjAwICkKIGV4Y2VwdCA6CiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggKQogaWYgcHJvZ3Jlc3MgOgogIHByb2dyZXNzIC4gY2xvc2UgKCApCiBpZiBPbzBvb29vIDoKICBwcmludCAnbm93IHJlc2V0dGluZyB0aGUgcHJveHkgYmFjaycKICBJSUlJSWlpSTExaTEgKCBvT2lpMTFJICkKICBwcmludCAncmVzZXQgaGVyZScKIHJldHVybiAnJwogaWYgOTggLSA5ODogT29vb29vb29PTyAlIGlpaWlJaTExaSAqIE9vCmRlZiBPTzBPbzAwT08wb28gKCBtYXRjaGlkICwgQ0ogKSA6CiBpZiA1MyAtIDUzOiBvb09PMDBvT28gLSBPbyArIG8wMDAwb09vT29PMG8KIE9vMG8wb29vbzBPMCA9IHhibWNndWkgLiBEaWFsb2dQcm9ncmVzcyAoICkKIE9vMG8wb29vbzBPMCAuIGNyZWF0ZSAoICdQcm9ncmVzcycgLCAnV2lsbG93IDI0eDcnICkKIE9vMG8wb29vbzBPMCAuIHVwZGF0ZSAoIDEwICwgIiIgLCAiR2V0dGluZyBVcmxzLi4iICkKIGlmIDI5IC0gMjk6IElJMTFpaUlJICsgT29vb29vb29PTyArIGlpaWlJaTExaSAqIG9vIC0gbzAwMDBvT29Pb08wbyAvIGkxMWlJaWlJaWkKIGlpaUlJaWlJaSA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyMHVkMmxzYkc5M0xuUjJMMmRsZEZOMGNtVmhiV2x1WjFWU1RGTXVZWE53UDIxcFpEMDVPVGs1T1RrPScgKQogSTFpMTExSSA9ICciVVJMIjoiKC4qPykiJwogaTFpaTExMTFpMWkgPSBbICggJ1JlZmVyZXInICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDIwdWQybHNiRzkzTG5SMkwybFBVMGh2YldVdVlYTncnICkgKSAsICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChpUGFkOyBDUFUgT1MgN18wXzQgbGlrZSBNYWMgT1MgWCkgQXBwbGVXZWJLaXQvNTM3LjUxLjEgKEtIVE1MLCBsaWtlIEdlY2tvKSBNb2JpbGUvMTFCNTU0YScgKSBdCiBPb29vMG9Pb29PTyA9IGkxaWlJMTFJICggaWlpSUlpaUlpICwgY29va2llSmFyID0gQ0ogLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogaWYgJ0ZhaWx1cmUtUmVnaW9uJyBpbiBPb29vMG9Pb29PTyA6CiAgT28wbzBvb29vME8wIC4gdXBkYXRlICggMzAgLCAiIiAsICJOb3QgaW4gVVM/IFVzaW5nIHByb3h5IiApCiAgaWYgODIgLSA4MjogT28gKyBJSTExMWlpaWkgLiBvbyAvIG9Pb08wb28wT09PbwogIG8wb29Pb29PID0gb29PMDBvT29vIC4gZ2V0U2V0dGluZyAoICdXaWxsb3dQcm94eScgKQogIE8wT29PbyA9IG9vTzAwb09vbyAuIGdldFNldHRpbmcgKCAnV2lsbG93UG9ydCcgKQogIGlmIDk0IC0gOTQ6IG9vT08wMG9PbyArIG9vT08wMG9PbyArIG9Pb08wb28wT09PbyAuIG9vT08wMG9PbyAqIG8wMDAwb09vT29PMG8KICBpSUlpMWkxID0gdXJsbGliMiAuIEhUVFBDb29raWVQcm9jZXNzb3IgKCBDSiApCiAgT09vb09PMDAwID0gdXJsbGliMiAuIGJ1aWxkX29wZW5lciAoIGlJSWkxaTEgLCB1cmxsaWIyIC4gSFRUUEJhc2ljQXV0aEhhbmRsZXIgKCApICwgdXJsbGliMiAuIEhUVFBIYW5kbGVyICggKSAsIHVybGxpYjIgLiBQcm94eUhhbmRsZXIgKCB7ICdodHRwJyA6ICclczolcycgJSAoIG8wb29Pb29PICwgTzBPb09vICkgfSApICkKICBPbzBPb08wMG9PTzBvID0gdXJsbGliMiAuIFJlcXVlc3QgKCBpaWlJSWlpSWkgKQogIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChpUGFkOyBDUFUgT1MgN18wXzQgbGlrZSBNYWMgT1MgWCkgQXBwbGVXZWJLaXQvNTM3LjUxLjEgKEtIVE1MLCBsaWtlIEdlY2tvKSBNb2JpbGUvMTFCNTU0YScgKQogIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1JlZmVyZXInICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDIwdWQybHNiRzkzTG5SMkwybFBVMGh2YldVdVlYTncnICkgKQogIE9PTzAwTyA9IE9Pb29PTzAwMCAuIG9wZW4gKCBPbzBPb08wMG9PTzBvICwgdGltZW91dCA9IDIwICkKICBPT29PTzBvbzBvb08gPSBPT08wME8gLiByZWFkICggKQogIE9PTzAwTyAuIGNsb3NlICggKQogIGlmIDYyIC0gNjI6IE9vbzAwb09vMDBvIC8gaUlpaTFJMTFJMUlJMQogIE9vMG8wb29vbzBPMCAuIHVwZGF0ZSAoIDMwICwgIiIgLCAiR290IHRoZSBMaW5rLCBOb3cgcGxheWluZyB3aXRoIFVzaW5nIHByb3h5IiApCiAgTzBPT29Pb28wT09vID0gcmUgLiBmaW5kYWxsICggSTFpMTExSSAsIE9Pb09PMG9vMG9vTyApIFsgMCBdCiAgaUkxSSAoIE8wT09vT29vME9PbyAsICcyNHg3IHdpbGxvdycgLCAnJyAsIG8wb29Pb29PICwgTzBPb09vICwgT28wbzBvb29vME8wICkKICByZXR1cm4gJycKIGVsc2UgOgogIE9vMG8wb29vbzBPMCAuIGNsb3NlICggKQogIE8wT09vT29vME9PbyA9IHJlIC4gZmluZGFsbCAoIEkxaTExMUkgLCBPb29vMG9Pb29PTyApIFsgMCBdCiAgcmV0dXJuIE8wT09vT29vME9PbwogIGlmIDMwIC0gMzA6IE8wIC8gSUkxMWlpSUkgJSBPb09PMG9vT09vbzBPCmRlZiBpMUlJaWkxaUkxaWlJaWkgKCBtYXRjaGlkICkgOgogaWYgbm90IG9PbzAwMDBvb08gKCApIDoKICBvMG9PT29vME8gPSBpMTEKICBpZiBsZW4gKCBvMG9PT29vME8gKSA+IDAgOgogICBpZiBpMUlpSSA9PSAyMSA6CiAgICBpZiAnOicgaW4gbWF0Y2hpZCA6CiAgICAgbWF0Y2hpZCAsIGlJaWlJMTExSTExID0gbWF0Y2hpZCAuIHNwbGl0ICggJzonICkKICAgICBvbzBPT29Pb28wTzBPID0geyAnbWF0Y2hOdW1iZXInIDogbWF0Y2hpZCAsICd0eXBlJyA6ICdsaXZlJyAsICdwYXJ0TnVtYmVyJyA6IGlJaWlJMTExSTExICwgJ2RlYnVnJyA6ICcxJyB9CiAgICBlbHNlIDoKICAgICBvbzBPT29Pb28wTzBPID0geyAnbWF0Y2hOdW1iZXInIDogbWF0Y2hpZCAsICd0eXBlJyA6ICdsaXZlJyAsICdkZWJ1ZycgOiAnMScgfQogICBlbHNlIDoKICAgIGlmICc6JyBpbiBtYXRjaGlkIDoKICAgICBtYXRjaGlkICwgaUlpaUkxMTFJMTEgPSBtYXRjaGlkIC4gc3BsaXQgKCAnOicgKQogICAgIG9vME9Pb09vbzBPME8gPSB7ICdtYXRjaE51bWJlcicgOiBtYXRjaGlkICwgJ3R5cGUnIDogJ3JlcGxheScgLCAncGFydE51bWJlcicgOiBpSWlpSTExMUkxMSAsICdkZWJ1ZycgOiAnMScgfQogICAgZWxzZSA6CiAgICAgb28wT09vT29vME8wTyA9IHsgJ21hdGNoTnVtYmVyJyA6IG1hdGNoaWQgLCAndHlwZScgOiAncmVwbGF5JyAsICdkZWJ1ZycgOiAnMScgfQogICBvbzBPT29Pb28wTzBPID0gdXJsbGliIC4gdXJsZW5jb2RlICggb28wT09vT29vME8wTyApCiAgIE9vME9vTzAwb09PMG8gPSB1cmxsaWIyIC4gUmVxdWVzdCAoIG8wb09Pb28wTyApCiAgIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS80MC4wLjIyMTQuOTMgU2FmYXJpLzUzNy4zNicgKQogICBPT08wME8gPSB1cmxsaWIyIC4gdXJsb3BlbiAoIE9vME9vTzAwb09PMG8gLCBvbzBPT29Pb28wTzBPICkKICAgT09vT08wb28wb29PID0gT09PMDBPIC4gcmVhZCAoICkKICAgT09PMDBPIC4gY2xvc2UgKCApCiAgIE8wT09vT29vME9PbyA9IHVybGxpYjIgLiB1bnF1b3RlICggT09vT08wb28wb29PICkKICAgTzBPT29Pb28wT09vID0gTzBPT29Pb28wT09vIC4gc3BsaXQgKCAnZGVidWcnICkgWyAwIF0KICAgcmV0dXJuIE8wT09vT29vME9PbwogIGVsc2UgOgogICBJMTExMWlpMTFJSUlJID0gIkNvbW1vbiBzZXJ2ZXIgaXMgbm90IGF2YWlsYWJsZSwgUGxlYXNlIGVudGVyIHlvdXIgb3duIGxvZ2luIGRldGFpbHMuIgogICBvMG9PID0geGJtY2d1aSAuIERpYWxvZyAoICkKICAgSTFpMWlpaSA9IG8wb08gLiBvayAoICdMb2dpbiBGYWlsZWQnICwgSTExMTFpaTExSUlJSSApCiAgIHJldHVybiAnJwogICBpZiA4NiAtIDg2OiBpaWlpSWkxMWkgKyBpMUkxaWkxSUkxaUlJIC8gT29vb29vb29PTyAtIE9vT08wb29PT29vME8KIGVsc2UgOgogIG8wME8wICwgb09PME9vb28gPSBJSUkxMWkxaUkxMSAoICkgOwogIGlmIG8wME8wIDoKICAgSUlJaWlpSTFJaTEgPSBGYWxzZQogICBvbzBPME9PME9vID0gJycKICAgb08wMG8wb08wTyA9IEZhbHNlCiAgIGlJMTFJaWkxSSA9ICcnCiAgIGlmIG1hdGNoaWQgPT0gJzk5OTk5OScgOgogICAgcmV0dXJuIE9PME9vMDBPTzBvbyAoIG1hdGNoaWQgLCBvT08wT29vbyApCiAgIGZvciBPME9Pb08wME9PMG8gaW4gb09PME9vb28gOgogICAgaWYgNjIgLSA2Mjogb29vTzBvbzBvT09PTyAuIE8wIC4gaUlpaTFJMTFJMUlJMQogICAgSTFpMTEgPSByZXByICggTzBPT29PMDBPTzBvICkKICAgIGlmICdDWE1Vc2VySWQnIGluIEkxaTExIDoKICAgICBpZiA5NCAtIDk0OiBPbyAlIE9vT08wb29PT29vME8gJSBpMUlJaQogICAgIGlJMTFJaWkxSSA9IEkxaTExIC4gc3BsaXQgKCAndmFsdWU9XCcnICkgWyAxIF0gLiBzcGxpdCAoICclJyApIFsgMCBdCiAgICAgaWYgOTAgLSA5MDogbzAwMDBvT29Pb08wbyAqIG9vT08wMG9PbwogICBJMWlPMG8wTzBPb29Pb28gPSAnTGl2ZScKICAgSWlJSTFpMTFJSUkgPSAnJwogICBpZiBpMUlpSSA9PSAyMSA6CiAgICBJSUlpaWlJMUlpMSA9IFRydWUKICAgIGlmIDggLSA4OiBvMG9vMG8gJSBpaWlpSWkxMWkKICAgIG1hdGNoaWQgLCBvbzBPME9PME9vID0gbWF0Y2hpZCAuIHNwbGl0ICggJzonICkKICAgIElJSUlJaWlJID0gJ0xpdmVNYXRjaCcKICAgIE9vMG9PT28gPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMM2QzZHk1M2FXeHNiM2N1ZEhZdlJYWmxiblJOWjIxMEx5VnpWVkpNTG1GemNEOXRhV1E5SlhNPScgKSAlICggSUlJSUlpaUkgLCBtYXRjaGlkICkKICAgIEkxaTExMUkgPSAnc2VjdXJldXJsIjoiKC4qPykiLio/cHJpb3JpdHkiOiVzLCcgJSBvbzBPME9PME9vCiAgICBJaUlJMWkxMUlJSSA9IG9vME8wT08wT28KICAgIEkxaU8wbzBPME9vb09vbyA9ICdMaXZlJwogICBlbHNlIDoKICAgIGlmICc6JyBpbiBtYXRjaGlkIDoKICAgICBtYXRjaGlkICwgb28wTzBPTzBPbyA9IG1hdGNoaWQgLiBzcGxpdCAoICc6JyApCiAgICAgSUlJSUlpaUkgPSAnUmVwbGF5JwogICAgIE9vMG9PT28gPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNITTZMeTkzZDNjdWQybHNiRzkzTG5SMkwwVjJaVzUwVFdkdGRDOVNaWEJzWVhsVlVrd3VZWE53UDIxcFpEMGxjeVoxYzJWeVNXUTlKWE09JyApICUgKCBtYXRjaGlkICwgaUkxMUlpaTFJICkKICAgICBJMWkxMTFJID0gJ3NlY3VyZXVybCI6IiguKj8pIi4qP3ByaW9yaXR5IjolcywnICUgb28wTzBPTzBPbwogICAgIElpSUkxaTExSUlJID0gb28wTzBPTzBPbwogICAgIEkxaU8wbzBPME9vb09vbyA9ICdSZWNvcmRPbmUnCiAgICBlbHNlIDoKICAgICBvTzAwbzBvTzBPID0gVHJ1ZQogICAgIElJSUlJaWlJID0gJ1JlcGxheScKICAgICBPbzBvT09vID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjSE02THk5M2QzY3VkMmxzYkc5M0xuUjJMMFYyWlc1MFRXZHRkQzlTWlhCc1lYbFZVa3d1WVhOd1AyMXBaRDBsY3laMWMyVnlTV1E5SlhNPScgKSAlICggbWF0Y2hpZCAsIGlJMTFJaWkxSSApCiAgICAgSTFpMTExSSA9ICcicHJpb3JpdHkiOiguKz8pLCJ0aXRsZSI6IiguKj8pIiwnCiAgICAgSWlJSTFpMTFJSUkgPSAiIgogICAgIEkxaU8wbzBPME9vb09vbyA9ICdSZWNvcmRBbGwnCiAgICAgaWYgMzggLSAzODogTzAKICAgSUlJSUkgPSBpMWlpSTExSSAoIE9vMG9PT28gLCBjb29raWVKYXIgPSBvT08wT29vbyApCiAgIGlmIDc5IC0gNzk6IGkxSUlpIC4gaWlpaUlpMTFpCiAgIE8wT09vT29vME9PbyA9ICcnCiAgIGlmIDM0IC0gMzQ6IG8wb28wbyAqIElJMTExaWlpaQogICBpZiA3MSAtIDcxOiBvb29PMG9vMG9PT09PCiAgIGlmIDk3IC0gOTc6IG9Pb08wb28wT09PbwogICBpZiA4NiAtIDg2OiBPb08wTzAwIC0gSUkxMWlpSUkgLiBvT28wTzBPb28gLiBJSTExMWlpaWkgKiBvbyAuIElJMTExaWlpaQogICBpZiBJMWlPMG8wTzBPb29Pb28gPT0gJ0xpdmUnIG9yIEkxaU8wbzBPME9vb09vbyA9PSAnUmVjb3JkT25lJyA6CiAgICBpZiAzNCAtIDM0OiBPb28wMG9PbzAwbyAuIG8wb28wbyAlIG9vb08wb28wb09PT08gLSBPMCAvIG8wb28wbwogICAgcHJpbnQgSUlJSUkKICAgIG9vT09vb28wT28gPSBqc29uIC4gbG9hZHMgKCBJSUlJSSApCiAgICBpZiA5MSAtIDkxOiBpMTFpSWlpSWlpICUgbzBvbzBvICogaWlpaUlpMTFpIC0gb09vTzBvbzBPT09vIC4gbzBvbzBvCiAgICBpZiBJMWlPMG8wTzBPb29Pb28gPT0gJ0xpdmUnIDoKICAgICBmb3IgaUlvMDBvbyBpbiBvb09Pb29vME9vIFsgInJva3UiIF0gWyAiVVJMIiBdIDoKICAgICAgaWYgaW50ICggaUlvMDBvbyBbICJwcmlvcml0eSIgXSApID09IGludCAoIElpSUkxaTExSUlJICkgOgogICAgICAgTzBPT29Pb28wT09vID0gaUlvMDBvbyBbICJzZWN1cmV1cmwiIF0KICAgICAgIGJyZWFrIDsKICAgICAgIGlmIDc4IC0gNzg6IG9vb08wb28wb09PT08gLSBPb09PMG9vT09vbzBPICUgTzAgLSBJSTExaWlJSSAlIG9vT08wMG9PbwogICAgZWxzZSA6CiAgICAgaWYgNDMgLSA0Mzogb29PTzAwb09vCiAgICAgZm9yIE9vT29vTyBpbiBvb09Pb29vME9vIFsgInJlcGxheSIgXSA6CiAgICAgIGZvciBpSW8wMG9vIGluIE9vT29vTyA6CiAgICAgICBpZiBpbnQgKCBpSW8wMG9vIFsgInByaW9yaXR5IiBdICkgPT0gaW50ICggSWlJSTFpMTFJSUkgKSA6CiAgICAgICAgTzBPT29Pb28wT09vID0gaUlvMDBvbyBbICJzZWN1cmV1cmwiIF0KICAgICAgICBicmVhayA7CiAgICBwcmludCBJMWkxMTFJICwgSUlJSUkKICAgIGlmIDIzIC0gMjM6IG8wMDAwb09vT29PMG8gKiBPbyAtIE9vT08wb29PT29vME8gLiBPMCAlIGlJaWkxSTExSTFJSTEKICAgZWxzZSA6CiAgICBpZiAxOSAtIDE5OiBvbwogICAgb09Pb28gPSAnJwogICAgaWYgMjYgLSAyNjogT29PTzBvb09Pb28wTyArIG8wb28wbyArIE9vT08wb29PT29vME8gLyBvMG9vMG8KICAgIG9vT09vb28wT28gPSBqc29uIC4gbG9hZHMgKCBJSUlJSSApCiAgICBwcmludCBvb09Pb29vME9vCiAgICBmb3IgT29Pb29PIGluIG9vT09vb28wT28gWyAicmVwbGF5IiBdIDoKICAgICBmb3IgaUlvMDBvbyBpbiBPb09vb08gOgogICAgICBwcmludCBpSW8wMG9vCiAgICAgIG9PT29vICs9ICcjJyArIHN0ciAoIGlJbzAwb28gWyAicHJpb3JpdHkiIF0gKSArICcgJyArIGlJbzAwb28gWyAidGl0bGUiIF0gLiByZXBsYWNlICggJywnICwgJycgKSArICc9JyArIHN0ciAoIGlJbzAwb28gWyAicHJpb3JpdHkiIF0gKSArICcsJwogICAgTzBPT29Pb28wT09vID0gb09Pb28gWyA6IC0gMSBdCiAgICBpZiA3OSAtIDc5OiBPb28wMG9PbzAwbyAtIElJMTExaWlpaQogICBPME9Pb09vbzBPT28gPSB1cmxsaWIyIC4gdW5xdW90ZSAoIE8wT09vT29vME9PbyApCiAgIE8wT09vT29vME9PbyA9IE8wT09vT29vME9PbyAuIHNwbGl0ICggJ2RlYnVnJyApIFsgMCBdCiAgIHJldHVybiBPME9Pb09vbzBPT28KICAgaWYgNzAgLSA3MDogbzBvbzBvIC4gaWlpaUlpMTFpICUgaTFJSWkgLyBpSWlpMUkxMUkxSUkxCiAgIGlmIDk4IC0gOTg6IGkxSUlpICUgT29PME8wMAogIGVsc2UgOgogICBJMTExMWlpMTFJSUlJID0gIkxvZ2luIGZhaWxlZCwgcGxlYXNlIG1ha2Ugc3VyZSB0aGUgbG9naW4gZGV0YWlscyBhcmUgY29ycmVjdC4iCiAgIG8wb08gPSB4Ym1jZ3VpIC4gRGlhbG9nICggKQogICBJMWkxaWlpID0gbzBvTyAuIG9rICggJ0xvZ2luIEZhaWxlZCcgLCBJMTExMWlpMTFJSUlJICkKICAgaWYgODIgLSA4MjogT28KZGVmIE9vT29vTzAgKCB1cmwgKSA6CiBpZiA5IC0gOTogb09vME8wT29vIC0gb29vTzBvbzBvT09PTwogaWYgMSA9PSAyIDoKICBpaUlpID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDNkM2R5NXpkWEJsY25Od2IzSjBMbU52YlM5MmFXUmxieTl3YkdGNVpYSnNhWFpsYW5OdmJpNWhjM0I0UDNacFpEMGxjdz09JyApCiAgaTFJMWkxaTFJMSA9IHVybCAuIHNwbGl0ICggJy8nICkgWyAtIDEgXQogIElpSTExMSA9IGlpSWkgJSBpMUkxaTFpMUkxCiAgT08wT08wMG9vTzAgPSBpMWlpSTExSSAoIElpSTExMSApCiAgSTExMTFJMWlJSTExID0ganNvbiAuIGxvYWRzICggT08wT08wMG9vTzAgKQogIE9PT09Pb08wMG9vMDAgPSBJMTExMUkxaUlJMTEgWyAncmVzdWx0JyBdIFsgJ3NlcnZpY2VzJyBdIFsgJ3ZpZGVvVVJMJyBdCiAgaWYgOSAtIDk6IG9vIC0gT29PME8wMAogIGlmIDYyIC0gNjI6IG8wMDAwb09vT29PMG8gLSBpaWlpSWkxMWkgJSBpSWlpMUkxMUkxSUkxCiAgT09PT09vTzAwb28wMCA9ICJiY2IxMGVhMGI2MjBiNDQ3ZGM4ZWQ4YWZlOWJlYTE4NmM1NGJmMGEzMWFkM2U3ZjQ2ZTM0MzZjMDhkYmY1NzE2NWUwZjNmOWI0MDk5YmEwZjY0OGQ4NzQyYWNlZmJjMGM1N2QxOTFlMjQ3NDU3YmMzYzA2OTdiNWRkNDBmMDI4ZjRlMDAzZGE2MTdmYTRlNmMzZGRiZTBkMTdmZjk4MWRiIgogIG9vT09PID0gb29vMG9Pb29vMG8wICggT09PT09vTzAwb28wMCAsICdMSVZFJyApCiAgcHJpbnQgJ2RlYycgLCBvb09PTwogIGlmIDEzIC0gMTM6IGlpaWlJaTExaSAuIGlJaWkxSTExSTFJSTEgLiBJSTExaWlJSSAuIG9vb08wb28wb09PT08KICBpZiA1OCAtIDU4OiBPb09PMG9vT09vbzBPCiBJaTExSSA9IFsgIjExOGM4YTcxYzBkZWUxYTc0M2ZiZjg4MDhlNDQwMzk3ZjI2YzJjZWExYzliZjM1MWZiMGIzYzU0MTdhOGFmOWUwN2EyZDgxNTBkY2Y2NmI2N2YxNjkwYjAzZmEyODg1ZDc3NzdhNmYwMjUzNDUzZGQxNzM4ZmI3NjkzZDEzZjJhODBmM2MyNjhmZGNiNWQ2OTIzMGYyNGY3NGFmN2JiYmUiICwKICJiY2IxMGVhMGI2MjBiNDQ3ZGM4ZWQ4YWZlOWJlYTE4NmM1NGJmMGEzMWFkM2U3ZjQ2ZTM0MzZjMDhkYmY1NzE2NTJmZmQxOTc4NjhjOGJhMjNmNzRmOGM2ZWQyNGQwMjE1N2QxOTFlMjQ3NDU3YmMzYzA2OTdiNWRkNDBmMDI4ZjRlMDAzZGE2MTdmYTRlNmMzZGRiZTBkMTdmZjk4MWRiIiAsCiAiYmNiMTBlYTBiNjIwYjQ0N2RjOGVkOGFmZTliZWExODZjNTRiZjBhMzFhZDNlN2Y0NmUzNDM2YzA4ZGJmNTcxNmRmZjY2M2Y0MzhiYzcwODA4ZTQyMmNlZjRjNjY1Y2QzNTdkMTkxZTI0NzQ1N2JjM2MwNjk3YjVkZDQwZjAyOGY0ZTAwM2RhNjE3ZmE0ZTZjM2RkYmUwZDE3ZmY5ODFkYiIgLAogImJjYjEwZWEwYjYyMGI0NDdkYzhlZDhhZmU5YmVhMTg2YzU0YmYwYTMxYWQzZTdmNDZlMzQzNmMwOGRiZjU3MTY0Yjc0ZTIxMDdiZDFiODRiMTU1ZDg2Yzg0YjEwMTEzMDU3ZDE5MWUyNDc0NTdiYzNjMDY5N2I1ZGQ0MGYwMjhmNGUwMDNkYTYxN2ZhNGU2YzNkZGJlMGQxN2ZmOTgxZGIiICwKICJiY2IxMGVhMGI2MjBiNDQ3ZGM4ZWQ4YWZlOWJlYTE4NmM1NGJmMGEzMWFkM2U3ZjQ2ZTM0MzZjMDhkYmY1NzE2OTk2MjczMjAzOGIwMmMwOGIwNjJhMzM5MWMxZjEzYzA1N2QxOTFlMjQ3NDU3YmMzYzA2OTdiNWRkNDBmMDI4ZjRlMDAzZGE2MTdmYTRlNmMzZGRiZTBkMTdmZjk4MWRiIiAsCiAiYmNiMTBlYTBiNjIwYjQ0N2RjOGVkOGFmZTliZWExODZjNTRiZjBhMzFhZDNlN2Y0NmUzNDM2YzA4ZGJmNTcxNjQ3ZGVjNGIxZmE5MzI3YTgwMWM3NzUzM2NhMTY0ODJkNTdkMTkxZTI0NzQ1N2JjM2MwNjk3YjVkZDQwZjAyOGY0ZTAwM2RhNjE3ZmE0ZTZjM2RkYmUwZDE3ZmY5ODFkYiIgLAogImJjYjEwZWEwYjYyMGI0NDdkYzhlZDhhZmU5YmVhMTg2YzU0YmYwYTMxYWQzZTdmNDZlMzQzNmMwOGRiZjU3MTZiNTVmNmQwZDU4MDJhODI4YTYwNmZiNzZmYTJjMGQ3NzU3ZDE5MWUyNDc0NTdiYzNjMDY5N2I1ZGQ0MGYwMjhmNGUwMDNkYTYxN2ZhNGU2YzNkZGJlMGQxN2ZmOTgxZGIiIF0KIE9vT09vbyA9ICJiY2IxMGVhMGI2MjBiNDQ3ZGM4ZWQ4YWZlOWJlYTE4NmM1NGJmMGEzMWFkM2U3ZjQ2ZTM0MzZjMDhkYmY1NzE2NWIxNDIzOTQ3Yjk2ODI0ZDg3MTQxY2ZhODhlMDJmMGY1N2QxOTFlMjQ3NDU3YmMzYzA2OTdiNWRkNDBmMDI4ZjRlMDAzZGE2MTdmYTRlNmMzZGRiZTBkMTdmZjk4MWRiIgogSTFpSUlpaSA9IDAKIG9vT09PID0gIiIKIGlmIG9PMDBvT09vb29PIC4gc3RyaXAgKCApIC4gc3RhcnRzd2l0aCAoICdTUycgKSBhbmQgImJsaXR6IiBub3QgaW4gb08wMG9PT29vb08gLiBsb3dlciAoICkgOgogIElJMWlpMSA9IGludCAoIG9PMDBvT09vb29PIC4gc3RyaXAgKCApIC4gc3BsaXQgKCAnICcgKSBbIDAgXSAuIHJlcGxhY2UgKCAnU1MnICwgJycgKSApIC0gMQogIG9vT09PID0gSWkxMUkgWyBJSTFpaTEgXQogZWxzZSA6CiAgb29PT08gPSBPb09Pb28KICBpZiAzNCAtIDM0OiBvT28wTzBPb28gLSBpaWlpSWkxMWkgKiBPb29vb29vb09PCiBvb09PTyA9IG9vbzBvT29vbzBvMCAoIG9vT09PICwgJ0xJVkUnICkKIHByaW50IG9vT09PCiBpZiA1IC0gNTogaTExaUlpaUlpaSAqIGkxSTFpaTFJSTFpSUkgLSBvMDAwMG9Pb09vTzBvIC0gb09vTzBvbzBPT09vIC0gaTFJSWkgKyBpMUkxaWkxSUkxaUlJCiBpZiAnLmY0bScgaW4gb29PT08gOgogIEkxaWkxaSA9ICcwJwogIE9PMDBPb09PID0gb29PMDBvT29vIC4gZ2V0U2V0dGluZyAoICdkZWZ1YWx0U1NTQml0UmF0ZScgKQogIGlmICggbm90IE9PMDBPb09PID09ICcnICkgYW5kICdNYXgnIG5vdCBpbiBPTzAwT29PTyA6CiAgIEkxaWkxaSA9IE9PMDBPb09PCiAgb29PT08gPSAncGx1Z2luOi8vcGx1Z2luLnZpZGVvLmY0bVRlc3Rlci8/dXJsPSVzJm1heGJpdHJhdGU9JXMmbmFtZT0lcyZzd2Y9JXMnICUgKCB1cmxsaWIgLiBxdW90ZV9wbHVzICggb29PT08gKSAsIEkxaWkxaSAsIHN0ciAoIG9PMDBvT09vb29PICkgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiYUhSMGNEb3ZMMk52Y21VdVpITjBkaTVqYjIwdmRtbGtaVzh2Wm14aGMyZ3ZVR3hoZVdWeVJGTjBkbE5UTG5OM1pqOTJQVEV1TVRrPSIgKSApCiAgaWYgNDUgLSA0NTogSUkxMTFpaWlpICogaTFJSWkKICBpZiAyNSAtIDI1OiBvT28wTzBPb28gKyBpSWlpMUkxMUkxSUkxICUgT29PTzBvb09Pb28wTyAvIE9vTzBPMDAgKiBPb08wTzAwCiAgaWYgNTEgLSA1MTogaWlpaUlpMTFpIC0gb29PTzAwb09vICsgaTFJMWlpMUlJMWlJSSAtIE9vbzAwb09vMDBvIC4gb29PTzAwb09vICUgb09vTzBvbzBPT09vCiAgaWYgMTQgLSAxNDogb28gLyBPMAogIGlmIDQzIC0gNDM6IGlpaWlJaTExaSAtIG9vb08wb28wb09PT08gJSBpMTFpSWlpSWlpICogSUkxMTFpaWlpIC4gbzBvbzBvIC0gT29PTzBvb09Pb28wTwogIGlmIDEzIC0gMTM6IG9vT08wMG9PbwogIGlmIDcwIC0gNzA6IG9vb08wb28wb09PT08gLiBvMG9vMG8gKiBvb09PMDBvT28gKyBPb09PMG9vT09vbzBPIC0gb29vTzBvbzBvT09PTyAuIG9vb08wb28wb09PT08KIHhibWMgLiBleGVjdXRlYnVpbHRpbiAoICdYQk1DLlJ1blBsdWdpbignICsgb29PT08gKyAnKScgKQogaWYgNjAgLSA2MDogaTExaUlpaUlpaSAqIE9vTzBPMDAgJSBvb09PMDBvT28gKyBvb09PMDBvT28KIGlmIDg0IC0gODQ6IGlJaWkxSTExSTFJSTEgKyBPb29vb29vb09PCmRlZiBvb28wb09vb28wbzAgKCBzdHJUb0RlY3J5cHQgLCB0eXBlICkgOgogT28wT09PT09PTzBvbyA9ICIxMjMzOTAxMTk5MDAyMjIzMDAwMTExQTIiCiBJSTFJaWlpaTExMWkgPSAiOTY4NTY0NzgyMTI5ODk4NzQ4MzI1OFo4IgogT29vb29PMG8wID0gIjk2ODU2NDc4MjEyOTg5ODc0ODMyNThaOCIKIE9Pb28wMG8wME8wbzAgPSAiMTIzMzkwMTE5OTAwMjIyMzAwMDExMUEyIgogaUkxSTFpaTExSUlpMSA9ICIxMjMzOTAxMTk5MDAyMjIzMDAwMTExQTIiCiBPT29PT29PTyA9ICI5Njg1NjQ3ODIxMjk4OTg3NDgzMjU4WjgiCiBPME8wMCA9ICIiCiBpZiB0eXBlID09ICJMSVZFIiA6CiAgaW1wb3J0IHB5YWVzCiAgSTFpSWlpSTExID0gcHlhZXMgLiBuZXcgKCBPb29vb08wbzAgLCBweWFlcyAuIE1PREVfRUNCICwgSVYgPSAnJyApCiAgTzBPMDAgPSBJMWlJaWlJMTEgLiBkZWNyeXB0ICggc3RyVG9EZWNyeXB0IC4gZGVjb2RlICggImhleCIgKSApIC4gcmVwbGFjZSAoICdceDAwJyAsICcnICkKICBpZiBPME8wMCBbIDogNCBdID09ICJydG1wIiBvciBPME8wMCBbIDogNCBdID09ICJodHRwIiA6IHJldHVybiBPME8wMAogIGVsc2UgOgogICBJMWlJaWlJMTEgPSBweWFlcyAuIG5ldyAoIE9Pb28wMG8wME8wbzAgLCBweWFlcyAuIE1PREVfRUNCICwgSVYgPSAnJyApCiAgIE8wTzAwID0gSTFpSWlpSTExIC4gZGVjcnlwdCAoIHN0clRvRGVjcnlwdCAuIGRlY29kZSAoICJoZXgiICkgKSAuIHJlcGxhY2UgKCAnXHgwMCcgLCAnJyApCiAgIGlmIE8wTzAwIFsgOiA0IF0gPT0gInJ0bXAiIG9yIE8wTzAwIFsgOiA0IF0gPT0gImh0dHAiIDogcmV0dXJuIE8wTzAwCiBpZiB0eXBlID09ICJWSURFTyIgOgogIEkxaUlpaUkxMSA9IHB5YWVzIC4gbmV3ICggT28wT09PT09PTzBvbyAsIHB5YWVzIC4gTU9ERV9FQ0IgLCBJViA9ICcnICkKICBPME8wMCA9IEkxaUlpaUkxMSAuIGRlY3J5cHQgKCBzdHJUb0RlY3J5cHQgLiBkZWNvZGUgKCAiaGV4IiApICkgLiByZXBsYWNlICggJ1x4MDAnICwgJycgKQogIGlmIE8wTzAwIFsgOiA0IF0gPT0gInJ0bXAiIG9yIE8wTzAwIFsgOiA0IF0gPT0gImh0dHAiIDogcmV0dXJuIE8wTzAwCiAgZWxzZSA6CiAgIEkxaUlpaUkxMSA9IHB5YWVzIC4gbmV3ICggSUkxSWlpaWkxMTFpICwgcHlhZXMgLiBNT0RFX0VDQiAsIElWID0gJycgKQogICBPME8wMCA9IEkxaUlpaUkxMSAuIGRlY3J5cHQgKCBzdHJUb0RlY3J5cHQgLiBkZWNvZGUgKCAiaGV4IiApICkgLiByZXBsYWNlICggJ1x4MDAnICwgJycgKQogICBpZiBPME8wMCBbIDogNCBdID09ICJydG1wIiBvciBPME8wMCBbIDogNCBdID09ICJodHRwIiA6IHJldHVybiBPME8wMAogcmV0dXJuIE8wTzAwCiBpZiAyNyAtIDI3OiBpMUkxaWkxSUkxaUlJCiBpZiA3NCAtIDc0OiBvb29PMG9vMG9PT09PIC8gT28KZGVmIE9vb09vTyAoIHVybCApIDoKIGlmIDU5IC0gNTk6IElJMTFpaUlJICsgb28gLyBJSTExMWlpaWkgLyBvT28wTzBPb28KIGlmIDgwIC0gODA6IG9PbzBPME9vbyArIGlJaWkxSTExSTFJSTEgLiBvb29PMG9vMG9PT09PCiBpZiA3NiAtIDc2OiBvbyAqIElJMTFpaUlJCiBpZiBub3QgdXJsIC4gc3RhcnRzd2l0aCAoICdodHRwJyApIDoKICBJaUkxMTEgPSBpMUlJaWkxaUkxaWlJaWkgKCB1cmwgKQogZWxzZSA6CiAgSWlJMTExID0gdXJsCiBpZiBJaUkxMTEgPT0gJycgOiByZXR1cm4KIGlpMTExID0gVHJ1ZQogaWYgbm90ICd3d3cueW91dHViZS5jb20nIGluIElpSTExMSA6CiAgSWlJMTExID0gSWlJMTExICsgJ3xVc2VyLUFnZW50PU1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS80MC4wLjIyMTQuOTMgU2FmYXJpLzUzNy4zNicKIGVsc2UgOgogIElJaWlJMTEgPSAnaHR0cHM6Ly93d3cueW91dHViZS5jb20vZ2V0X3ZpZGVvX2luZm8/aHRtbDU9MSZ2aWRlb19pZD0lcycgJSBJaUkxMTEgLiBzcGxpdCAoICdlbWJlZC8nICkgWyAxIF0gLiBzcGxpdCAoICc/JyApIFsgMCBdCiAgSWlJMTExID0gJ3BsdWdpbjovL3BsdWdpbi52aWRlby55b3V0dWJlL3BsYXkvP3ZpZGVvX2lkPSVzJyAlIElpSTExMSAuIHNwbGl0ICggJ2VtYmVkLycgKSBbIDEgXSAuIHNwbGl0ICggJz8nICkgWyAwIF0KICB0cnkgOgogICBJSTFJaWlJaTFpID0gJycKICAgSWlJSUlvTzBvT09vb08wID0gaTFpaUkxMUkgKCBJSWlpSTExICkKICAgaWYgbm90ICdobHN2cD0nIGluIElpSUlJb08wb09Pb29PMCA6CiAgICBpZiA2MiAtIDYyOiBpMTFpSWlpSWlpIC0gT29PTzBvb09Pb28wTwogICAgaWkxMTEgPSBGYWxzZQogICAgT28wbzBvb29vME8wID0geGJtY2d1aSAuIERpYWxvZ1Byb2dyZXNzICggKQogICAgT28wbzBvb29vME8wIC4gY3JlYXRlICggJ1Byb2dyZXNzJyAsICdXaWxsb3cgeW91dHViZScgKQogICAgT28wbzBvb29vME8wIC4gdXBkYXRlICggMTAgLCAiIiAsICJZb3V0dWJlIGxpbmsgPz8iICkKICAgIGlmIDgxIC0gODE6IE9vT08wb29PT29vME8KICAgIGlmIDkyIC0gOTI6IElJMTFpaUlJIC0gT29PME8wMCAtIE9vb29vb29vT08gLyBvb29PMG9vMG9PT09PIC0gaTFJSWkKICAgIE9vMG8wb29vbzBPMCAuIHVwZGF0ZSAoIDMwICwgIiIgLCAiTm90IGluIFVTPyBVc2luZyBwcm94eSIgKQogICAgbzBvb09vb08gPSBvb08wMG9Pb28gLiBnZXRTZXR0aW5nICggJ1dpbGxvd1Byb3h5JyApCiAgICBPME9vT28gPSBvb08wMG9Pb28gLiBnZXRTZXR0aW5nICggJ1dpbGxvd1BvcnQnICkKICAgIHByaW50ICdwbGF5aW5nIHdpdGggcHJveHknCiAgICBpSUlpMWkxID0gdXJsbGliMiAuIEhUVFBDb29raWVQcm9jZXNzb3IgKCBjb29raWVsaWIgLiBMV1BDb29raWVKYXIgKCApICkKICAgIE9Pb29PTzAwMCA9IHVybGxpYjIgLiBidWlsZF9vcGVuZXIgKCBpSUlpMWkxICwgdXJsbGliMiAuIEhUVFBCYXNpY0F1dGhIYW5kbGVyICggKSAsIHVybGxpYjIgLiBIVFRQSGFuZGxlciAoICkgLCB1cmxsaWIyIC4gUHJveHlIYW5kbGVyICggeyAnaHR0cHMnIDogJyVzOiVzJyAlICggbzBvb09vb08gLCBPME9vT28gKSB9ICkgKQogICAgT28wT29PMDBvT08wbyA9IHVybGxpYjIgLiBSZXF1ZXN0ICggSUlpaUkxMSApCiAgICBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoICdVc2VyLUFnZW50JyAsICdNb3ppbGxhLzUuMCAoaVBhZDsgQ1BVIE9TIDdfMF80IGxpa2UgTWFjIE9TIFgpIEFwcGxlV2ViS2l0LzUzNy41MS4xIChLSFRNTCwgbGlrZSBHZWNrbykgTW9iaWxlLzExQjU1NGEnICkKICAgIE9PTzAwTyA9IE9Pb29PTzAwMCAuIG9wZW4gKCBPbzBPb08wMG9PTzBvICwgdGltZW91dCA9IDIwICkKICAgIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiAgICBPT08wME8gLiBjbG9zZSAoICkKICAgIHByaW50IE9Pb09PMG9vMG9vTwogICAgT28wbzBvb29vME8wIC4gdXBkYXRlICggMzAgLCAiIiAsICJHb3QgdGhlIExpbmssIE5vdyBwbGF5aW5nIHdpdGggVXNpbmcgcHJveHkiICkKICAgIEkxaTExMUkgPSAnaGxzdnA9KC4qPykmJwogICAgTzBPT29Pb28wT09vID0gdXJsbGliIC4gdW5xdW90ZSAoIHJlIC4gZmluZGFsbCAoIEkxaTExMUkgLCBPT29PTzBvbzBvb08gKSBbIDAgXSApCiAgICBwcmludCBPME9Pb09vbzBPT28KICAgIElpSTExMSA9IE8wT09vT29vME9PbyArICd8VXNlci1BZ2VudD1WTEMvMi4yLjEgTGliVkxDLzIuMi4xJwogICAgaWkxMTEgPSBUcnVlCiAgICBpZiA4MSAtIDgxOiBpMUlJaSAvIG8wb28wbyAlIGkxMWlJaWlJaWkgLiBpSWlpMUkxMUkxSUkxICogb09vME8wT29vICsgT29vb29vb29PTwogICAgcHJpbnQgJ2VuZCBwbGF5aW5nIHdpdGggcHJveHknCiAgICBpZiAzMSAtIDMxOiBpMUlJaSAlIElJMTExaWlpaQogIGV4Y2VwdCA6IHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogaWYgaWkxMTEgOgogIGlpSWlpID0geGJtYyAuIFBsYXlMaXN0ICggMSApCiAgaWlJaWkgLiBjbGVhciAoICkKICBJMSA9IHhibWNndWkgLiBMaXN0SXRlbSAoIGxhYmVsID0gc3RyICggb08wMG9PT29vb08gKSAsIGljb25JbWFnZSA9ICJEZWZhdWx0VmlkZW8ucG5nIiAsIHRodW1ibmFpbEltYWdlID0geGJtYyAuIGdldEluZm9JbWFnZSAoICJMaXN0SXRlbS5UaHVtYiIgKSApCiAgaWlJaWkgLiBhZGQgKCBJaUkxMTEgLCBJMSApCiAgSWlJaTExaUkgPSB4Ym1jIC4gUGxheWVyICggKQogIElpSWkxMWlJIC4gcGxheSAoIGlpSWlpICkKICBpZiAxMyAtIDEzOiBpSWlpMUkxMUkxSUkxIC0gSUkxMTFpaWlpICUgTzAgLiBvMDAwMG9Pb09vTzBvICUgb29PTzAwb09vCmRlZiBJaTExaUlpaUkgKCB1cmwgKSA6CiB0cnkgOgogIGlmIDMgLSAzOiBJSTExMWlpaWkgLyBJSTExaWlJSQogIGkxSUlpaUlJSUlpID0gSWlJSUlpICggdXJsICkKICBpZiA4MSAtIDgxOiBPb29vb29vb09PIC4gb09vME8wT29vICogaUlpaTFJMTFJMUlJMSAvIG9PbzBPME9vbyAtIG9Pb08wb28wT09PbyAlIGkxSUlpCiAgTzAwME9PMCAoIEkxaTExaSAoIG9PMDBvT09vb29PICwgJ0VCJyAsIFRydWUgKSAsICcnICwgLSAxICwgJycgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogIGlmIDc3IC0gNzc6IG9vIC8gT29vb29vb29PTwogIE8wMDBPTzAgKCBJMWkxMWkgKCAnSGlnaGxpZ2h0cyBhbmQgRXZlbnRzJyAsICdibHVlJyAsIFRydWUgKSAsICcnICwgLSAxICwgJycgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogIGlmIGkxSUlpaUlJSUlpIGFuZCBsZW4gKCBpMUlJaWlJSUlJaSApID4gMCA6CiAgIGZvciBJaTExMUkgaW4gaTFJSWlpSUlJSWkgOgogICAgTzAwME9PMCAoIElpMTExSSBbIDAgXSAsIElpMTExSSBbIDEgXSAsIDIyICwgSWkxMTFJIFsgMiBdICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKICAgIGlmIDMyIC0gMzI6IE9vT08wb29PT29vME8gLyBvb29PMG9vMG9PT09PIC0gTzAgKiBpSWlpMUkxMUkxSUkxCiAgT09vT08wb28wb29PID0gaTFJSWlpMWlJMWlpSWlpICggdXJsICkKICBvbzBvTzBvT28wTyA9IE9Pb09PMG9vMG9vTyAuIHNwbGl0ICggJywnICkKICBpZiA3NSAtIDc1OiBJSTExMWlpaWkgKyBJSTExMWlpaWkgKyBJSTExaWlJSSAqIE9vbzAwb09vMDBvCiAgTzAwME9PMCAoIEkxaTExaSAoICdSZXBsYXknICwgJ3JlZCcgLCBUcnVlICkgLCAnJyAsIC0gMSAsICcnICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKICBmb3IgSWkxMTFJIGluIG9vMG9PMG9PbzBPIDoKICAgT29vb09vbzAgLCBvb09vTzBPb08gPSBJaTExMUkgLiBzcGxpdCAoICc9JyApCiAgIE8wMDBPTzAgKCBPb29vT29vMCAsIHVybCArICc6JyArIG9vT29PME9vTyAsIDIyICwgJycgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogICBpZiA5NCAtIDk0OiBvb29PMG9vMG9PT09PICUgT29vMDBvT28wMG8gLiBpMTFpSWlpSWlpICUgT29vb29vb29PTyArIE9vIC4gb28KICAgaWYgMTkgLSAxOTogb28gLSBvT28wTzBPb28gLiBPb08wTzAwIC4gaTFJSWkgLSBpaWlpSWkxMWkKIGV4Y2VwdCA6IHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogaWYgOTMgLSA5Mzogb29vTzBvbzBvT09PTyAlIG9Pb08wb28wT09PbwpkZWYgSWlJSUlpICggbWF0Y2hpZCApIDoKIHRyeSA6CiAgT28wT29PMDBvT08wbyA9IHVybGxpYjIgLiBSZXF1ZXN0ICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDNkcGJHeHZkMlpsWldSekxuZHBiR3h2ZHk1MGRpOTNhV3hzYjNkTllYUmphRVJsZEdGcGJITXZUV0YwWTJoS1UwOU9SR0YwWVMwbGN5NXFjdz09JyApICUgbWF0Y2hpZCApCiAgT28wT29PMDBvT08wbyAuIGFkZF9oZWFkZXIgKCAnVXNlci1BZ2VudCcgLCAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzQwLjAuMjIxNC45MyBTYWZhcmkvNTM3LjM2JyApCiAgT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICkKICBpZiBPT08wME8gLiBpbmZvICggKSAuIGdldCAoICdDb250ZW50LUVuY29kaW5nJyApID09ICdnemlwJyA6CiAgIGZyb20gU3RyaW5nSU8gaW1wb3J0IFN0cmluZ0lPCiAgIGltcG9ydCBnemlwCiAgIG8wMG9vb08wT28gPSBTdHJpbmdJTyAoIE9PTzAwTyAuIHJlYWQgKCApICkKICAgbzBPME9PTzBPb28gPSBnemlwIC4gR3ppcEZpbGUgKCBmaWxlb2JqID0gbzAwb29vTzBPbyApCiAgIE9Pb09PMG9vMG9vTyA9IG8wTzBPT08wT29vIC4gcmVhZCAoICkKICBlbHNlIDoKICAgT09vT08wb28wb29PID0gT09PMDBPIC4gcmVhZCAoICkKICAgaWYgMzEgLSAzMTogSUkxMTFpaWlpICsgSUkxMWlpSUkgLSBPb29vb29vb09PIC4gT29PTzBvb09Pb28wTwogIE9PTzAwTyAuIGNsb3NlICggKQogIGlmIDI4IC0gMjg6IG8wMDAwb09vT29PMG8gLiBvT29PMG9vME9PT28KICBJMWkxMTFJID0gJyhcey4qfSknCiAgT09vT08wb28wb29PID0gcmUgLiBmaW5kYWxsICggSTFpMTExSSAsIE9Pb09PMG9vMG9vTyApIFsgMCBdCiAgb09vMDAwT28wMG8gPSBqc29uIC4gbG9hZHMgKCBPT29PTzBvbzBvb08gKQogIGlmIDgxIC0gODE6IE9vb29vb29vT08KICBvTzAwT29PTyA9IFsgXQogIG8wME8wICwgb09PME9vb28gPSBJSUkxMWkxaUkxMSAoICkgOwogIGZvciBJMWkgaW4gb09vMDAwT28wMG8gWyAicmVzdWx0IiBdIDoKICAgaWYgIkJHVXJsIiBpbiBJMWkgYW5kICggbm90IEkxaSBbICJCR1VybCIgXSA9PSAiIiApIGFuZCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdkM3AyYjJRNicgKSBpbiBJMWkgWyAiQkdVcmwiIF0gb3IgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1ltZDJiMlE9JyApIGluIEkxaSBbICJCR1VybCIgXSBvciBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiZDJ4MmIyUT0iICkgaW4gSTFpIFsgIkJHVXJsIiBdICkgOgogICAgb29PT09vT29PT09PID0gSTFpIFsgIkJHVXJsIiBdCiAgICBwcmludCAncnVybCcgLCBvb09PT29Pb09PT08KICAgIGlmIGJhc2U2NCAuIGI2NGRlY29kZSAoICdkM3AyYjJRNicgKSBpbiBvb09PT29Pb09PT08gOgogICAgIG9vT09Pb09vT09PTyA9IG9vT09Pb09vT09PTyAuIHJlcGxhY2UgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnZDNwMmIyUTZMeTg9JyApICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92THpNNExqazVMalk0TGpFMk1qb3hPVE0xTDNkc2JIZDJiMlF2WDJSbFptbHVjM1JmTDNkc2RtOWtMM050YVd3NicgKSApIDsKICAgICBvb09PT29Pb09PT08gPSBvb09PT29Pb09PT08gLiByZXBsYWNlICggJy5tcDQnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1gzZGxZaTV6Yldsc0wzQnNZWGxzYVhOMExtMHpkVGc9JyApICkgOwogICAgZWxpZiBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiZDJ4MmIyUT0iICkgaW4gSTFpIFsgIkJHVXJsIiBdIDoKICAgICBvb09PT29Pb09PT08gPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiYUhSMGNITTZMeTkzZDNjdWQybHNiRzkzTG5SMkwwVjJaVzUwVFdkdGRDOTNaV0p6WlhKMmFXTmxjeTluWlhSSWFXZG9iR2xuYUhSVlVrd3VZWE53UDNadlpIVnliRDA9IiApICsgdXJsbGliIC4gcXVvdGVfcGx1cyAoIG9vT09Pb09vT09PTyApCiAgICAgb29PT09vT29PT09PID0gaTFpaUkxMUkgKCBvb09PT29Pb09PT08gLCBjb29raWVKYXIgPSBvT08wT29vbyApCiAgICAgb29PT09vT29PT09PID0ganNvbiAuIGxvYWRzICggb29PT09vT29PT09PICkgWyAidXJsIiBdCiAgICBlbHNlIDoKICAgICBvb09PT29Pb09PT08gPSBvb09PT29Pb09PT08gLiByZXBsYWNlICggJ2Jndm9kOi8nICwgJycgKQogICAgIE8wT08gPSB7ICJiZ3ZvZHVybCIgOiBvb09PT29Pb09PT08gfQogICAgIG9vT09Pb09vT09PTyA9IGkxaWlJMTFJICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjSE02THk5M2QzY3VkMmxzYkc5M0xuUjJMMFYyWlc1MFRXZHRkQzkzWldKelpYSjJhV05sY3k5blpYUkNSMGhuYkhSVmNtd3VZWE53PycgKSArIHVybGxpYiAuIHVybGVuY29kZSAoIE8wT08gKSApCiAgICAgcHJpbnQgb29PT09vT29PT09PCiAgICAgb29PT09vT29PT09PID0ganNvbiAuIGxvYWRzICggb29PT09vT29PT09PICkgWyAidXJsIiBdCiAgICAgaWYgMzIgLSAzMjogb29vTzBvbzBvT09PTyAtIE9vICogaTFJMWlpMUlJMWlJSSAqIE9vT08wb29PT29vME8KICAgICBpZiA4NCAtIDg0OiBvMDAwMG9Pb09vTzBvICsgb09vTzBvbzBPT09vICUgb28gKyBpMTFpSWlpSWlpCiAgICBvTzAwT29PTyAuIGFwcGVuZCAoIFsgSTFpIFsgIllUVmlkZW9OYW1lIiBdICwgb29PT09vT29PT09PICwgSTFpIFsgIllUVGh1bWJJZCIgXSBdICkKICAgIGlmIDM3IC0gMzc6IE9vT08wb29PT29vME8gJSBvT29PMG9vME9PT28gLyBPbwogIHJldHVybiBvTzAwT29PTwogIGlmIDk0IC0gOTQ6IE9vT08wb29PT29vME8gLyBvb09PMDBvT28gLiBPb28wMG9PbzAwbwogZXhjZXB0IDoKICBwcmludCB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICByZXR1cm4gTm9uZQpkZWYgSUlJMUlpSTFpMWkgKCB1cmx0b2dldCApIDoKIGlJaU9vID0gY29va2llbGliIC4gTFdQQ29va2llSmFyICggKQogT09vT08wb28wb29PID0gJycKIHRyeSA6CiAgaTFpaUkxMUkgKCAnaHR0cDovL3Byb3h5dXNhLm9yZy9pbmRleC5waHAnICwgaUlpT28gKSA7CiAgb28wT09vT29vME8wTyA9IHsgJ3UnIDogdXJsdG9nZXQgLCAnZW5jb2RlVVJMJyA6ICdvbicgLCAnYWxsb3dDb29raWVzJyA6ICdvbicgLCAnc3RyaXBKUycgOiAnb24nICwgJ3N0cmlwT2JqZWN0cycgOiAnb24nIH0KICBvbzBPT29Pb28wTzBPID0gdXJsbGliIC4gdXJsZW5jb2RlICggb28wT09vT29vME8wTyApCiAgT09vT08wb28wb29PID0gaTFpaUkxMUkgKCAnaHR0cDovL3Byb3h5dXNhLm9yZy9pbmNsdWRlcy9wcm9jZXNzLnBocD9hY3Rpb249dXBkYXRlJyAsIGlJaU9vICwgb28wT09vT29vME8wTyAsIHRpbWVvdXQgPSAxMCApCiBleGNlcHQgOgogIGkxaWlJMTFJICggJ2h0dHA6Ly93ZWJwcm94eS50by8nICwgaUlpT28gKSA7CiAgb28wT09vT29vME8wTyA9IHsgJ3UnIDogdXJsdG9nZXQgLCAnZW5jb2RlVVJMJyA6ICdvbicgLCAnYWxsb3dDb29raWVzJyA6ICdvbicgLCAnc3RyaXBKUycgOiAnb24nICwgJ3N0cmlwT2JqZWN0cycgOiAnb24nIH0KICBvbzBPT29Pb28wTzBPID0gdXJsbGliIC4gdXJsZW5jb2RlICggb28wT09vT29vME8wTyApCiAgT09vT08wb28wb29PID0gaTFpaUkxMUkgKCAnaHR0cDovL3dlYnByb3h5LnRvL2luY2x1ZGVzL3Byb2Nlc3MucGhwP2FjdGlvbj11cGRhdGUnICwgaUlpT28gLCBvbzBPT29Pb28wTzBPICwgdGltZW91dCA9IDEwICkKIHJldHVybiBPT29PTzBvbzBvb08KIGlmIDQ4IC0gNDg6IElJMTFpaUlJCmRlZiBJMTExMUlJSTExMWlpICggdXJsICkgOgogdHJ5IDoKICBpZiA5MCAtIDkwOiBPb09PMG9vT09vbzBPCiAgaWYgODggLSA4ODogb29PTzAwb09vCiAgT28wT29PMDBvT08wbyA9IHVybGxpYjIgLiBSZXF1ZXN0ICggdXJsICkKICBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoICdVc2VyLUFnZW50JyAsICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNDAuMC4yMjE0LjkzIFNhZmFyaS81MzcuMzYnICkKICBPT08wME8gPSB1cmxsaWIyIC4gdXJsb3BlbiAoIE9vME9vTzAwb09PMG8gKQogIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiAgT09PMDBPIC4gY2xvc2UgKCApCiAgaWYgODUgLSA4NTogaWlpaUlpMTFpCiAgaWYgNyAtIDc6IE9vbzAwb09vMDBvCiAgaWYgOTkgLSA5OTogaTExaUlpaUlpaSAtIGkxSTFpaTFJSTFpSUkKICBpZiA4NSAtIDg1OiBvMG9vMG8gJSBvT29PMG9vME9PT28KICBJaUkxMTEgPSBpMWlpSTExSSAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJhSFIwY0RvdkwyRndjR1psWldSekxuZHBiR3h2ZHk1MGRpOXRiMkpwYkdWSWIyMWxYM1l4TG1wemIyND0iICkgLCBoZWFkZXJzID0gWyAoICdVc2VyLUFnZW50JyAsICdXaWxsb3cvMy4yLjQgQ0ZOZXR3b3JrLzcxMS40LjYgRGFyd2luLzE0LjAuMCcgKSBdICkKICBpZiA5NSAtIDk1OiBvb09PMDBvT28gKiBJSTExaWlJSSAqIGkxSTFpaTFJSTFpSUkgLiBPb28wMG9PbzAwbwogIG9vb09vMDAgPSBqc29uIC4gbG9hZHMgKCBJaUkxMTEgKQogIGlmIDEgLSAxOiBvbyArIG9Pb08wb28wT09PbwogIGlmIDcwIC0gNzA6IGlJaWkxSTExSTFJSTEgKyBPb09PMG9vT09vbzBPIC4gb09vTzBvbzBPT09vIC8gT28KICBpZiA3NyAtIDc3OiBPb08wTzAwIC8gT29PTzBvb09Pb28wTyAuIGkxSTFpaTFJSTFpSUkgLyBvMG9vMG8gLSBPb29vb29vb09PCiAgTzAwME9PMCAoIEkxaTExaSAoICdMaXZlIEdhbWVzJyAsICdFQicgLCBUcnVlICkgLCAnJyAsIC0gMSAsICcnICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKICBpZiA3NiAtIDc2OiBPMAogIG8wME8wICwgb09PME9vb28gPSBJSUkxMWkxaUkxMSAoICkgOwogIG9vbyA9IEZhbHNlCiAgZm9yIElpMWkgaW4gb29vT28wMCBbICJyZXN1bHQiIF0gOgogICBpZiBJaTFpIFsgImlzbGl2ZSIgXSA9PSAxIDoKICAgIElJSUkxaSA9IElpMWkgWyAibW5hbWUiIF0KICAgIG9vME8wMG8wID0gSWkxaSBbICJtaWQiIF0KICAgIE9vMG9Pb29Pb29PID0gSWkxaSBbICJkYXRlIiBdCiAgICBpaTFJMWlJSUkgPSBPbzBvT29vT29vTyArICcgLSAnICsgSUlJSTFpCiAgICBpZiAxMSAtIDExOiBvT28wTzBPb28gLyBpMTFpSWlpSWlpIC8gb09vME8wT29vICUgb29PTzAwb09vIC0gaTFJMWlpMUlJMWlJSSArIElJMTExaWlpaQogICAgaWYgMzggLSAzODogb28gJSBvb29PMG9vMG9PT09PICogbzAwMDBvT29Pb08wbwogICAgaWYgbzAwTzAgOgogICAgIElJSUlJaWlJID0gJ0xpdmVNYXRjaCcKICAgICB1cmwgPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMM2QzZHk1M2FXeHNiM2N1ZEhZdlJYWmxiblJOWjIxMEx5VnpWVkpNTG1GemNEOXRhV1E5SlhNPScgKSAlICggSUlJSUlpaUkgLCBvbzBPMDBvMCApCiAgICAgSUlJSUkgPSBpMWlpSTExSSAoIHVybCAsIGNvb2tpZUphciA9IG9PTzBPb29vICkKICAgICBPb09vMG9PMG8gPSBqc29uIC4gbG9hZHMgKCBJSUlJSSApCiAgICAgcHJpbnQgJ3ZpZGVvcycgLCBPb09vMG9PMG8KICAgICBpZiAicm9rdSIgaW4gT29PbzBvTzBvIDoKICAgICAgZm9yIE8wME9vTzAgaW4gT29PbzBvTzBvIFsgInJva3UiIF0gWyAiVVJMIiBdIDoKICAgICAgIE8wMDBPTzAgKCBJMTFJSWlJaUkgKCAnU291cmNlICVzICVzICcgJSAoIHN0ciAoIE8wME9vTzAgWyAicHJpb3JpdHkiIF0gKSAsIE8wME9vTzAgWyAicGxheWVyIiBdICkgLCAnWk0nICwgVHJ1ZSApICsgaWkxSTFpSUlJICwgb28wTzAwbzAgKyAnOicgKyBzdHIgKCBPMDBPb08wIFsgInByaW9yaXR5IiBdICkgLCAyMSAsICcnICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKICAgICAgIG9vbyA9IFRydWUKICBpZiBub3Qgb29vIDoKICAgTzAwME9PMCAoIEkxaTExaSAoICcgICAgIC0tLS1ObyBMaXZlIEdhbWVzLS0tLScgLCAncmVkJyAsIFRydWUgKSAsICcnICwgLSAxICwgJycgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogICBpZiA4OSAtIDg5OiBPb29vb29vb09PICogbzAwMDBvT29Pb08wbyAqIG9vIC4gT28gKiBvMDAwMG9Pb09vTzBvIC8gaTFJMWlpMUlJMWlJSQogICBpZiA0NiAtIDQ2OiBpMTFpSWlpSWlpCiAgTzAwME9PMCAoIEkxaTExaSAoICdSZWNlbnRseSBGaW5pc2hlZCBHYW1lcycgLCAnRUInICwgVHJ1ZSApICwgJycgLCAtIDEgLCAnJyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiAgaWYgMTUgLSAxNTogTzAgLyBpMUlJaSAvIGkxSUlpIC4gaTFJMWlpMUlJMWlJSSAlIG9PbzBPME9vbyArIG9vCiAgZm9yIElpMWkgaW4gb29vT28wMCBbICJyZXN1bHQiIF0gOgogICBpZiBJaTFpIFsgImlzbGl2ZSIgXSA9PSAwIDoKICAgIElJSUkxaSA9IElpMWkgWyAibW5hbWUiIF0KICAgIG9vME8wMG8wID0gSWkxaSBbICJtaWQiIF0KICAgIE9vMG9Pb29Pb29PID0gSWkxaSBbICJkYXRlIiBdCiAgICBpaTFJMWlJSUkgPSBPbzBvT29vT29vTyArICcgLSAnICsgSUlJSTFpCiAgICBpZiA0OCAtIDQ4OiBvMG9vMG8gJSBpMUkxaWkxSUkxaUlJICUgbzAwMDBvT29Pb08wbyAlIGlJaWkxSTExSTFJSTEgLiBvMDAwMG9Pb09vTzBvCiAgICBpZiAxNCAtIDE0OiBpMUkxaWkxSUkxaUlJICogb29PTzAwb09vICUgTzAgKyBPb09PMG9vT09vbzBPICsgb09vTzBvbzBPT09vCiAgICBPMDAwT08wICggaWkxSTFpSUlJICwgb28wTzAwbzAgLCAyMyAsICcnICkKIGV4Y2VwdCA6IHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogaWYgMjMgLSAyMzogT29PME8wMCAlIGkxSTFpaTFJSTFpSUkgKyBvMDAwMG9Pb09vTzBvIC0gbzBvbzBvCiBPMDAwT08wICggSTFpMTFpICggJ0FsbCBSZWNvcmRlZCBTZXJpZXMgPj5DbGljayB0byBsb2FkJyAsICdaTScgLCBUcnVlICkgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMM2QzZHk1M2FXeHNiM2N1ZEhZdlJYWmxiblJOWjIxMEwzSmxjM1ZzZEhNdVlYTncnICkgLCAyMCAsICcnICkKIGlmIDY1IC0gNjU6IE9vb29vb29vT08KIGlmIDIyIC0gMjI6IElJMTFpaUlJICsgSUkxMTFpaWlpICsgT29PME8wMAogaWYgODMgLSA4MzogT28KZGVmIGkxSWkxaTExaWkgKCB1cmwgKSA6CiBPbzBPb08wMG9PTzBvID0gdXJsbGliMiAuIFJlcXVlc3QgKCB1cmwgKQogT28wT29PMDBvT08wbyAuIGFkZF9oZWFkZXIgKCAnVXNlci1BZ2VudCcgLCAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzQwLjAuMjIxNC45MyBTYWZhcmkvNTM3LjM2JyApCiBPT08wME8gPSB1cmxsaWIyIC4gdXJsb3BlbiAoIE9vME9vTzAwb09PMG8gKQogT09vT08wb28wb29PID0gT09PMDBPIC4gcmVhZCAoICkKIE9PTzAwTyAuIGNsb3NlICggKQogSUkxSWlpSWkxaSA9ICc8aDE+KC4qPylccyo8L2gxPiguKj8pPC9kaXY+JwogSWlJMTExID0gcmUgLiBmaW5kYWxsICggSUkxSWlpSWkxaSAsIE9Pb09PMG9vMG9vTyAsIHJlIC4gRE9UQUxMICkKIGlmIDU4IC0gNTg6IG9PbzBPME9vbyArIG9vT08wMG9PbyAqIG8wMDAwb09vT29PMG8KIGlJMUlJSUlJSSA9ICdzbiA9ICIoLio/KSInCiBmb3IgSUkxaWkxICwgT08wb08wT28gaW4gSWlJMTExIDoKICBvMG8wTyA9ICcnCiAgbzBPSWlJSSA9IElJMWlpMSAuIHNwbGl0ICggJzwnICkgWyAwIF0KICBPb29vT08wID0gJzxsaT48YSBocmVmPSIoLio/KSI+KC4qPyk8JwogIG9vME9vTyA9IHJlIC4gZmluZGFsbCAoIE9vb29PTzAgLCBPTzBvTzBPbyApCiAgTzAwME9PMCAoIG8wT0lpSUkgLCBvMG8wTyAsIC0gMSAsICcnICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKICBpZiBvbzBPb08gYW5kIGxlbiAoIG9vME9vTyApID4gMCA6CiAgIGZvciBvMDAgLCBJMWlJSWlpIGluIG9vME9vTyA6CiAgICBpZiBub3QgbzAwIC4gc3RhcnRzd2l0aCAoICdodHQnICkgOiBvMDAgPSB1cmwgKyBvMDAKICAgIG8wbzBPID0gbzAwCiAgICBPMDAwT08wICggJyAgICAtJyArIEkxaUlJaWkgLCBvMG8wTyAsIDE3ICwgJycgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogIGVsc2UgOgogICBvME9JaUlJID0gJ05vIHN0cmVhbXMgYXZhaWxhYmxlJwogICBvMG8wTyA9ICcnCiAgIE8wMDBPTzAgKCAnICAgIC0nICsgbzBPSWlJSSAsIG8wbzBPICwgLSAxICwgJycgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogICBpZiAyIC0gMjogb09vTzBvbzBPT09vIC0gT29PME8wMAogICBpZiA0IC0gNDogTzAgLyBPb09PMG9vT09vbzBPIC4gb29PTzAwb09vIC0gT28gLyBJSTExaWlJSQogICBpZiAyNSAtIDI1OiBPb09PMG9vT09vbzBPICogb09vME8wT29vIC0gT29PME8wMCAuIE9vIC4gaWlpaUlpMTFpCiAgIGlmIDg5IC0gODk6IE8wICogT29PTzBvb09Pb28wTyAqIG9vT08wMG9PbwpkZWYgSUkxMUlpaUkxaSAoIHVybCApIDoKIGltcG9ydCBzY2RlYwogbzBPMDBvMCA9IEZhbHNlCiB0cnkgOgogIGZvciBpMTFpSUlpMTEgaW4gc2NkZWMgLiBnZXRsaW5rcyAoICkgOgogICBpZiAxID09IDEgOgogICAgaWYgNjEgLSA2MTogSUkxMTFpaWlpICUgaTExaUlpaUlpaSArIGlJaWkxSTExSTFJSTEgKyBvT29PMG9vME9PT28gLyBvbyAqIGkxSUlpCiAgICBPMDAwT08wICggaTExaUlJaTExIFsgMCBdICwgaTExaUlJaTExIFsgMSBdICwgaTExaUlJaTExIFsgMiBdICwgJycgLCBGYWxzZSAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogICAgbzBPMDBvMCA9IFRydWUKICBpZiBub3QgbzBPMDBvMCA6CiAgIG8wT0lpSUkgPSAnTm8gc3RyZWFtcyBhdmFpbGFibGUnCiAgIG8wbzBPID0gJycKICAgTzAwME9PMCAoICcgICAgLScgKyBvME9JaUlJICwgbzBvME8gLCAtIDEgLCAnJyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiBleGNlcHQgOiB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIE8wMDBPTzAgKCAnUmVmcmVzaCBMaXN0aW5nJyAsICdMaXZlJyAsIDE0NCAsICcnICkKIGlmIDIgLSAyOiBJSTExMWlpaWkgLiBPb09PMG9vT09vbzBPCiBPMDAwT08wICggJ1JlZnJlc2ggRmV0Y2ggQ29kZScgLCAnTGl2ZScgLCA5NyAsICcnICkKIGlmIDgzIC0gODM6IG9vIC0gbzBvbzBvICsgb28gLiBvbwogcmV0dXJuCiBpZiA0NSAtIDQ1OiBpMUlJaSAlIElJMTFpaUlJICUgSUkxMTFpaWlpCmRlZiBpaSAoIHVybCApIDoKIE9vMG8wb29vbzBPMCA9IHhibWNndWkgLiBEaWFsb2dQcm9ncmVzcyAoICkKIGlmIDQgLSA0OiBpaWlpSWkxMWkgKiBvbyAtIE9vIC8gSUkxMTFpaWlpICsgSUkxMWlpSUkgLyBpMTFpSWlpSWlpCiBPbzBvMG9vb28wTzAgLiBjcmVhdGUgKCAnUHJvZ3Jlc3MnICwgJ0ZldGNoaW5nIFN0cmVhbWluZyBJbmZvJyApCiBPbzBvMG9vb28wTzAgLiB1cGRhdGUgKCAxMCAsICIiICwgIkZpbmRpbmcgbGlua3MuLiIgLCAiIiApCiBvTzBvME8gPSAnPGlmcmFtZS4qP3NyYz0oLio/KS4/Ij8+JwogaWYgJ2MyNDcudHYnIG5vdCBpbiB1cmwgYW5kICdjcmljaGQudHYnIG5vdCBpbiB1cmwgOgogIE9vME9vTzAwb09PMG8gPSB1cmxsaWIyIC4gUmVxdWVzdCAoIHVybCApCiAgT28wT29PMDBvT08wbyAuIGFkZF9oZWFkZXIgKCAnVXNlci1BZ2VudCcgLCAnTW96aWxsYS81LjAoaVBhZDsgVTsgQ1BVIGlQaG9uZSBPUyAzXzIgbGlrZSBNYWMgT1MgWDsgZW4tdXMpIEFwcGxlV2ViS2l0LzUzMS4yMS4xMCAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wLjQgTW9iaWxlLzdCMzE0IFNhZmFyaS81MzEuMjEuMTAnICkKICBPT08wME8gPSB1cmxsaWIyIC4gdXJsb3BlbiAoIE9vME9vTzAwb09PMG8gKQogIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiAgT09PMDBPIC4gY2xvc2UgKCApCiAgSWlJMTExID0gcmUgLiBmaW5kYWxsICggb08wbzBPICwgT09vT08wb28wb29PICkgWyAwIF0KIGVsc2UgOgogIElpSTExMSA9IHVybAogIHVybCA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyVnRZbVZrTWpRM0xtTnZiUzlzYVhabExuQm9jRDlqYUQxUWRIWmZVM0J2Y25Sek1TWjJkejAyTURBbWRtZzlOREF3Sm1SdmJXRnBiajEzZDNjdWMyRnRhWE4wY21WaGJTNWpiMjA9JyApCiAgaWYgNTAgLSA1MDogaUlpaTFJMTFJMUlJMSAqIGlpaWlJaTExaQogT28wT29PMDBvT08wbyA9IHVybGxpYjIgLiBSZXF1ZXN0ICggSWlJMTExICkKIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wKGlQYWQ7IFU7IENQVSBpUGhvbmUgT1MgM18yIGxpa2UgTWFjIE9TIFg7IGVuLXVzKSBBcHBsZVdlYktpdC81MzEuMjEuMTAgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMC40IE1vYmlsZS83QjMxNCBTYWZhcmkvNTMxLjIxLjEwJyApCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoICdSZWZlcmVyJyAsIHVybCApCiBPT08wME8gPSB1cmxsaWIyIC4gdXJsb3BlbiAoIE9vME9vTzAwb09PMG8gKQogT09vT08wb28wb29PID0gT09PMDBPIC4gcmVhZCAoICkKIE9PTzAwTyAuIGNsb3NlICggKQogaWYgODUgLSA4NTogaTFJSWkKIGlmIDEwMCAtIDEwMDogT29vb29vb29PTyAvIE9vT08wb29PT29vME8gJSBvb09PMDBvT28gKyBvMDAwMG9Pb09vTzBvCiBpZiA0MiAtIDQyOiBPb08wTzAwIC8gb29vTzBvbzBvT09PTyAuIG8wMDAwb09vT29PMG8gKiBvbwogb09PME8wb29PT09vID0gIiIgOwogbzBPT09vTzBPID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDNkM2R5NXRhWEJ6Y0d4aGVXVnlMbU52YlM5amIyNTBaVzUwTDNOamNtbHdkSE12Wm5Cc1lYbGxjaTV6ZDJZPScgKQogT29PT28gPSAnd3d3Lm1pcHNwbGF5ZXIuY29tJwogSUlJMTFpSTFpMTFpID0gJyBlPVwnKC4qPylcJzsnCiBJSWlJID0gJ2xpdmUnCiBPT29PbzBvTzBvbzAwID0gJ2NoYW5uZWw9XCcoLio/KVwnJwogT09JMUkgPSBPb09PbwogcHJpbnQgJ2xpbmsnICwgT09vT08wb28wb29PCiBpZiAnbGl2ZWZsYXNocGxheWVyLm5ldC9yZXNvdXJjZXMnIGluIE9Pb09PMG9vMG9vTyA6CiAgbzBPb09vMDBvb08gPSAna2Fza2F0aWphRWtvbm9taXN0YScKICBvME9PT29PME8gPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMM2QzZHk1c2FYWmxabXhoYzJod2JHRjVaWEl1Ym1WMEwzSmxjMjkxY21ObGN5OXpZM0pwY0hSekwyWndiR0Y1WlhJdWMzZG0nICkKICBPb09PbyA9ICd3d3cubGl2ZWZsYXNocGxheWVyLm5ldCcKICBPT0kxSSA9ICd3d3cubGl2ZWZsYXNocHVibGlzaGVyLmNvbScKICBJSUkxMWlJMWkxMWkgPSAnIGc9XCcoLio/KVwnOycKICBJSWlJID0gJ3N0cmVhbScKICBPT29PbzBvTzBvbzAwID0gJ2NoYW5uZWw9XCcoLio/KVwnJwogIG9PTzBPMG9vT09PbyA9ICIiCiAgaWYgNTQgLSA1NDogb09vME8wT29vCiBlbGlmICd3d3cubWlwc3BsYXllci5jb20nIGluIE9Pb09PMG9vMG9vTyA6CiAgbzBPb09vMDBvb08gPSAnaWdub3JlJwogIG9PTzBPMG9vT09PbyA9ICIiCiAgaWYgNzMgLSA3MzogaTFJMWlpMUlJMWlJSSArIG8wMDAwb09vT29PMG8KICBvME9PT29PME8gPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMM2QzZHk1dGFYQnpjR3hoZVdWeUxtTnZiUzlqYjI1MFpXNTBMM05qY21sd2RITXZabkJzWVhsbGNpNXpkMlk9JyApCiAgT29PT28gPSAnd3d3Lm1pcHNwbGF5ZXIuY29tJwogIE9PSTFJID0gJ2Nkbi5taXBzcHVibGlzaGVyLmNvbScKICBJSUkxMWlJMWkxMWkgPSAnIGU9XCcoLio/KVwnOycKICBJSWlJID0gJ2xpdmUnCiAgT09vT28wb08wb28wMCA9ICdjaGFubmVsPVwnKC4qPylcJycKIGVsaWYgJ3d3dy5zdHJlYW1pZnlwbGF5ZXIuY29tJyBpbiBPT29PTzBvbzBvb08gOgogIG8wT29PbzAwb29PID0gJ2tlR29WaWRpc2hTdGFtYm9sU29zZUJhcmRvdmNpJwogIG9PTzBPMG9vT09PbyA9ICclcztUUlVFO1RSVUU7JwogIG9PTzBPMG9vT09PbyA9ICIiCiAgbzBPT09vTzBPID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDNkM2R5NXpkSEpsWVcxcFpubHdiR0Y1WlhJdVkyOXRMM0psYzI5MWNtTmxjeTl6WTNKcGNIUnpMMlZ3YkdGNVpYSXVjM2RtJyApCiAgT29PT28gPSAnd3d3LnN0cmVhbWlmeXBsYXllci5jb20nCiAgT09JMUkgPSAnd3d3LnN0cmVhbWlmeXB1Ymxpc2hlci5jb20nCiAgSUlJMTFpSTFpMTFpID0gJ2NoYW5uZWwuKj9nPVwnKC4qPylcJycKICBJSWlJID0gJ2xpdmUnCiAgT09vT28wb08wb28wMCA9ICdjaGFubmVsPVwnKC4qPylcJycKIGVsaWYgJ3AzZy50di9yZXNvdXJjZXMnIGluIE9Pb09PMG9vMG9vTyBvciAnMjQ3YmF5LnR2JyBpbiBPT29PTzBvbzBvb08gOgogIG8wT29PbzAwb29PID0gJycKICBvT08wTzBvb09PT28gPSAnJwogIG8wT09Pb08wTyA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwzZDNkeTR5TkRkaVlYa3VkSFl2YzNSaGRHbGpMM05qY21sd2RITXZaWEJzWVhsbGNpNXpkMlk9JyApCiAgT29PT28gPSAnd3d3LjI0N2JheS50dicKICBJSUkxMWlJMWkxMWkgPSAnY2hhbm5lbC4qP2c9XCcoLio/KVwnJwogIE9PSTFJID0gJ3d3dy5wdWJsaXNoMjQ3Lnh5eicKICBJSWlJID0gJ3N0cmVhbScKICBPT29PbzBvTzBvbzAwID0gJ2NoYW5uZWw9XCcoLio/KVwnJwogZWxpZiAnamFuanVhcGxheWVyLmNvbS9yZXNvdXJjZXMnIGluIE9Pb09PMG9vMG9vTyA6CiAgbzBPb09vMDBvb08gPSAnemVuYXRhU3RvR29QdWtuYWxhR2F2b2xvdCcKICBvT08wTzBvb09PT28gPSAnJwogIG8wT09Pb08wTyA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwzZDNkeTVxWVc1cWRXRndiR0Y1WlhJdVkyOXRMM0psYzI5MWNtTmxjeTl6WTNKcGNIUnpMMlZ3YkdGNVpYSXVjM2RtJyApCiAgT29PT28gPSAnd3d3Lmphbmp1YXBsYXllci5jb20nCiAgSUlJMTFpSTFpMTFpID0gJ2NoYW5uZWwuKj9nPVwnKC4qPylcJycKICBPT0kxSSA9ICd3d3cuamFuanVhcHVibGlzaGVyLmNvbScKICBJSWlJID0gJ2xpdmUnCiAgT09vT28wb08wb28wMCA9ICdjaGFubmVsPVwnKC4qPylcJycKIGVsaWYgJ3plbmV4cGxheWVyLmNvbScgaW4gT09vT08wb28wb29PIDoKICBvME9vT28wMG9vTyA9ICd6ZW5hdGFTdG9Hb1B1a25hbGFHYXZvbG90JwogIG9PTzBPMG9vT09PbyA9ICcnCiAgbzBPT09vTzBPID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDNkM2R5NTZaVzVsZUhCc1lYbGxjaTVqYjIwdlpHRjBZUzl6WTNKcGNIUnpMMlp3YkdGNVpYSXVjM2RtJyApCiAgT29PT28gPSAnd3d3LnplbmV4cGxheWVyLmNvbScKICBPT0kxSSA9IE9vT09vCiAgSUlJMTFpSTFpMTFpID0gJ2NoYW5uZWwuKj9nPVwnKC4qPylcJycKICBJSWlJID0gJ3plbmV4JwogIE9Pb09vMG9PMG9vMDAgPSAnY2hhbm5lbD1cJyguKj8pXCcnCiAgaWYgMzcgLSAzNzogaWlpaUlpMTFpIC0gaUlpaTFJMTFJMUlJMSArIElJMTExaWlpaSAuIG8wMDAwb09vT29PMG8gJSBpSWlpMUkxMUkxSUkxCiBPbzBvMG9vb28wTzAgLiB1cGRhdGUgKCA0MCAsICIiICwgIkJ1aWxkaW5nIHJlcXVlc3QgbGlua3MuLiIgLCAiIiApCiBpZiAxNyAtIDE3OiBvMG9vMG8gKyBpMUlJaSAlIE8wCiBvT29vb08wME9PMG8gPSByZSAuIGZpbmRhbGwgKCBPT29PbzBvTzBvbzAwICwgT09vT08wb28wb29PICkgWyAwIF0KIGlJaTFpSSA9IG9Pb29vTzAwT08wbwogdHJ5IDoKICBpMTFpaUlpID0gJzYyMCcKICBJMTExSSA9ICc0MzAnCiAgaWYgNjIgLSA2MjogT29vb29vb29PTyArIG9vb08wb28wb09PT08KICBJSTFJaWlJaTFpID0gIndpZHRoPShbMC05XSopLio/aGVpZ2h0PShbMC05XSopIgogIG8wb29Pb08wMDBvTyA9IHJlIC4gZmluZGFsbCAoIElJMUlpaUlpMWkgLCBPT29PTzBvbzBvb08gKQogIGlmIDMyIC0gMzI6IG9PbzBPME9vbyAqIE9vbzAwb09vMDBvIC8gT29vb29vb29PTwogIGkxMWlpSWkgLCBJMTExSSA9IG8wb29Pb08wMDBvTyBbIDAgXQogZXhjZXB0IDogcGFzcwogaWYgOTAgLSA5MDogbzBvbzBvCiBpZiAzNSAtIDM1OiBJSTExMWlpaWkgLyBvMDAwMG9Pb09vTzBvCiBpZiA3OSAtIDc5OiBvT28wTzBPb28gKyBvMG9vMG8gKiBpMUkxaWkxSUkxaUlJICogbzAwMDBvT29Pb08wbwogb09PbyA9IHJlIC4gZmluZGFsbCAoIElJSTExaUkxaTExaSAsIE9Pb09PMG9vMG9vTyApIFsgMCBdCiBpZiAzMyAtIDMzOiBvT29PMG9vME9PT28KIG9Pb29vTzAwT08wbyA9ICggJ2h0dHA6Ly8lcy9lbWJlZHBsYXllci8nICUgT29PT28gKSArIG9Pb29vTzAwT08wbyArICcvJyArIG9PT28gKyAnLycgKyBpMTFpaUlpICsgJy8nICsgSTExMUkKIGlmIDU0IC0gNTQ6IE9vICogb09vTzBvbzBPT09vIC4gSUkxMTFpaWlpIC8gSUkxMWlpSUkgJSBJSTExaWlJSQogaWYgMjUgLSAyNTogaTExaUlpaUlpaSArIG9Pb08wb28wT09PbyAtIE9vb29vb29vT08gLiBPMCAlIG8wb28wbwogT28wT29PMDBvT08wbyA9IHVybGxpYjIgLiBSZXF1ZXN0ICggb09vb29PMDBPTzBvICkKIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wKGlQYWQ7IFU7IENQVSBpUGhvbmUgT1MgM18yIGxpa2UgTWFjIE9TIFg7IGVuLXVzKSBBcHBsZVdlYktpdC81MzEuMjEuMTAgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMC40IE1vYmlsZS83QjMxNCBTYWZhcmkvNTMxLjIxLjEwJyApCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoICdSZWZlcmVyJyAsIElpSTExMSApCiBPT08wME8gPSB1cmxsaWIyIC4gdXJsb3BlbiAoIE9vME9vTzAwb09PMG8gKQogT09vT08wb28wb29PID0gT09PMDBPIC4gcmVhZCAoICkKIE9PTzAwTyAuIGNsb3NlICggKQogaWYgNTMgLSA1MzogaTFJSWkKIE9PMG9Pb28gPSAnRmxhc2hWYXJzXCcsLj9cJyguKj8pXCcnCiBpZiA5IC0gOTogaTFJSWkgLSBvT28wTzBPb28KIE9vMDBvME9PbzBPTyA9IHJlIC4gZmluZGFsbCAoIE9PMG9Pb28gLCBPT29PTzBvbzBvb08gKSBbIDAgXQogcHJpbnQgJ21hdGNoX2ZsYXNoJyAsIE9vMDBvME9PbzBPTwogaTFJMWkxaTFJMSA9IE9vMDBvME9PbzBPTyAuIHNwbGl0ICggJ2lkPScgKSBbIDEgXSAuIHNwbGl0ICggJyYnICkgWyAwIF0KIGlmICdwaz0nIGluIE9vMDBvME9PbzBPTyA6CiAgaTFJMWkxaTFJMSArPSAiJnBrPSIgKyBPbzAwbzBPT28wT08gLiBzcGxpdCAoICdwaz0nICkgWyAxIF0gLiBzcGxpdCAoICdcJycgKSBbIDAgXSAuIHNwbGl0ICggJ1wiJyApIFsgMCBdCiAgaWYgMTggLSAxODogT28gLSBvb29PMG9vMG9PT09PIC8gSUkxMTFpaWlpIC8gb09vTzBvbzBPT09vCiBpMUlpMUlpaUlpMUlJID0gJ2h0dHA6Ly8lczoxOTM1L2xvYWRiYWxhbmNlcj8lcycgJSAoIE9PSTFJICwgaTFJMWkxaTFJMSAuIHNwbGl0ICggJyYnICkgWyAwIF0gKQogaWYgNTQgLSA1NDogbzAwMDBvT29Pb08wbyAlIGkxSUlpCiBPbzBPb08wMG9PTzBvID0gdXJsbGliMiAuIFJlcXVlc3QgKCBpMUlpMUlpaUlpMUlJICkKIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81Mi4wLjI3NDMuMTE2IFNhZmFyaS81MzcuMzYnICkKIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1JlZmVyZXInICwgb09vb29PMDBPTzBvICkKIE9PTzAwTyA9IHVybGxpYjIgLiB1cmxvcGVuICggT28wT29PMDBvT08wbyApCiBPT29PTzBvbzBvb08gPSBPT08wME8gLiByZWFkICggKQogT09PMDBPIC4gY2xvc2UgKCApCiBvb29PT29vMCA9IE9Pb09PMG9vMG9vTyAuIHNwbGl0ICggJz0nICkgWyAxIF0KIGlmIDc5IC0gNzk6IE9vb29vb29vT08gLSBPbyAqIG8wMDAwb09vT29PMG8gLSBJSTExMWlpaWkgJSBvT28wTzBPb28gKiBvb29PMG9vMG9PT09PCiBpZiAzMSAtIDMxOiBvbwogaTFJaWkgPSBPbzAwbzBPT28wT08gLiBzcGxpdCAoICdzPScgKSBbIDEgXSAuIHNwbGl0ICggJyYnICkgWyAwIF0KIE9vMG8wb29vbzBPMCAuIHVwZGF0ZSAoIDQwICwgIiIgLCAiRmluYWxpemluZyByZXF1ZXN0Li4iICwgIiIgKQogaWYgMzYgLSAzNjogb29PTzAwb09vICsgb29PTzAwb09vICsgb29PTzAwb09vICUgT29PME8wMCAqIGkxSTFpaTFJSTFpSUkKIGlmIG5vdCBvT08wTzBvb09PT28gPT0gIiIgOgogIG9PTzBPMG9vT09PbyA9ICJjY29tbWFuZD0iICsgKCBvT08wTzBvb09PT28gJSBvME9vT28wMG9vTyApCiAgaWYgOTggLSA5ODogT29PTzBvb09Pb28wTyAuIE9vT08wb29PT29vME8gLyBPb08wTzAwIC8gbzAwMDBvT29Pb08wbyAvIG9vCiAgaWYgNTYgLSA1NjogT29vMDBvT28wMG8gLyBvb29PMG9vMG9PT09PCiB1cmwgPSAncnRtcDovLyVzLyVzIHBsYXlwYXRoPSVzP2lkPSVzIHBhZ2VVcmw9JXMgc3dmVXJsPSVzIENvbm49UzpPSyAlcyBmbGFzaFZlcj1XSU5cXDIwMjIsMCwwLDIwOSBsaXZlPXRydWUgdGltZW91dD0yMCcgJSAoIG9vb09Pb28wICwgSUlpSSAsIGkxSWlpICwgaTFJMWkxaTFJMSAsIG9Pb29vTzAwT08wbyAsIG8wT09Pb08wTyAsIG9PTzBPMG9vT09PbyApCiBwcmludCB1cmwKIGlmIDExIC0gMTE6IG9PbzBPME9vbyAvIE9vT08wb29PT29vME8KIGlpSWlpID0geGJtYyAuIFBsYXlMaXN0ICggMSApCiBpaUlpaSAuIGNsZWFyICggKQogSTEgPSB4Ym1jZ3VpIC4gTGlzdEl0ZW0gKCBsYWJlbCA9IHN0ciAoIG9PMDBvT09vb29PICkgLCBpY29uSW1hZ2UgPSAiRGVmYXVsdFZpZGVvLnBuZyIgLCB0aHVtYm5haWxJbWFnZSA9IHhibWMgLiBnZXRJbmZvSW1hZ2UgKCAiTGlzdEl0ZW0uVGh1bWIiICkgKQogaWlJaWkgLiBhZGQgKCB1cmwgLCBJMSApCiBJaUlpMTFpSSA9IHhibWMgLiBQbGF5ZXIgKCApCiBJaUlpMTFpSSAuIHBsYXkgKCBpaUlpaSApCiBpZiA0NyAtIDQ3OiBJSTExaWlJSSAuIG8wb28wbyAlIElJMTExaWlpaSArIE9vTzBPMDAgLSBpaWlpSWkxMWkgLiBJSTExMWlpaWkKZGVmIElpMSAoIHVybCApIDoKIG9PMCA9IE5vbmUKIHRyeSA6CiAgbzBPMG9vb29vb28wMCA9IGkxaWlJMTFJICggdXJsICkKICBJaWlpaWkgPSAnYXNweFw/Y2lkPShbMC05XSopJwogIElpSWlpMWkxMWkxID0gcmUgLiBmaW5kYWxsICggSWlpaWlpICwgbzBPMG9vb29vb28wMCApCiAgaWYgbGVuICggSWlJaWkxaTExaTEgKSA9PSAwIDoKICAgaWYgOTEgLSA5MTogT29vb29vb29PTyAqIG9PbzBPME9vbyArIG9vCiAgIElpaWlpaSA9ICdzY3JpcHQgdHlwZS4qP3NyYz1bXCciXSguKj9lbWJlZC4qP2pzKVtcJyJdJwogICBPMG9vTyA9IHJlIC4gZmluZGFsbCAoIElpaWlpaSAsIG8wTzBvb29vb29vMDAgKSBbIDAgXQogICBpZiA0MCAtIDQwOiBPb28wMG9PbzAwbyAuIE9vbzAwb09vMDBvICogaTExaUlpaUlpaQogICBpMTFJSUkxSSA9IGkxaWlJMTFJICggTzBvb08gKQogICBJaWlpaWkgPSAnXD9pZD0oWzAtOV0qKScKICAgTzAwbzBPMDAgPSByZSAuIGZpbmRhbGwgKCBJaWlpaWkgLCBpMTFJSUkxSSApIFsgMCBdCiAgZWxzZSA6CiAgIE8wMG8wTzAwID0gSWlJaWkxaTExaTEgWyAwIF0KICAgaWYgNzcgLSA3Nzogb09vME8wT29vIC8gT29PTzBvb09Pb28wTyAqIElJMTFpaUlJCiAgSUkxMUlpID0gb29vT29vMG9PTzAgKCApCiAgcHJpbnQgJ3Nlc3MnICwgSUkxMUlpCiAgaWkxSUlpSUkxMTFJID0gJ2h0dHA6Ly93d3cueXVwcHR2LmNvbS9BY2NvdW50L09jdG9OZXdGcmFtZS5hc3B4P0NoYW5JZD0lcycgJSBPMDBvME8wMAogIHByaW50IGlpMUlJaUlJMTExSQogIGkxMUlJSTFJID0gaTFpaUkxMUkgKCBpaTFJSWlJSTExMUkgLCBoZWFkZXJzID0gWyAoICdDb29raWUnICwgSUkxMUlpICkgLCAoICdSZWZlcmVyJyAsICdodHRwOi8vd3d3Lnl1cHB0di5jb20vTGl2ZXR2LycgKSAsICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8zMy4wLjE3NTAuMTU0IFNhZmFyaS81MzcuMzYnICkgXSApCiAgcHJpbnQgJ2FmdGVyIGVtJwogIElpaWlpaSA9ICdmaWxlOlwnKGh0dHAuKj8pXCcnCiAgb29PT08gPSByZSAuIGZpbmRhbGwgKCBJaWlpaWkgLCBpMTFJSUkxSSApCiAgcHJpbnQgJ2ZpbmFsVXJsJyAsIG9vT09PCiAgaWYgNTggLSA1ODogb29vTzBvbzBvT09PTyAqIG8wMDAwb09vT29PMG8gLiBpMUlJaQogIGlmIDE5IC0gMTk6IGlpaWlJaTExaQogIGlmIDg1IC0gODU6IE9vIC0gb28gLyBpMUlJaSAvIG9vT08wMG9PbyAvIElJMTExaWlpaQogIGlmIDk0IC0gOTQ6IGlJaWkxSTExSTFJSTEgKyBvb29PMG9vMG9PT09PCiAgaWYgNDQgLSA0NDogb29PTzAwb09vICsgT29PTzBvb09Pb28wTyAlIG9vT08wMG9PbyArIGkxSUlpICsgaTFJMWlpMUlJMWlJSSArIE8wCiAgaWYgMTggLSAxODogaUlpaTFJMTFJMUlJMSAlIGlJaWkxSTExSTFJSTEgJSBpaWlpSWkxMWkgKyBvbyAlIE9vIC8gbzAwMDBvT29Pb08wbwogIGlmIDM2IC0gMzY6IG9PbzBPME9vbyAuIGkxMWlJaWlJaWkKICBvTzAgPSBvb09PTyBbIDAgXQogIGlmIDgxIC0gODE6IE9vTzBPMDAgKiBpMUkxaWkxSUkxaUlJICogb29PTzAwb09vCiBleGNlcHQgOgogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcmV0dXJuIG9PMAogaWYgODUgLSA4NTogTzAgKiBpaWlpSWkxMWkKZGVmIGlpSWlpaUlpaTExaTEgKCB1cmwgKSA6CiB1cmwgPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCB1cmwgKQogaWYgODcgLSA4Nzogb29PTzAwb09vICsgT29vb29vb29PTyAuIE9vICogT29PTzBvb09Pb28wTwogaTFpaTExMTFpMWkgPSBbICggJ1VzZXItQWdlbnQnICwgJ3Nwb3J0JTIwVFYlMjBMaXZlLzIuNyBDRk5ldHdvcmsvNzU4LjAuMiBEYXJ3aW4vMTUuMC4wJyApIF0KIG9vME8wbyA9IGkxaWlJMTFJICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDIxbFpHbGhiMjV6Y0c5eWRDNWtaUzkwZGk5emNHOXlkR2x2Y3k5aGNHa3VjR2h3UDJOb1lXNXVaV3hmYVdROUpYTT0nICkgJSB1cmwgLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogb28wTzBvID0ganNvbiAuIGxvYWRzICggb28wTzBvICkKIGlmIDgyIC0gODI6IGlJaWkxSTExSTFJSTEgKiBPb29vb29vb09PCiBPbzAwb08gKCBiYXNlNjQgLiBiNjRlbmNvZGUgKCBvbzBPMG8gWyAiTElWRVRWIiBdIFsgMCBdIFsgImNoYW5uZWxfdXJsIiBdICsgJ3xVc2VyLUFnZW50PU5TUGxheWVyLzcuMTAuMC4zMDU5JyApICkKIGlmIDUwIC0gNTA6IG8wb28wbyAtIElJMTExaWlpaQogaWYgMzMgLSAzMzogb29vTzBvbzBvT09PTyAvIG9vb08wb28wb09PT08gLiBpMTFpSWlpSWlpICogb09vTzBvbzBPT09vICsgT29vMDBvT28wMG8KIGlmIDE2IC0gMTY6IG9vb08wb28wb09PT08KZGVmIElJMU9PTyAoIHVybCApIDoKIHVybCA9IGJhc2U2NCAuIGI2NGRlY29kZSAoIHVybCApCiBpZiAzMiAtIDMyOiBpSWlpMUkxMUkxSUkxICogT29PME8wMCAtIGlpaWlJaTExaQogaWYgNzIgLSA3Mjogb29vTzBvbzBvT09PTyAlIGkxSUlpIC8gaUlpaTFJMTFJMUlJMQogb29PT08gPSBJaTEgKCB1cmwgKQogaWYgJy5mNG0nIGluIG9vT09PIDoKICBvb09PTyA9IHVybGxpYiAuIHF1b3RlX3BsdXMgKCBvb09PTyArICcmZz1GTE9OVEtSRFdLR0kmaGRjb3JlPTMuMi4wJmFtcDtwbHVnaW49andwbGF5ZXItMy4yLjAuMXxSZWZlcmVyPWh0dHA6Ly9zdHJlYW0ueXVwcHR2LmNvbS9QcmV2aWV3UGFpZENoYW5uZWwuYXNweD9jaWQ9MTk1JyApCiAgb29PT08gPSAncGx1Z2luOi8vcGx1Z2luLnZpZGVvLmY0bVRlc3Rlci8/dXJsPScgKyBvb09PTwogIGlmIDk1IC0gOTU6IE8wIC4gb29PTzAwb09vCiAgaWYgODkgLSA4OTogaTFJSWkKICB4Ym1jIC4gZXhlY3V0ZWJ1aWx0aW4gKCAieGJtYy5QbGF5TWVkaWEoIiArIG9vT09PICsgIikiICkKIGVsc2UgOgogIE9vMDBvTyAoIGJhc2U2NCAuIGI2NGVuY29kZSAoIG9vT09PICsgJ3xVc2VyLUFnZW50PU1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8zMy4wLjE3NTAuMTU0IFNhZmFyaS81MzcuMzYnICkgKQogIGlmIDE5IC0gMTk6IE9vIC8gT29vMDBvT28wMG8gJSBvb29PMG9vMG9PT09PIC0gbzAwMDBvT29Pb08wbwpkZWYgaUkxaTFJaWlpICggZnR5cGUgLCB1cmwgKSA6CiBpZiBmdHlwZSBpbiBbICJmYWNlYm9vayIgLCAidmlkbWUiICwgImVzcG4iICwgInN0cmVhbWFibGUiIF0gOgogIGkxaWkxMTExaTFpID0gWyAoICdVc2VyLUFnZW50JyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdUR2wyWlNCR2IyOTBZbUZzYkNCdmJpQlVWaUF6TGpBdU1TQW9hVkJvYjI1bE95QnBVR2h2Ym1VZ1QxTWdPUzR3TGpJN0lHVnVYMGRDS1E9PScgKSApIF0KICBpaWlJSUlJMUlJaSA9IHVybAogIHByaW50ICdmdHlwZScgLCBmdHlwZQogIGlmIGZ0eXBlIG5vdCBpbiBbICJlc3BuIiBdIDoKICAgaWlpSUlJSTFJSWkgPSBpMWlpSTExSSAoIHVybCAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiAgSTFJaUkxaUkxMSA9IG9PME8wb08wICggKQogIG9vME9Pb09vbzBPME8gPSBPME9vMCAoICkKICBpMWkxSWlJaTEgPSBJMUlpSTFpSTExIFsgIkFQSV9VUkxTIiBdIFsgIlBBUlNFX1RPT0wiIF0KICBvbzBPT29Pb28wTzBPIFsgJ2NvbnRlbnRfaHRtbCcgXSA9IGlpaUlJSUkxSUlpCiAgb28wT09vT29vME8wTyBbICd2aWRlb190eXBlJyBdID0gZnR5cGUKICBvbzBPT29Pb28wTzBPID0gdXJsbGliIC4gdXJsZW5jb2RlICggb28wT09vT29vME8wTyApCiAgdXJsID0ganNvbiAuIGxvYWRzICggaTFpaUkxMUkgKCBpMWkxSWlJaTEgLCBwb3N0ID0gb28wT09vT29vME8wTyAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApICkgWyAidmlkZW9fdXJsIiBdCiBlbGlmIGZ0eXBlID09ICJMSVZFIiA6CiAgcHJpbnQgJ2RvIGxpdmUnCiAgaWYgNjMgLSA2MzogSUkxMTFpaWlpIC4gbzBvbzBvICUgb29vTzBvbzBvT09PTyArIElJMTExaWlpaQogcmV0dXJuIHVybAogaWYgODEgLSA4MTogSUkxMWlpSUkgLSBvbyAlIE9vbzAwb09vMDBvCiBpZiA3IC0gNzogT28gLSBpMUlJaSAuIG9PbzBPME9vbwpkZWYgSTFpSTEgKCB1cmwgKSA6CiBJSTExaTFpaSAsIHVybCA9IHVybCAuIHNwbGl0ICggJywnICkKIHVybCA9IGJhc2U2NCAuIGI2NGRlY29kZSAoIHVybCApCiBpZiA3NCAtIDc0OiBPb29vb29vb09PIC0gT29vMDBvT28wMG8gKiBpMUkxaWkxSUkxaUlJCiB1cmwgPSBpSTFpMUlpaWkgKCBJSTExaTFpaSAsIHVybCApCiBpZiAneW91dHViZS5jb20nIGluIHVybCA6CiAgaUlJaWlJSTExaTFJMSA9IHVybCAuIHNwbGl0ICggJz92PScgKSBbIDEgXSAuIHNwbGl0ICggJyYnICkgWyAwIF0KICBJaTExMUlpMWlpSWkxID0gJ3BsdWdpbjovL3BsdWdpbi52aWRlby55b3V0dWJlLz9hY3Rpb249cGxheV92aWRlbyZ2aWRlb2lkPSVzJyAlIGlJSWlpSUkxMWkxSTEKICB4Ym1jIC4gZXhlY3V0ZWJ1aWx0aW4gKCAieGJtYy5QbGF5TWVkaWEoIiArIElpMTExSWkxaWlJaTEgKyAiKSIgKQogZWxzZSA6CiAgdXJsICs9ICd8VXNlci1BZ2VudD1BcHBsZUNvcmVNZWRpYS8xLjAuMC4xM0E0NTIgKGlQaG9uZTsgVTsgQ1BVIE9TIDlfMF8yIGxpa2UgTWFjIE9TIFg7IGVuX2diKScKICBpZiA2MiAtIDYyOiBvb09PMDBvT28gLiBpMUkxaWkxSUkxaUlJIC4gaTFJMWlpMUlJMWlJSSAlIGkxSUlpICogaWlpaUlpMTFpICUgT29PME8wMAogIGlpSWlpID0geGJtYyAuIFBsYXlMaXN0ICggMSApCiAgaWlJaWkgLiBjbGVhciAoICkKICBJMSA9IHhibWNndWkgLiBMaXN0SXRlbSAoIGxhYmVsID0gc3RyICggb08wMG9PT29vb08gKSAsIGljb25JbWFnZSA9ICJEZWZhdWx0VmlkZW8ucG5nIiAsIHRodW1ibmFpbEltYWdlID0geGJtYyAuIGdldEluZm9JbWFnZSAoICJMaXN0SXRlbS5UaHVtYiIgKSApCiAgaWlJaWkgLiBhZGQgKCB1cmwgLCBJMSApCiAgSWlJaTExaUkgPSB4Ym1jIC4gUGxheWVyICggKQogIElpSWkxMWlJIC4gcGxheSAoIGlpSWlpICkKICBpZiAyMCAtIDIwOiBPbyAuIG9vb08wb28wb09PT08gLyBPb09PMG9vT09vbzBPIC4gT29vb29vb29PTyAqIElJMTFpaUlJICsgbzAwMDBvT29Pb08wbwogIGlmIDIgLSAyOiBvbwpkZWYgT28wMG9PICggdXJsICwgY2hlY2tVcmwgPSBGYWxzZSAsIGZvbGxvd3JlZGlyZWN0ID0gRmFsc2UgKSA6CiB1cmwgPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCB1cmwgKQogcHJpbnQgJ2dlbiBpcyAnICsgdXJsCiBpZiAxMSAtIDExOiBJSTExaWlJSSArIGlJaWkxSTExSTFJSTEgLyBvT28wTzBPb28gJSBPMAogaWYgdXJsIC4gc3RhcnRzd2l0aCAoICdwbHVnaW46Ly8nICkgOgogIHhibWMgLiBleGVjdXRlYnVpbHRpbiAoICJ4Ym1jLlBsYXlNZWRpYSgiICsgdXJsICsgIikiICkKICByZXR1cm4KICBpZiA5OCAtIDk4OiBJSTExMWlpaWkgKyBPb08wTzAwICogaUlpaTFJMTFJMUlJMSAqIG9Pb08wb28wT09PbyArIElJMTFpaUlJICogbzAwMDBvT29Pb08wbwogaWYgY2hlY2tVcmwgYW5kIHVybCAuIHN0YXJ0c3dpdGggKCAnaHR0cCcgKSBhbmQgJy5tM3UnIGluIHVybCA6CiAgaTFpaTExMTFpMWkgPSBbICggJ1VzZXItQWdlbnQnICwgJ0FwcGxlQ29yZU1lZGlhLzEuMC4wLjEzQTQ1MiAoaVBob25lOyBVOyBDUFUgT1MgOV8wXzIgbGlrZSBNYWMgT1MgWDsgZW5fZ2IpJyApIF0KICBJMTEgPSBpMWlpSTExSSAoIHVybCAuIHNwbGl0ICggJ3wnICkgWyAwIF0gLCB0aW1lb3V0ID0gNSAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApIC4gc3RyaXAgKCApCiAgaWYgZm9sbG93cmVkaXJlY3QgOgogICBpZiBub3QgSTExIC4gc3RhcnRzd2l0aCAoICcjRVhUTTNVJyApIDoKICAgIHVybCA9IEkxMSArICd8JyArIHVybCAuIHNwbGl0ICggJ3wnICkgWyAxIF0KICAgaWYgJ2ppby5jb20nIGluIHVybCBhbmQgJ0VYVC1YLVNUUkVBTS1JTkYnIGluIEkxMSA6CiAgICBwcmludCAnc2V0dGluZ3VwJwogICAgaW1wb3J0IHVybHBhcnNlCiAgICB1cmwgPSB1cmxwYXJzZSAuIHVybGpvaW4gKCB1cmwgLiBzcGxpdCAoICd8JyApIFsgMCBdICwgcmUgLiBmaW5kYWxsICggJyNFWFQtWC1TVFJFQU0tSU5GLipccyguKiknICwgSTExICkgWyAtIDEgXSApICsgJ3wnICsgdXJsIC4gc3BsaXQgKCAnfCcgKSBbIDEgXQogICAgaWYgNzYgLSA3NjogT28gLiBpaWlpSWkxMWkKICAgIGlmIDYwIC0gNjA6IElJMTFpaUlJICogT28gKiBvb09PMDBvT28KICAgIGlmIDY0IC0gNjQ6IE9vT08wb29PT29vME8gLyBJSTExMWlpaWkgLyBvb09PMDBvT28gLSBPbyAqIGlJaWkxSTExSTFJSTEgLiBpMUkxaWkxSUkxaUlJCiBpaUlpaSA9IHhibWMgLiBQbGF5TGlzdCAoIDEgKQogaWlJaWkgLiBjbGVhciAoICkKIEkxID0geGJtY2d1aSAuIExpc3RJdGVtICggbGFiZWwgPSBzdHIgKCBvTzAwb09Pb29vTyApICwgaWNvbkltYWdlID0gIkRlZmF1bHRWaWRlby5wbmciICwgdGh1bWJuYWlsSW1hZ2UgPSB4Ym1jIC4gZ2V0SW5mb0ltYWdlICggIkxpc3RJdGVtLlRodW1iIiApICkKIGlmIDI1IC0gMjU6IElJMTFpaUlJIC0gbzAwMDBvT29Pb08wbyAuIE9vT08wb29PT29vME8KIHRyeSA6CiAgaWYgJy5tM3U4JyBpbiB1cmwgOgogICBJMSAuIHNldE1pbWVUeXBlICggImZsdi1hcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0iICkgOwogICBJMSAuIHNldENvbnRlbnRMb29rdXAgKCBGYWxzZSApCiAgZWxpZiAnLnRzJyBpbiB1cmwgOgogICBJMSAuIHNldE1pbWVUeXBlICggInZpZGVvL21wMnQiICkgOwogICBJMSAuIHNldENvbnRlbnRMb29rdXAgKCBGYWxzZSApCiBleGNlcHQgOiBwcmludCAnZXJyb3Igd2hpbGUgc2V0dGluZyBzZXRNaW1lVHlwZSwgc28gaWdub3JpbmcgaXQgJwogaWlJaWkgLiBhZGQgKCB1cmwgLCBJMSApCiBJaUlpMTFpSSA9IHhibWMgLiBQbGF5ZXIgKCApCiBJaUlpMTFpSSAuIHBsYXkgKCBpaUlpaSApCiBpZiA1NyAtIDU3OiBPb28wMG9PbzAwbyArIE9vTzBPMDAgKiBvT29PMG9vME9PT28gLSBPbyAlIGlJaWkxSTExSTFJSTEgLSBvMDAwMG9Pb09vTzBvCiBpZiAzNyAtIDM3OiBvb09PMDBvT28gKiBPb09PMG9vT09vbzBPICsgbzAwMDBvT29Pb08wbyArIG9Pb08wb28wT09PbyAqIE9vbzAwb09vMDBvCmRlZiBPMDBvT28wbzAgKCB1cmwgKSA6CiBpaUlpaSA9IHhibWMgLiBQbGF5TGlzdCAoIDEgKQogaWlJaWkgLiBjbGVhciAoICkKIEkxID0geGJtY2d1aSAuIExpc3RJdGVtICggbGFiZWwgPSBzdHIgKCBvTzAwb09Pb29vTyApICwgaWNvbkltYWdlID0gIkRlZmF1bHRWaWRlby5wbmciICwgdGh1bWJuYWlsSW1hZ2UgPSB4Ym1jIC4gZ2V0SW5mb0ltYWdlICggIkxpc3RJdGVtLlRodW1iIiApICkKIGlpSWlpIC4gYWRkICggdXJsICwgSTEgKQogSWlJaTExaUkgPSB4Ym1jIC4gUGxheWVyICggKQogSWlJaTExaUkgLiBwbGF5ICggaWlJaWkgKQogaWYgODEgLSA4MTogSUkxMTFpaWlpICogb28gJSBpMUlJaSAqIGkxMWlJaWlJaWkgKyBvT28wTzBPb28KZGVmIG9vME9vT08wMDBPICggbmFtZSAsIHR5cGUgPSBOb25lICkgOgogaWYgNjIgLSA2MjogaTFJSWkgKiBpSWlpMUkxMUkxSUkxICUgaWlpaUlpMTFpICUgb09vME8wT29vIC8gT29vb29vb29PTwogaWYgdHlwZSA9PSAnU2hvd3MnIDoKICBpSTExMTFpaUkxICggSWlJaUlpICkKIGVsaWYgdHlwZSA9PSAndmlyYWx2aWRlb3MnIDoKICBpSTExMTFpaUkxICggaUkgKQogZWxpZiAnKFNpYXNhdC5wayknIGluIG5hbWUgOgogIE9PTzBvb08wT28wICggT28wb09PbyApCiBlbGlmIHR5cGUgPT0gJ1Byb2dUYWxrU2hvd3MnIDoKICBvbzAwMG9PbzBPb08wICggJ2h0dHA6Ly93d3cuemVtdHYuY29tLycgKQogZWxpZiBuYW1lID09ICdOZXh0IFBhZ2UnIG9yIGkxSWlJID09IDQzIDoKICBpSTExMTFpaUkxICggT28wb09PbyApCiBlbHNlIDoKICBpZiAyOCAtIDI4OiBPbyAlIGkxSUlpIC8gaWlpaUlpMTFpCiAgaWYgMjIgLSAyMjogaTFJSWkKICBJSUlJSTFJSTExMTEgPSAoIG5hbWUgPT0gJ1Bha2lzdGFuaSBMaXZlIENoYW5uZWxzJyApCiAgaWYgOTkgLSA5OTogT29PME8wMCAvIG8wb28wbyAqIE9vTzBPMDAgLyBpSWlpMUkxMUkxSUkxICogb29vTzBvbzBvT09PTwogIGlmIDk5IC0gOTk6IGlJaWkxSTExSTFJSTEgLSBPbwogIE9vME8wME8gPSBvb08wMG9Pb28gLiBnZXRTZXR0aW5nICggImlzWWVsbG93T2ZmIiApCiAgaWYgNTYgLSA1Njogb09vTzBvbzBPT09vICsgaWlpaUlpMTFpIC4gb29PTzAwb09vICsgT29vb29vb29PTyAqIG9Pb08wb28wT09PbyAtIE8wCiAgSTFpTzAwTzAwMG9PTzBvTyA9IFsgXQogIE9vMG8wb29vbzBPMCA9IHhibWNndWkgLiBEaWFsb2dQcm9ncmVzcyAoICkKICBPbzBvMG9vb28wTzAgLiBjcmVhdGUgKCAnUHJvZ3Jlc3MnICwgJ0ZldGNoaW5nIFN0cmVhbWluZyBJbmZvJyApCiAgT28wbzBvb29vME8wIC4gdXBkYXRlICggMTAgLCAiIiAsICJMb2FkaW5nIFllbGxvdyBDaGFubmVscyIgLCAiIiApCiAgaWYgSUlJSUkxSUkxMTExIGFuZCBub3QgT28wTzAwTyA9PSAidHJ1ZSIgOgogICBpZiA4OCAtIDg4OiBPb28wMG9PbzAwbyAuIG9vICUgaWlpaUlpMTFpIC4gT29PME8wMCAlIE9vIC4gaWlpaUlpMTFpCiAgIHRyeSA6CiAgICBpZiA1MyAtIDUzOiBpMUlJaSAlIG8wMDAwb09vT29PMG8gLSBPb29vb29vb09PIC8gb09vME8wT29vIC0gaUlpaTFJMTFJMUlJMQogICAgSTFpTzAwTzAwMG9PTzBvTyA9IEkxSUkxaUlpICggKSA7CiAgICBPbzBvMG9vb28wTzAgLiB1cGRhdGUgKCAyMCAsICIiICwgIkxvYWRpbmcgWWVsbG93IENoYW5uZWxzIiAsICIiICkKICAgIHByaW50ICdyZXRfbWF0Y2gnICwgSTFpTzAwTzAwMG9PTzBvTwogICBleGNlcHQgOgogICAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgICBpZiAzNiAtIDM2OiBvT28wTzBPb28gKiBvb09PMDBvT28gLyBPbyAvIG9vIC0gbzAwMDBvT29Pb08wbwogICAgaWYgNTMgLSA1MzogaWlpaUlpMTFpCiAgICBpZiA5OSAtIDk5OiBPb08wTzAwCiAgdHJ5IDoKICAgSWlpaUlpaUkgPSAxIGlmIG5hbWUgPT0gJ1Bha2lzdGFuaSBMaXZlIENoYW5uZWxzJyBlbHNlICggMiBpZiBuYW1lID09ICdJbmRpYW4gTGl2ZSBDaGFubmVscycgZWxzZSAzICkKICAgSWlJaTFJMTEgKCBJaWlpSWlpSSAsIEkxaU8wME8wMDBvT08wb08gLCBPbzBvMG9vb28wTzAgKQogIGV4Y2VwdCA6CiAgIHByaW50ICdzb21ldGhpbmd3cm9uZycKICAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgT28wbzBvb29vME8wIC4gY2xvc2UgKCApCiByZXR1cm4KIGlmIDE5IC0gMTk6IGkxSUlpIC8gb29vTzBvbzBvT09PTyArIG9Pb08wb28wT09PbyAqIG9Pb08wb28wT09PbwpkZWYgbzBvT08wMG8wbyAoICkgOgogb08wID0gWyBdCiB0cnkgOgogIGkxaUkgPSBPb28wb29PMDAwb28gKCApCiAgZm9yIGkxMWlJSWkxMSBpbiBpMWlJIFsgImNoYW5uZWxzQ2F0ZWdvcmllcyIgXSA6CiAgIGlmIG5vdCBpMTFpSUlpMTEgWyAiY2F0ZWdvcnlOYW1lIiBdIGluIG9PMCA6CiAgICBvTzAgLiBhcHBlbmQgKCBpMTFpSUlpMTEgWyAiY2F0ZWdvcnlOYW1lIiBdICkKICBpZiBsZW4gKCBvTzAgKSA+IDAgOgogICBvTzAgPSBzb3J0ZWQgKCBvTzAgLCBrZXkgPSBsYW1iZGEgSTFpMTEgOiBJMWkxMSBbIDAgXSAuIGxvd2VyICggKSApCiBleGNlcHQgOgogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcmV0dXJuIG9PMAogaWYgMzUgLSAzNTogbzBvbzBvIC0gb09vME8wT29vCmRlZiBPb29PTyAoICkgOgogb08wID0gWyBdCiB0cnkgOgogIGkxaUkgPSBPMDBPT09vT09PbzBvICggKQogIGZvciBpMTFpSUlpMTEgaW4gaTFpSSA6CiAgIGlmIG5vdCBpMTFpSUlpMTEgWyAiY2F0ZWdvcnlOYW1lIiBdIGluIG9PMCA6CiAgICBvTzAgLiBhcHBlbmQgKCBpMTFpSUlpMTEgWyAiY2F0ZWdvcnlOYW1lIiBdICkKICBpZiBsZW4gKCBvTzAgKSA+IDAgOgogICBvTzAgPSBzb3J0ZWQgKCBvTzAgLCBrZXkgPSBsYW1iZGEgSTFpMTEgOiBJMWkxMSBbIDAgXSAuIGxvd2VyICggKSApCiBleGNlcHQgOgogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcmV0dXJuIG9PMAogaWYgNDEgLSA0MTogbzBvbzBvICogbzBvbzBvICUgT29PTzBvb09Pb28wTwpkZWYgbzAwTyAoICkgOgogb08wID0gWyBdCiB0cnkgOgogIGkxaUkgPSBvT29PT09PTyAoICkKICBmb3IgbzBvb29PIGluIGkxaUkgWyAiTElWRVRWIiBdIDoKICAgaWYgMjEgLSAyMTogT29vb29vb29PTyArIG8wb28wbwogICBvME9JaUlJID0gbzBvb29PIFsgImNoYW5uZWxfdGl0bGUiIF0KICAgbzBvME8gPSAnbXl0djonICsgbzBvb29PIFsgImlkIiBdCiAgIElJSUlJaWkxaWkxMSA9ICdodHRwOi8vbWVkaWFvbnNwb3J0LmRlL3R2L3Nwb3J0aW9zL2ltYWdlcy8nICsgbzBvb29PIFsgImNoYW5uZWxfdGh1bWJuYWlsIiBdCiAgIGlmIDQzIC0gNDM6IGkxMWlJaWlJaWkgLiBvT29PMG9vME9PT28gLiBpaWlpSWkxMWkKICAgaWYgMzEgLSAzMTogbzAwMDBvT29Pb08wbyAlIE9vbzAwb09vMDBvICUgbzBvbzBvIC4gb09vTzBvbzBPT09vIC8gT29vMDBvT28wMG8gKiBpaWlpSWkxMWkKICAgaWYgbGVuICggWyBPME9Pb08wME9PMG8gZm9yIE8wT09vTzAwT08wbyAsIE9Pb08wb08wMG8gaW4gZW51bWVyYXRlICggb08wICkgaWYgT09vTzBvTzAwbyBbIDIgXSA9PSBvMG8wTyBdICkgPT0gMCA6CiAgICBvTzAgLiBhcHBlbmQgKCAoIG8wT0lpSUkgLCAnbWFudWFsJyAsIG8wbzBPICwgSUlJSUlpaTFpaTExICkgKQogIGlmIGxlbiAoIG9PMCApID4gMCA6CiAgIG9PMCA9IHNvcnRlZCAoIG9PMCAsIGtleSA9IGxhbWJkYSBJMWkxMSA6IEkxaTExIFsgMCBdIC4gbG93ZXIgKCApICkKIGV4Y2VwdCA6CiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiByZXR1cm4gb08wCiBpZiA3NCAtIDc0OiBvbyAuIE9vIC8gaTFJMWlpMUlJMWlJSSAuIG9vb08wb28wb09PT08KZGVmIG9vT28wbyAoIGNhdG5hbWUgLCBmaW5kaW4gPSBGYWxzZSApIDoKIE9PMDAgPSAnJwogZm9yIE8wT29vME8gaW4gbzBvbzAwMDAgKCApIFsgIkxJVkVUViIgXSA6CiAgaWYgTzBPb28wTyBbICJjYXRlZ29yeV9uYW1lIiBdIC4gbG93ZXIgKCApID09IGNhdG5hbWUgLiBsb3dlciAoICkgb3IgKCBmaW5kaW4gYW5kIGNhdG5hbWUgLiBsb3dlciAoICkgaW4gTzBPb28wTyBbICJjYXRlZ29yeV9uYW1lIiBdIC4gbG93ZXIgKCApICkgOgogICByZXR1cm4gTzBPb28wTyBbICJjaWQiIF0KIHJldHVybiBPTzAwCiBpZiAxMCAtIDEwOiBPb09PMG9vT09vbzBPICogaTFJSWkgLiBpaWlpSWkxMWkgLyBvMG9vMG8gLiBJSTExaWlJSSAvIG8wb28wbwpkZWYgSTExSTExMWkxSTEgKCApIDoKIGkxMTExSTFpaWkxID0gWyBdCiBmb3IgbzBPb09vMDBvb08gaW4gbzBPbzAwbzAgKCApIFsgImNhdHMiIF0gOgogIGkxMTExSTFpaWkxIC4gYXBwZW5kICggKCBvME9vT28wMG9vTyBbICJjYXRfaWQiIF0gLCBvME9vT28wMG9vTyBbICJjYXRfbmFtZSIgXSApICkKIHJldHVybiBpMTExMUkxaWlpMQogaWYgNDIgLSA0MjogbzBvbzBvIC8gb09vME8wT29vICUgaWlpaUlpMTFpCmRlZiBpaWkxICggYXBwdHlwZSApIDoKIGkxMTExSTFpaWkxID0gWyBdCiBmb3IgbzBPb09vMDBvb08gaW4gb09Pb09vME9vbyAoIGFwcHR5cGUgKSBbICJjYXRlZ29yaWVzIiBdIFsgImxpdmUiIF0gOgogIGkxMTExSTFpaWkxIC4gYXBwZW5kICggKCBvME9vT28wMG9vTyBbICJjYXRlZ29yeV9pZCIgXSAsIG8wT29PbzAwb29PIFsgImNhdGVnb3J5X25hbWUiIF0gKSApCiByZXR1cm4gaTExMTFJMWlpaTEKIGlmIDk1IC0gOTU6IG8wb28wbyAlIE9vTzBPMDAKZGVmIGlpMTExaUkxaTEgKCBjYXRuYW1lICwgZmluZGluID0gRmFsc2UgLCBhcHB0eXBlID0gMSApIDoKIE9PMDAgPSAnJwogZm9yIE8wT29vME8gaW4gb09Pb09vME9vbyAoIGFwcHR5cGUgKSBbICJjYXRlZ29yaWVzIiBdIFsgImxpdmUiIF0gOgogIHByaW50ICdwIGlzJyAsIE8wT29vME8KICBpZiBPME9vbzBPIFsgImNhdGVnb3J5X25hbWUiIF0gLiBsb3dlciAoICkgPT0gY2F0bmFtZSAuIGxvd2VyICggKSBvciAoIGZpbmRpbiBhbmQgY2F0bmFtZSAuIGxvd2VyICggKSBpbiBPME9vbzBPIFsgImNhdGVnb3J5X25hbWUiIF0gLiBsb3dlciAoICkgKSA6CiAgIHJldHVybiBPME9vbzBPIFsgImNhdGVnb3J5X2lkIiBdCiByZXR1cm4gT08wMAogaWYgNTQgLSA1NDogaUlpaTFJMTFJMUlJMSAtIGlJaWkxSTExSTFJSTEKZGVmIE9Pb28wTzBPT09vMCAoIGNhdG5hbWUgLCBmaW5kaW4gPSBGYWxzZSApIDoKIE9PMDAgPSAnJwogZm9yIE8wT29vME8gaW4gbzBPbzAwbzAgKCApIFsgImNhdHMiIF0gOgogIGlmIE8wT29vME8gWyAiY2F0X25hbWUiIF0gLiBsb3dlciAoICkgPT0gY2F0bmFtZSAuIGxvd2VyICggKSBvciAoIGZpbmRpbiBhbmQgY2F0bmFtZSAuIGxvd2VyICggKSBpbiBPME9vbzBPIFsgImNhdF9uYW1lIiBdIC4gbG93ZXIgKCApICkgOgogICByZXR1cm4gTzBPb28wTyBbICJjYXRfaWQiIF0KIHJldHVybiBPTzAwCiBpZiA4MyAtIDgzOiBvT29PMG9vME9PT28gKiBpSWlpMUkxMUkxSUkxICsgb09vME8wT29vICogaTFJSWkgLiBPb29vb29vb09PICUgbzAwMDBvT29Pb08wbwpkZWYgT08wMDAgKCBjYXQgPSBOb25lICwgc3BvcnRzID0gRmFsc2UgLCBsaXZlZmxhZyA9ICIxIiAsIHN0cmVhbXR5cGUgPSAibGl2ZSIgLCByZW1vdmVwcmVmaXggPSBOb25lICwgYXBwdHlwZSA9IDEgKSA6CiBvTzAgPSBbIF0KIHRyeSA6CiAgaTFpSSA9IG9PT29PbzBPb28gKCBhcHB0eXBlICkKICBpZiA4MSAtIDgxOiBvb09PMDBvT28gLSBpSWlpMUkxMUkxSUkxCiAgaWYgNjAgLSA2MDogbzBvbzBvCiAgaWYgNzcgLSA3Nzogb28gLyBvT29PMG9vME9PT28KICBmb3IgaTExaUlJaTExIGluIGkxaUkgWyAiYXZhaWxhYmxlX2NoYW5uZWxzIiBdIDoKICAgaWYgOTUgLSA5NTogbzBvbzBvICogaTFJSWkgKyBpaWlpSWkxMWkKICAgaTExaUlJaTExID0gaTFpSSBbICJhdmFpbGFibGVfY2hhbm5lbHMiIF0gWyBpMTFpSUlpMTEgXQogICBpZiA0MCAtIDQwOiBJSTExMWlpaWkKICAgaWYgKCBjYXQgPT0gTm9uZSBvciBpMTFpSUlpMTEgWyAiY2F0ZWdvcnlfaWQiIF0gaW4gY2F0ICkgOgogICAgaWYgaTExaUlJaTExIFsgImxpdmUiIF0gPT0gbGl2ZWZsYWcgYW5kIHN0cmVhbXR5cGUgPT0gaTExaUlJaTExIFsgInN0cmVhbV90eXBlIiBdIDoKICAgICBvMG9vb08gPSBpMTFpSUlpMTEKICAgICBvME9JaUlJID0gbzBvb29PIFsgIm5hbWUiIF0KICAgICBpZiA3IC0gNzogSUkxMWlpSUkgLyBvb09PMDBvT28KICAgICBpZiAxID09IDIgOgogICAgICBpZiA4OCAtIDg4OiBpMUlJaQogICAgICBvMG8wTyA9ICdlYm91bmQyOicgKyBvMG9vb08gWyAic3RyZWFtdXJsIiBdIC4gcmVwbGFjZSAoICc6MTkzNScgLCAnJyApCiAgICAgZWxzZSA6CiAgICAgIGlmIDUzIC0gNTM6IE9vIC4gSUkxMWlpSUkgLiBPb28wMG9PbzAwbyArIGlpaWlJaTExaQogICAgICBvMG8wTyA9ICduZXR3b3JrdHYyOiVzOiVzJyAlICggc3RyICggYXBwdHlwZSApICwgc3RyICggbzBvb29PIFsgInN0cmVhbV9pZCIgXSApICkKICAgICBJSUlJSWlpMWlpMTEgPSBvMG9vb08gWyAic3RyZWFtX2ljb24iIF0KICAgICBpZiAxNyAtIDE3OiBpSWlpMUkxMUkxSUkxICsgaTFJSWkgLiBvT29PMG9vME9PT28gKyBvMDAwMG9Pb09vTzBvICUgaTFJSWkgLiBpaWlpSWkxMWkKICAgICBpZiByZW1vdmVwcmVmaXggYW5kIHJlbW92ZXByZWZpeCBpbiBvME9JaUlJIDoKICAgICAgbzBPSWlJSSA9ICc6JyAuIGpvaW4gKCBvME9JaUlJIC4gc3BsaXQgKCByZW1vdmVwcmVmaXggKSBbIDEgOiBdICkgLiBzdHJpcCAoICkKICAgICBvME9JaUlJID0gbzBPSWlJSSAuIGNhcGl0YWxpemUgKCApCiAgICAgaWYgNTcgLSA1NzogaWlpaUlpMTFpCiAgICAgbzBPSWlJSSA9IG8wT0lpSUkgKyAoICcgU2xvd1RWJyBpZiBub3Qgc3BvcnRzIGVsc2UgJycgKQogICAgIGlmIDEgPT0gMSA6CiAgICAgIG9PMCAuIGFwcGVuZCAoICggbzBPSWlJSSAsICdtYW51YWwnICwgbzBvME8gLCBJSUlJSWlpMWlpMTEgKSApCiAgICAgIGlmIDkyIC0gOTI6IElJMTExaWlpaSAtIG9vT08wMG9PbyAtIElJMTFpaUlJICUgb28gLSBvT28wTzBPb28gKiBvMG9vMG8KICBpZiBsZW4gKCBvTzAgKSA+IDAgOgogICBvTzAgPSBzb3J0ZWQgKCBvTzAgLCBrZXkgPSBsYW1iZGEgSTFpMTEgOiBJMWkxMSBbIDAgXSAuIGxvd2VyICggKSApCiBleGNlcHQgOgogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogIGlmIDE2IC0gMTY6IGlJaWkxSTExSTFJSTEgKyBPb29vb29vb09PIC0gT28gKiBvb29PMG9vMG9PT09PCiByZXR1cm4gb08wCiBpZiAzNyAtIDM3OiBpMUkxaWkxSUkxaUlJCmRlZiBJaWlpaTFJaWkxSSAoIGNhdCA9IE5vbmUgLCBzcG9ydHMgPSBGYWxzZSAsIGNvdW50cnkgPSBOb25lICkgOgogb08wID0gWyBdCiB0cnkgOgogIGkxaUkgPSBvME9vMDBvMCAoICkKICBpZiAxNSAtIDE1OiBPb28wMG9PbzAwbyAlIG9vT08wMG9PbyAvIGkxSTFpaTFJSTFpSUkKICBpZiAzNiAtIDM2OiBvb09PMDBvT28gKyBvb09PMDBvT28gJSBPb08wTzAwICsgT29PME8wMCAvIGkxSUlpICUgaTFJSWkKICBwcmludCAnZ290IGdldE5ldHdvcmtUVlBhZ2UnICwgY2F0ICwgaTFpSQogIGZvciBpMTFpSUlpMTEgaW4gaTFpSSBbICJjaGFubmVscyIgXSA6CiAgIHByaW50IGkxMWlJSWkxMSBbICJjYXRfaWQiIF0KICAgaWYgKCBjYXQgPT0gTm9uZSBvciBpMTFpSUlpMTEgWyAiY2F0X2lkIiBdIGluIGNhdCApIGFuZCAoIGNvdW50cnkgPT0gTm9uZSBvciBpMTFpSUlpMTEgWyAiY291bnRyeV9uYW1lIiBdIGluIGNvdW50cnkgKSA6CiAgICBpZiAyMCAtIDIwOiBJSTExaWlJSSAqIGlpaWlJaTExaQogICAgbzBvb29PID0gaTExaUlJaTExCiAgICBvME9JaUlJID0gbzBvb29PIFsgImNobmFtZSIgXQogICAgaWYgJ2Vib3VuZC50dicgaW4gbzBvb29PIFsgInN0cmVhbXVybCIgXSA6CiAgICAgaWYgOTEgLSA5MTogb29PTzAwb09vICUgaTFJSWkgLSBpSWlpMUkxMUkxSUkxIC4gSUkxMWlpSUkKICAgICBvMG8wTyA9ICdlYm91bmQyOicgKyBvMG9vb08gWyAic3RyZWFtdXJsIiBdIC4gcmVwbGFjZSAoICc6MTkzNScgLCAnJyApCiAgICBlbHNlIDoKICAgICBpZiAzMSAtIDMxOiBpaWlpSWkxMWkgJSBpMUlJaSAuIE9vb29vb29vT08gLSBPb28wMG9PbzAwbyArIE9vb29vb29vT08KICAgICBvMG8wTyA9ICduZXR3b3JrdHY6JyArIHN0ciAoIG8wb29vTyBbICJzdHJlYW1pZCIgXSApCiAgICBJSUlJSWlpMWlpMTEgPSBvMG9vb08gWyAibG9nbyIgXQogICAgaWYgNDUgLSA0NTogSUkxMWlpSUkgKyBPb09PMG9vT09vbzBPIC8gT29vb29vb29PTyAtIG8wMDAwb09vT29PMG8gKyBPb29vb29vb09PCiAgICBpZiBsZW4gKCBbIE8wT09vTzAwT08wbyBmb3IgTzBPT29PMDBPTzBvICwgT09vTzBvTzAwbyBpbiBlbnVtZXJhdGUgKCBvTzAgKSBpZiBPT29PMG9PMDBvIFsgMiBdID09IG8wbzBPIF0gKSA9PSAwIDoKICAgICBvTzAgLiBhcHBlbmQgKCAoIG8wT0lpSUkgKyAoICcgTmV0VFYnIGlmIG5vdCBzcG9ydHMgZWxzZSAnJyApICwgJ21hbnVhbCcgLCBvMG8wTyAsIElJSUlJaWkxaWkxMSApICkKICAgICBpZiA0MiAtIDQyOiBpSWlpMUkxMUkxSUkxICogb28gKiBvMG9vMG8KICBpZiBsZW4gKCBvTzAgKSA+IDAgOgogICBvTzAgPSBzb3J0ZWQgKCBvTzAgLCBrZXkgPSBsYW1iZGEgSTFpMTEgOiBJMWkxMSBbIDAgXSAuIGxvd2VyICggKSApCiBleGNlcHQgOgogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcHJpbnQgb08wCiByZXR1cm4gb08wCiBpZiA2MiAtIDYyOiBJSTExaWlJSSAqIE8wICUgb29vTzBvbzBvT09PTyAuIG9vb08wb28wb09PT08gLiBvbwpkZWYgSUlJICggY2F0ICwgc3BvcnRzID0gRmFsc2UgLCBjYXRuYW1lID0gTm9uZSApIDoKIG9PMCA9IFsgXQogdHJ5IDoKICBpZiBjYXRuYW1lIDoKICAgY2F0ID0gb29PbzBvICggY2F0bmFtZSApCiAgaTFpSSA9IG9vMCAoIGNhdCApCiAgaWYgMzcgLSAzNzogaTFJMWlpMUlJMWlJSSAtIE9vT08wb29PT29vME8gKyBpSWlpMUkxMUkxSUkxIC8gbzBvbzBvIC0gb29PTzAwb09vIC4gT29vMDBvT28wMG8KICBmb3IgaTExaUlJaTExIGluIGkxaUkgWyAiTElWRVRWIiBdIDoKICAgaWYgMSA9PSAxIDoKICAgIG8wb29vTyA9IGkxMWlJSWkxMQogICAgbzBPSWlJSSA9IG8wb29vTyBbICJjaGFubmVsX3RpdGxlIiBdCiAgICBpZiAnZWJvdW5kLnR2JyBpbiBvMG9vb08gWyAiY2hhbm5lbF91cmwiIF0gOgogICAgIGlmIDYyIC0gNjI6IG9Pb08wb28wT09PbwogICAgIG8wbzBPID0gJ2Vib3VuZDI6JyArIG8wb29vTyBbICJjaGFubmVsX3VybCIgXSAuIHJlcGxhY2UgKCAnOjE5MzUnICwgJycgKQogICAgZWxzZSA6CiAgICAgaWYgNDcgLSA0NzogbzBvbzBvICUgSUkxMWlpSUkgKiBvb09PMDBvT28gLiBpSWlpMUkxMUkxSUkxICUgT29PME8wMCArIE9vb29vb29vT08KICAgICBvMG8wTyA9ICdmYXN0OicgKyBzdHIgKCBjYXQgKSArICc9JyArIHN0ciAoIG8wb29vTyBbICJpZCIgXSApCiAgICBJSUlJSWlpMWlpMTEgPSBvMG9vb08gWyAiY2hhbm5lbF90aHVtYm5haWwiIF0KICAgIGlmIDIgLSAyOiBvMG9vMG8gJSBPb29vb29vb09PIC0gT28gKiBvT29PMG9vME9PT28gKiBvb29PMG9vMG9PT09PCiAgICBpZiBub3QgSUlJSUlpaTFpaTExIC4gc3RhcnRzd2l0aCAoICdodHRwJyApIDoKICAgICBJSUlJSWlpMWlpMTEgPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMM04zYVdaMGMzUnlaV0Z0ZWk1amIyMHZVM2RwWm5SVGRISmxZVzB2YVcxaFoyVnpMM1JvZFcxaWN5OD0nICkgKyBJSUlJSWlpMWlpMTEKICAgICBpZiA5OSAtIDk5OiBpSWlpMUkxMUkxSUkxIC4gT29PME8wMCAvIE9vIC4gSUkxMWlpSUkgJSBvbyAqIE9vT08wb29PT29vME8KICAgIGlmIGxlbiAoIFsgTzBPT29PMDBPTzBvIGZvciBPME9Pb08wME9PMG8gLCBPT29PMG9PMDBvIGluIGVudW1lcmF0ZSAoIG9PMCApIGlmIE9Pb08wb08wMG8gWyAyIF0gPT0gbzBvME8gXSApID09IDAgOgogICAgIG9PMCAuIGFwcGVuZCAoICggbzBPSWlJSSArICggJyBmYXN0JyBpZiBub3Qgc3BvcnRzIGVsc2UgJycgKSAsICdtYW51YWwnICwgbzBvME8gLCBJSUlJSWlpMWlpMTEgKSApCiAgICAgaWYgOTUgLSA5NTogaWlpaUlpMTFpCiAgaWYgbGVuICggb08wICkgPiAwIDoKICAgb08wID0gc29ydGVkICggb08wICwga2V5ID0gbGFtYmRhIEkxaTExIDogSTFpMTEgWyAwIF0gLiBsb3dlciAoICkgKQogZXhjZXB0IDoKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIHJldHVybiBvTzAKIGlmIDgwIC0gODA6IG9vb08wb28wb09PT08KZGVmIEkxMUlJSWlJaTExICggY2F0ZWdvcmllcyAsIGZvclNwb3J0cyA9IEZhbHNlICwgZGVzaSA9IFRydWUgKSA6CiBvTzAgPSBbIF0KIHRyeSA6CiAgaTFpSSA9IE8wME9PT29PT09vMG8gKCApCiAgZm9yIGkxMWlJSWkxMSBpbiBpMWlJIDoKICAgaWYgaTExaUlJaTExIFsgImNhdGVnb3J5TmFtZSIgXSBpbiBjYXRlZ29yaWVzIG9yICggZm9yU3BvcnRzICkgOgogICAgbzBvb29PID0gaTExaUlJaTExCiAgICBvME9JaUlJID0gbzBvb29PIFsgImNoYW5uZWxOYW1lIiBdCiAgICBpZiAnZWJvdW5kLnR2JyBpbiBvMG9vb08gWyAiY2hhbm5lbExpbmsiIF0gOgogICAgIGlmIDQyIC0gNDI6IE9vb29vb29vT08gKiBJSTExMWlpaWkKICAgICBvMG8wTyA9ICdlYm91bmQyOicgKyBvMG9vb08gWyAiY2hhbm5lbExpbmsiIF0gLiByZXBsYWNlICggJzoxOTM1JyAsICcnICkKICAgIGVsc2UgOgogICAgIG8wbzBPID0gJ2RpcmVjdDI6JyArIG8wb29vTyBbICJjaGFubmVsTGluayIgXSArICd8VXNlci1BZ2VudD1BcHBsZUNvcmVNZWRpYS8xLjAuMC4xM0E0NTIgKGlQaG9uZTsgVTsgQ1BVIE9TIDlfMF8yIGxpa2UgTWFjIE9TIFg7IGVuX2diKScKICAgIElJSUlJaWkxaWkxMSA9IG8wb29vTyBbICJjYXRlZ29yeUxvZ28iIF0KICAgIGlmIDUzIC0gNTM6IG8wb28wbyArIGkxSUlpIC4gb29PTzAwb09vIC8gaTExaUlpaUlpaSArIG8wMDAwb09vT29PMG8gJSBvT28wTzBPb28KICAgIGlmIGxlbiAoIFsgTzBPT29PMDBPTzBvIGZvciBPME9Pb08wME9PMG8gLCBPT29PMG9PMDBvIGluIGVudW1lcmF0ZSAoIG9PMCApIGlmIE9Pb08wb08wMG8gWyAyIF0gPT0gbzBvME8gXSApID09IDAgOgogICAgIG9PMCAuIGFwcGVuZCAoICggbzBPSWlJSSArICggJyB2NycgaWYgZGVzaSBlbHNlICcnICkgLCAnbWFudWFsJyAsIG8wbzBPICwgSUlJSUlpaTFpaTExICkgKQogICAgIGlmIDkgLSA5OiBPbyAuIE9vT08wb29PT29vME8gLSBPb08wTzAwIC4gbzBvbzBvCiAgaWYgbGVuICggb08wICkgPiAwIDoKICAgb08wID0gc29ydGVkICggb08wICwga2V5ID0gbGFtYmRhIEkxaTExIDogSTFpMTEgWyAwIF0gLiBsb3dlciAoICkgKQogZXhjZXB0IDoKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIHJldHVybiBvTzAKIGlmIDM5IC0gMzk6IElJMTFpaUlJCmRlZiBvMDBPTzAwT09vMCAoIGNhdGVnb3J5ICkgOgogb08wID0gWyBdCiB0cnkgOgogIGkxaUkgPSBvb09vMDBvb08gKCBjYXRlZ29yeSApCiAgaWYgMTYgLSAxNjogb29vTzBvbzBvT09PTyAlIGkxMWlJaWlJaWkgLiBvb29PMG9vMG9PT09PICUgT29vb29vb29PTyAtIGlpaWlJaTExaQogIGZvciBpMTFpSUlpMTEgaW4gaTFpSSA6CiAgIGlmIDg4IC0gODg6IG8wMDAwb09vT29PMG8gKiBpSWlpMUkxMUkxSUkxIC4gT29PTzBvb09Pb28wTwogICBvMG9vb08gPSBpMTFpSUlpMTEKICAgbzBPSWlJSSA9IG8wb29vTyBbICJUaXRsZSIgXQogICBJSUlJSWlpMWlpMTEgPSBvMG9vb08gWyAiVGh1bWJuYWlsVVJMIiBdCiAgIGlmIDEgPT0gMiBhbmQgJ0hMU1VSTCcgaW4gbzBvb29PIGFuZCBsZW4gKCBvMG9vb08gWyAiSExTVVJMIiBdICkgPiAwIDoKICAgIG8wbzBPID0gImRpcmVjdDoiICsgbzBvb29PIFsgIkhMU1VSTCIgXQogICBlbGlmIDEgPT0gMiBhbmQgJ1NhbXN1bmdVUkwnIGluIG8wb29vTyBhbmQgbGVuICggbzBvb29PIFsgIlNhbXN1bmdVUkwiIF0gKSA+IDAgOgogICAgbzBvME8gPSAiZGlyZWN0OiIgKyBvMG9vb08gWyAiU2Ftc3VuZ1VSTCIgXQogICBlbHNlIDoKICAgIG8wbzBPID0gIkNGOiIgKyBvMG9vb08gWyAiQ29udGVudElkIiBdCiAgICBpZiAyMCAtIDIwOiBPMCAuIGkxMWlJaWlJaWkgKiBpMUlJaSAlIE8wIC4gb28KICAgb08wIC4gYXBwZW5kICggKCBvME9JaUlJICsgJyBDRicgLCAnbWFudWFsJyAsIG8wbzBPICwgSUlJSUlpaTFpaTExICkgKQogIGlmIGxlbiAoIG9PMCApID4gMCA6CiAgIG9PMCA9IHNvcnRlZCAoIG9PMCAsIGtleSA9IGxhbWJkYSBJMWkxMSA6IEkxaTExIFsgMCBdIC4gbG93ZXIgKCApICkKIGV4Y2VwdCA6CiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiByZXR1cm4gb08wCiBpZiA1MyAtIDUzOiBPbyAvIE9vb29vb29vT08gLSBJSTExMWlpaWkKZGVmIE9vaWlJMSAoIHVybCAsIHByb2dyZXNzICkgOgogb08wID0gWyBdCiB0cnkgOgogIGlmIDcwIC0gNzA6IE9vb29vb29vT08gLiBPbyAvIGlpaWlJaTExaSAuIGlpaWlJaTExaSAtIE9vbzAwb09vMDBvCiAgb28wTzBvID0gaTFJSTFpMWlpSTEgKCB1cmwgLCBwcm9ncmVzcyApCiAgcHJpbnQgJ2pzb25kYXRhJyAsIG9vME8wbwogIGZvciBpMUkxMTFJSSBpbiBvbzBPMG8gOgogICBpZiA2MiAtIDYyOiBvMDAwMG9Pb09vTzBvIC4gaTExaUlpaUlpaSAlIE8wICUgbzBvbzBvIC0gT29PME8wMAogICBvME9JaUlJID0gaTFJMTExSUkgWyAidGl0bGUiIF0KICAgSUlJSUlpaTFpaTExID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDJRemFtNXJjRE5zY25NeWFHUTFMbU5zYjNWa1puSnZiblF1Ym1WMEwybHRZV2RsY3k4ek1qQjRNVGd3THlWekxtcHdadz09JyApICUgaTFJMTExSUkgWyAidWlkIiBdCiAgIG8wbzBPID0gInplbmdhOiIgKyBpMUkxMTFJSSBbICJkdnJpZCIgXQogICBwcmludCBvMG8wTwogICBvTzAgLiBhcHBlbmQgKCAoIG8wT0lpSUkgKyAnIFplbmdhJyAsICdtYW51YWwnICwgbzBvME8gLCBJSUlJSWlpMWlpMTEgKSApCiAgaWYgbGVuICggb08wICkgPiAwIDoKICAgb08wID0gc29ydGVkICggb08wICwga2V5ID0gbGFtYmRhIEkxaTExIDogSTFpMTEgWyAwIF0gLiBsb3dlciAoICkgKQogZXhjZXB0IDoKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIHJldHVybiBvTzAKIGlmIDY5IC0gNjk6IElJMTExaWlpaSAuIG9PbzBPME9vbyAqIG9PbzBPME9vbyAlIG8wMDAwb09vT29PMG8gKyBvbwpkZWYgb29PT08wMDBPICggdXJsICwgcHJvZ3Jlc3MgKSA6CiBvTzAgPSBbIF0KIHRyeSA6CiAgaWYgOTAgLSA5MDogbzAwMDBvT29Pb08wbyAuIGkxMWlJaWlJaWkgKyBpSWlpMUkxMUkxSUkxCiAgaTFpSSA9IElJaTFJaUlpaSAoIHVybCAsIHByb2dyZXNzICkKICBmb3IgaTExaUlJaTExIGluIGkxaUkgOgogICBpZiA0MCAtIDQwOiBvbwogICBvMG9vb08gPSBpMTFpSUlpMTEKICAgbzBPSWlJSSA9IG8wb29vTyBbIDIgXQogICBJSUlJSWlpMWlpMTEgPSBvMG9vb08gWyAxIF0KICAgbzBvME8gPSAiWVA6IiArIG8wb29vTyBbIDAgXQogICBpZiAzIC0gMzogT28gLyBpMUlJaSAtIG9PbzBPME9vbwogICBvTzAgLiBhcHBlbmQgKCAoIG8wT0lpSUkgKyAnIFlQJyAsICdtYW51YWwnICwgbzBvME8gLCBJSUlJSWlpMWlpMTEgKSApCiAgaWYgbGVuICggb08wICkgPiAwIDoKICAgb08wID0gc29ydGVkICggb08wICwga2V5ID0gbGFtYmRhIEkxaTExIDogSTFpMTEgWyAwIF0gLiBsb3dlciAoICkgKQogZXhjZXB0IDoKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIHJldHVybiBvTzAKIGlmIDczIC0gNzM6IE9vb29vb29vT08gKiBPMCAqIE9vCmRlZiBpaWkxMUlpICggY2F0ZWdvcmllcyAsIGZvclNwb3J0cyA9IEZhbHNlICkgOgogb08wID0gWyBdCiB0cnkgOgogIGkxaUkgPSBpMUlpaWkxMTEgKCApCiAgaWYgMzcgLSAzNzogb29PTzAwb09vIC4gaTFJSWkgKyBpMUlJaSAvIG9vICogT28gKiBvMDAwMG9Pb09vTzBvCiAgZm9yIGkxMWlJSWkxMSBpbiBpMWlJIDoKICAgaWYgMSA9PSAxIDoKICAgIG8wb29vTyA9IGkxMWlJSWkxMQogICAgbzBPSWlJSSA9IG8wb29vTyBbIDEgXQogICAgbzBvME8gPSBvMG9vb08gWyAwIF0KICAgIGlmIG5vdCBvMG8wTyAuIHN0YXJ0c3dpdGggKCAiaHR0cCIgKSA6IG8wbzBPID0gJ2h0dHA6Ly9vcmlnaW4uZGl0dG90di5jb20nICsgbzBvME8KICAgIG8wbzBPID0gJ2RpdHRvOicgKyBvMG8wTwogICAgdHJ5IDoKICAgICBvME9JaUlJICs9ICIgIiArIG8wb29vTyBbICJtYW51YWwiIF0KICAgIGV4Y2VwdCA6IHBhc3MKICAgIGlmIDU2IC0gNTY6IE9vb29vb29vT08gLyBvbyAuIE9vIC0gaTFJSWkKICAgIElJSUlJaWkxaWkxMSA9IG8wb29vTyBbIDIgXQogICAgaWYgNjAgLSA2MDogb09vME8wT29vICUgb09vME8wT29vCiAgICBpZiAyIC0gMjogbzAwMDBvT29Pb08wbyAuIE8wIC0gaWlpaUlpMTFpICsgb29vTzBvbzBvT09PTwogICAgaWYgbGVuICggWyBPME9Pb08wME9PMG8gZm9yIE8wT09vTzAwT08wbyAsIE9Pb08wb08wMG8gaW4gZW51bWVyYXRlICggb08wICkgaWYgT09vTzBvTzAwbyBbIDIgXSA9PSBvMG8wTyBdICkgPT0gMCA6CiAgICAgb08wIC4gYXBwZW5kICggKCBvME9JaUlJICsgJyBkaXR0bycgLCAnbWFudWFsJyAsIG8wbzBPICwgSUlJSUlpaTFpaTExICkgKQogIGlmIGxlbiAoIG9PMCApID4gMCA6CiAgIG9PMCA9IHNvcnRlZCAoIG9PMCAsIGtleSA9IGxhbWJkYSBJMWkxMSA6IEkxaTExIFsgMCBdIC4gbG93ZXIgKCApICkKIGV4Y2VwdCA6CiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiByZXR1cm4gb08wCiBpZiA5NiAtIDk2OiBvMDAwMG9Pb09vTzBvICsgbzAwMDBvT29Pb08wbwpkZWYgaWlpSWkxSWlpaTFJICggY2FsbGVyICkgOgogb08wID0gWyBdCiBwcmludCAnZ2V0SXBCb3hTb3VyY2VzQWxsT3RoZXJTb3VyY2UnCiBpZiBub3QgY2FsbGVyID09ICJobHMiIDoKICB0cnkgOgogICBpZiA1NCAtIDU0OiBPbyAtIGlJaWkxSTExSTFJSTEgLSBPb09PMG9vT09vbzBPICUgbzAwMDBvT29Pb08wbyAvIElJMTExaWlpaQogICBpZiA4MCAtIDgwOiBpMTFpSWlpSWlpICUgaUlpaTFJMTFJMUlJMSAvIGkxMWlJaWlJaWkKICAgT09vT08wb29vME8gPSBpMWlpSTExSSAoICJodHRwOi8vd3d3Lm9uZXBsYXlsaXN0LmV1LnBuLyIgKQogICBpZiAxNyAtIDE3OiBPbwogICBJSWkxSUlJSSA9IHJlIC4gZmluZGFsbCAoICc+KGh0dHA6XC9cLyguKj8pXC8uKj9nZXQucGhwLio/KTwnICwgT09vT08wb29vME8gKQogICBwcmludCBJSWkxSUlJSQogICBpbXBvcnQgdGltZQogICBpZiAzMyAtIDMzOiBJSTExMWlpaWkgLiBvT29PMG9vME9PT28gLSBPMCAqIGlJaWkxSTExSTFJSTEgJSBPMCAuIE9vb29vb29vT08KICAgZm9yIE8wME8gaW4gSUlpMUlJSUkgWyAwIDogMjUgXSA6CiAgICB0cnkgOgogICAgIElJSUlJaTEgLCBvMG9JaTFpaWlpaSA9IE8wME8KICAgICBvMG9JaTFpaWlpaSA9IG8wb0lpMWlpaWlpIC4gc3BsaXQgKCAnLycgKSBbIDAgXSAuIHNwbGl0ICggJzonICkgWyAwIF0KICAgICBvTzAgLiBhcHBlbmQgKCAoIG8wb0lpMWlpaWlpICwgSUlJSUlpMSAuIHJlcGxhY2UgKCAnJmFtcDsnICwgJyYnICkgKSApCiAgICBleGNlcHQgOiB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICAgIGlmIDg4IC0gODg6IG8wMDAwb09vT29PMG8gLyBpMTFpSWlpSWlpICUgb09vME8wT29vICUgSUkxMWlpSUkKICBleGNlcHQgOgogICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICAgaWYgNzAgLSA3MDogb09vTzBvbzBPT09vIC4gb09vTzBvbzBPT09vIC8gT29PTzBvb09Pb28wTyAuIG9Pb08wb28wT09PbwogcmV0dXJuIG9PMAogaWYgMzcgLSAzNzogaTFJSWkgLiBvMG9vMG8gLSBJSTExMWlpaWkgJSBPb28wMG9PbzAwbyAtIGkxSUlpIC4gaWlpaUlpMTFpCmRlZiBJaWkxSSAoIGZyb21wYWtpbmRpYSA9IEZhbHNlICwgY2FsbGVyID0gTm9uZSApIDoKIG9PMCA9IFsgXQogdHJ5IDoKICBpZiAzNCAtIDM0OiBpSWlpMUkxMUkxSUkxIC8gSUkxMTFpaWlpCiAgaWYgY2FsbGVyID09ICJtcGVndHMiIG9yIGNhbGxlciA9PSBOb25lIDoKICAgSUlpMUlJSUkgPSBpMWlpSTExSSAoICJodHRwOi8vcGFzdGViaW4uY29tL3Jhdy9HcllLTUhyRiIgKQogICBpZiAzIC0gMzogT29vMDBvT28wMG8gLSBPb29vb29vb09PICsgaTFJMWlpMUlJMWlJSSAuIE9vT08wb29PT29vME8KICAgaWYgODggLSA4ODogT29PTzBvb09Pb28wTyAtIGkxSTFpaTFJSTFpSUkKICBJSWkxSUlJSSA9IElJaTFJSUlJIC4gc3BsaXRsaW5lcyAoICkKICBpZiA2OCAtIDY4OiBPb08wTzAwICUgaWlpaUlpMTFpIC4gb29vTzBvbzBvT09PTyAtIE9vbzAwb09vMDBvIC8gaTFJSWkgLyBPb29vb29vb09PCiAgaW1wb3J0IHRpbWUKICBmb3IgTzAwTyBpbiBJSWkxSUlJSSA6CiAgIGlmIG5vdCBPMDBPIC4gc3RhcnRzd2l0aCAoICIjIyIgKSBhbmQgbGVuICggTzAwTyApID4gMCA6CiAgICB0cnkgOgogICAgIGlmIDM0IC0gMzQ6IE9vT08wb29PT29vME8gJSBPb08wTzAwICsgbzAwMDBvT29Pb08wbwogICAgIHByaW50ICdsbicgLCBPMDBPCiAgICAgbzBvSWkxaWlpaWkgLCBJSUlJSWkxID0gTzAwTyAuIHNwbGl0ICggJyQnICkKICAgICBpZiA5MyAtIDkzOiBvMDAwMG9Pb09vTzBvIC0gbzBvbzBvICUgTzAKICAgICBvTzAgLiBhcHBlbmQgKCAoIG8wb0lpMWlpaWlpICwgSUlJSUlpMSApICkKICAgIGV4Y2VwdCA6IHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogZXhjZXB0IDoKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICBpZiAxMSAtIDExOiBpMTFpSWlpSWlpCiBpZiBmcm9tcGFraW5kaWEgOgogIHJldHVybiBvTzAKIGVsc2UgOgogIHJldHVybiBvTzAgKyBpaWlJaTFJaWlpMUkgKCBjYWxsZXIgKQogIGlmIDYgLSA2OiBJSTExMWlpaWkKICBpZiAxIC0gMTogT28gJSBPb08wTzAwIC4gaWlpaUlpMTFpCmRlZiBpSWkxaTFpSWkxSWkxICggdXJsICwgZm9yU3BvcnRzID0gRmFsc2UgLCBzb3J0ID0gVHJ1ZSApIDoKIG9PMCA9IFsgXQogdHJ5IDoKICBmb3IgbzAwIGluIHVybCA6CiAgIHRyeSA6CiAgICBPb09vb28gLCBpMTFpSTExMTFpaTFJID0gTm9uZSAsIE5vbmUKICAgIGlmICd8JyBpbiBvMDAgOgogICAgIG8wMCAsIE9vT29vbyAsIGkxMWlJMTExMWlpMUkgPSBvMDAgLiBzcGxpdCAoICd8JyApCiAgICAgbzAwID0gbzAwICsgJ3wnICsgT29Pb29vCiAgICAgaWYgJ1tnZXR0ZXh0XScgaW4gbzAwIDoKICAgICAgcHJpbnQgJ2luIGdldHRleHQnICwgbzAwCiAgICAgIG8wMCA9IGkxaWlJMTFJICggbzAwIC4gcmVwbGFjZSAoICdbZ2V0dGV4dF0nICwgJycgKSApCiAgICAgIGlmICcgJyBpbiBvMDAgb3IgJz4nIGluIG8wMCA6CiAgICAgICBvMDAgPSBvMDAgLiByZXBsYWNlICggJyAnICwgJyUyMCcgKQogICAgICAgbzAwID0gbzAwIC4gcmVwbGFjZSAoICc+JyAsICclM0UnICkKICAgICAgIG8wMCA9IG8wMCAuIHJlcGxhY2UgKCAnPCcgLCAnJTNDJyApCiAgICAgICBpZiA4OSAtIDg5OiBpMTFpSWlpSWlpIC8gTzAgLSBpMUlJaSAlIE9vTzBPMDAgKyBpMTFpSWlpSWlpCiAgICAgSTExMTFJSWkgPSBpMTFpSTExMTFpaTFJIC4gc3BsaXQgKCAnJicgKQogICAgIGkxaWkxMTExaTFpID0gWyBdCiAgICAgZm9yIE9vbyBpbiBJMTExMUlJaSA6CiAgICAgIGlmIGxlbiAoIE9vbyAuIHNwbGl0ICggJz0nICkgKSA9PSAyIDoKICAgICAgIEkxaUlJaWkgLCBpaWkxaSA9IE9vbyAuIHNwbGl0ICggJz0nICkKICAgICAgZWxzZSA6CiAgICAgICBJMTFpMWlpMSA9IE9vbyAuIHNwbGl0ICggJz0nICkKICAgICAgIEkxaUlJaWkgPSBJMTFpMWlpMSBbIDAgXQogICAgICAgaWlpMWkgPSAnPScgLiBqb2luICggSTExaTFpaTEgWyAxIDogXSApCiAgICAgICBpZiA0NCAtIDQ0OiBpMTFpSWlpSWlpIC8gSUkxMWlpSUkgKiBPbwogICAgICBwcmludCBJMWlJSWlpICwgaWlpMWkKICAgICAgaWYgSTFpSUlpaSA9PSAiVXNlci1BZ2VudCIgYW5kIGlpaTFpIC4gc3RhcnRzd2l0aCAoICdodHRwJyApIDoKICAgICAgIGlpaTFpID0gaTFpaUkxMUkgKCBpaWkxaSApCiAgICAgICBwcmludCBpaWkxaQogICAgICBpMWlpMTExMWkxaSAuIGFwcGVuZCAoICggSTFpSUlpaSAsIGlpaTFpICkgKQogICAgIGkxMWlJMTExMWlpMUkgPSB1cmxsaWIgLiB1cmxlbmNvZGUgKCBpMWlpMTExMWkxaSApCiAgICAgaWYgODggLSA4ODogaTFJSWkgJSBJSTExaWlJSSAvIE9vb29vb29vT08gKiBpMUkxaWkxSUkxaUlJICUgT28KICAgIG8wTzBvb29vb29vMDAgPSBpMWlpSTExSSAoIG8wMCApCiAgICBpZiA1IC0gNTogb09vTzBvbzBPT09vICogbzAwMDBvT29Pb08wbyAlIE9vT08wb29PT29vME8gJSBJSTExMWlpaWkKICAgIGlmIDkgLSA5OiBPb28wMG9PbzAwbyAlIG8wb28wbyArIE9vT08wb29PT29vME8KICAgIGlmIGkxSWlJID09IDY3IDoKICAgICBpZiA1NSAtIDU1OiBvb09PMDBvT28gLSBvT29PMG9vME9PT28KICAgICBpaTExaTFJMWlpaWkgPSAnI0VYVElORjotMSwoLio/KC4pLiopXHMoLiopXHM/JwogICAgIGZvclNwb3J0cyA9IFRydWUKICAgIGVsc2UgOgogICAgIGlmIGZvclNwb3J0cyA6CiAgICAgIGlpMTFpMUkxaWlpaSA9ICcjRVhUSU5GOi0xLCguKj8oc3BvcnR8ZXBsfFdpbGxvd3xDVEgpLiopXHMoLiopXHM/JwogICAgIGVsc2UgOgogICAgICBpaTExaTFJMWlpaWkgPSAnI0VYVElORjotMSwoWXVwcHxpbik6KC4qKVxzKC4qKScKICAgIGkxaUkgPSByZSAuIGZpbmRhbGwgKCBpaTExaTFJMWlpaWkgLCBvME8wb29vb29vbzAwICwgcmUgLiBJR05PUkVDQVNFICkKICAgIGlmIDM4IC0gMzg6IGlJaWkxSTExSTFJSTEgJSBvb29PMG9vMG9PT09PICUgb29PTzAwb09vICUgTzAgKiBpSWlpMUkxMUkxSUkxIC8gbzBvbzBvCiAgICBmb3IgaTExaUlJaTExIGluIGkxaUkgOgogICAgIHRyeSA6CiAgICAgIG8wb29vTyA9IGkxMWlJSWkxMQogICAgICBvME9JaUlJID0gbzBvb29PIFsgMCBdIGlmIGZvclNwb3J0cyBlbHNlIG8wb29vTyBbIDEgXQogICAgICBpZiA2NSAtIDY1OiBJSTExaWlJSSAtIG9vICogbzBvbzBvCiAgICAgIGlmIDEgPT0gMSA6CiAgICAgICBpZiA5OSAtIDk5OiBvbwogICAgICAgaWYgNjQgLSA2NDogb09vTzBvbzBPT09vICogbzAwMDBvT29Pb08wbyAqIE9vTzBPMDAgJSBvb29PMG9vMG9PT09PICUgT28KICAgICAgIGlmIDU1IC0gNTU6IElJMTExaWlpaSAtIG8wb28wbyAtIElJMTFpaUlJICUgbzAwMDBvT29Pb08wbwogICAgICAgaUkxSTFpSUkxaUlJID0gbzBvb29PIFsgMiBdCiAgICAgICBpZiAnICcgaW4gaUkxSTFpSUkxaUlJIG9yICc+JyBpbiBpSTFJMWlJSTFpSUkgOgogICAgICAgIGlJMUkxaUlJMWlJSSA9IGlJMUkxaUlJMWlJSSAuIHJlcGxhY2UgKCAnICcgLCAnJTIwJyApCiAgICAgICAgaUkxSTFpSUkxaUlJID0gaUkxSTFpSUkxaUlJIC4gcmVwbGFjZSAoICc+JyAsICclM0UnICkKICAgICAgICBpSTFJMWlJSTFpSUkgPSBpSTFJMWlJSTFpSUkgLiByZXBsYWNlICggJzwnICwgJyUzQycgKQogICAgICAgaWYgaTExaUkxMTExaWkxSSA6CiAgICAgICAgbzBvME8gPSAnaXBib3g6JyArIGlJMUkxaUlJMWlJSSAuIHJlcGxhY2UgKCAnXHInICwgJycgKSArICd8JyArIGkxMWlJMTExMWlpMUkKICAgICAgIGVsc2UgOgogICAgICAgIG8wbzBPID0gJ2lwYm94OicgKyBpSTFJMWlJSTFpSUkgLiByZXBsYWNlICggJ1xyJyAsICcnICkgKyAnfFVzZXItQWdlbnQ9VkxDLzIuMy4xIExpYlZMQy8yLjIuMTcmSWN5LU1ldGFEYXRhPTEnCiAgICAgICAgaWYgODQgLSA4NDogaTExaUlpaUlpaSAvIE9vbzAwb09vMDBvICUgaUlpaTFJMTFJMUlJMSAuIE9vIC4gb29PTzAwb09vIC8gaTFJMWlpMUlJMWlJSQogICAgICAgIGlmIDU1IC0gNTU6IGkxSTFpaTFJSTFpSUkKICAgICAgIG9PMCAuIGFwcGVuZCAoICggbzBPSWlJSSArICcgSXBib3gnICwgJ21hbnVhbCcgLCBvMG8wTyAsICcnICkgKQogICAgIGV4Y2VwdCA6IHBhc3MKICAgZXhjZXB0IDogcGFzcwogICBpZiBsZW4gKCBvTzAgKSA+IDAgYW5kIHNvcnQgOgogICAgb08wID0gc29ydGVkICggb08wICwga2V5ID0gbGFtYmRhIEkxaTExIDogSTFpMTEgWyAwIF0gLiBsb3dlciAoICkgKQogZXhjZXB0IDoKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIHJldHVybiBvTzAKIGlmIDMgLSAzOiBpSWlpMUkxMUkxSUkxCmRlZiBpSWlJSSAoICkgOgogb08wID0gWyBdCiB0cnkgOgogIGkxaUkgPSBJaSAoICkKICBpZiA5NiAtIDk2OiBvb09PMDBvT28gKyBvbyAlIE9vTzBPMDAKICBmb3IgaTExaUlJaTExIGluIGkxaUkgOgogICBpZiBub3QgaTExaUlJaTExIFsgImNhdGVnb3J5TmFtZSIgXSBpbiBvTzAgOgogICAgb08wIC4gYXBwZW5kICggaTExaUlJaTExIFsgImNhdGVnb3J5TmFtZSIgXSApCiAgaWYgbGVuICggb08wICkgPiAwIDoKICAgb08wID0gc29ydGVkICggb08wICwga2V5ID0gbGFtYmRhIEkxaTExIDogSTFpMTEgWyAwIF0gLiBsb3dlciAoICkgKQogZXhjZXB0IDoKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIHJldHVybiBvTzAKIGlmIDIxIC0gMjE6IG9PbzBPME9vbyAtIGkxMWlJaWlJaWkgLSBvT28wTzBPb28KZGVmIEkxMTExICggKSA6CiBvTzAgPSBbIF0KIHRyeSA6CiAgaTFpSSA9IGkxb28wT08wT28gKCApCiAgaWYgNCAtIDQ6IG9PbzBPME9vbyAqIE8wIC0gT29PTzBvb09Pb28wTwogIGZvciBpMTFpSUlpMTEgaW4gaTFpSSA6CiAgIGlmIG5vdCBpMTFpSUlpMTEgWyAiY2F0ZWdvcnlOYW1lIiBdIGluIG9PMCA6CiAgICBvTzAgLiBhcHBlbmQgKCBpMTFpSUlpMTEgWyAiY2F0ZWdvcnlOYW1lIiBdICkKICBpZiBsZW4gKCBvTzAgKSA+IDAgOgogICBvTzAgPSBzb3J0ZWQgKCBvTzAgLCBrZXkgPSBsYW1iZGEgSTFpMTEgOiBJMWkxMSBbIDAgXSAuIGxvd2VyICggKSApCiBleGNlcHQgOgogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcmV0dXJuIG9PMAogaWYgNzIgLSA3MjogT29PTzBvb09Pb28wTyArIE9vIC8gb28gLiBvb29PMG9vMG9PT09PICUgb29PTzAwb09vIC8gaTExaUlpaUlpaQpkZWYgbzBvTzBPb08wbyAoICkgOgogb08wID0gWyBdCiB0cnkgOgogIGkxaUkgPSBJMUlJSTFJMUlpSSAoICkKICBpZiA3MCAtIDcwOiBJSTExMWlpaWkgKiBJSTExMWlpaWkgLiBvbwogIGZvciBpMTFpSUlpMTEgaW4gaTFpSSA6CiAgIGlmIG5vdCBpMTFpSUlpMTEgWyAiY2F0ZWdvcnlOYW1lIiBdIGluIG9PMCA6CiAgICBvTzAgLiBhcHBlbmQgKCBpMTFpSUlpMTEgWyAiY2F0ZWdvcnlOYW1lIiBdICkKICBpZiBsZW4gKCBvTzAgKSA+IDAgOgogICBvTzAgPSBzb3J0ZWQgKCBvTzAgLCBrZXkgPSBsYW1iZGEgSTFpMTEgOiBJMWkxMSBbIDAgXSAuIGxvd2VyICggKSApCiBleGNlcHQgOgogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcHJpbnQgb08wCiByZXR1cm4gb08wCiBpZiAxMSAtIDExOiBpMUkxaWkxSUkxaUlJCiBpZiAyMCAtIDIwOiBvMDAwMG9Pb09vTzBvIC4gbzBvbzBvICUgbzAwMDBvT29Pb08wbwpkZWYgT28wb08wMCAoIGNhdGVnb3JpZXMgLCBmb3JTcG9ydHMgPSBGYWxzZSAsIGRlc2kgPSBUcnVlICkgOgogb08wID0gWyBdCiB0cnkgOgogIGkxaUkgPSBJaSAoICkKICBpZiA1IC0gNTogSUkxMWlpSUkgKyBpMUkxaWkxSUkxaUlJCiAgaWYgMjMgLSAyMzogbzBvbzBvICUgaUlpaTFJMTFJMUlJMSAuIE9vT08wb29PT29vME8KICBmb3IgaTExaUlJaTExIGluIGkxaUkgOgogICBwcmludCBpMTFpSUlpMTEgWyAiY2F0ZWdvcnlOYW1lIiBdIGluIGNhdGVnb3JpZXMKICAgaWYgaTExaUlJaTExIFsgImNhdGVnb3J5TmFtZSIgXSAuIHN0cmlwICggKSAuIGxvd2VyICggKSBpbiBjYXRlZ29yaWVzIG9yIGkxMWlJSWkxMSBbICJjYXRlZ29yeU5hbWUiIF0gLiBzdHJpcCAoICkgaW4gY2F0ZWdvcmllcyBvciAoIGZvclNwb3J0cyBhbmQgKCAnc3BvcnQnIGluIGkxMWlJSWkxMSBbICJjYXRlZ29yeU5hbWUiIF0gLiBsb3dlciAoICkgb3IgJ2JhcmNsYXlzcHJlbWllcmxlYWd1ZScgaW4gaTExaUlJaTExIFsgImNhdGVnb3J5TmFtZSIgXSAuIGxvd2VyICggKSApICkgOgogICAgcHJpbnQgaTExaUlJaTExCiAgICBvMG9vb08gPSBpMTFpSUlpMTEKICAgIG8wT0lpSUkgPSBvMG9vb08gWyAiY2hhbm5lbE5hbWUiIF0KICAgIGlmIG8wT0lpSUkgLiBsb3dlciAoICkgLiBzdGFydHN3aXRoICggJ2FudCBtYW4nICkgOiBjb250aW51ZQogICAgaWYgOTUgLSA5NTogT29PME8wMCArIGkxMWlJaWlJaWkgJSBJSTExaWlJSSAtIGlpaWlJaTExaQogICAgaWYgJ2Vib3VuZC50dicgaW4gbzBvb29PIFsgImNoYW5uZWxMaW5rIiBdIDoKICAgICBvMG8wTyA9ICdlYm91bmQyOicgKyBvMG9vb08gWyAiY2hhbm5lbExpbmsiIF0gLiByZXBsYWNlICggJzoxOTM1JyAsICcnICkKICAgIGVsc2UgOgogICAgIG8wbzBPID0gJ2RpcmVjdDI6JyArIG8wb29vTyBbICJjaGFubmVsTGluayIgXQogICAgIGlmIG8wb29vTyBbICJjaGFubmVsTGluayIgXSAuIHN0YXJ0c3dpdGggKCAnaHR0cCcgKSA6IG8wbzBPICs9ICd8VXNlci1BZ2VudD1BcHBsZUNvcmVNZWRpYS8xLjAuMC4xM0E0NTIgKGlQaG9uZTsgVTsgQ1BVIE9TIDlfMF8yIGxpa2UgTWFjIE9TIFg7IGVuX2diKScKICAgICBpZiAxMSAtIDExOiBvT29PMG9vME9PT28gLyBPMCArIElJMTExaWlpaQogICAgIGlmIDk1IC0gOTU6IG8wb28wbyArIG9vb08wb28wb09PT08gKiBpSWlpMUkxMUkxSUkxCiAgICBJSUlJSWlpMWlpMTEgPSAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zLyVzLnBuZycgJSBvME9JaUlJIC4gbG93ZXIgKCApIC4gcmVwbGFjZSAoICcgJyAsICcnICkKICAgIGlmIDE3IC0gMTc6IG9vT08wMG9PbyAtIE9vTzBPMDAgKiBPMCAvIG8wMDAwb09vT29PMG8KICAgIGlmIGxlbiAoIFsgTzBPT29PMDBPTzBvIGZvciBPME9Pb08wME9PMG8gLCBPT29PMG9PMDBvIGluIGVudW1lcmF0ZSAoIG9PMCApIGlmIE9Pb08wb08wMG8gWyAyIF0gPT0gbzBvME8gXSApID09IDAgOgogICAgIGlmIDE5IC0gMTk6IGkxSUlpIC0gaUlpaTFJMTFJMUlJMSAuIE9vT08wb29PT29vME8KICAgICBvTzAgLiBhcHBlbmQgKCAoIG8wT0lpSUkgKyAoICcgdjknIGlmIGRlc2kgZWxzZSAnJyApICwgJ21hbnVhbCcgLCBvMG8wTyAsIElJSUlJaWkxaWkxMSApICkKICBpZiBsZW4gKCBvTzAgKSA+IDAgOgogICBvTzAgPSBzb3J0ZWQgKCBvTzAgLCBrZXkgPSBsYW1iZGEgSTFpMTEgOiBJMWkxMSBbIDAgXSAuIGxvd2VyICggKSApCiBleGNlcHQgOgogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcmV0dXJuIG9PMAogaWYgMiAtIDI6IG8wMDAwb09vT29PMG8KZGVmIEkxaUlJMUlJaTFJaUkgKCBjYXRlZ29yaWVzICwgZm9yU3BvcnRzID0gRmFsc2UgKSA6CiBvTzAgPSBbIF0KIHRyeSA6CiAgaTFpSSA9IEkxSUlJMUkxSWlJICggKQogIGlmIDEyIC0gMTI6IGkxMWlJaWlJaWkgLSBpSWlpMUkxMUkxSUkxICogb29vTzBvbzBvT09PTyAqIGkxSTFpaTFJSTFpSUkKICBpZiAxOSAtIDE5OiBPMCArIGlpaWlJaTExaSArIE9vbzAwb09vMDBvCiAgaWYgODEgLSA4MTogaUlpaTFJMTFJMUlJMQogIGZvciBpMTFpSUlpMTEgaW4gaTFpSSA6CiAgIGlmIDUxIC0gNTE6IE9vbzAwb09vMDBvIC4gb09vTzBvbzBPT09vICogbzAwMDBvT29Pb08wbyAvIE9vTzBPMDAgKiBJSTExMWlpaWkgLyBPMAogICBpZiBpMTFpSUlpMTEgWyAiY2F0ZWdvcnlOYW1lIiBdIC4gc3RyaXAgKCApIGluIGNhdGVnb3JpZXMgb3IgaTExaUlJaTExIFsgImNhdGVnb3J5TmFtZSIgXSBpbiBjYXRlZ29yaWVzIG9yICggZm9yU3BvcnRzIGFuZCAoICdzcG9ydCcgaW4gaTExaUlJaTExIFsgImNhdGVnb3J5TmFtZSIgXSAuIGxvd2VyICggKSBvciAnQmFyY2xheXNQcmVtaWVyTGVhZ3VlJyBpbiBpMTFpSUlpMTEgWyAiY2F0ZWdvcnlOYW1lIiBdICkgKSA6CiAgICBpZiA0NCAtIDQ0OiBpMTFpSWlpSWlpICUgbzBvbzBvICUgaWlpaUlpMTFpICsgT29PTzBvb09Pb28wTyAqIGlpaWlJaTExaSAuIG8wMDAwb09vT29PMG8KICAgIG8wb29vTyA9IGkxMWlJSWkxMQogICAgbzBPSWlJSSA9IG8wb29vTyBbICJjaGFubmVsTmFtZSIgXQogICAgaWYgODkgLSA4OTogT29vb29vb29PTyAlIElJMTExaWlpaSAtIG9vT08wMG9PbyAlIGkxMWlJaWlJaWkKICAgIGlmICdlYm91bmQudHYnIGluIG8wb29vTyBbICJjaGFubmVsTGluayIgXSA6CiAgICAgbzBvME8gPSAnZWJvdW5kMjonICsgbzBvb29PIFsgImNoYW5uZWxMaW5rIiBdIC4gcmVwbGFjZSAoICc6MTkzNScgLCAnJyApCiAgICBlbHNlIDoKICAgICBvMG8wTyA9ICdkaXJlY3QyOicgKyBvMG9vb08gWyAiY2hhbm5lbExpbmsiIF0KICAgICBpZiBvMG9vb08gWyAiY2hhbm5lbExpbmsiIF0gLiBzdGFydHN3aXRoICggJ2h0dHAnICkgOiBvMG8wTyArPSAnfFVzZXItQWdlbnQ9QXBwbGVDb3JlTWVkaWEvMS4wLjAuMTNBNDUyIChpUGhvbmU7IFU7IENQVSBPUyA5XzBfMiBsaWtlIE1hYyBPUyBYOyBlbl9nYiknCiAgICAgaWYgNyAtIDc6IG9vb08wb28wb09PT08KICAgICBpZiAxNSAtIDE1OiBPb08wTzAwICsgaTFJMWlpMUlJMWlJSSArIG9vICogT29vMDBvT28wMG8KICAgIElJSUlJaWkxaWkxMSA9ICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvJXMucG5nJyAlIG8wT0lpSUkgLiBsb3dlciAoICkgLiByZXBsYWNlICggJyAnICwgJycgKQogICAgaWYgbGVuICggWyBPME9Pb08wME9PMG8gZm9yIE8wT09vTzAwT08wbyAsIE9Pb08wb08wMG8gaW4gZW51bWVyYXRlICggb08wICkgaWYgT09vTzBvTzAwbyBbIDIgXSA9PSBvMG8wTyBdICkgPT0gMCA6CiAgICAgaWYgMzMgLSAzMzogT29vMDBvT28wMG8gKiBPb08wTzAwCiAgICAgb08wIC4gYXBwZW5kICggKCBvME9JaUlJICwgJ21hbnVhbCcgLCBvMG8wTyAsIElJSUlJaWkxaWkxMSApICkKICBpZiBsZW4gKCBvTzAgKSA+IDAgOgogICBvTzAgPSBzb3J0ZWQgKCBvTzAgLCBrZXkgPSBsYW1iZGEgSTFpMTEgOiBJMWkxMSBbIDAgXSAuIGxvd2VyICggKSApCiBleGNlcHQgOgogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcmV0dXJuIG9PMAogaWYgODggLSA4ODogbzBvbzBvICUgSUkxMWlpSUkgLSBvT28wTzBPb28gLSBvT28wTzBPb28gLiBvbwpkZWYgaTExMUkxMWkxSSAoIGNhdGVnb3JpZXMgLCBmb3JTcG9ydHMgPSBGYWxzZSApIDoKIG9PMCA9IFsgXQogdHJ5IDoKICBpMWlJID0gaTFvbzBPTzBPbyAoICkKICBpZiA1MiAtIDUyOiBJSTExMWlpaWkgLyBJSTExMWlpaWkgLyBvbyAtIG8wb28wbwogIGZvciBpMTFpSUlpMTEgaW4gaTFpSSA6CiAgIGlmIGkxMWlJSWkxMSBbICJjYXRlZ29yeU5hbWUiIF0gLiBzdHJpcCAoICkgaW4gY2F0ZWdvcmllcyBvciBpMTFpSUlpMTEgWyAiY2F0ZWdvcnlOYW1lIiBdIGluIGNhdGVnb3JpZXMgb3IgKCBmb3JTcG9ydHMgYW5kICggJ3Nwb3J0JyBpbiBpMTFpSUlpMTEgWyAiY2F0ZWdvcnlOYW1lIiBdIC4gbG93ZXIgKCApIG9yICdCYXJjbGF5c1ByZW1pZXJMZWFndWUnIGluIGkxMWlJSWkxMSBbICJjYXRlZ29yeU5hbWUiIF0gKSApIDoKICAgIGlmIDkxIC0gOTE6IG9vICsgT29vMDBvT28wMG8gJSBJSTExMWlpaWkgKyBvb09PMDBvT28KICAgIG8wb29vTyA9IGkxMWlJSWkxMQogICAgbzBPSWlJSSA9IG8wb29vTyBbICJjaGFubmVsTmFtZSIgXQogICAgaWYgNjYgLSA2NjogaUlpaTFJMTFJMUlJMSAqIElJMTExaWlpaSAlIE9vTzBPMDAgJSBvbyAtIG8wMDAwb09vT29PMG8KICAgIGlmICdlYm91bmQudHYnIGluIG8wb29vTyBbICJjaGFubmVsTGluayIgXSA6CiAgICAgbzBvME8gPSAnZWJvdW5kMjonICsgbzBvb29PIFsgImNoYW5uZWxMaW5rIiBdIC4gcmVwbGFjZSAoICc6MTkzNScgLCAnJyApCiAgICBlbHNlIDoKICAgICBvMG8wTyA9ICdkaXJlY3QyOicgKyBvMG9vb08gWyAiY2hhbm5lbExpbmsiIF0KICAgICBpZiBvMG9vb08gWyAiY2hhbm5lbExpbmsiIF0gLiBzdGFydHN3aXRoICggJ2h0dHAnICkgOiBvMG8wTyArPSAnfFVzZXItQWdlbnQ9QXBwbGVDb3JlTWVkaWEvMS4wLjAuMTNBNDUyIChpUGhvbmU7IFU7IENQVSBPUyA5XzBfMiBsaWtlIE1hYyBPUyBYOyBlbl9nYiknCiAgICAgaWYgNTkgLSA1OTogb29vTzBvbzBvT09PTyAlIGlpaWlJaTExaQogICAgIGlmIDIxIC0gMjE6IE9vb29vb29vT08gJSBvT28wTzBPb28gLSBvT28wTzBPb28gLyBvT29PMG9vME9PT28gLyBPb28wMG9PbzAwbwogICAgSUlJSUlpaTFpaTExID0gJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy8lcy5wbmcnICUgbzBPSWlJSSAuIGxvd2VyICggKSAuIHJlcGxhY2UgKCAnICcgLCAnJyApCiAgICBpZiAxNSAtIDE1OiBPbyAvIE9vICUgT29vb29vb29PTyAuIG8wb28wbwogICAgaWYgOTMgLSA5Mzogb09vTzBvbzBPT09vICogb09vTzBvbzBPT09vIC8gT29vb29vb29PTwogICAgaWYgbGVuICggWyBPME9Pb08wME9PMG8gZm9yIE8wT09vTzAwT08wbyAsIE9Pb08wb08wMG8gaW4gZW51bWVyYXRlICggb08wICkgaWYgT09vTzBvTzAwbyBbIDIgXSA9PSBvMG8wTyBdICkgPT0gMCA6CiAgICAgaWYgNiAtIDY6IG9Pb08wb28wT09PbyAqIE9vTzBPMDAgKyBpSWlpMUkxMUkxSUkxCiAgICAgb08wIC4gYXBwZW5kICggKCBvME9JaUlJICwgJ21hbnVhbCcgLCBvMG8wTyAsIElJSUlJaWkxaWkxMSApICkKICBpZiBsZW4gKCBvTzAgKSA+IDAgOgogICBvTzAgPSBzb3J0ZWQgKCBvTzAgLCBrZXkgPSBsYW1iZGEgSTFpMTEgOiBJMWkxMSBbIDAgXSAuIGxvd2VyICggKSApCiBleGNlcHQgOgogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcmV0dXJuIG9PMAogaWYgMTkgLSAxOTogTzAgJSBJSTExMWlpaWkgKiBPb28wMG9PbzAwbwogaWYgMjcgLSAyNzogSUkxMWlpSUkgKiBvb29PMG9vMG9PT09PIC8gaTExaUlpaUlpaSAtIGlpaWlJaTExaSArIElJMTExaWlpaQpkZWYgT29vbzAwT09vICggKSA6CiBvTzAgPSBbIF0KIHRyeSA6CiAgaTFpSSA9IGlJaUkxaUlpaSAoICkKICBpZiA4MSAtIDgxOiBpaWlpSWkxMWkgLyBPMCAqIE9vICUgb09vME8wT29vIC8gTzAKICBmb3IgaTExaUlJaTExIGluIGkxaUkgOgogICBpZiBub3QgaTExaUlJaTExIFsgImNhdGVnb3J5TmFtZSIgXSBpbiBvTzAgOgogICAgb08wIC4gYXBwZW5kICggaTExaUlJaTExIFsgImNhdGVnb3J5TmFtZSIgXSApCiAgaWYgbGVuICggb08wICkgPiAwIDoKICAgb08wID0gc29ydGVkICggb08wICwga2V5ID0gbGFtYmRhIEkxaTExIDogSTFpMTEgWyAwIF0gLiBsb3dlciAoICkgKQogZXhjZXB0IDoKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIHJldHVybiBvTzAKIGlmIDg1IC0gODU6IE9vb29vb29vT08gKyBPb29vb29vb09PCmRlZiBvME8wME9vb29vTyAoIGNhdGVnb3JpZXMgLCBmb3JTcG9ydHMgPSBGYWxzZSAsIGRlc2kgPSBUcnVlICkgOgogb08wID0gWyBdCiBpZiAyMyAtIDIzOiBpMUlJaQogdHJ5IDoKICBpMWlJID0gaUlpSTFpSWlpICggKQogIGlmIDMxIC0gMzE6IE9vTzBPMDAgLSBpSWlpMUkxMUkxSUkxIC8gT29PTzBvb09Pb28wTyAuIG9vT08wMG9PbwogIGZvciBpMTFpSUlpMTEgaW4gaTFpSSA6CiAgIGlmIGkxMWlJSWkxMSBbICJjYXRlZ29yeU5hbWUiIF0gLiBzdHJpcCAoICkgaW4gY2F0ZWdvcmllcyBvciBpMTFpSUlpMTEgWyAiY2F0ZWdvcnlOYW1lIiBdIGluIGNhdGVnb3JpZXMgb3IgKCBmb3JTcG9ydHMgYW5kICggJ3Nwb3J0JyBpbiBpMTFpSUlpMTEgWyAiY2F0ZWdvcnlOYW1lIiBdIC4gbG93ZXIgKCApIG9yICdCYXJjbGF5c1ByZW1pZXJMZWFndWUnIGluIGkxMWlJSWkxMSBbICJjYXRlZ29yeU5hbWUiIF0gKSApIDoKICAgIGlmIDc0IC0gNzQ6IE9vTzBPMDAgLSBJSTExMWlpaWkgLSBvb29PMG9vMG9PT09PCiAgICBvMG9vb08gPSBpMTFpSUlpMTEKICAgIG8wT0lpSUkgPSBvMG9vb08gWyAiY2hhbm5lbE5hbWUiIF0KICAgIGlmIDUwIC0gNTA6IG9vIC0gaWlpaUlpMTFpICsgaWlpaUlpMTFpICogT29PTzBvb09Pb28wTyArIGlpaWlJaTExaQogICAgaWYgJ2Vib3VuZC50dicgaW4gbzBvb29PIFsgImNoYW5uZWxMaW5rIiBdIDoKICAgICBvMG8wTyA9ICdlYm91bmQyOicgKyBvMG9vb08gWyAiY2hhbm5lbExpbmsiIF0gLiByZXBsYWNlICggJzoxOTM1JyAsICcnICkKICAgICBpZiA3MCAtIDcwOiBpMUlJaSAlIG9vT08wMG9PbyAvIGkxSUlpCiAgICBlbHNlIDoKICAgICBvMG8wTyA9ICdkaXJlY3QyOicgKyBvMG9vb08gWyAiY2hhbm5lbExpbmsiIF0KICAgICBpZiBvMG9vb08gWyAiY2hhbm5lbExpbmsiIF0gLiBzdGFydHN3aXRoICggJ2h0dHAnICkgOiBvMG8wTyArPSAnfFVzZXItQWdlbnQ9QXBwbGVDb3JlTWVkaWEvMS4wLjAuMTNBNDUyIChpUGhvbmU7IFU7IENQVSBPUyA5XzBfMiBsaWtlIE1hYyBPUyBYOyBlbl9nYiknCiAgICAgaWYgMzAgLSAzMDogb09vME8wT29vIC0gaTExaUlpaUlpaQogICAgSUlJSUlpaTFpaTExID0gJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy8lcy5wbmcnICUgbzBPSWlJSSAuIGxvd2VyICggKSAuIHJlcGxhY2UgKCAnICcgLCAnJyApCiAgICBpZiA5NCAtIDk0OiBvT28wTzBPb28gJSBpMUkxaWkxSUkxaUlJCiAgICBpZiBsZW4gKCBbIE8wT09vTzAwT08wbyBmb3IgTzBPT29PMDBPTzBvICwgT09vTzBvTzAwbyBpbiBlbnVtZXJhdGUgKCBvTzAgKSBpZiBPT29PMG9PMDBvIFsgMiBdID09IG8wbzBPIF0gKSA9PSAwIDoKICAgICBpZiAzOSAtIDM5OiBvT28wTzBPb28gKyBvMG9vMG8gJSBPMAogICAgIG9PMCAuIGFwcGVuZCAoICggbzBPSWlJSSArICggJyB2OCcgaWYgZGVzaSBlbHNlICcnICkgLCAnbWFudWFsJyAsIG8wbzBPICwgSUlJSUlpaTFpaTExICkgKQogIGlmIGxlbiAoIG9PMCApID4gMCA6CiAgIG9PMCA9IHNvcnRlZCAoIG9PMCAsIGtleSA9IGxhbWJkYSBJMWkxMSA6IEkxaTExIFsgMCBdIC4gbG93ZXIgKCApICkKIGV4Y2VwdCA6CiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiByZXR1cm4gb08wCiBpZiAyNiAtIDI2OiBPbyArIG9PbzBPME9vbwpkZWYgSUkxMTFJMWkxICggKSA6CiB0cnkgOgogIElpbzBvMG8gPSAiLTEiCiAgb28wT09vT29vME8wTyA9IHsgJ3ZlcnNpb24nIDogJzUuNycgfQogIG9vME9Pb09vbzBPME8gPSB1cmxsaWIgLiB1cmxlbmNvZGUgKCBvbzBPT29Pb28wTzBPICkKICBpZiAzMiAtIDMyOiBPMCAvIElJMTFpaUlJIC4gT28gJSBvMG9vMG8KICBpMWlpMTExMWkxaSA9IFsgKCAnVXNlci1BZ2VudCcgLCAnVVNFUi1BR0VOVC1VS1RWTk9XLUFQUC1WMicgKSAsICggJ2FwcC10b2tlbicgLCBJMWkxaTFpaTFpaUkxICggYmFzZTY0IC4gYjY0ZGVjb2RlICggImFIUjBjRG92TDNWcmRIWnViM2N1Ym1WMEwyRndjREl2ZGpNdloyVjBYM1Z6WlhKZllXZGxiblE9IiApICwgSWlvMG8wbyApICkgXQogIG9vME8wbyA9IGkxaWlJMTFJICggYmFzZTY0IC4gYjY0ZGVjb2RlICggImFIUjBjRG92TDNWcmRIWnViM2N1Ym1WMEwyRndjRE12ZGpNdloyVjBYM1Z6WlhKZllXZGxiblE9IiApICwgcG9zdCA9IG9vME9Pb09vbzBPME8gLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogIG9vME8wbyA9IGpzb24gLiBsb2FkcyAoIG9vME8wbyApCiAgaW1wb3J0IHB5YWVzCiAgdHJ5IDoKICAgaWYgJ3VzZXJhZ2VudCcgaW4gb28wTzBvIFsgIm1zZyIgXSA6CiAgICByZXR1cm4gb28wTzBvIFsgIm1zZyIgXSBbICJ1c2VyYWdlbnQiIF0KICBleGNlcHQgOgogICBwYXNzCiAgSWlJMWlpaUlpaSA9ICJNRGswTlRnM01qRXlOREpoWm1aa1pRPT0iIC4gZGVjb2RlICggImJhc2U2NCIgKQogIG9vbzAwT29Pb29vb28gPSAiWldWa1kyWmhNRFE0T1RFM05ETTVNZz09IiAuIGRlY29kZSAoICJiYXNlNjQiICkKICBJMWlJaWlJMTEgPSBweWFlcyAuIG5ldyAoIElpSTFpaWlJaWkgLCBweWFlcyAuIE1PREVfQ0JDICwgSVYgPSBvb28wME9vT29vb29vICkKICBwcmludCAndXNlciBhZ2VudCB0cnlpbmcnCiAgT29vb29vTzAgPSBJMWlJaWlJMTEgLiBkZWNyeXB0ICggb28wTzBvIFsgIm1zZyIgXSBbICI1NGIyM2Y5YjM1OTYzOTdiMmFjZjcwYTgxYjJkYTMxZCIgXSAuIGRlY29kZSAoICJoZXgiICkgKSAuIHNwbGl0ICggJ1wwJyApIFsgMCBdCiAgcHJpbnQgT29vb29vTzAKICByZXR1cm4gT29vb29vTzAKIGV4Y2VwdCA6CiAgcHJpbnQgJ2VyciBpbiB1c2VyIGFnZW50JwogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogIHJldHVybiAnVVNFUi1BR0VOVC1VS1RWTk9XLUFQUC1WMicKICBpZiA3IC0gNzogb09vME8wT29vIC4gSUkxMWlpSUkgJSBPb08wTzAwCiAgaWYgNTUgLSA1NTogT28gLSBPb08wTzAwICogaWlpaUlpMTFpCmRlZiBPT09PTzBvT09vTyAoIHpvbmUgPSAnQXNpYS9LYXJhY2hpJyApIDoKIGZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCiBmcm9tIHB5dHogaW1wb3J0IHRpbWV6b25lCiBpaWlpSUkgPSB0aW1lem9uZSAoIHpvbmUgKQogSTFJaWlpaUlJSUkgPSBkYXRldGltZSAuIG5vdyAoIGlpaWlJSSApCiByZXR1cm4gSTFJaWlpaUlJSUkgLiBzdHJmdGltZSAoICclQi0lZC0lWScgKQogaWYgODkgLSA4OTogTzAgKyBvb29PMG9vMG9PT09PICogbzBvbzBvCmRlZiBpMUlJMWlpaTFpICggY2hhbm5lbElEICkgOgogaWYgMzAgLSAzMDogb09vME8wT29vCiBPbzBvT09vID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggImFIUjBjRG92TDNWcmRIWnViM2N1Ym1WMEwyRndjRE12ZGpNdloyVjBYM1poYkdsa1gyeHBibXM9IiApCiBJaW8wbzBvID0gIi0xIgogSUlJSUkxMSA9IElpbzBvMG8gKyBjaGFubmVsSUQKIEkxaTExID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggImRXdDBkbTV2ZHkxMGIydGxiaTB0WDN4ZkxTVnpMWFZyZEhadWIzZGZkRzlyWlc1ZloyVnVaWEpoZEdsdmJpMGxjeTFmZkY4dE1USXpORFUyWDNWcmRIWnViM2RmTmpVME16SXhMVjk4WHkxMWEzUjJibTkzWDJ4cGJtdGZkRzlyWlc0PSIgKSAlICggT28wb09PbyAsIElpbzBvMG8gKQogaW1wb3J0IGhhc2hsaWIKIGlpSTFJSUlpID0gaGFzaGxpYiAuIG1kNSAoIEkxaTExICkgLiBoZXhkaWdlc3QgKCApCiBpZiA0OCAtIDQ4OiBvMG9vMG8gLyBPbyAuIGlJaWkxSTExSTFJSTEKIG9vME9Pb09vbzBPME8gPSB7ICd1c2VybmFtZScgOiBJaW8wbzBvICwgJ2NoYW5uZWxfaWQnIDogY2hhbm5lbElEICwgJ3VzZXJhZ2VudCcgOiBJSTExMUkxaTEgKCApICwgJ3ZlcnNpb24nIDogJzUuNycgfQogb28wT09vT29vME8wTyA9IHVybGxpYiAuIHVybGVuY29kZSAoIG9vME9Pb09vbzBPME8gKQogaWYgNzIgLSA3MjogaTFJSWkgLiBPb28wMG9PbzAwbwogaTFpaTExMTFpMWkgPSBbICggJ1VzZXItQWdlbnQnICwgJ1VTRVItQUdFTlQtVUtUVk5PVy1BUFAtVjInICkgLCAoICdhcHAtdG9rZW4nICwgaWlJMUlJSWkgKSBdCiBvbzBPMG8gPSBpMWlpSTExSSAoIE9vMG9PT28gLCBwb3N0ID0gb28wT09vT29vME8wTyArICcmJyAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiByZXR1cm4ganNvbiAuIGxvYWRzICggb28wTzBvICkKIGlmIDMgLSAzOiBvT28wTzBPb28gJSBJSTExMWlpaWkgLSBPMAogaWYgNTIgLSA1Mjogb29PTzAwb09vCmRlZiBJMWkxaTFpaTFpaUkxICggdXJsICwgdXNlcm5hbWUgKSA6CiBpZiA0OSAtIDQ5OiBvMDAwMG9Pb09vTzBvIC4gb09vTzBvbzBPT09vICUgT28gLiBPb08wTzAwICogSUkxMWlpSUkKIGlmIDQ0IC0gNDQ6IGlJaWkxSTExSTFJSTEgLyBPMCAqIE9vTzBPMDAgKyBvbyAuIE9vCiBpZiAyMCAtIDIwOiBpMUkxaWkxSUkxaUlJICsgT29vMDBvT28wMG8gLiBvMG9vMG8gLyBpMTFpSWlpSWlpCiBJMWkxMSA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICJkV3QwZG01dmR5MTBiMnRsYmkwdFgzeGZMU1Z6TFhWcmRIWnViM2RmZEc5clpXNWZaMlZ1WlhKaGRHbHZiaTBsY3kxZmZGOHRNVEl6TkRVMlgzVnJkSFp1YjNkZk5qVTBNekl4IiApICUgKCB1cmwgLCB1c2VybmFtZSApCiBpbXBvcnQgaGFzaGxpYgogcmV0dXJuIGhhc2hsaWIgLiBtZDUgKCBJMWkxMSApIC4gaGV4ZGlnZXN0ICggKQogaWYgNyAtIDc6IG9PbzBPME9vbyAvIG9PbzBPME9vbyAuIG8wb28wbyAqIE8wICsgb29vTzBvbzBvT09PTyArIGlpaWlJaTExaQpkZWYgT29PMDBvT08wME8wMCAoICkgOgogSTFpMTEgPSBpMWlpSTExSSAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJhSFIwY0RvdkwzcHZibUV0YkdsMlpTMTBkaTVqYjIwdmVtOHlNekl2WVhCcExuQm9jRDloY0dsZmEyVjUiICkgLCBoZWFkZXJzID0gWyAoICdVc2VyLUFnZW50JyAsICdEYWx2aWsvMS42LjAgKExpbnV4OyBVOyBBbmRyb2lkIDQuNC4yOyBTTS1HOTAwRiBCdWlsZC9LT1Q0OUgpJyApIF0gKQogcmV0dXJuIGpzb24gLiBsb2FkcyAoIEkxaTExICkgWyAiTElWRVRWIiBdIFsgMCBdIFsgImtleSIgXQogaWYgNzggLSA3ODogb29PTzAwb09vICUgSUkxMTFpaWlpCmRlZiBvMG9PMG8wTzBvME9vICggY2F0ICkgOgogSWkxaUlpMTExaTFpMSA9ICdtb25hcGFnZV8lcy5qc29uJyAlIGNhdAogSWkxaUlpMTExaTFpMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPME9PbyAsIElpMWlJaTExMWkxaTEgKQogdHJ5IDoKICBvbzBPMG8gPSBpMTExaTFpICggSWkxaUlpMTExaTFpMSAsIDYwICogNjAgKQogIGlmIG5vdCBvbzBPMG8gPT0gTm9uZSA6CiAgIHJldHVybiBvbzBPMG8KIGV4Y2VwdCA6CiAgcHJpbnQgJ2ZpbGUgZ2V0dGluZyBlcnJvcicKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICBpZiAxMCAtIDEwOiBPb09PMG9vT09vbzBPICsgb28gKyBPb29vb29vb09PIC4gb09vME8wT29vCiBpZiBjYXQgPT0gIiIgOgogIE9vMG9PT28gPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMM3B2Ym1FdGJHbDJaUzEwZGk1amIyMHZlbTh5TXpJdllYQnBMbkJvY0Q5clpYazlKWE1tWVdSdGIySmZhV1E5WTJFdFlYQndMWEIxWWkweE5qSTBNamd3TnpNeE1qRTNOekUwTHpZeU5qTXdOVFV4T0RVPScgKSAlICggT29PMDBvT08wME8wMCAoICkgKQogZWxzZSA6CiAgT28wb09PbyA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwzcHZibUV0YkdsMlpTMTBkaTVqYjIwdmVtOHlNekl2WVhCcExuQm9jRDlqWVhSZmFXUTlKWE1tYTJWNVBTVnpKbUZrYlc5aVgybGtQV05oTFdGd2NDMXdkV0l0TVRZeU5ESTRNRGN6TVRJeE56Y3hOQzgyTWpZek1EVTFNVGcxJyApICUgKCBjYXQgLCBPb08wMG9PTzAwTzAwICggKSApCiBwcmludCBPbzBvT09vCiBpMWlpMTExMWkxaSA9IFsgKCAnVXNlci1BZ2VudCcgLCAnRGFsdmlrLzIuMS4wIChMaW51eDsgVTsgQW5kcm9pZCA1LjEuMTsgU00tRzkyMEYgQnVpbGQvTE1ZNDdYKScgKSBdCiBvbzBPMG8gPSBpMWlpSTExSSAoIE9vMG9PT28gLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogb28wTzBvID0ganNvbiAuIGxvYWRzICggb28wTzBvICkKIGlmIDkzIC0gOTM6IG9vCiB0cnkgOgogIGlmIGxlbiAoIG9vME8wbyBbICJMSVZFVFYiIF0gKSA+IDAgOgogICBPT08wbzBPTzBPTyAoIG9vME8wbyAsIElpMWlJaTExMWkxaTEgKQogZXhjZXB0IDoKICBwcmludCAndWt0diBmaWxlIHNhdmluZyBlcnJvcicKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIHJldHVybiBvbzBPMG8KIGlmIDg5IC0gODk6IE9vb29vb29vT08gJSBpMTFpSWlpSWlpICsgbzBvbzBvCmRlZiBpSTFJSTFpSWlpaUkgKCApIDoKIElpMWlJaTExMWkxaTEgPSAndWt0dnBhZ2UuanNvbicKIElpMWlJaTExMWkxaTEgPSBvcyAuIHBhdGggLiBqb2luICggTzBPT28gLCBJaTFpSWkxMTFpMWkxICkKIHRyeSA6CiAgb28wTzBvID0gaTExMWkxaSAoIElpMWlJaTExMWkxaTEgLCAxMCAqIDYwICkKICBpZiBub3Qgb28wTzBvID09IE5vbmUgOgogICByZXR1cm4gb28wTzBvCiBleGNlcHQgOgogIHByaW50ICdmaWxlIGdldHRpbmcgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiBpaUlJaTExSTFpaSA9IGV2YWwgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiV3lkVFpYSm5hVzhuTENkRVlYTm9KeXduUm5KaGVtVnlKeXduV21Wa0p5d25RV3hoYmljc0owUnZiV2x1YVdNbkxDZExaVzUwSnl3blNHOTNZWEprSnl3blJYSnBZeWNzSjBwbGJpZGQiICkgKQogaW1wb3J0IHJhbmRvbQogSWlvMG8wbyA9ICItMSIKIG9vME9Pb09vbzBPME8gPSB7ICd1c2VybmFtZScgOiBJaW8wbzBvIH0KIG9vME9Pb09vbzBPME8gPSB1cmxsaWIgLiB1cmxlbmNvZGUgKCBvbzBPT29Pb28wTzBPICkKIGlmIDE0IC0gMTQ6IElJMTFpaUlJICsgT29PME8wMCAlIGkxMWlJaWlJaWkgLSBvbyAqIG9Pb08wb28wT09PbyAuIE9vCiBpZiA2MiAtIDYyOiBPb29vb29vb09PIC8gT28gKyBvT29PMG9vME9PT28gLiBPb28wMG9PbzAwbyAtIGkxSTFpaTFJSTFpSUkKIGkxaWkxMTExaTFpID0gWyAoICdVc2VyLUFnZW50JyAsICdVU0VSLUFHRU5ULVVLVFZOT1ctQVBQLVYyJyApICwgKCAnYXBwLXRva2VuJyAsIEkxaTFpMWlpMWlpSTEgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiYUhSMGNITTZMeTloY0hBdWRXdDBkbTV2ZHk1dVpYUXZkak12WjJWMFgyRnNiRjlqYUdGdWJtVnNjdz09IiApICwgSWlvMG8wbyApICkgXQogb28wTzBvID0gaTFpaUkxMUkgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiYUhSMGNEb3ZMM1ZyZEhadWIzY3VibVYwTDJGd2NETXZkak12WjJWMFgyRnNiRjlqYUdGdWJtVnNjdz09IiApICwgcG9zdCA9IG9vME9Pb09vbzBPME8gLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogb28wTzBvID0ganNvbiAuIGxvYWRzICggb28wTzBvICkKIGlmIDI5IC0gMjk6IGlpaWlJaTExaQogdHJ5IDoKICBpZiBsZW4gKCBvbzBPMG8gWyAibXNnIiBdIFsgImNoYW5uZWxzIiBdICkgPiAwIDoKICAgT09PMG8wT08wT08gKCBvbzBPMG8gLCBJaTFpSWkxMTFpMWkxICkKIGV4Y2VwdCA6CiAgcHJpbnQgJ3VrdHYgZmlsZSBzYXZpbmcgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiByZXR1cm4gb28wTzBvCiBpZiAyNiAtIDI2OiBPMCAlIElJMTFpaUlJIC0gb29vTzBvbzBvT09PTyAuIElJMTFpaUlJCiBpZiA3MCAtIDcwOiBPb28wMG9PbzAwbyArIE9vT08wb29PT29vME8gLyBpMUkxaWkxSUkxaUlJICsgT28gLyBvbwpkZWYgaWlvMG9vME9vICggKSA6CiBvTzAgPSBbIF0KIHRyeSA6CiAgb28wTzBvID0gaUkxSUkxaUlpaWlJICggKQogIGZvciBPb28wb28gaW4gb28wTzBvIFsgIm1zZyIgXSBbICJjaGFubmVscyIgXSA6CiAgIGlmIE9vbzBvbyBbICJjYXRfbmFtZSIgXSBub3QgaW4gb08wIDoKICAgIG9PMCAuIGFwcGVuZCAoIE9vbzBvbyBbICJjYXRfbmFtZSIgXSApCiAgaWYgbGVuICggb08wICkgPiAwIDoKICAgb08wID0gc29ydGVkICggb08wICwga2V5ID0gbGFtYmRhIEkxaTExIDogSTFpMTEgWyAwIF0gLiBsb3dlciAoICkgKQogZXhjZXB0IDoKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIHJldHVybiBvTzAKIGlmIDMzIC0gMzM6IE9vb29vb29vT08gLiBPMApkZWYgb29PMG8wb08wICggKSA6CiBvTzAgPSBbIF0KIHRyeSA6CiAgb28wTzBvID0gbzBvTzBvME8wbzBPbyAoICcnICkKICBmb3IgT29vMG9vIGluIG9vME8wbyBbICJMSVZFVFYiIF0gOgogICBvTzAgLiBhcHBlbmQgKCAoIE9vbzBvbyBbICJjaWQiIF0gLCBPb28wb28gWyAiY2F0ZWdvcnlfbmFtZSIgXSApICkKICBpZiBsZW4gKCBvTzAgKSA+IDAgOgogICBvTzAgPSBzb3J0ZWQgKCBvTzAgLCBrZXkgPSBsYW1iZGEgSTFpMTEgOiBJMWkxMSBbIDAgXSAuIGxvd2VyICggKSApCiBleGNlcHQgOgogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcmV0dXJuIG9PMAogaWYgNTkgLSA1OTogaUlpaTFJMTFJMUlJMQogaWYgNDUgLSA0NTogTzAKIGlmIDc4IC0gNzg6IE9vT08wb29PT29vME8gLSBpSWlpMUkxMUkxSUkxICsgbzBvbzBvIC0gb09vTzBvbzBPT09vIC0gbzBvbzBvCmRlZiBpMW8wb28wT29vb28wICggY2F0ICkgOgogb08wID0gWyBdCiB0cnkgOgogIGlmIDIxIC0gMjE6IE9vb29vb29vT08gLiBPMCAvIGkxMWlJaWlJaWkKICBvbzBPMG8gPSBvMG9PMG8wTzBvME9vICggY2F0ICkKICBmb3IgT29vMG9vIGluIG9vME8wbyBbICJMSVZFVFYiIF0gOgogICBvME9JaUlJID0gT29vMG9vIFsgImNoYW5uZWxfdGl0bGUiIF0KICAgaWYgODYgLSA4Njogb09vME8wT29vIC8gSUkxMWlpSUkKICAgaWYgNDAgLSA0MDogaUlpaTFJMTFJMUlJMSAvIE9vIC8gb28gKyBvT29PMG9vME9PT28gKiBJSTExaWlJSQogICBpZiAxIC0gMTogb29PTzAwb09vICogT28gKyBvb29PMG9vMG9PT09PIC4gaWlpaUlpMTFpIC8gT28KICAgaWYgOTEgLSA5MTogbzAwMDBvT29Pb08wbyArIE9vT08wb29PT29vME8gLSBPb08wTzAwICUgb09vME8wT29vIC4gaTFJMWlpMUlJMWlJSQogICBvMG8wTyA9IE9vbzBvbyBbICJjaGFubmVsX3VybCIgXQogICBPb29vb29PMCA9ICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNS4xLjE7IGVuLUdCOyBTTS1HOTIwRiBCdWlsZC9MTVk0N1guRzkyMEZYWFMzQ09LNSkgTVhQbGF5ZXIvMS43LjQwJwogICBpZiBvMG8wTyAuIHN0YXJ0c3dpdGggKCAndmxjOi8vJyApIDoKICAgIG8wbzBPID0gbzBvME8gLiBzcGxpdCAoICd2bGM6Ly8nICkgWyAxIF0KICAgIGlmIDUxIC0gNTE6IElJMTFpaUlJIC8gT29PTzBvb09Pb28wTwogICBvMG8wTyA9ICdkaXJlY3QzOicgKyBvMG8wTwogICBpZiA1MSAtIDUxOiBPbyAqIGlpaWlJaTExaSAtIG8wb28wbyArIGkxSTFpaTFJSTFpSUkKICAgaWYgJ3dpc2VwbGF5JyBpbiBvME9JaUlJIC4gbG93ZXIgKCApIDoKICAgIE9vb29vb08wID0gJ0xhdmYvNTcuMjUuMTAwJwogICBpZiBvMG8wTyAuIHN0YXJ0c3dpdGggKCAiZGlyZWN0MzpodHRwIiApIDoKICAgIG8wbzBPICs9ICd8VXNlci1BZ2VudD0nICsgT29vb29vTzAKICAgIGlmIDQ2IC0gNDY6IE9vbzAwb09vMDBvIC0gaTExaUlpaUlpaSAlIG9vT08wMG9PbyAvIG8wMDAwb09vT29PMG8gLSBvT28wTzBPb28KICAgSUlJSUlpaTFpaTExID0gT29vMG9vIFsgImNhdGVnb3J5X2ltYWdlIiBdCiAgIGlmIDg4IC0gODg6IGlpaWlJaTExaSAqIG9vIC8gb29PTzAwb09vIC0gSUkxMWlpSUkgLyBpMUlJaSAuIG8wb28wbwogICBpZiBub3QgSUlJSUlpaTFpaTExIC4gc3RhcnRzd2l0aCAoICJodHRwIiApIDoKICAgIElJSUlJaWkxaWkxMSA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwzcHZibUV0WVhCd0xtTnZiUzk2YjI1aExXRndjQzlwYldGblpYTXYnICkgKyBJSUlJSWlpMWlpMTEKICAgaWYgbzBPSWlJSSA9PSBOb25lIDogbzBPSWlJSSA9IG8wbzBPCiAgIGlmIGxlbiAoIFsgTzBPT29PMDBPTzBvIGZvciBPME9Pb08wME9PMG8gLCBPT29PMG9PMDBvIGluIGVudW1lcmF0ZSAoIG9PMCApIGlmIE9Pb08wb08wMG8gWyAyIF0gPT0gbzBvME8gXSApID09IDAgOgogICAgb08wIC4gYXBwZW5kICggKCBvME9JaUlJICwgJ21hbnVhbCcgLCBvMG8wTyAsIElJSUlJaWkxaWkxMSApICkKICBpZiBsZW4gKCBvTzAgKSA+IDAgOgogICBvTzAgPSBzb3J0ZWQgKCBvTzAgLCBrZXkgPSBsYW1iZGEgSTFpMTEgOiBJMWkxMSBbIDAgXSAuIGxvd2VyICggKSApCiBleGNlcHQgOgogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcmV0dXJuIG9PMAogaWYgMjYgLSAyNjogaTExaUlpaUlpaSAtIE9vCmRlZiBpMUkxaUlpaTExICggY2F0ZWdvcmllcyA9IFsgXSAsIGNoYW5uZWxzID0gWyBdICkgOgogb08wID0gWyBdCiB0cnkgOgogIGlmIDQ1IC0gNDU6IE9vICsgSUkxMTFpaWlpICUgaTFJMWlpMUlJMWlJSQogIG9vME8wbyA9IGlJMUlJMWlJaWlpSSAoICkKICBmb3IgT29vMG9vIGluIG9vME8wbyBbICJtc2ciIF0gWyAiY2hhbm5lbHMiIF0gOgogICBpZiBPb28wb28gWyAiY2F0X25hbWUiIF0gLiBzdHJpcCAoICkgLiBsb3dlciAoICkgaW4gY2F0ZWdvcmllcyBvciBPb28wb28gWyAiY2F0X25hbWUiIF0gaW4gY2F0ZWdvcmllcyBvciBPb28wb28gWyAiY2hhbm5lbF9uYW1lIiBdIC4gc3RyaXAgKCApIC4gbG93ZXIgKCApIGluIGNhdGVnb3JpZXMgOgogICAgbzBPSWlJSSA9IE9vbzBvbyBbICJjaGFubmVsX25hbWUiIF0KICAgIG8wbzBPID0gJ3VrdHZub3c6JyArIE9vbzBvbyBbICJwa19pZCIgXQogICAgSUlJSUlpaTFpaTExID0gT29vMG9vIFsgImltZyIgXSAuIHJlcGxhY2UgKCAnICcgLCAnJTIwJyApCiAgICBwcmludCBJSUlJSWlpMWlpMTEKICAgIGlmIG5vdCBJSUlJSWlpMWlpMTEgLiBzdGFydHN3aXRoICggImh0dHAiICkgOgogICAgIElJSUlJaWkxaWkxMSA9ICdodHRwczovL2FwcC51a3R2bm93Lm5ldC8nICsgSUlJSUlpaTFpaTExCiAgICBwcmludCBJSUlJSWlpMWlpMTEKICAgIGlmIG8wT0lpSUkgPT0gTm9uZSA6IG8wT0lpSUkgPSBvMG8wTwogICAgaWYgbGVuICggWyBPME9Pb08wME9PMG8gZm9yIE8wT09vTzAwT08wbyAsIE9Pb08wb08wMG8gaW4gZW51bWVyYXRlICggb08wICkgaWYgT09vTzBvTzAwbyBbIDIgXSA9PSBvMG8wTyBdICkgPT0gMCA6CiAgICAgb08wIC4gYXBwZW5kICggKCBvME9JaUlJICwgJ21hbnVhbCcgLCBvMG8wTyAsIElJSUlJaWkxaWkxMSApICkKICBpZiBsZW4gKCBvTzAgKSA+IDAgOgogICBvTzAgPSBzb3J0ZWQgKCBvTzAgLCBrZXkgPSBsYW1iZGEgSTFpMTEgOiBJMWkxMSBbIDAgXSAuIGxvd2VyICggKSApCiBleGNlcHQgOgogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcmV0dXJuIG9PMAogaWYgNTUgLSA1NTogT28gLSBpaWlpSWkxMWkgJSBvbwpkZWYgSTFJSWkgKCBjYXRlZ29yaWVzICwgZm9yU3BvcnRzID0gRmFsc2UgLCBkZXNpID0gVHJ1ZSApIDoKIG9PMCA9IFsgXQogdHJ5IDoKICBpbXBvcnQgaXB0dgogIGkxaUkgPSBPb28wb29PMDAwb28gKCApCiAgaWYgNjEgLSA2MTogT28KICBmb3IgaTExaUlJaTExIGluIGkxaUkgWyAiY2hhbm5lbHNDYXRlZ29yaWVzIiBdIDoKICAgaWYgMjIgLSAyMjogaUlpaTFJMTFJMUlJMSAvIE9vIC8gb28gLSBPb28wMG9PbzAwbwogICBpZiBpMTFpSUlpMTEgWyAiY2F0ZWdvcnlOYW1lIiBdIC4gc3RyaXAgKCApIGluIGNhdGVnb3JpZXMgb3IgaTExaUlJaTExIFsgImNhdGVnb3J5TmFtZSIgXSBpbiBjYXRlZ29yaWVzIG9yICggZm9yU3BvcnRzICkgOgogICAgZm9yIG8wb29vTyBpbiBpMTFpSUlpMTEgWyAiY2hhbm5lbHMiIF0gOgogICAgIG8wT0lpSUkgPSBvMG9vb08gWyAibmFtZSIgXQogICAgIGlmICdlYm91bmQudHYnIGluIG8wb29vTyBbICJ1cmwiIF0gOgogICAgICBpZiAyMSAtIDIxOiBpaWlpSWkxMWkgLiBpMTFpSWlpSWlpICogT29PTzBvb09Pb28wTyAuIElJMTFpaUlJIC8gSUkxMWlpSUkKICAgICAgbzBvME8gPSAnZWJvdW5kMjonICsgbzBvb29PIFsgInVybCIgXSAuIHJlcGxhY2UgKCAnOjE5MzUnICwgJycgKQogICAgIGVsc2UgOgogICAgICBvMG8wTyA9ICdwdGM6JyArIG8wb29vTyBbICJ1cmwiIF0KICAgICAgaWYgNDIgLSA0MjogT29vb29vb29PTyAvIG8wb28wbyAuIE9vbzAwb09vMDBvIC8gTzAgLSBvb29PMG9vMG9PT09PICogb29vTzBvbzBvT09PTwogICAgIElJSUlJaWkxaWkxMSA9ICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvJXMucG5nJyAlIG8wT0lpSUkgLiBsb3dlciAoICkgLiByZXBsYWNlICggJyAnICwgJycgKQogICAgIGlmIDEgLSAxOiBvMDAwMG9Pb09vTzBvICUgbzBvbzBvCiAgICAgaWYgbGVuICggWyBPME9Pb08wME9PMG8gZm9yIE8wT09vTzAwT08wbyAsIE9Pb08wb08wMG8gaW4gZW51bWVyYXRlICggb08wICkgaWYgT09vTzBvTzAwbyBbIDIgXSA9PSBvMG8wTyBhbmQgT09vTzBvTzAwbyBbIDAgXSAuIGxvd2VyICggKSA9PSBvME9JaUlJIC4gbG93ZXIgKCApICsgKCAnIHY2JyBpZiBkZXNpIGVsc2UgJycgKSBdICkgPT0gMCA6CiAgICAgIG9PMCAuIGFwcGVuZCAoICggbzBPSWlJSSArICggJyB2NicgaWYgZGVzaSBlbHNlICcnICkgLCAnbWFudWFsJyAsIG8wbzBPICwgSUlJSUlpaTFpaTExICkgKQogIGlmIGxlbiAoIG9PMCApID4gMCA6CiAgIG9PMCA9IHNvcnRlZCAoIG9PMCAsIGtleSA9IGxhbWJkYSBJMWkxMSA6IEkxaTExIFsgMCBdIC4gbG93ZXIgKCApICkKIGV4Y2VwdCA6CiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgaWYgOTcgLSA5Nzogb09vME8wT29vCiByZXR1cm4gb08wCiBpZiAxMyAtIDEzOiBvT28wTzBPb28gJSBJSTExaWlJSSAuIE8wIC8gT29PME8wMCAlIE9vTzBPMDAKIGlmIDE5IC0gMTk6IG8wb28wbyAlIE9vIC0gT28gJSBvbyAuIElJMTFpaUlJIC0gT29vb29vb29PTwpkZWYgT09PMG9PICggZ2VuICwgZGVzaSA9IFRydWUgKSA6CiBpZiA4MiAtIDgyOiBpaWlpSWkxMWkgLyBvMDAwMG9Pb09vTzBvCiBvTzAgPSBbIF0KIHRyeSA6CiAgaW1wb3J0IGlwdHYKICBvb08wTzBPT29vT29PICwgT08wMDBvME9PID0gaTExSUlpMSAoICkKICBpMWlJID0gaXB0diAuIGdldEFsbENoYW5uZWxzICggb29PME8wT09vb09vTyAsIE9PMDAwbzBPTyAsIE5vbmUgLCBPME9PbyApCiAgZm9yIGkxMWlJSWkxMSBpbiBpMWlJIFsgImNoYW5uZWxzIiBdIDoKICAgbzBvb29PID0gaTFpSSBbICJjaGFubmVscyIgXSBbIGkxMWlJSWkxMSBdCiAgIGlmIDMyIC0gMzI6IElJMTExaWlpaSAlIG9vb08wb28wb09PT08KICAgaWYgbzBvb29PIFsgImdlbnJlX3RpdGxlIiBdIC4gbG93ZXIgKCApID09IGdlbiBvciAoIGdlbiA9PSAnc3BvcnRzJyBhbmQgbzBvb29PIFsgIm5hbWUiIF0gWyA6IDMgXSBpbiBbICdORkwnICwgJ05ITCcgLCAnTkJBJyAsICdCT1gnIF0gKSA6CiAgICBvME9JaUlJID0gbzBvb29PIFsgIm5hbWUiIF0KICAgIG8wbzBPID0ganNvbiAuIGR1bXBzICggbzBvb29PICkKICAgIElJSUlJaWkxaWkxMSA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwzQnZjblJoYkM1cGNIUjJjSEpwZG1GMFpYTmxjblpsY2k1MGRpOXpkR0ZzYTJWeVgzQnZjblJoYkM5dGFYTmpMMnh2WjI5ekx6TXlNQzg9JyApICsgbzBvb29PIFsgImxvZ28iIF0KICAgIG9PMCAuIGFwcGVuZCAoICggbzBPSWlJSSArICggJyB2NScgaWYgZGVzaSBlbHNlICcnICkgLCAnbWFudWFsMycgLCBvMG8wTyAsIElJSUlJaWkxaWkxMSApICkKIGV4Y2VwdCA6CiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiByZXR1cm4gb08wCiBpZiA2IC0gNjogaUlpaTFJMTFJMUlJMSAqIElJMTExaWlpaQpkZWYgT09PMG8wT08wT08gKCBkYXRhICwgZm5hbWUgKSA6CiBpZiBPMDBvIDogcmV0dXJuCiBpSWlJaWkgPSB0aW1lICggKQogaWkxMTFJMUlpaUkxaSA9IGpzb24gLiBsb2FkcyAoICd7ImNhY2hlIjpbeyJ0aW1lIjolc31dfScgJSBzdHIgKCBpSWlJaWkgKSApCiBpaTExMUkxSWlpSTFpIFsgImNhY2hlIiBdIFsgMCBdIFsgImRhdGEiIF0gPSBkYXRhCiB3aXRoIG9wZW4gKCBmbmFtZSAsICd3JyApIGFzIElpMUkgOgogIGpzb24gLiBkdW1wICggaWkxMTFJMUlpaUkxaSAsIElpMUkgKQogcHJpbnQgJ2ZpbGUgc2F2ZWQnICwgZm5hbWUKIGlmIDU1IC0gNTU6IE9vbzAwb09vMDBvICUgSUkxMWlpSUkgLSBvT29PMG9vME9PT28gLyBvb29PMG9vMG9PT09PIC8gaTExaUlpaUlpaSAlIG8wb28wbwpkZWYgaTExMWkxaSAoIGZuYW1lICwgdGltZW91dCA9IDAgKSA6CiBpZiBPMDBvIDogcmV0dXJuIE5vbmUKIHdpdGggb3BlbiAoIGZuYW1lICkgYXMgSWlpMUlpSUlpSUkxIDoKICBPME9PID0ganNvbiAuIGxvYWRzICggSWlpMUlpSUlpSUkxIC4gcmVhZCAoICkgKQogaUkxSWlpMWkxID0gMAogT29PbzAwb09vbzBvTyA9IGZsb2F0ICggTzBPTyBbICJjYWNoZSIgXSBbIDAgXSBbICJ0aW1lIiBdICkgOwogaUlpSWlpID0gdGltZSAoICkKIGlmIDM1IC0gMzU6IG8wb28wbyAtIGkxSUlpIC8gb29vTzBvbzBvT09PTwogaWYgKCBpSWlJaWkgLSBPb09vMDBvT29vMG9PICkgPiB0aW1lb3V0IDoKICByZXR1cm4gTm9uZQogZWxzZSA6CiAgcHJpbnQgJ3JldHVybmluZyBkYXRhJwogIHJldHVybiBPME9PIFsgImNhY2hlIiBdIFsgMCBdIFsgImRhdGEiIF0KICBpZiAxMyAtIDEzOiBvT28wTzBPb28gLSBvb09PMDBvT28gKiBPb29vb29vb09PCiAgaWYgMjYgLSAyNjogT29vb29vb29PTwogIGlmIDY1IC0gNjU6IElJMTFpaUlJCiAgaWYgMTQgLSAxNDogT28KZGVmIElpSWkxSTExICggY2N0eXBlICwgZWJvdW5kTWF0Y2hlcyA9IFsgXSAsIHByb2dyZXNzID0gTm9uZSApIDoKIGlmIDc1IC0gNzU6IGlJaWkxSTExSTFJSTEgJSBPbyAvIElJMTFpaUlJIC0gaTFJMWlpMUlJMWlJSSAlIGkxMWlJaWlJaWkKIGkxMW9PME9vTyA9IG9vTzAwb09vbyAuIGdldFNldHRpbmcgKCAiaXN2M09mZiIgKQogaWYgMjEgLSAyMTogb29vTzBvbzBvT09PTyAqIG9PbzBPME9vbyAtIG8wb28wbwogaWkxMTFJaSA9IG9vTzAwb09vbyAuIGdldFNldHRpbmcgKCAiaXN2NU9mZiIgKQogaWkxMTFJaSA9ICJ0cnVlIgogaWkxSTEgPSBvb08wMG9Pb28gLiBnZXRTZXR0aW5nICggImlzdjZPZmYiICkKIGlpaTExID0gb29PMDBvT29vIC4gZ2V0U2V0dGluZyAoICJpc3Y3T2ZmIiApCiBpaWkxMSA9ICJ0cnVlIgogb09vME9PMCA9IG9vTzAwb09vbyAuIGdldFNldHRpbmcgKCAiaXN2OE9mZiIgKQogT29PaUlpSWkxaTFpaTExID0gb29PMDBvT29vIC4gZ2V0U2V0dGluZyAoICJpc3Y5T2ZmIiApCiBpZiBPb09pSWlJaTFpMWlpMTEgPT0gIiIgOiBPb09pSWlJaTFpMWlpMTEgPSAidHJ1ZSIKIE8wTzBvMG8wT09vb28gPSBvb08wMG9Pb28gLiBnZXRTZXR0aW5nICggImlzZGl0dG9PZmYiICkKIEkxSUkxT09PMG8wID0gb29PMDBvT29vIC4gZ2V0U2V0dGluZyAoICJpc0NGT2ZmIiApCiBJSUlJMWkxaSA9IG9vTzAwb09vbyAuIGdldFNldHRpbmcgKCAiaXNJcEJveGZmIiApCiBJSUlJMWkxaSA9ICJ0cnVlIgogbzBvMDBPID0gb29PMDBvT29vIC4gZ2V0U2V0dGluZyAoICJpc1lQT2ZmIiApCiBvMG8wME8gPSAidHJ1ZSIKIElpaTEgPSBvb08wMG9Pb28gLiBnZXRTZXR0aW5nICggImlzVUtUVk9mZiIgKQogaWYgNDEgLSA0MTogb29vTzBvbzBvT09PTyAtIE8wICogaWlpaUlpMTFpICogSUkxMTFpaWlpIC4gT29PTzBvb09Pb28wTyAtIG8wb28wbwogaWkxMTFJMWlJaUlpMTExSSA9IG9vTzAwb09vbyAuIGdldFNldHRpbmcgKCAiaXNaZW5nYU9mZiIgKQogaWYgMTcgLSAxNzogb09vTzBvbzBPT09vICogT29vb29vb29PTyAlIGkxSUlpICUgT29vb29vb29PTyAuIGkxSTFpaTFJSTFpSUkKIGlJbzBPMDAwTzAwbyA9IG9vTzAwb09vbyAuIGdldFNldHRpbmcgKCAiaXNGYXN0T2ZmIiApCiBpaW9vbyA9IG9vTzAwb09vbyAuIGdldFNldHRpbmcgKCAiaXNOZXR3b3JrVFZPZmYiICkKIGlpMTExSTFJMUkgPSBvb08wMG9Pb28gLiBnZXRTZXR0aW5nICggImlzU2xvd1RWT2ZmIiApCiBpZiAzNCAtIDM0OiBvT29PMG9vME9PT28gJSBpMUlJaSAtIG9vT08wMG9PbwogSWlJMTExaSA9ICcoPHNlY3Rpb25fbmFtZT5QYWtpc3Rhbmk8XC9zZWN0aW9uX25hbWU+Lio/PFwvc2VjdGlvbj4pJwogaWYgMzAgLSAzMDogTzAgKyBvMDAwMG9Pb09vTzBvIC0gTzAgLiBPb28wMG9PbzAwbyAlIG9vb08wb28wb09PT08KIG8wMG9vMDBvbyA9ICdhSFIwY0RvdkwyWmxjbkpoY21sc1lpNXFaVzEwZGk1amIyMHZhVzVrWlhndWNHaHdMekpmTWk5bmVHMXNMMk5vWVc1dVpXeGZiR2x6ZEM4eCcKIE9PSWlJID0gJzxpdGVtPi4qPzxjaGFubmVsX2lkPiguKj8pPC9jaGFubmVsX2lkPi4qPzxuYW1lPiguKj8pPC4qPzxsaW5rPiguKj8pPC4qP2NoYW5uZWxfbG9nbz4oLio/KTwnCiBPT0lpSSA9ICc8Y2hhbm5lbD48Y2hhbm5lbF9udW1iZXI+KC4qPyk8L2NoYW5uZWxfbnVtYmVyPi4qPzxjaGFubmVsX25hbWU+KC4qPyk8Lio/PGNoYW5uZWxfdXJsPiguKj8pPCguKScKIG8wbzAwb28gPSBGYWxzZQogaWYgY2N0eXBlID09IDIgOgogIElpSTExMWkgPSAnKDxzZWN0aW9uX25hbWU+SGluZGk8XC9zZWN0aW9uX25hbWU+Lio/PFwvc2VjdGlvbj4pJwogIGlmIDQ1IC0gNDU6IE8wIC0gb09vME8wT29vICUgSUkxMWlpSUkKICBPT0lpSSA9ICc8Y2hhbm5lbD48Y2hhbm5lbF9udW1iZXI+KC4qPyk8L2NoYW5uZWxfbnVtYmVyPi4qPzxjaGFubmVsX25hbWU+KC4qPyk8Lio/PGNoYW5uZWxfdXJsPiguKj8pPCguKScKICBvMG8wMG9vID0gRmFsc2UKIGlmIGNjdHlwZSA9PSAzIDoKICBJaUkxMTFpID0gJyg8c2VjdGlvbl9uYW1lPlB1bmphYmk8XC9zZWN0aW9uX25hbWU+Lio/PFwvc2VjdGlvbj4pJwogIGlmIDEwMCAtIDEwMDogaTExaUlpaUlpaSAuIElJMTFpaUlJIC4gaTExaUlpaUlpaQogIE9PSWlJID0gJzxjaGFubmVsPjxjaGFubmVsX251bWJlcj4oLio/KTwvY2hhbm5lbF9udW1iZXI+Lio/PGNoYW5uZWxfbmFtZT4oLio/KTwuKj88Y2hhbm5lbF91cmw+KC4qPyk8KC4pJwogIG8wbzAwb28gPSBGYWxzZQogIGlmIDgxIC0gODE6IG9vCiAgaWYgNzYgLSA3NjogTzAgLSBPbyAvIG8wMDAwb09vT29PMG8gLiBPb08wTzAwIC0gbzAwMDBvT29Pb08wbwogSUkxSWlpSWkxaSA9ICc8aXRlbT48bmFtZT4oLio/KTwuKj88bGluaz4oLio/KTwuKj9hbGJ1bWFydD4oLio/KTwnCiBJMTExMUkxaUlJMTEgPSBbIF0KIGlmIDEgPT0gMiA6CiAgaWYgY2N0eXBlID09IDEgOgogICBPbzBvT09vID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggImFIUjBjRG92TDJwd2VHMXNMbXBoWkc5dmRIWXVZMjl0TDNaMWVHMXNMbkJvY0M5cVlXUnZiM2h0YkM5cGRHVnRjeTh4TXpFMEx5VmtMdz09IiApCiAgZWxzZSA6CiAgIE9vMG9PT28gPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiYUhSMGNEb3ZMMnB3ZUcxc0xtcGhaRzl2ZEhZdVkyOXRMM1oxZUcxc0xuQm9jQzlxWVdSdmIzaHRiQzlwZEdWdGN5OHhNekUxTHlWa0x3PT0iICkKICAgaWYgNzUgLSA3NTogT28gJSBJSTExaWlJSSAvIE9vbzAwb09vMDBvICUgSUkxMTFpaWlpCiAgaWkxSWlJMWkgPSAwCiAgdHJ5IDoKICAgd2hpbGUgVHJ1ZSA6CiAgICBvb09vT29Pb28gPSBPbzBvT09vICUgaWkxSWlJMWkKICAgIGlpMUlpSTFpICs9IDI0CiAgICBPbzBPb08wMG9PTzBvID0gdXJsbGliMiAuIFJlcXVlc3QgKCBvb09vT29Pb28gKQogICAgT28wT29PMDBvT08wbyAuIGFkZF9oZWFkZXIgKCAnVXNlci1BZ2VudCcgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnVm1WeWFYTnRieTFDYkdGamExVkonICkgKQogICAgT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICkKICAgIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiAgICBPT08wME8gLiBjbG9zZSAoICkKICAgIGlJSUlJSSA9ICc8dG90YWxpdGVtcz4oLio/KTwnCiAgICBpaWlJSSA9IGludCAoIHJlIC4gZmluZGFsbCAoIGlJSUlJSSAsIE9Pb09PMG9vMG9vTyApIFsgMCBdICkKICAgIGlmIDgzIC0gODM6IGkxMWlJaWlJaWkgKyBpaWlpSWkxMWkgJSBpMUlJaSAuIG9vb08wb28wb09PT08gKyBvT29PMG9vME9PT28KICAgIGlmIDYyIC0gNjI6IGlpaWlJaTExaSAuIG8wb28wbyAtIE9vb29vb29vT08gKiBJSTExMWlpaWkgLiBpMTFpSWlpSWlpCiAgICBpaUlJaUlpMWkxSTEgPSByZSAuIGZpbmRhbGwgKCBJSTFJaWlJaTFpICwgT09vT08wb28wb29PICkKICAgIGZvciBvME9JaUlJICwgbzBvME8gLCBvb29vTzBvT29PT29PIGluIGlpSUlpSWkxaTFJMSA6CiAgICAgSTExMTFJMWlJSTExIC4gYXBwZW5kICggKCBvME9JaUlJICwgJ3BsdXMnICwgbzBvME8gLCBvb29vTzBvT29PT29PICkgKQogICAgIGlmIDUyIC0gNTI6IE9vbzAwb09vMDBvICUgSUkxMTFpaWlpIC4gT29vb29vb29PTwogICAgaWYgaWkxSWlJMWkgPiBpaWlJSSA6CiAgICAgYnJlYWsKICBleGNlcHQgOiBwYXNzCiAgaWYgNyAtIDc6IElJMTExaWlpaSAtIG9Pb08wb28wT09PbyAvIE9vT08wb29PT29vME8gJSBPb29vb29vb09PICsgaTFJSWkKICBpZiA0MiAtIDQyOiBPb09PMG9vT09vbzBPICsgaTFJSWkgLSBvMDAwMG9Pb09vTzBvIC8gb29vTzBvbzBvT09PTyAuIGkxSTFpaTFJSTFpSUkKIGlmIDEgPT0gMiBhbmQgbzBvMDBvbyA6CiAgdHJ5IDoKICAgaWYgMzAgLSAzMDogT29PME8wMCArIG8wMDAwb09vT29PMG8gJSBpMTFpSWlpSWlpICogaTFJSWkgKyBvbyAlIElJMTFpaUlJCiAgIE9vMG9PT28gPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCBvMDBvbzAwb28gKQogICBPbzBPb08wMG9PTzBvID0gdXJsbGliMiAuIFJlcXVlc3QgKCBPbzBvT09vICkKICAgT28wT29PMDBvT08wbyAuIGFkZF9oZWFkZXIgKCAnVXNlci1BZ2VudCcgLCAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzQ2LjAuMjQ5MC44NiBTYWZhcmkvNTM3LjM2JyApCiAgIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1ByYWdtYScgLCAnbm8tY2FjaGUnICkKICAgT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICkKICAgT09vT08wb28wb29PID0gT09PMDBPIC4gcmVhZCAoICkKICAgT09PMDBPIC4gY2xvc2UgKCApCiAgIGlmIDMwIC0gMzA6IGkxMWlJaWlJaWkgKiBPb08wTzAwIC4gSUkxMTFpaWlpICsgb09vTzBvbzBPT09vIC8gT29vMDBvT28wMG8gJSBvMG9vMG8KICAgaWYgNzggLSA3ODogb09vTzBvbzBPT09vICsgT29vb29vb29PTyAtIG9vICogb09vME8wT29vICogaTFJMWlpMUlJMWlJSQogICBpZiAnPHNlY3Rpb25fbmFtZT4nIGluIE9Pb09PMG9vMG9vTyA6CiAgICBPT29PTzBvbzBvb08gPSByZSAuIGZpbmRhbGwgKCBJaUkxMTFpICwgT09vT08wb28wb29PICkgWyAwIF0KICAgIGlmIDcgLSA3OiBJSTExaWlJSSAuIG9vb08wb28wb09PT08gLiBvMG9vMG8gLyBvMDAwMG9Pb09vTzBvIC8gT29PME8wMAogICBvME9vbyA9IHJlIC4gZmluZGFsbCAoIE9PSWlJICwgT09vT08wb28wb29PICkKICAgaWYgMTEgLSAxMTogb09vTzBvbzBPT09vCiAgIGlmIDUzIC0gNTM6IE9vbzAwb09vMDBvICUgT29vb29vb29PTyAtIGlpaWlJaTExaSAtIGkxSUlpIC8gb29PTzAwb09vCiAgIGZvciBJMTFJMUlJaWlJSTEgLCBvME9JaUlJICwgSWlpaUlpaUkgLCBvMG8wTyBpbiBvME9vbyA6CiAgICBJaWlpSWlpSSA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwzTjBZV2RwYm1jdWFtVnRkSFl1WTI5dEwzRmhMbkJvY0M4eVh6UXZaM2h0YkM5d2JHRjVMeVZ6JyApICUgSWlpaUlpaUkgLiBzcGxpdCAoICcvcGxheS8nICkgWyAxIF0KICAgIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggbzBPSWlJSSArICcgdjQnICwgSWlpaUlpaUkgLCBJaWlpSWlpSSAsICcnICkgKQogICAgaWYgMzMgLSAzMzogb29vTzBvbzBvT09PTyAqIE9vT08wb29PT29vME8KICAgIGlmIDk2IC0gOTY6IE9vbzAwb09vMDBvIC0gb28gJSBvT28wTzBPb28gKyBvb09PMDBvT28gLSBvb29PMG9vMG9PT09PIC0gb29vTzBvbzBvT09PTwogIGV4Y2VwdCA6IHBhc3MKICBpZiAyIC0gMjogT28gJSBpMTFpSWlpSWlpCiBpZiAxID09IDIgOgogIHRyeSA6CiAgIElJMUlpaUlpMWkgPSAnPGNoYW5uZWw+PGNoYW5uZWxfbnVtYmVyPi4qPzxjaGFubmVsX25hbWU+KC4rP1tePF0pPC9jaGFubmVsX25hbWU+PGNoYW5uZWxfdHlwZT4oLis/KTwvY2hhbm5lbF90eXBlPi4qP1tePCJdPGNoYW5uZWxfdXJsPiguKz9bXjxdKTwvY2hhbm5lbF91cmw+Lio/PC9jaGFubmVsPicKICAgSUkxSWlpSWkxaSA9ICc8aXRlbT4uKj88aWQ+KC4qPyk8L2lkPi4qPzxuYW1lPiguKj8pPC4qPzxsaW5rPiguKj8pPC4qP2NoYW5uZWxfbG9nbz4oLio/KTwnCiAgIElpSTExMWkgPSAnKDxpdGVtcz4uKj9QYWtpc3RhbmkuKj88XC9pdGVtcz4pJwogICBPbzBvT09vID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggImFIUjBjRG92TDJabGNuSmhjbWxzWWk1cVpXMTBkaTVqYjIwdmFXNWtaWGd1Y0dod0wzaHRiQzkwYVdWeU1pOHlMekV2VlZNdmMzTT0iICkKICAgT28wT29PMDBvT08wbyA9IHVybGxpYjIgLiBSZXF1ZXN0ICggT28wb09PbyApCiAgIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1ZtVnlhWE50YnkxQ2JHRmphMVZKJyApICkKICAgT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICkKICAgT09vT08wb28wb29PID0gT09PMDBPIC4gcmVhZCAoICkKICAgT09PMDBPIC4gY2xvc2UgKCApCiAgIGlmIDExIC0gMTE6IGlJaWkxSTExSTFJSTEgLiBvMG9vMG8gLSBPb08wTzAwIC8gT29PTzBvb09Pb28wTyArIElJMTExaWlpaQogICBvME9vbyA9IHJlIC4gZmluZGFsbCAoIElpSTExMWkgLCBPT29PTzBvbzBvb08gKSBbIDAgXQogICBwcmludCAnbWF0Y2hfdGVtcCcgLCBvME9vbwogICBvME9vbyA9IHJlIC4gZmluZGFsbCAoIElJMUlpaUlpMWkgLCBvME9vbyApCiAgIGZvciBpZCAsIG8wT0lpSUkgLCBvMG8wTyAsIEkxSUlJMWkgaW4gbzBPb28gOgogICAgSTExMTFJMWlJSTExIC4gYXBwZW5kICggKCBvME9JaUlJICwgJycgLCBvMG8wTyAsIEkxSUlJMWkgKSApCiAgICBpZiA2IC0gNjogaUlpaTFJMTFJMUlJMSAuIE9vbzAwb09vMDBvCiAgIEkxMTExSTFpSUkxMSArPSByZSAuIGZpbmRhbGwgKCBJSTFJaWlJaTFpICwgbzBPb28gKQogIGV4Y2VwdCA6IHBhc3MKICBpZiA3OCAtIDc4OiBpMUlJaSAtIE9vTzBPMDAKIGlmIDEgPT0gMSA6CiAgaWYgY2N0eXBlID09IDEgOgogICBpZiAxID09IDIgOgogICAgSTExMTFJMWlJSTExIC4gYXBwZW5kICggKCAnQXJ5IGRpZ2l0YWwnICwgJ21hbnVhbCcgLCAnY2lkOjQ3NScgLCAnJyApICkKICAgIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggJ0FyeSBkaWdpdGFsJyAsICdtYW51YWwnICwgJ2NpZDo5ODEnICwgJycgKSApCiAgICBJMTExMUkxaUlJMTEgLiBhcHBlbmQgKCAoICdBcnkgZGlnaXRhbCBFdXJvcGUnICwgJ21hbnVhbCcgLCAnY2lkOjU4NycgLCAnJyApICkKICAgIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggJ0FyeSBkaWdpdGFsIFdvcmxkJyAsICdtYW51YWwnICwgJ2NpZDo1ODknICwgJycgKSApCiAgICBJMTExMUkxaUlJMTEgLiBhcHBlbmQgKCAoICdBcnkgTmV3cycgLCAnbWFudWFsJyAsICdjaWQ6NDc0JyAsICcnICkgKQogICAgSTExMTFJMWlJSTExIC4gYXBwZW5kICggKCAnQXJ5IE5ld3MgV29ybGQnICwgJ21hbnVhbCcgLCAnY2lkOjU5MScgLCAnJyApICkKICAgIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggJ0V4cHJlc3MgTmV3cycgLCAnbWFudWFsJyAsICdjaWQ6Mjc1JyAsICcnICkgKQogICAgSTExMTFJMWlJSTExIC4gYXBwZW5kICggKCAnRXhwcmVzcyBOZXdzJyAsICdtYW51YWwnICwgJ2NpZDo3ODgnICwgJycgKSApCiAgICBJMTExMUkxaUlJMTEgLiBhcHBlbmQgKCAoICdFeHByZXNzIEVudGVydGFpbm1lbnQnICwgJ21hbnVhbCcgLCAnY2lkOjI2MCcgLCAnJyApICkKICAgIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggJ0V4cHJlc3MgRW50ZXJ0YWlubWVudCcgLCAnbWFudWFsJyAsICdjaWQ6NzkzJyAsICcnICkgKQogICAgaWYgNDggLSA0ODogbzAwMDBvT29Pb08wbyAtIE9vb29vb29vT08gKyBvMG9vMG8gJSBPb28wMG9PbzAwbyAtIG9PbzBPME9vbyAuIG9vCiAgIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggJ0VUViBVcmR1JyAsICdtYW51YWwnICwgJ2V0dicgLCAnJyApICkKICAgSTExMTFJMWlJSTExIC4gYXBwZW5kICggKCAnQXJ5IFppbmRhZ2kgKHdlYnNpdGUpJyAsICdtYW51YWwnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDJ4cGRtVXVZWEo1ZW1sdVpHRm5hUzUwZGk4PScgKSAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwzZDNkeTVoY25sNmFXNWtZV2RwTG5SMkwzZHdMV052Ym5SbGJuUXZkWEJzYjJGa2N5OHlNREUwTHpFd0wwWnBibUZzTFd4dloyOHRNaTVuYVdZPScgKSApICkKICAgSTExMTFJMWlJSTExIC4gYXBwZW5kICggKCAnQXJ5IE5ld3MgKHdlYnNpdGUpJyAsICdtYW51YWwnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDJ4cGRtVXVZWEo1Ym1WM2N5NTBkaTg9JyApICwgJ2h0dHA6Ly9hcnluZXdzLnR2L2VuL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE2LzEwL2FyeW5ld3NmYi0xLmpwZycgKSApCiAgIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggJ0FyeSBNdXNpYyAod2Vic2l0ZSknICwgJ21hbnVhbCcgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMMnhwZG1VdVlYSjViWFZ6YVdzdWRIWXYnICkgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMMkZ5ZVcxMWMybHJMblIyTDNkd0xXTnZiblJsYm5RdmRYQnNiMkZrY3k4eU1ERTBMekE0TDJGeWVXMTFjMmxyTFd4dloyOHhMbkJ1Wnc9PScgKSApICkKICAgSTExMTFJMWlJSTExIC4gYXBwZW5kICggKCAnQXJ5IERpZ2l0YWwgKHdlYnNpdGUpJyAsICdtYW51YWwnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDJ4cGRtVXVZWEo1WkdsbmFYUmhiQzUwZGk4PScgKSAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwzZDNkeTVoY25sa2FXZHBkR0ZzTG5SMkwzZHdMV052Ym5SbGJuUXZkWEJzYjJGa2N5OHlNREUwTHpFeUwyUnBaMmwwWVd3dGJHOW5ieTVuYVdZPScgKSApICkKICAgSTExMTFJMWlJSTExIC4gYXBwZW5kICggKCAnUVRWICh3ZWJzaXRlKScgLCAnbWFudWFsJyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyeHBkbVV1WVhKNWNYUjJMblIyTHc9PScgKSAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyRnllWEYwZGk1MGRpOTNjQzFqYjI1MFpXNTBMM1Z3Ykc5aFpITXZNakF4TkM4eE1pOWhjbmt0Y1hSMkxURXRZMjl3ZVM1cWNHYz0nICkgKSApCiAgIGlmIDQyIC0gNDI6IG8wb28wbwogICBJMTExMUkxaUlJMTEgLiBhcHBlbmQgKCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdSSFZ1ZVdFZ0tIZGxZbk5wZEdVcCcgKSAsICdtYW51YWwnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDJsdGIySXVaSFZ1ZVdGdVpYZHpMblIyT2pFNU16VXZiR2wyWlM5emJXbHNPbk4wY21WaGJTNXpiV2xzTDNCc1lYbHNhWE4wTG0wemRUZz0nICkgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2R1bnlhbmV3cy5wbmcnICkgKQogICBJMTExMUkxaUlJMTEgLiBhcHBlbmQgKCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdUbVYzY3lCdmJtVWdLSGRsWW5OcGRHVXAnICkgLCAnbWFudWFsJyAsICdkaXJlY3Q6JyArIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyTmtiaTVsWW05MWJtUXVkSFl2ZEhZdmJtVjNjMjl1WlM5d2JHRjViR2x6ZEM1dE0zVTQnICkgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL25ld3NvbmUucG5nJyApICkKICAgaWYgNzAgLSA3MDogT29vMDBvT28wMG8gLyBPb09PMG9vT09vbzBPICsgaWlpaUlpMTFpICUgb28gJSBPb08wTzAwICsgb29PTzAwb09vCiAgIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1YyRnpaV1ZpSUNoM1pXSnphWFJsS1E9PScgKSAsICdtYW51YWwnICwgJ2RpcmVjdDonICsgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDJOa2JpNWxZbTkxYm1RdWRIWXZkSFl2ZDJGelpXSXZjR3hoZVd4cGMzUXViVE4xT0E9PScgKSAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3Mvd2FzZWIucG5nJyApICkKICAgaWYgODAgLSA4MDogSUkxMWlpSUkKICAgaWYgMTIgLSAxMjogbzAwMDBvT29Pb08wbwogICBpZiAyIC0gMjogT29vb29vb29PTwogICBpZiAxMDAgLSAxMDA6IE9vTzBPMDAgLyBPMCAqIGkxMWlJaWlJaWkgKiBPb29vb29vb09PCiAgIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1EyRndhWFJoYkNBb2QyVmljMmwwWlNrPScgKSAsICdtYW51YWwnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1pXSnZkVzVrT21OaGNHbDBZV3gwZGc9PScgKSAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvY2FwaXRhbG5ld3MucG5nJyApICkKICAgSTExMTFJMWlJSTExIC4gYXBwZW5kICggKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnUkdGM2JpQnVaWGR6SUNoM1pXSnphWFJsS1E9PScgKSAsICdtYW51YWwnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1pXSnZkVzVrT21SaGQyND0nICkgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2R1bnlhbmV3cy5wbmcnICkgKQogICBJMTExMUkxaUlJMTEgLiBhcHBlbmQgKCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdRbTlzSUhZeScgKSAsICdtYW51YWwnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2NIWXlPa0p2YkNCT1pYZHonICkgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2JvbC5wbmcnICkgKQogICBJMTExMUkxaUlJMTEgLiBhcHBlbmQgKCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdSMlZ2SUU1bGQzTWdkakk9JyApICwgJ21hbnVhbCcgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnY0hZeU9rZGxieUJPWlhkeicgKSAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvZ2VvbmV3cy5wbmcnICkgKQogICBJMTExMUkxaUlJMTEgLiBhcHBlbmQgKCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdSMlZ2SUVWdWRHVnlkR0ZwYm0xbGJuUWdkakk9JyApICwgJ21hbnVhbCcgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnY0hZeU9rZGxieUJGYm5SbGNuUmhhVzV0Wlc1MCcgKSAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvZ2VvZW50ZXJ0YWlubWVudC5wbmcnICkgKQogICBpZiA0NiAtIDQ2OiBPMCAlIE9vb29vb29vT08KICAgSTExMTFJMWlJSTExIC4gYXBwZW5kICggKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnUjJWdklFdGhhR0Z1YVNCMk1nPT0nICkgLCAnbWFudWFsJyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdjSFl5T2tkbGJ5QnJZV2hoYm1rPScgKSAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvZ2Vva2FoYW5pLnBuZycgKSApCiAgIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1IyVnZJRlJsZWlCMk1nPT0nICkgLCAnbWFudWFsJyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdjSFl5T2tkbGJ5QjBaWHA2JyApICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9nZW90ZXoucG5nJyApICkKICAgSTExMTFJMWlJSTExIC4gYXBwZW5kICggKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnUzFST0lIWXknICkgLCAnbWFudWFsJyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdjSFl5T2t0VVRnPT0nICkgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2t0bi5wbmcnICkgKQogICBJMTExMUkxaUlJMTEgLiBhcHBlbmQgKCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdTMVJPSUU1RlYxTWdkakk9JyApICwgJ21hbnVhbCcgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnY0hZeU9rdFVUaUJPUlZkVCcgKSAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3Mva3RubmV3cy5wbmcnICkgKQogICBpZiAyMiAtIDIyOiBpMUkxaWkxSUkxaUlJICsgT29vb29vb29PTyAtIG9PbzBPME9vbyAtIG9vT08wMG9PbyAqIG8wb28wbyAtIGlpaWlJaTExaQogICBJMTExMUkxaUlJMTEgLiBhcHBlbmQgKCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdTMVJPSUVWdWRDNGdLSGRsWW5OcGRHVXAnICkgLCAnbWFudWFsJyAsICdkaXJlY3Q6JyArICJydG1wOi8vMTAzLjI0Ljk2Ljc0L2t0bi8gcGxheXBhdGg9a3RuIHN3ZlVybD1odHRwOi8va3RudHYudHYvd3AtY29udGVudC9wbGF5ZXIvandwbGF5ZXIuZmxhc2guc3dmIHBhZ2VVcmw9aHR0cDovL3d3dy5rdG50di50di8gbGl2ZT0xIiAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3Mva3RuLnBuZycgKSApCiAgIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1MxUk9JRTVGVjFNZ0tIZGxZbk5wZEdVcCcgKSAsICdtYW51YWwnICwgJ2RpcmVjdDonICsgInJ0bXA6Ly8xMDMuMjQuOTYuNzQva3RuLyBwbGF5cGF0aD1rdG5uZXdzIHN3ZlVybD1odHRwOi8va3RudHYudHYvd3AtY29udGVudC9wbGF5ZXIvandwbGF5ZXIuZmxhc2guc3dmIHBhZ2VVcmw9aHR0cDovL3d3dy5rdG5uZXdzLnR2LyBsaXZlPTEiICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9rdG5uZXdzLnBuZycgKSApCiAgIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggJ01ha2thaCAoeW91dHViZSknICwgJ21hbnVhbCcgLCAnZGlyZWN0OnBsdWdpbjovL3BsdWdpbi52aWRlby55b3V0dWJlLz9hY3Rpb249cGxheV92aWRlbyZ2aWRlb2lkPSVzJyAlICcwYjFJTVIySF83cycgLCAnbWFra2FoLnBuZycgKSApCiAgIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggJ01ha2thaCAoeW91dHViZSknICwgJ21hbnVhbCcgLCAnZGlyZWN0OnBsdWdpbjovL3BsdWdpbi52aWRlby55b3V0dWJlLz9hY3Rpb249cGxheV92aWRlbyZ2aWRlb2lkPSVzJyAlICd3ZlFjeTd2cDU1UScgLCAnbWFra2FoLnBuZycgKSApCiAgIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggJ01ha2thaCAoeW91dHViZSknICwgJ21hbnVhbCcgLCAnZGlyZWN0OnBsdWdpbjovL3BsdWdpbi52aWRlby55b3V0dWJlLz9hY3Rpb249cGxheV92aWRlbyZ2aWRlb2lkPSVzJyAlICdOeHplYl81TGp0VScgLCAnbWFra2FoLnBuZycgKSApCiAgIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggJ01hZGluYSAoeW91dHViZSknICwgJ21hbnVhbCcgLCAnZGlyZWN0OnBsdWdpbjovL3BsdWdpbi52aWRlby55b3V0dWJlLz9hY3Rpb249cGxheV92aWRlbyZ2aWRlb2lkPSVzJyAlICctV1lJODMyY3g1UScgLCAnbWFkaW5hLnBuZycgKSApCiAgIGlmIDk5IC0gOTk6IE9vIC8gb28gLiBvMDAwMG9Pb09vTzBvIC0gbzAwMDBvT29Pb08wbyAqIG9vCiAgIGlmIDI0IC0gMjQ6IE9vT08wb29PT29vME8gKiBvb09PMDBvT28gLSBpaWlpSWkxMWkgLyBpSWlpMUkxMUkxSUkxIC0gT29PME8wMCAuIElJMTFpaUlJCiAgIGlmIDIgLSAyOiBPbyAtIE8wIC0gb09vTzBvbzBPT09vIC8gT29PTzBvb09Pb28wTyAqIG9PbzBPME9vbwogIGVsaWYgY2N0eXBlID09IDIgOgogICBwcmludCAnbm8nCiAgIGlmIDI2IC0gMjY6IG9Pb08wb28wT09PbyArIG8wb28wbyAtIGlpaWlJaTExaSArIG9vb08wb28wb09PT08gJSBJSTExaWlJSQogICBpZiA4NCAtIDg0OiBPb09PMG9vT09vbzBPICUgbzAwMDBvT29Pb08wbyAlIE8wICogT29vMDBvT28wMG8KICAgaWYgMTUgLSAxNTogaWlpaUlpMTFpIC0gaUlpaTFJMTFJMUlJMSAtIElJMTExaWlpaSAtIG9vb08wb28wb09PT08gJSBvT29PMG9vME9PT28KICAgaWYgODAgLSA4MDogb29vTzBvbzBvT09PTyAqIGkxSTFpaTFJSTFpSUkgLiBpMUlJaSAlIG8wMDAwb09vT29PMG8gJSBvT29PMG9vME9PT28gKyBPbwogICBpZiA2IC0gNjogb09vTzBvbzBPT09vIC4gaWlpaUlpMTFpIC4gb29PTzAwb09vICsgb29vTzBvbzBvT09PTwogICBpZiA2NSAtIDY1OiBvT29PMG9vME9PT28gLyBPbwogICBpZiAyMyAtIDIzOiBJSTExaWlJSSAvIElJMTFpaUlJICogT29vMDBvT28wMG8gKiBJSTExaWlJSQogICBpZiA1NyAtIDU3OiBpMUkxaWkxSUkxaUlJCiAgIGlmIDI5IC0gMjk6IG9vCiAgIGlmIDQxIC0gNDE6IG8wb28wbyAqIG9vT08wMG9PbyAtIGkxSTFpaTFJSTFpSUkgLiBvMDAwMG9Pb09vTzBvCiAgIGlmIDQxIC0gNDE6IGlJaWkxSTExSTFJSTEgLSBPMCAtIG9Pb08wb28wT09PbyAtIGlpaWlJaTExaSArIG8wb28wbwogSWkxMTExaUkxaTEgPSBOb25lCiBvTzBvMDBvMG8wT08wTzAgPSBOb25lCiBJaWlpSTEgPSBOb25lCiBvT29Pb09vMG9Pb09vID0gTm9uZQogb28wb29vID0gTm9uZQogaWkxSWkgPSBOb25lCiBJSUlJaTExMTExID0gTm9uZQogT28wbzAwbzBvT29vMCA9IE5vbmUKIEkxSUkgPSBOb25lCiBvMDAwID0gWyBdCiBpaUkxMWkgPSBbIF0KIElJaUkxSWlJMWlJaTEgPSBOb25lCiBpSWlpSTExSUkxMSA9IE5vbmUKIG8wbzBPMDBPID0gTm9uZQogb08wb08wT29PMDAgPSBOb25lCiBPbzBvb28wMG8wTzAgPSBOb25lCiBpZiBjY3R5cGUgPT0gMSA6CiAgSWkxMTExaUkxaTEgPSAncGFraXN0YW4nCiAgb08wbzAwbzBvME9PME8wID0gInBha2lzdGFuaSIKICBJaWlpSTEgPSBbICdOZXdzJyAsICdFbnRlcnRhaW5tZW50JyAsICdJc2xhbWljJyAsICdDb29raW5nJyBdCiAgb09vT29PbzBvT29PbyA9IFsgJ05ld3MnICwgJ0lzbGFtaWMnICwgJ0Nvb2tpbmcnIF0KICBvbzBvb28gPSBbICdOZXdzJyAsICdSZWxpZ2lvdXMnICwgJ0Nvb2tpbmcnICwgJ1BBSyZJTkQnIF0KICBpaTFJaSA9IFsgJ05ld3MnICwgJ1JlbGlnaW91cycgLCAnQ29va2luZycgLCAnQXNpYW4gTmV3cycgLCAnRW50ZXJ0YWlubWVudCcgLCAnUGFrJmluZCcgXQogIE9vMG8wMG8wb09vbzAgPSAiMzIiCiAgSUkxSTFpSTFpMUlpSSA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICJhSFIwY0RvdkwzZDNkeTU1ZFhCd2RIWXVZMjl0TDNWeVpIVXRkSFl1YUhSdGJBPT0iICkKICBvMDAwICwgaWlJMTFpID0gWyAncmVsaWdpb3VzJyAsICduZXdzJyAsICdmb29kJyBdICwgWyAnbWFzYWxhIHR2JyAsICdhcnkgZGlnaXRhbCcgLCAnYXJ5IHppbmRhZ2knICwgJ2h1bSB0dicgLCAnZHJhbWEnICwgJ2V4cHJlc3MgZW50LicgXQogIG8wbzBPMDBPID0gWyAnUEFLSVNUQU5JIFRWJyAsICdJU0xBTUlDIFRWJyBdCiAgb08wb08wT29PMDAgPSBbICJQYWtpc3RhbmkiIF0KICBPbzBvb28wMG8wTzAgPSBbICJQYWtpc3RhbmkiIF0KICBJSWlpID0gIlBLOiIKIGVsaWYgY2N0eXBlID09IDIgOgogIElpMTExMWlJMWkxID0gJ2luZGlhbicKICBvTzBvMDBvMG8wT08wTzAgPSAiaW5kaWFuIgogIElpaWlJMSA9IFsgJ0luZGlhbicgXQogIElJSUlpMTExMTEgPSAiaW5kIgogIE9vMG8wMG8wb09vbzAgPSAiMzMiCiAgSTFJSSA9IDEKICBJSTFJMWlJMWkxSWlJID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggImFIUjBjRG92TDNkM2R5NTVkWEJ3ZEhZdVkyOXRMMmhwYm1ScExYUjJMbWgwYld3PSIgKQogIG8wMDAgLCBpaUkxMWkgPSBbICdtb3ZpZXMnIF0gLCBbICd6ZWUgdHYnICwgJ2NvbG9ycycgLCAnc29ueSB0diBoZCcgLCAnc3RhciBwbHVzIGhkJyAsICd6ZWUgdHYnIF0KICBJSWlJMUlpSTFpSWkxID0gWyAnc29ueSBzYWInICwgJ3ppbmcnIF0KICBpSWlpSTExSUkxMSA9ICdjaCcKICBvMG8wTzAwTyA9IFsgJ0lORElBTiBUVicgLCAnU09VVEggSU5ESUFOJyBdCiAgb08wb08wT29PMDAgPSBbICJJbmRpYW4iIF0KICBPbzBvb28wMG8wTzAgPSBbICJIaW5kaSIgXQogIElJaWkgPSAiSU46IgogZWxzZSA6CiAgSWkxMTExaUkxaTEgPSAncHVuamFiaScKICBPbzBvMDBvMG9Pb28wID0gIjEzMTQiCiAgbzBvME8wME8gPSBbICdQVU5KQUJJJyBdCiAgSUkxSTFpSTFpMUlpSSA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICJhSFIwY0RvdkwzZDNkeTU1ZFhCd2RIWXVZMjl0TDNCMWJtcGhZbWt0ZEhZdWFIUnRiQT09IiApCiAgT28wb29vMDBvME8wID0gWyAiUHVuamFiaSBMaXZlIiBdCiAgSUlpaSA9ICJQQjoiCiAgaWYgMTAwIC0gMTAwOiBpMTFpSWlpSWlpIC0gT28gKyBJSTExaWlJSSAqIE9vb29vb29vT08gKyBPMAogaWYgaTExb08wT29PID09ICd0cnVlJyA6IElpMTExMWlJMWkxID0gTm9uZQogaWYgaWkxMTFJaSA9PSAndHJ1ZScgOiBvTzBvMDBvMG8wT08wTzAgPSBOb25lCiBpZiBpaTFJMSA9PSAndHJ1ZScgOiBJaWlpSTEgPSBOb25lCiBpZiBpaWkxMSA9PSAndHJ1ZScgOiBvT29Pb09vMG9Pb09vID0gTm9uZQogaWYgb09vME9PMCA9PSAndHJ1ZScgOiBvbzBvb28gPSBOb25lCiBpZiBPb09pSWlJaTFpMWlpMTEgPT0gJ3RydWUnIDogaWkxSWkgPSBOb25lCiBpZiBpSW8wTzAwME8wMG8gPT0gJ3RydWUnIDogbzBvME8wME8gPSBOb25lCiBpZiBpaW9vbyA9PSAndHJ1ZScgOiBvTzBvTzBPb08wMCA9IE5vbmUKIGlmIGlpMTExSTFJMUkgPT0gJ3RydWUnIDogT28wb29vMDBvME8wID0gTm9uZQogaWYgNjYgLSA2Njogb09vTzBvbzBPT09vIC4gT29PME8wMCAvIG9Pb08wb28wT09PbyArIG9Pb08wb28wT09PbyAuIElJMTExaWlpaSAlIG9vT08wMG9PbwogaWYgNjEgLSA2MTogaTExaUlpaUlpaSAtIE9vb29vb29vT08KIGlmIDkwIC0gOTA6IG9vCiBpZiBPME8wbzBvME9Pb29vID09ICd0cnVlJyA6IElJSUlpMTExMTEgPSBOb25lCiBpZiBJMUlJMU9PTzBvMCA9PSAndHJ1ZScgOiBPbzBvMDBvMG9Pb28wID0gTm9uZQogaWYgSUlJSTFpMWkgPT0gJ3RydWUnIDogSTFJSSA9IE5vbmUKIGlmIG8wbzAwTyA9PSAndHJ1ZScgOiBJSTFJMWlJMWkxSWlJID0gTm9uZQogaWYgSWlpMSA9PSAndHJ1ZScgOgogIG8wMDAgPSBbIF0KICBpaUkxMWkgPSBbIF0KIGlmIGlpMTExSTFpSWlJaTExMUkgPT0gJ3RydWUnIDoKICBpSWlpSTExSUkxMSA9IE5vbmUKICBpZiA0IC0gNDogSUkxMWlpSUkgJSBPbyAtIElJMTFpaUlJIC0gT29vMDBvT28wMG8KICBpZiAzMCAtIDMwOiBvb29PMG9vMG9PT09PCiBpZiBJaTExMTFpSTFpMSA6CiAgdHJ5IDoKICAgaWYgMzQgLSAzNDogaWlpaUlpMTFpIC0gSUkxMTFpaWlpIC0gT29vMDBvT28wMG8gKyBpMUkxaWkxSUkxaUlJICsgbzBvbzBvCiAgIHByb2dyZXNzIC4gdXBkYXRlICggMjAgLCAiIiAsICJMb2FkaW5nIHYzIiAsICIiICkKICAgaTFpSSA9IGlpb28wbzBPb09PTyAoICkKICAgb29PMG9PMDBPMG8gPSBldHJlZSAuIGZyb21zdHJpbmcgKCBpMWlJICkKICAgb08wID0gWyBdCiAgIGZvciBpMTFpSUlpMTEgaW4gb29PMG9PMDBPMG8gLiBmaW5kYWxsICggJ2l0ZW1zJyApIDoKICAgIGlmIDcwIC0gNzA6IE9vb29vb29vT08gKyBvb09PMDBvT28gKiBPb08wTzAwCiAgICBpZiBJaTExMTFpSTFpMSA9PSBpMTFpSUlpMTEgLiBmaW5kdGV4dCAoICdwcm9ncmFtQ2F0ZWdvcnknICkgLiBsb3dlciAoICkgOgogICAgIGlmIDIwIC0gMjA6IGkxMWlJaWlJaWkgLSBJSTExMWlpaWkgLSBPbyAlIGlpaWlJaTExaSAuIE9vCiAgICAgbzBPSWlJSSA9IGkxMWlJSWkxMSAuIGZpbmR0ZXh0ICggJ3Byb2dyYW1UaXRsZScgKQogICAgIGlmIDUwIC0gNTA6IGlJaWkxSTExSTFJSTEgKyBvMG9vMG8gLSBPb09PMG9vT09vbzBPIC0gT29vb29vb29PTwogICAgIGlmIG8wT0lpSUkgLiBsb3dlciAoICkgLiBzdGFydHN3aXRoICggJ2hpZ2ggYWxlcnQnICkgOiBjb250aW51ZQogICAgIGlmIDg0IC0gODQ6IG9PbzBPME9vbyAtIE9vT08wb29PT29vME8KICAgICBJMTFJMUlJaWlJSTEgPSBpMTFpSUlpMTEgLiBmaW5kdGV4dCAoICdwcm9ncmFtSUQnICkKICAgICBJSUlJSWlpMWlpMTEgPSBpMTFpSUlpMTEgLiBmaW5kdGV4dCAoICdwcm9ncmFtSW1hZ2UnICkgKyAnfFVzZXItQWdlbnQ9UGFrJTIwVFYvMS40IENGTmV0d29yay84MDguMi4xNiBEYXJ3aW4vMTYuMy4wJwogICAgIGlmIDgwIC0gODA6IGkxMWlJaWlJaWkgJSBJSTExaWlJSSAtIE9vTzBPMDAgJSBJSTExaWlJSQogICAgIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggbzBPSWlJSSArICcgdjMnICwgJ21hbnVhbDInICwgSTExSTFJSWlpSUkxICwgSUlJSUlpaTFpaTExICkgKQogICAgIGlmIDg5IC0gODk6IG8wMDAwb09vT29PMG8gKiBPb09PMG9vT09vbzBPICsgb09vME8wT29vIC8gaTExaUlpaUlpaQogIGV4Y2VwdCA6CiAgIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogICBpZiA2OCAtIDY4OiBPb29vb29vb09PICogT29PTzBvb09Pb28wTwogaWYgSWlpaUkxIDoKICB0cnkgOgogICBwcm9ncmVzcyAuIHVwZGF0ZSAoIDYwICwgIiIgLCAiTG9hZGluZyB2NiBDaGFubmVscyIgLCAiIiApCiAgIG9PT09JaWkxMTExMTEgPSBJMUlJaSAoIElpaWlJMSApCiAgIGlmIGxlbiAoIG9PT09JaWkxMTExMTEgKSA+IDAgOgogICAgSTExMTFJMWlJSTExICs9IG9PT09JaWkxMTExMTEKICBleGNlcHQgOgogICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICAgaWYgMjMgLSAyMzogbzBvbzBvIC0gaUlpaTFJMTFJMUlJMSAtIElJMTExaWlpaSArIG8wb28wbyAlIG8wMDAwb09vT29PMG8gLyBPb09PMG9vT09vbzBPCiBpZiBvT29Pb09vMG9Pb09vIDoKICB0cnkgOgogICBwcm9ncmVzcyAuIHVwZGF0ZSAoIDcwICwgIiIgLCAiTG9hZGluZyB2NyBDaGFubmVscyIgLCAiIiApCiAgIG9PT09JaWkxMTExMTEgPSBJMTFJSUlpSWkxMSAoIG9Pb09vT28wb09vT28gKQogICBpZiBsZW4gKCBvT09PSWlpMTExMTExICkgPiAwIDoKICAgIEkxMTExSTFpSUkxMSArPSBvT09PSWlpMTExMTExCiAgZXhjZXB0IDoKICAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgIGlmIDk0IC0gOTQ6IE9vTzBPMDAgKiBPbwogaWYgb28wb29vIDoKICB0cnkgOgogICBwcm9ncmVzcyAuIHVwZGF0ZSAoIDgwICwgIiIgLCAiTG9hZGluZyB2OCBDaGFubmVscyIgLCAiIiApCiAgIG9PT09JaWkxMTExMTEgPSBvME8wME9vb29vTyAoIG9vMG9vbyApCiAgIGlmIGxlbiAoIG9PT09JaWkxMTExMTEgKSA+IDAgOgogICAgSTExMTFJMWlJSTExICs9IG9PT09JaWkxMTExMTEKICBleGNlcHQgOgogICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICAgaWYgMTggLSAxODogSUkxMWlpSUkgLyBpaWlpSWkxMWkgKyBpSWlpMUkxMUkxSUkxICUgbzBvbzBvICogT29PTzBvb09Pb28wTyAuIE9vTzBPMDAKIGlmIGlpMUlpIDoKICB0cnkgOgogICBwcm9ncmVzcyAuIHVwZGF0ZSAoIDgwICwgIiIgLCAiTG9hZGluZyB2OSBDaGFubmVscyIgLCAiIiApCiAgIG9PT09JaWkxMTExMTEgPSBPbzBvTzAwICggaWkxSWkgKQogICBpZiBsZW4gKCBvT09PSWlpMTExMTExICkgPiAwIDoKICAgIEkxMTExSTFpSUkxMSArPSBvT09PSWlpMTExMTExCiAgZXhjZXB0IDoKICAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgIGlmIDMgLSAzOiBPbyAtIG9Pb08wb28wT09PbyAqIG9vIC4gb09vME8wT29vCiBpZiBJSUlJaTExMTExIDoKICB0cnkgOgogICBpZiA2OSAtIDY5OiBPb29vb29vb09PIC8gaUlpaTFJMTFJMUlJMSAtIE9vbzAwb09vMDBvICUgbzBvbzBvIC0gaUlpaTFJMTFJMUlJMQogICBwcm9ncmVzcyAuIHVwZGF0ZSAoIDg1ICwgIiIgLCAiTG9hZGluZyBkaXR0byBDaGFubmVscyIgLCAiIiApCiAgIG9PT09JaWkxMTExMTEgPSBpaWkxMUlpICggSUlJSWkxMTExMSApCiAgIGlmIGxlbiAoIG9PT09JaWkxMTExMTEgKSA+IDAgOgogICAgSTExMTFJMWlJSTExICs9IG9PT09JaWkxMTExMTEKICBleGNlcHQgOgogICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIGlmIE9vMG8wMG8wb09vbzAgOgogIHRyeSA6CiAgIGlmIDQ5IC0gNDk6IE9vbzAwb09vMDBvIC4gb09vTzBvbzBPT09vICUgSUkxMTFpaWlpCiAgIHByb2dyZXNzIC4gdXBkYXRlICggODIgLCAiIiAsICJMb2FkaW5nIENGIENoYW5uZWxzIiAsICIiICkKICAgb09PT0lpaTExMTExMSA9IG8wME9PMDBPT28wICggT28wbzAwbzBvT29vMCApCiAgIGlmIGxlbiAoIG9PT09JaWkxMTExMTEgKSA+IDAgOgogICAgSTExMTFJMWlJSTExICs9IG9PT09JaWkxMTExMTEKICBleGNlcHQgOgogICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIGlmIGxlbiAoIG8wMDAgKSA+IDAgb3IgbGVuICggaWlJMTFpICkgPiAwIDoKICB0cnkgOgogICBpZiA0IC0gNDogb28gLyBvT28wTzBPb28gLyBvbyAvIE9vT08wb29PT29vME8gLiBvb29PMG9vMG9PT09PICsgaTFJMWlpMUlJMWlJSQogICBwcm9ncmVzcyAuIHVwZGF0ZSAoIDgyICwgIiIgLCAiTG9hZGluZyB1a3R2IENoYW5uZWxzIiAsICIiICkKICAgb09PT0lpaTExMTExMSA9IGkxSTFpSWlpMTEgKCBvMDAwICwgaWlJMTFpICkKICAgaWYgbGVuICggb09PT0lpaTExMTExMSApID4gMCA6CiAgICBJMTExMUkxaUlJMTEgKz0gb09PT0lpaTExMTExMQogIGV4Y2VwdCA6CiAgIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogaWYgSUkxSTFpSTFpMUlpSSA6CiAgdHJ5IDoKICAgaWYgNDggLSA0ODogaTFJSWkgLSBvb29PMG9vMG9PT09PICsgT28gLiBpMUkxaWkxSUkxaUlJIC8gaWlpaUlpMTFpICUgaUlpaTFJMTFJMUlJMQogICBwcm9ncmVzcyAuIHVwZGF0ZSAoIDg3ICwgIiIgLCAiTG9hZGluZyBZUCBDaGFubmVscyIgLCAiIiApCiAgIGlmIDk2IC0gOTY6IE9vTzBPMDAgLiBpaWlpSWkxMWkgKyBpSWlpMUkxMUkxSUkxICogb09vME8wT29vIC0gTzAKICAgb09PT0lpaTExMTExMSA9IG9vT09PMDAwTyAoIElJMUkxaUkxaTFJaUkgLCBwcm9ncmVzcyApCiAgIHByb2dyZXNzIC4gdXBkYXRlICggODcgLCAiIiAsICJMb2FkaW5nIFlQIENoYW5uZWxzIGxvYWRlZCIgLCAiIiApCiAgIGlmIGxlbiAoIG9PT09JaWkxMTExMTEgKSA+IDAgOgogICAgSTExMTFJMWlJSTExICs9IG9PT09JaWkxMTExMTEKICBleGNlcHQgOgogICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICAgaWYgNzQgLSA3NDogb09vME8wT29vCiBpZiBpSWlpSTExSUkxMSA6CiAgdHJ5IDoKICAgaWYgMjggLSAyODogaTFJMWlpMUlJMWlJSQogICBwcm9ncmVzcyAuIHVwZGF0ZSAoIDkwICwgIiIgLCAiTG9hZGluZyBaZW5nYSBDaGFubmVscyIgLCAiIiApCiAgIGlmIDUzIC0gNTM6IE9vb29vb29vT08gKyBvbyAuIGkxSTFpaTFJSTFpSUkgJSBPMCArIG8wMDAwb09vT29PMG8gLyBPb28wMG9PbzAwbwogICBvT09PSWlpMTExMTExID0gT29paUkxICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDNwbGJtZGhkSFpuWlhSaGNHa3RaVzUyTG1Wc1lYTjBhV05pWldGdWMzUmhiR3N1WTI5dEwyZGxkSFJ5Wlc1a2MySjVZMjl1ZEdWdWRIUjVjR1UvWTI5dWRHVnVkSFI1Y0dVOU5tWm1ORE0zT0dFdE1EZGtaQzB4TVdVeUxUZzFOV0l0TnpBM01XSmpZMk00TldGakptTnZkVzUwY25samIyUmxQVWxPSm1aeWIyMDlNQ1pwY3pFNGNHeDFjejB3Sm5Cc1lYUm1iM0p0UFdKbVl6WTROV1l4TFROa016UXRORE5tT1MxaE9EbGlMVGt6TURVeFl6STRPR0pqWlNaemFYcGxQVEl3TUNaemRHRjBaVDB5WW1WaU16Sm1aUzB6TTJSaUxUUTNZV0l0WWpKbE55MWtNbVJsT1RWbVpXTTROVEk9JyApICwgcHJvZ3Jlc3MgKQogICBwcm9ncmVzcyAuIHVwZGF0ZSAoIDkyICwgIiIgLCAiTG9hZGluZyBaZW5nYSBDaGFubmVscyBsb2FkZWQiICwgIiIgKQogICBpZiBsZW4gKCBvT09PSWlpMTExMTExICkgPiAwIDoKICAgIEkxMTExSTFpSUkxMSArPSBvT09PSWlpMTExMTExCiAgZXhjZXB0IDoKICAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgIGlmIDgwIC0gODA6IElJMTExaWlpaSArIG9PbzBPME9vbyAvIG9vCiAgIGlmIDM0IC0gMzQ6IE9vbzAwb09vMDBvICUgb09vTzBvbzBPT09vICsgbzAwMDBvT29Pb08wbyAqIE9vT08wb29PT29vME8gLyBpaWlpSWkxMWkKIGlmIEkxSUkgOgogIHRyeSA6CiAgIGlmIDE4IC0gMTg6IE9vCiAgIHByb2dyZXNzIC4gdXBkYXRlICggOTAgLCAiIiAsICJMb2FkaW5nIElwQm94IENoYW5uZWxzIiAsICIiICkKICAgZm9yIElJMWlpMSAsIE9vMG9PT28gaW4gSWlpMUkgKCBUcnVlICkgOgogICAgb09PT0lpaTExMTExMSA9IGlJaTFpMWlJaTFJaTEgKCBbIE9vMG9PT28gXSApCiAgICBpZiBsZW4gKCBvT09PSWlpMTExMTExICkgPiAwIDoKICAgICBJMTExMUkxaUlJMTEgKz0gb09PT0lpaTExMTExMQogIGV4Y2VwdCA6CiAgIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogICBpZiA5MiAtIDkyOiBvb09PMDBvT28gJSBpSWlpMUkxMUkxSUkxIC8gb29vTzBvbzBvT09PTyAqIGkxSTFpaTFJSTFpSUkgLiBpMUlJaSArIGlpaWlJaTExaQogaWYgbzBvME8wME8gOgogIHRyeSA6CiAgIGlmIDI0IC0gMjQ6IG9vb08wb28wb09PT08gLiBpMUkxaWkxSUkxaUlJICogb29vTzBvbzBvT09PTyAlIGkxMWlJaWlJaWkgLiBpMTFpSWlpSWlpICsgaTFJSWkKICAgcHJvZ3Jlc3MgLiB1cGRhdGUgKCA4MCAsICIiICwgIkxvYWRpbmcgRmFzdCBDaGFubmVscyIgLCAiIiApCiAgIGZvciBPb28wIGluIG8wbzBPMDBPIDoKICAgIG9PT09JaWkxMTExMTEgPSBJSUkgKCBjYXQgPSAnJyAsIGNhdG5hbWUgPSBPb28wICkKICAgIGlmIGxlbiAoIG9PT09JaWkxMTExMTEgKSA+IDAgOgogICAgIEkxMTExSTFpSUkxMSArPSBvT09PSWlpMTExMTExCiAgZXhjZXB0IDoKICAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgIGlmIDUzIC0gNTM6IE9vIC0gb09vME8wT29vICsgb29vTzBvbzBvT09PTwogaWYgb08wb08wT29PMDAgOgogIHRyeSA6CiAgIHByb2dyZXNzIC4gdXBkYXRlICggODMgLCAiIiAsICJMb2FkaW5nIE5ldHdvcmsgVFYgQ2hhbm5lbHMiICwgIiIgKQogICBvT09PSWlpMTExMTExID0gSWlpaWkxSWlpMUkgKCBjYXQgPSBOb25lICwgc3BvcnRzID0gRmFsc2UgLCBjb3VudHJ5ID0gb08wb08wT29PMDAgKQogICBpZiBsZW4gKCBvT09PSWlpMTExMTExICkgPiAwIDoKICAgIEkxMTExSTFpSUkxMSArPSBvT09PSWlpMTExMTExCiAgZXhjZXB0IDoKICAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiBwcmludCAnc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nsb3cnICwgT28wb29vMDBvME8wCiBpZiBPbzBvb28wMG8wTzAgOgogIHRyeSA6CiAgIHByb2dyZXNzIC4gdXBkYXRlICggODcgLCAiIiAsICJMb2FkaW5nIFNsb3dUViBDaGFubmVscyIgLCAiIiApCiAgIHByaW50ICdzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc2xvc3Nzc3Nzc3Nzc3Nzc3N3JyAsIE9vMG9vbzAwbzBPMAogICBvT09PSWlpMTExMTExID0gT08wMDAgKCBjYXQgPSBbIGlpMTExaUkxaTEgKCBPbzBvb28wMG8wTzAgWyAwIF0gLCBmaW5kaW4gPSBUcnVlICkgXSAsIHNwb3J0cyA9IEZhbHNlICwgcmVtb3ZlcHJlZml4ID0gSUlpaSApCiAgIHByaW50ICdyZW1hdGNoJyAsIG9PT09JaWkxMTExMTEKICAgaWYgMTAwIC0gMTAwOiBpaWlpSWkxMWkgKyBvb09PMDBvT28KICAgaWYgbGVuICggb09PT0lpaTExMTExMSApID4gMCA6CiAgICBJMTExMUkxaUlJMTEgKz0gb09PT0lpaTExMTExMQogIGV4Y2VwdCA6CiAgIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogICBpZiA5NSAtIDk1OiBpMTFpSWlpSWlpIC4gT29vMDBvT28wMG8gKyBPb29vb29vb09PICUgT29PME8wMAogICBpZiAyMSAtIDIxOiBpMUkxaWkxSUkxaUlJIC0gT29vMDBvT28wMG8gLyBPb09PMG9vT09vbzBPICUgTzAgLyBpSWlpMUkxMUkxSUkxIC8gaTFJMWlpMUlJMWlJSQogICBpZiAxIC0gMTogT29PME8wMCAuIGkxMWlJaWlJaWkKICAgaWYgOSAtIDk6IE9vb29vb29vT08gLyBPb09PMG9vT09vbzBPCiBpZiBJSWlJMUlpSTFpSWkxIDoKICB0cnkgOgogICBpZiA0NyAtIDQ3OiBPb29vb29vb09PCiAgIHByb2dyZXNzIC4gdXBkYXRlICggOTUgLCAiIiAsICJMb2FkaW5nIFRWUGxheWVyIENoYW5uZWxzIiAsICIiICkKICAgaWYgNDggLSA0ODogb09vME8wT29vIC4gb29vTzBvbzBvT09PTyAlIG9vICsgT29PTzBvb09Pb28wTwogICBmb3IgaWlJMTFJMWlpSWlJSTFJIGluIE9PT2lJMSAoIElJaUkxSWlJMWlJaTEgKSA6CiAgICBJMTExMUkxaUlJMTEgLiBhcHBlbmQgKCAoIGlpSTExSTFpaUlpSUkxSSBbIDAgXSArICcgVUsgT25seScgLCAnbWFudWFsJyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoIGlpSTExSTFpaUlpSUkxSSBbIDEgXSApICwgaWlJMTFJMWlpSWlJSTFJIFsgMyBdICkgKQogIGV4Y2VwdCA6CiAgIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogICBpZiAzNyAtIDM3OiBPb08wTzAwICsgbzBvbzBvICogaWlpaUlpMTFpIC8gT29vMDBvT28wMG8KICAgaWYgNzggLSA3ODogb29vTzBvbzBvT09PTyArIE9vT08wb29PT29vME8gLSBPb28wMG9PbzAwbyArIG9vT08wMG9PbyAvIGlJaWkxSTExSTFJSTEKICAgaWYgNDcgLSA0NzogSUkxMWlpSUkKIGlmIGxlbiAoIGVib3VuZE1hdGNoZXMgKSA+IDAgOgogIEkxMTExSTFpSUkxMSArPSBlYm91bmRNYXRjaGVzCiB0cnkgOgogIEkxMTExSTFpSUkxMSA9IHNvcnRlZCAoIEkxMTExSTFpSUkxMSAsIGtleSA9IGxhbWJkYSBJMWkxMSA6IEkxaTExIFsgMCBdIC4gbG93ZXIgKCApICkKIGV4Y2VwdCA6IHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogZm9yIG8wT0lpSUkgLCBJaWlpSWlpSSAsIG8wbzBPICwgb29vb08wb09vT09vTyBpbiBJMTExMUkxaUlJMTEgOgogIHRyeSA6CiAgIGlmIDIwIC0gMjA6IG8wb28wbyAlIE9vIC0gbzBvbzBvICogT29vb29vb29PTyAvIG9Pb08wb28wT09PbwogICBpZiA1NyAtIDU3OiBvb29PMG9vMG9PT09PICUgT29PTzBvb09Pb28wTyAqIElJMTFpaUlJICUgb09vTzBvbzBPT09vCiAgIGlmIGkxMW9PME9vTyBhbmQgbzBvME8gLiBzdGFydHN3aXRoICggJ3B2MjonICkgOgogICAgY29udGludWUKICAgbzBPSWlJSSA9IG8wT0lpSUkgLiBlbmNvZGUgKCAnYXNjaWknICwgJ2lnbm9yZScgKSAuIGRlY29kZSAoICdhc2NpaScgKQogICBpZiBJaWlpSWlpSSAuIHN0YXJ0c3dpdGggKCAnZWJtb2RlOicgKSA6CiAgICBJaWlpSWlpSSA9IElpaWlJaWlJIC4gc3BsaXQgKCAnOicgKSBbIDEgXQogICAgTzAwME9PMCAoIEkxMUlJaUlpSSAoIG8wT0lpSUkgLiBjYXBpdGFsaXplICggKSAsICdFQicgKSAsIG8wbzBPICwgSWlpaUlpaUkgLCBvb29vTzBvT29PT29PICwgRmFsc2UgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKICAgZWxzZSA6CiAgICBpZiA2NSAtIDY1OiBpMUlJaSAtIE9vb29vb29vT08KICAgIGlmIElpaWlJaWlJID09ICdtYW51YWwyJyA6CiAgICAgaTFpID0gMzcKICAgIGVsaWYgSWlpaUlpaUkgPT0gJ21hbnVhbDMnIDoKICAgICBpMWkgPSA0NQogICAgZWxzZSA6CiAgICAgaTFpID0gMTEKICAgIGkxSWlpSTFJMUlJaTExaTEgPSAnZ3JlZW4nCiAgICBpZiBvME9JaUlJIC4gZW5kc3dpdGggKCAndjMnICkgOgogICAgIGkxSWlpSTFJMUlJaTExaTEgPSAnZ3JlZW4nCiAgICBlbGlmIG8wT0lpSUkgLiBsb3dlciAoICkgLiBlbmRzd2l0aCAoICdpcGJveCcgKSA6CiAgICAgaTFJaWlJMUkxSUlpMTFpMSA9ICdmZmNjMDBjYycKICAgIGVsaWYgbzBPSWlJSSAuIGVuZHN3aXRoICggJ3Y2JyApIDoKICAgICBpMUlpaUkxSTFJSWkxMWkxID0gJ3JlZCcKICAgIGVsaWYgbzBPSWlJSSAuIGVuZHN3aXRoICggJ3Y3JyApIDoKICAgICBpMUlpaUkxSTFJSWkxMWkxID0gJ29yYW5nZScKICAgIGVsaWYgbzBPSWlJSSAuIGVuZHN3aXRoICggJ3Y4JyApIDoKICAgICBpMUlpaUkxSTFJSWkxMWkxID0gJ3B1cnBsZScKICAgIGVsaWYgbzBPSWlJSSAuIGxvd2VyICggKSAuIGVuZHN3aXRoICggJyBkaXR0bycgKSA6CiAgICAgaTFJaWlJMUkxSUlpMTFpMSA9ICdmZmZjMDBjYycKICAgIGVsaWYgbzBPSWlJSSAuIGxvd2VyICggKSAuIGVuZHN3aXRoICggJyBjZicgKSA6CiAgICAgaTFJaWlJMUkxSUlpMTFpMSA9ICdibHVlJwogICAgZWxpZiBvME9JaUlJIC4gbG93ZXIgKCApIC4gZW5kc3dpdGggKCAnIHlwJyApIDoKICAgICBpMUlpaUkxSTFJSWkxMWkxID0gJ2ZmZGMwMGNjJwogICAgZWxpZiBvME9JaUlJIC4gbG93ZXIgKCApIC4gZW5kc3dpdGggKCAnIHVrdHYnICkgOgogICAgIGkxSWlpSTFJMUlJaTExaTEgPSAnZmZkYzExMTEnCiAgICBlbGlmIG8wT0lpSUkgLiBsb3dlciAoICkgLiBlbmRzd2l0aCAoICcgemVuZ2EnICkgOgogICAgIGkxSWlpSTFJMUlJaTExaTEgPSAnZmZjYzExMTEnCiAgICBlbGlmIG8wT0lpSUkgLiBsb3dlciAoICkgLiBlbmRzd2l0aCAoICcgZmFzdCcgKSA6CiAgICAgaTFJaWlJMUkxSUlpMTFpMSA9ICdmZmJiMTExMScKICAgIGVsaWYgbzBPSWlJSSAuIGxvd2VyICggKSAuIGVuZHN3aXRoICggJyBuZXR0dicgKSA6CiAgICAgaTFJaWlJMUkxSUlpMTFpMSA9ICdmZjk5MTExMScKICAgIE8wMDBPTzAgKCBJMTFJSWlJaUkgKCBvME9JaUlJIC4gY2FwaXRhbGl6ZSAoICkgLCBpMUlpaUkxSTFJSWkxMWkxICkgLCBiYXNlNjQgLiBiNjRlbmNvZGUgKCBvMG8wTyApICwgaTFpICwgb29vb08wb09vT09vTyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiAgZXhjZXB0IDogdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiByZXR1cm4KIGlmIDY2IC0gNjY6IG9Pb08wb28wT09PbyAvIGkxSUlpICogb28gLSBvT28wTzBPb28gKyBpaWlpSWkxMWkKZGVmIE8wbzAgKCB1cmwgKSA6CiBpZiA1OCAtIDU4OiBpMUkxaWkxSUkxaUlJIC8gbzAwMDBvT29Pb08wbwogSTExMTFJMWlJSTExID0gT09PMG9PICggJ3Nwb3J0cycgLCBkZXNpID0gRmFsc2UgKQogSTExMTFJMWlJSTExID0gc29ydGVkICggSTExMTFJMWlJSTExICwga2V5ID0gbGFtYmRhIEkxaTExIDogSTFpMTEgWyAwIF0gLiBsb3dlciAoICkgKQogaWYgNjIgLSA2Mjogb29PTzAwb09vIC8gb29vTzBvbzBvT09PTyAlIE9vb29vb29vT08gKyBPMCAvIE8wCiBmb3IgbzBPSWlJSSAsIElpaWlJaWlJICwgbzBvME8gLCBvb29vTzBvT29PT29PIGluIEkxMTExSTFpSUkxMSA6CiAgaTFpID0gNDUKICBvME9JaUlJID0gbzBPSWlJSSAuIGVuY29kZSAoICdhc2NpaScgLCAnaWdub3JlJyApIC4gZGVjb2RlICggJ2FzY2lpJyApCiAgTzAwME9PMCAoIG8wT0lpSUkgLCBiYXNlNjQgLiBiNjRlbmNvZGUgKCBvMG8wTyApICwgaTFpICwgb29vb08wb09vT09vTyAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiAgaWYgMjUgLSAyNTogT29vMDBvT28wMG8gKyBpSWlpMUkxMUkxSUkxICsgb29vTzBvbzBvT09PTyArIG9Pb08wb28wT09PbyAvIG8wb28wbyAtIGkxSUlpCmRlZiBJaTFJMTFJaTFpSSAoIGRhdGEgLCByZV9wYXR0ZW4gKSA6CiBJMTExMUkxaUlJMTEgPSAnJwogSTFpID0gcmUgLiBzZWFyY2ggKCByZV9wYXR0ZW4gLCBkYXRhICkKIGlmIEkxaSAhPSBOb25lIDoKICBJMTExMUkxaUlJMTEgPSBJMWkgLiBncm91cCAoIDEgKQogZWxzZSA6CiAgSTExMTFJMWlJSTExID0gJycKIHJldHVybiBJMTExMUkxaUlJMTEKIGlmIDYxIC0gNjE6IE9vbzAwb09vMDBvICogb09vTzBvbzBPT09vIC0gaTFJSWkgKyBPb09PMG9vT09vbzBPICUgT29vMDBvT28wMG8gKyBPb29vb29vb09PCmRlZiBvME9vb28wTzAwT29vICggcGFnZV9kYXRhICkgOgogTzBPT29Pb28wT09vID0gJycKIGlmICcxMjcuMC4wLjEnIGluIHBhZ2VfZGF0YSA6CiAgTzBPT29Pb28wT09vID0gSWkxSTExSWkxaUkgKCBwYWdlX2RhdGEgLCAnJnZlcl90PShbXiZdKykmJyApICsgJyBsaXZlPXRydWUgdGltZW91dD0xNSBwbGF5cGF0aD0nICsgSWkxSTExSWkxaUkgKCBwYWdlX2RhdGEgLCAnXFw/eT0oW2EtekEtWjAtOS1fXFwuQF0rKScgKQogaWYgSWkxSTExSWkxaUkgKCBwYWdlX2RhdGEgLCAndG9rZW49KFteJl0rKSYnICkgIT0gJycgOgogIE8wT09vT29vME9PbyA9IE8wT09vT29vME9PbyArICc/dG9rZW49JyArIElpMUkxMUlpMWlJICggcGFnZV9kYXRhICwgJ3Rva2VuPShbXiZdKykmJyApCiBlbGlmIElpMUkxMUlpMWlJICggcGFnZV9kYXRhICwgJ3dtc0F1dGhTaWduJTNEKFteJSZdKyknICkgIT0gJycgOgogIE8wT09vT29vME9PbyA9IElpMUkxMUlpMWlJICggcGFnZV9kYXRhICwgJyZ2ZXJfdD0oW14mXSspJicgKSArICc/d21zQXV0aFNpZ249JyArIElpMUkxMUlpMWlJICggcGFnZV9kYXRhICwgJ3dtc0F1dGhTaWduJTNEKFteJSZdKyknICkgKyAnPT0vbXA0OicgKyBJaTFJMTFJaTFpSSAoIHBhZ2VfZGF0YSAsICdcXD95PShbXiZdKykmJyApCiBlbHNlIDoKICBPME9Pb09vbzBPT28gPSBJaTFJMTFJaTFpSSAoIHBhZ2VfZGF0YSAsICdIUkVGPSIoW14iXSspIicgKQogIGlmIDg0IC0gODQ6IGkxSUlpCiBpZiAnZGFnMS5hc3gnIGluIE8wT09vT29vME9PbyA6CiAgcmV0dXJuIE9vb08wME9Pb29PTyAoIE8wT09vT29vME9PbyApCiAgaWYgNzQgLSA3NDogT29vb29vb29PTyAtIGkxMWlJaWlJaWkKIGlmICdkZXZpbmxpdmVmcy5mcGxpdmUubmV0JyBub3QgaW4gTzBPT29Pb28wT09vIDoKICBPME9Pb09vbzBPT28gPSBPME9Pb09vbzBPT28gLiByZXBsYWNlICggJ2RldmlubGl2ZScgLCAnZmxpdmUnICkKIGlmICdwZXJtbGl2ZWZzLmZwbGl2ZS5uZXQnIG5vdCBpbiBPME9Pb09vbzBPT28gOgogIE8wT09vT29vME9PbyA9IE8wT09vT29vME9PbyAuIHJlcGxhY2UgKCAncGVybWxpdmUnICwgJ2ZsaXZlJyApCiAgaWYgNDIgLSA0Mjogb09vTzBvbzBPT09vIC8gT28gLiBpSWlpMUkxMUkxSUkxCiAgaWYgNSAtIDU6IE9vb29vb29vT08KICBpZiAyMSAtIDIxOiBJSTExaWlJSQogcmV0dXJuIE8wT09vT29vME9PbwogaWYgNzEgLSA3MTogSUkxMWlpSUkgKyBpaWlpSWkxMWkgLiBPb09PMG9vT09vbzBPCmRlZiBpaWlpMUkgKCBwYWdlX2RhdGEgLCBwcm9ncmVzcyApIDoKIGlmIDczIC0gNzM6IG8wMDAwb09vT29PMG8gKiBPb29vb29vb09PICogT29PTzBvb09Pb28wTyAtIGkxMWlJaWlJaWkKIGlmIDU4IC0gNTg6IE9vbzAwb09vMDBvICsgb09vME8wT29vIC0gb29vTzBvbzBvT09PTwogaWYgODIgLSA4MjogbzAwMDBvT29Pb08wbyAuIGlJaWkxSTExSTFJSTEgLyBvMDAwMG9Pb09vTzBvIC8gaWlpaUlpMTFpICUgaUlpaTFJMTFJMUlJMQogaWYgbm90IHBhZ2VfZGF0YSAuIHN0YXJ0c3dpdGggKCAnaHR0cCcgKSA6CiAgcmV0dXJuIHBhZ2VfZGF0YSA7CiBpMWlpaTFJMUkgPSBpMWlpSTExSSAoIHBhZ2VfZGF0YSApIDsKIGlmIDk3IC0gOTc6IE8wICogSUkxMWlpSUkgJSBpMUlJaSAlIG9Pb08wb28wT09PbyAlIGlJaWkxSTExSTFJSTEKIElJMUlpaUlpMWkgPSAnKGh0dHAuKiknCiBvb29PT29PID0gJ2Fkc2lkPSguKj8pJicKIGlmIDMxIC0gMzE6IGkxMWlJaWlJaWkgLyBvb29PMG9vMG9PT09PICogaTExaUlpaUlpaSAlIG8wb28wbyAqIE9vTzBPMDAgKyBPb29vb29vb09PCiBpZiAnYW1zLmphZG9vdHYuaW5mbycgaW4gaTFpaWkxSTFJIDoKICBpMWlpaTFJMUkgPSByZSAuIGNvbXBpbGUgKCBJSTFJaWlJaTFpICkgLiBmaW5kYWxsICggaTFpaWkxSTFJICkgWyAwIF0KICBpMWlpaTFJMUkgPSBpMWlpSTExSSAoIGkxaWlpMUkxSSApIDsKICBpZiAyNCAtIDI0OiBvT29PMG9vME9PT28gLiBPb09PMG9vT09vbzBPIC4gT28KICBpMWlpMTExMWkxaSA9IFsgKCAnVXNlci1BZ2VudCcgLCAnSXBhZCcgKSBdCiAgaTFpaWkxSTFJID0gaTFpaUkxMUkgKCBwYWdlX2RhdGEgLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKSA7CiAgaWYgNDQgLSA0NDogaTFJSWkgLiBJSTExMWlpaWkgLiBvMG9vMG8gLSBJSTExMWlpaWkgKyBpMUkxaWkxSUkxaUlJICogSUkxMWlpSUkKICBpZiA2NSAtIDY1OiBJSTExMWlpaWkgJSBpMUlJaQogIGlmIDEzIC0gMTM6IG9vT08wMG9PbyAqIG8wb28wbyArIE9vTzBPMDAgLSBvb29PMG9vMG9PT09PCiBpZiAnYWRzaWQ9JyBpbiBpMWlpaTFJMUkgOgogIGkxaWlpMUkxSSA9IHJlIC4gY29tcGlsZSAoIElJMUlpaUlpMWkgKSAuIGZpbmRhbGwgKCBpMWlpaTFJMUkgKSBbIDAgXQogIHBhZ2VfZGF0YSA9IGkxaWlpMUkxSSA7CiBlbGlmICd0dGw9JyBpbiBpMWlpaTFJMUkgOgogIGkxaWlpMUkxSSA9IHJlIC4gY29tcGlsZSAoIElJMUlpaUlpMWkgKSAuIGZpbmRhbGwgKCBpMWlpaTFJMUkgKSBbIDAgXQogIHJldHVybiBpMWlpaTFJMUkKICBwYWdlX2RhdGEgPSBpMWlpaTFJMUkgOwogIG9vb09Pb08gPSAndHRsPSguKj8pJicKIGVsc2UgOgogIHJldHVybiBwYWdlX2RhdGEgKyAnfFVzZXItQWdlbnQ9aVBhZCcKICBpZiAzMSAtIDMxOiBvb09PMDBvT28KIHByb2dyZXNzIC4gdXBkYXRlICggMzAgLCAiIiAsICJGb3VuZCBBZHMiICwgIiIgKQogaW1wb3J0IHV1aWQKIE9Pb29PbyA9IHN0ciAoIHV1aWQgLiB1dWlkMSAoICkgKSAuIHVwcGVyICggKQogTzBPT29PMDBPTzBvID0gMAogb29PMDBPbyA9IDAKIE9Pb29PTzAwMCA9IHVybGxpYjIgLiBidWlsZF9vcGVuZXIgKCBvT28wME9vMDBPICkKIGlmIDMgLSAzOiBvT29PMG9vME9PT28gJSBPb08wTzAwIC4gTzAgJSBPb28wMG9PbzAwbyAuIE9vbzAwb09vMDBvIC0gaTFJMWlpMUlJMWlJSQogb28wT29vT29PbyA9IHJlIC4gY29tcGlsZSAoIG9vb09Pb08gKSAuIGZpbmRhbGwgKCBwYWdlX2RhdGEgKSBbIDAgXQogaWYgOCAtIDg6IG9vb08wb28wb09PT08KIElpMWkxID0gaW50ICggb28wT29vT29PbyApIC0gMjAwMDAwMDAKIHBhZ2VfZGF0YSA9IHBhZ2VfZGF0YSAuIHJlcGxhY2UgKCBvbzBPb29Pb09vICwgc3RyICggSWkxaTEgKSApCiBmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRldGltZQogSUlJSWlpaWlpID0gZGF0ZXRpbWUgLiBub3cgKCApCiB3aGlsZSBPME9Pb08wME9PMG8gPCAxIDoKICBpZiBub3QgJ0VYVC1YLURJU0NPTlRJTlVJVFknIGluIGkxaWlpMUkxSSA6CiAgIGlmIDY4IC0gNjg6IG9vT08wMG9PbyAvIG8wb28wbyAlIElJMTExaWlpaSArIE9vTzBPMDAgKyBPMCAlIG9Pb08wb28wT09PbwogICBpMWlpaTFJMUkgPSBpMWlpSTExSSAoIHBhZ2VfZGF0YSApIDsKICAgaWYgNTMgLSA1Mzogb09vME8wT29vICUgT28gLiBvb09PMDBvT28gKyBvbyAvIG9Pb08wb28wT09PbwogICBPT29vT09PID0gcmUgLiBjb21waWxlICggSUkxSWlpSWkxaSApIC4gZmluZGFsbCAoIGkxaWlpMUkxSSApCiAgIGlmIDk1IC0gOTU6IE9vT08wb29PT29vME8KICAgaTFpaTExMTFpMWkgPSBbICggJ1gtUGxheWJhY2stU2Vzc2lvbi1JZCcgLCBPT29vT28gKSBdCiAgIGZvciBPb29vMG8wb08gaW4gT09vb09PTyA6CiAgICBvb08wME9vICs9IDEgOwogICAgcHJvZ3Jlc3MgLiB1cGRhdGUgKCAzMCArIG9vTzAwT28gKiA1ICwgIiIgLCAiRmV0Y2hpbmcgQWRzIGxpbmtzICMiICsgc3RyICggb29PMDBPbyApICwgIiIgKQogICAgdHJ5IDoKICAgICBpZiAxID09IDEgb3IgJ2dldERhdGFUcmFja2VyJyBpbiBPb29vMG8wb08gOgogICAgICBpZiA1MSAtIDUxOiBpMUkxaWkxSUkxaUlJIC8gbzBvbzBvICUgaWlpaUlpMTFpICsgaWlpaUlpMTFpICogaWlpaUlpMTFpCiAgICAgIGlmIDIwIC0gMjA6IGkxSTFpaTFJSTFpSUkgJSBvT29PMG9vME9PT28gKyBvb09PMDBvT28gLyBPb08wTzAwCiAgICAgIGlmIDEwIC0gMTA6IGkxMWlJaWlJaWkgLyBvT28wTzBPb28KICAgICAgT09PMDBPID0gT09vb09PMDAwIC4gb3BlbiAoIE9vb28wbzBvTyApCiAgICAgIGlmIDI3IC0gMjc6IG9vIC8gT29vb29vb29PTwogICAgZXhjZXB0IDogdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgICBpZiA3NCAtIDc0OiBvT29PMG9vME9PT28gJSBvMG9vMG8gLSBvb09PMDBvT28gKiBPb09PMG9vT09vbzBPIC4gT29vb29vb29PTyAqIG9vT08wMG9PbwogIGVsc2UgOgogICBicmVhawogIE8wT09vTzAwT08wbyArPSAxCiBPT09vb29vT28wID0gZGF0ZXRpbWUgLiBub3cgKCApCiBvMDAwbzAwT08wME9vID0gT09Pb29vb09vMCAtIElJSUlpaWlpaQogaWYgMTIgLSAxMjogT29PTzBvb09Pb28wTyAqIGlpaWlJaTExaSAtIG8wb28wbyAqIGkxSTFpaTFJSTFpSUkgLSBPbyAqIG8wb28wbwogaWYgOTAgLSA5MDogbzAwMDBvT29Pb08wbyAuIG9PbzBPME9vbwogaWYgODkgLSA4OTogbzBvbzBvIC0gb29PTzAwb09vIC0gT29vMDBvT28wMG8KIHByb2dyZXNzIC4gdXBkYXRlICggOTAgLCAiIiAsICJBbG1vc3QgY29tcGxldGVkIiAsICIiICkKIHByaW50ICd3b3JrIGRvbmUgaGVyZSAnICsgcGFnZV9kYXRhCiBpZiA0NCAtIDQ0OiBPb29vb29vb09PCiBpZiAnZWxhc3RpY2JlYW5zdGFsay5jb20nIGluIHBhZ2VfZGF0YSA6CiAgdHJ5IDoKICAgT09vb09PMDAwID0gdXJsbGliMiAuIGJ1aWxkX29wZW5lciAoIG9PbzAwT28wME8gKQogICBwcmludCAncGFnZV9kYXRhIGdvJyAsIHBhZ2VfZGF0YQogICBPT29vT08wMDAgLiBhZGRoZWFkZXJzID0gWyAoICdVc2VyLWFnZW50JyAsICdpUGFkJyApIF0KICAgT09PMDBPID0gT09vb09PMDAwIC4gb3BlbiAoIHBhZ2VfZGF0YSApCiAgIGlmIDgyIC0gODI6IG9PbzBPME9vbyAuIG9PbzBPME9vbwogICBJSWlJaUlpaTExSTEgPSBPT08wME8gLiBpbmZvICggKSAuIGdldGhlYWRlciAoICdMb2NhdGlvbicgKQogICBpZiAnaHdjZG4ubmV0LycgaW4gSUlpSWlJaWkxMUkxIDoKICAgIHBhZ2VfZGF0YSA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyRnRjekl1YW1Ga2IyOHVkSFl2JyApICsgSUlpSWlJaWkxMUkxIC4gc3BsaXQgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhkalpHNHVibVYwTHc9PScgKSApIFsgMSBdCiAgZXhjZXB0IDogcGFzcwogIGlmIDYwIC0gNjA6IE9vb29vb29vT08gKiBPb08wTzAwICUgbzBvbzBvCiByZXR1cm4gcGFnZV9kYXRhICsgJ3xVc2VyLUFnZW50PWlQYWQmWC1QbGF5YmFjay1TZXNzaW9uLUlkPScgKyBPT29vT28KIGlmIDY4IC0gNjg6IE8wIC0gT29PME8wMCAuIElJMTExaWlpaSAlIG8wMDAwb09vT29PMG8gJSBPb08wTzAwICsgaTExaUlpaUlpaQpkZWYgT29vTzAwT09vb09PICggcGFnZV9kYXRhICkgOgogaWYgOTAgLSA5MDogSUkxMTFpaWlpIC8gSUkxMWlpSUkgKiBvbyAtIE9vTzBPMDAKIGlmICcxMjcuMC4wLjEnIGluIHBhZ2VfZGF0YSA6CiAgcmV0dXJuIG8wT29vbzBPMDBPb28gKCBwYWdlX2RhdGEgKQogZWxpZiBJaTFJMTFJaTFpSSAoIHBhZ2VfZGF0YSAsICd3bXNBdXRoU2lnbiUzRChbXiUmXSspJyApICE9ICcnIDoKICBPME9Pb09vbzBPT28gPSBJaTFJMTFJaTFpSSAoIHBhZ2VfZGF0YSAsICcmdmVyX3Q9KFteJl0rKSYnICkgKyAnP3dtc0F1dGhTaWduPScgKyBJaTFJMTFJaTFpSSAoIHBhZ2VfZGF0YSAsICd3bXNBdXRoU2lnbiUzRChbXiUmXSspJyApICsgJz09L21wNDonICsgSWkxSTExSWkxaUkgKCBwYWdlX2RhdGEgLCAnXFw/eT0oW14mXSspJicgKQogZWxzZSA6CiAgTzBPT29Pb28wT09vID0gSWkxSTExSWkxaUkgKCBwYWdlX2RhdGEgLCAnaHJlZj0iKFteIl0rKSJbXiJdKyQnICkKICBpZiBsZW4gKCBPME9Pb09vbzBPT28gKSA9PSAwIDoKICAgTzBPT29Pb28wT09vID0gcGFnZV9kYXRhCiBPME9Pb09vbzBPT28gPSBPME9Pb09vbzBPT28gLiByZXBsYWNlICggJyAnICwgJyUyMCcgKQogaWYgMTEgLSAxMTogb29vTzBvbzBvT09PTyAtIGlpaWlJaTExaSAtIGlpaWlJaTExaSAvIG8wb28wbyAqIElJMTExaWlpaSAlIGlpaWlJaTExaQogcmV0dXJuIE8wT09vT29vME9PbwogaWYgMzkgLSAzOTogaWlpaUlpMTFpIC8gaTExaUlpaUlpaQpkZWYgaWlvME8gKCApIDoKIE9vME9vTzAwb09PMG8gPSB1cmxsaWIyIC4gUmVxdWVzdCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJhSFIwY0hNNkx5OXBiM011ZG1semFXOXpiMlowYkhSa0xtTnZiUzlwWVhCd0wyOWhkWFJvTG5Cb2NBPT0iICkgKQogT28wT29PMDBvT08wbyAuIGFkZF9oZWFkZXIgKCAnQXV0aG9yaXphdGlvbicgLCAiQmFzaWMgJXMiICUgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1dWaFdNR0ZJVm5wYVdFazJaVzFPVkZwVVNqTmFXRWs5JyApICkKIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggYmFzZTY0IC4gYjY0ZGVjb2RlICggIlZYTmxjaTFCWjJWdWRBPT0iICkgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiVUdGckpUSXdWRllsTWpCRGIyNXVaV04wYVdaNUx6UXVOQ0JEUms1bGRIZHZjbXN2T0RBNExqSXVNVFlnUkdGeWQybHVMekUyTGpNdU1BPT0iICkgKQogT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICwgZGF0YSA9ICIiICkKIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiByZXR1cm4gT09vT08wb28wb29PCiBpZiA3NyAtIDc3OiBPb28wMG9PbzAwbyArIE9vbzAwb09vMDBvIC4gbzAwMDBvT29Pb08wbyAtIE9vbzAwb09vMDBvIC8gT29vMDBvT28wMG8KIGlmIDUxIC0gNTE6IGlJaWkxSTExSTFJSTEgKiBvT28wTzBPb28gLyBvMDAwMG9Pb09vTzBvICogb29PTzAwb09vCmRlZiBPb28wb29PMDAwb28gKCApIDoKIElpMWlJaTExMWkxaTEgPSAncHRjcGFnZS5qc29uJwogSWkxaUlpMTExaTFpMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPME9PbyAsIElpMWlJaTExMWkxaTEgKQogdHJ5IDoKICBvbzBPMG8gPSBpMTExaTFpICggSWkxaUlpMTExaTFpMSAsIDIgKiA2MCAqIDYwICkKICBpZiBub3Qgb28wTzBvID09IE5vbmUgOgogICByZXR1cm4gb28wTzBvCiBleGNlcHQgOgogIHByaW50ICdmaWxlIGdldHRpbmcgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgaWYgNTggLSA1ODogTzAgLSBpMUlJaSAvIGkxSTFpaTFJSTFpSUkKIE9vME9vTzAwb09PMG8gPSB1cmxsaWIyIC4gUmVxdWVzdCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyTnNkVzlrWW1GamEyVnVaR0Z3YVM1aGNIQnpjRzkwTG1OdmJTOXBiM012Y0dGcmRIWXZjR0ZyZEhZMExqUXVhbk52Ymc9PScgKSApCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJWWE5sY2kxQloyVnVkQT09IiApICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggIlVHRnJKVEl3VkZZbE1qQkRiMjV1WldOMGFXWjVMelF1TkNCRFJrNWxkSGR2Y21zdk9EQTRMakl1TVRZZ1JHRnlkMmx1THpFMkxqTXVNQT09IiApICkKIE9PTzAwTyA9IHVybGxpYjIgLiB1cmxvcGVuICggT28wT29PMDBvT08wbyApCiBPT29PTzBvbzBvb08gPSBPT08wME8gLiByZWFkICggKQogT08wTzAwMDBvbyA9IGpzb24gLiBsb2FkcyAoIE9Pb09PMG9vMG9vTyApCiBpZiA3MiAtIDcyOiBPbyArIElJMTExaWlpaSAuIE8wIC0gaTFJMWlpMUlJMWlJSSAvIE9vb29vb29vT08gLiBvMG9vMG8KIGlpaSA9IE9PME8wMDAwb28gWyAiU2VjcmV0IiBdCiBpZiAzMiAtIDMyOiBPb29vb29vb09PCiBpZiAyOSAtIDI5OiBvT29PMG9vME9PT28KIGlmIDQxIC0gNDE6IG8wMDAwb09vT29PMG8KIGlmIDQ5IC0gNDk6IG8wMDAwb09vT29PMG8gJSBJSTExMWlpaWkgLiBvMDAwMG9Pb09vTzBvIC0gT29vMDBvT28wMG8gLSBPb09PMG9vT09vbzBPICogb29vTzBvbzBvT09PTwogaWYgNDcgLSA0NzogTzAgLiBPb28wMG9PbzAwbyAvIG8wMDAwb09vT29PMG8gKiBpMUkxaWkxSUkxaUlJCiBpZiAoIGxlbiAoIGlpaSApICUgNCApID4gMCA6CiAgaWYgNjMgLSA2MzogbzBvbzBvIC0gaWlpaUlpMTFpIC0gaTFJMWlpMUlJMWlJSSAtIE9vIC8gaWlpaUlpMTFpICsgb29PTzAwb09vCiAgaWlpID0gaWlpIFsgOiAtIGludCAoIGxlbiAoIGlpaSApICUgNCApIF0KICBpZiA5NCAtIDk0OiBvb29PMG9vMG9PT09PIC8gb28gLiBJSTExMWlpaWkKICBpZiAzMiAtIDMyOiBpaWlpSWkxMWkgLiBJSTExaWlJSSAlIElJMTFpaUlJIC4gb09vME8wT29vCiBPME9PID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggaWlpICkKIGlmIDM3IC0gMzc6IElJMTFpaUlJICsgTzAgKyBJSTExaWlJSSAuIGkxSTFpaTFJSTFpSUkgLiBPb28wMG9PbzAwbwogaWYgNzggLSA3ODogb28gLyBPb09PMG9vT09vbzBPICsgT29vMDBvT28wMG8gLiBPb08wTzAwIC8gTzAKIHRyeSA6CiAgaWYgNDkgLSA0OTogb09vTzBvbzBPT09vCiAgb28wTzBvID0ganNvbiAuIGxvYWRzICggTzBPTyApCiBleGNlcHQgOgogIGlmIDY2IC0gNjY6IE9vbzAwb09vMDBvIC4gb09vTzBvbzBPT09vCiAgaWYgJyJjYXRlZ29yeU5hbWUiOiJhcHBzZXR0aW5nIicgaW4gTzBPTyA6CiAgIE8wT08gPSBPME9PIC4gc3BsaXQgKCAnImNhdGVnb3J5TmFtZSI6ImFwcHNldHRpbmciJyApIFsgMCBdCiAgIHByaW50ICd4eHh4eHh4eHh4eHh4eHh4eCcgLCBPME9PIFsgLSAxMDAgOiBdCiAgIHByaW50ICd4eHh4eHh4eHh4eHh4eHh4eCBlbmQnCiAgIGlJMTExSSA9IE8wT08gLiByZmluZCAoICcsJyApCiAgIE8wT08gPSBPME9PIFsgOiBpSTExMUkgXQogICBpSTExMUkgPSBPME9PIC4gcmZpbmQgKCAnLCcgKQogICBPME9PID0gTzBPTyBbIDogaUkxMTFJIF0KICAgTzBPTyArPSAnXX0nCiAgZWxzZSA6CiAgIGlJMTExSSA9IE8wT08gLiByZmluZCAoICcsJyApCiAgIE8wT08gPSBPME9PIFsgOiBpSTExMUkgXQogICBPME9PICs9ICddfV19JwogIG9vME8wbyA9IGpzb24gLiBsb2FkcyAoIE8wT08gKQogIGlmIDQ0IC0gNDQ6IG8wMDAwb09vT29PMG8gLiBpMTFpSWlpSWlpIC8gbzAwMDBvT29Pb08wbwogIGlmIDMyIC0gMzI6IG8wMDAwb09vT29PMG8gKyBvb29PMG9vMG9PT09PICsgb09vTzBvbzBPT09vCiAgaWYgNzkgLSA3OTogaTFJSWkgLyBvMDAwMG9Pb09vTzBvCiB0cnkgOgogIE9PTzBvME9PME9PICggb28wTzBvICwgSWkxaUlpMTExaTFpMSApCiBleGNlcHQgOgogIHByaW50ICdwdGMgZmlsZSBzYXZpbmcgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiByZXR1cm4gb28wTzBvCiBpZiA4MSAtIDgxOiBpSWlpMUkxMUkxSUkxCmRlZiBvMDAwb08wb09PTyAoICkgOgogaWYgMjMgLSAyMzogSUkxMWlpSUkKIG9vbzBvME9PME9Pb28wb08gPSBbIF0KIElpMWlJaTExMWkxaTEgPSAncGFrdHZwYWdlLmpzb24nCiBJaTFpSWkxMTFpMWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgSWkxaUlpMTExaTFpMSApCiBvb28wbzBPTzBPT29vMG9PICs9IFsgSWkxaUlpMTExaTFpMSBdCiBpZiA5OCAtIDk4OiBPb28wMG9PbzAwbyAqIE9vTzBPMDAgLSBvMDAwMG9Pb09vTzBvIC4gT28KIElpMWlJaTExMWkxaTEgPSAnZm9vdGJhbGxkYXRhLmpzb24nCiBJaTFpSWkxMTFpMWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgSWkxaUlpMTExaTFpMSApCiBvb28wbzBPTzBPT29vMG9PICs9IFsgSWkxaUlpMTExaTFpMSBdCiBpZiAyIC0gMjogT29PME8wMCAtIE9vICUgaUlpaTFJMTFJMUlJMQogaWYgODggLSA4ODogbzBvbzBvIC0gb29PTzAwb09vCiBJaTFpSWkxMTFpMWkxID0gJ3plbmdhLmpzb24nCiBJaTFpSWkxMTFpMWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgSWkxaUlpMTExaTFpMSApCiBvb28wbzBPTzBPT29vMG9PICs9IFsgSWkxaUlpMTExaTFpMSBdCiBpZiA3OSAtIDc5OiBpMUkxaWkxSUkxaUlJCiBJaTFpSWkxMTFpMWkxID0gJ3B0Y3BhZ2UuanNvbicKIElpMWlJaTExMWkxaTEgPSBvcyAuIHBhdGggLiBqb2luICggTzBPT28gLCBJaTFpSWkxMTFpMWkxICkKIG9vbzBvME9PME9Pb28wb08gKz0gWyBJaTFpSWkxMTFpMWkxIF0KIGlmIDQ1IC0gNDU6IElJMTExaWlpaSArIGkxSTFpaTFJSTFpSUkgLiBPb09PMG9vT09vbzBPIC4gTzAgKiBpMUlJaSAtIG8wMDAwb09vT29PMG8KIElpMWlJaTExMWkxaTEgPSAndW5pdHZwYWdlLmpzb24nCiBJaTFpSWkxMTFpMWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgSWkxaUlpMTExaTFpMSApCiBvb28wbzBPTzBPT29vMG9PICs9IFsgSWkxaUlpMTExaTFpMSBdCiBpZiA0OCAtIDQ4OiBvT29PMG9vME9PT28gKyBPb08wTzAwCiBJaTFpSWkxMTFpMWkxID0gJ3B2MnR2cGFnZS5qc29uJwogSWkxaUlpMTExaTFpMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPME9PbyAsIElpMWlJaTExMWkxaTEgKQogb29vMG8wT08wT09vbzBvTyArPSBbIElpMWlJaTExMWkxaTEgXQogSWkxaUlpMTExaTFpMSA9ICd1a3R2cGFnZS5qc29uJwogSWkxaUlpMTExaTFpMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPME9PbyAsIElpMWlJaTExMWkxaTEgKQogb29vMG8wT08wT09vbzBvTyArPSBbIElpMWlJaTExMWkxaTEgXQogaWYgNzYgLSA3Njogb09vTzBvbzBPT09vCiBJaTFpSWkxMTFpMWkxID0gJ1dUVkNvb2tpZUZpbGUubHdwJwogSWkxaUlpMTExaTFpMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPME9PbyAsIElpMWlJaTExMWkxaTEgKQogb29vMG8wT08wT09vbzBvTyArPSBbIElpMWlJaTExMWkxaTEgXQogaWYgOTggLSA5ODogSUkxMTFpaWlpICsgb28gLSBvT29PMG9vME9PT28gLiBvMDAwMG9Pb09vTzBvCiBJaTFpSWkxMTFpMWkxID0gJ215dHZwYWdlLmpzb24nCiBJaTFpSWkxMTFpMWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgSWkxaUlpMTExaTFpMSApCiBvb28wbzBPTzBPT29vMG9PICs9IFsgSWkxaUlpMTExaTFpMSBdCiBpZiA1MSAtIDUxOiBvMDAwMG9Pb09vTzBvICsgaTExaUlpaUlpaSAqIG9vT08wMG9PbyAlIE9vTzBPMDAgLyBvbyAtIGlJaWkxSTExSTFJSTEKIGlmIDIwIC0gMjA6IG8wb28wbyAuIE9vT08wb29PT29vME8gLiBvMDAwMG9Pb09vTzBvICsgT29PTzBvb09Pb28wTyAtIElJMTFpaUlJICogaWlpaUlpMTFpCiBJaTFpSWkxMTFpMWkxID0gJ3d0dnBhZ2UuanNvbicKIElpMWlJaTExMWkxaTEgPSBvcyAuIHBhdGggLiBqb2luICggTzBPT28gLCBJaTFpSWkxMTFpMWkxICkKIG9vbzBvME9PME9Pb28wb08gKz0gWyBJaTFpSWkxMTFpMWkxIF0KIElpMWlJaTExMWkxaTEgPSAnZHJlYW1wYWdlLmpzb24nCiBJaTFpSWkxMTFpMWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgSWkxaUlpMTExaTFpMSApCiBvb28wbzBPTzBPT29vMG9PICs9IFsgSWkxaUlpMTExaTFpMSBdCiBpZiA4MiAtIDgyOiBvb09PMDBvT28KIGlmIDc4IC0gNzg6IElJMTExaWlpaSAvIE9vT08wb29PT29vME8gLSBpMTFpSWlpSWlpICsgb09vTzBvbzBPT09vICogT29PME8wMAogdHJ5IDoKICBmb3IgT29vMCBpbiBvb08wbzBvTzAgKCApIDoKICAgSWkxaUlpMTExaTFpMSA9ICdtb25hcGFnZV8lcy5qc29uJyAlIE9vbzAgWyAwIF0KICAgSWkxaUlpMTExaTFpMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPME9PbyAsIElpMWlJaTExMWkxaTEgKQogICBvb28wbzBPTzBPT29vMG9PICs9IFsgSWkxaUlpMTExaTFpMSBdCiBleGNlcHQgOiBwYXNzCiBpZiAxNyAtIDE3OiBvT28wTzBPb28KIElpMWlJaTExMWkxaTEgPSAnbW9uYXBhZ2VfLmpzb24nCiBJaTFpSWkxMTFpMWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgSWkxaUlpMTExaTFpMSApCiBvb28wbzBPTzBPT29vMG9PICs9IFsgSWkxaUlpMTExaTFpMSBdCiBpZiA3MiAtIDcyOiBpMUkxaWkxSUkxaUlJIC4gT29PME8wMCAtIGkxMWlJaWlJaWkgLyBvbwogSWkxaUlpMTExaTFpMSA9ICdndHZwYWdlLmpzb24nCiBJaTFpSWkxMTFpMWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgSWkxaUlpMTExaTFpMSApCiBvb28wbzBPTzBPT29vMG9PICs9IFsgSWkxaUlpMTExaTFpMSBdCiBpZiA2NCAtIDY0OiBpaWlpSWkxMWkKIElpMWlJaTExMWkxaTEgPSAncG92ZWUuanNvbicKIElpMWlJaTExMWkxaTEgPSBvcyAuIHBhdGggLiBqb2luICggTzBPT28gLCBJaTFpSWkxMTFpMWkxICkKIG9vbzBvME9PME9Pb28wb08gKz0gWyBJaTFpSWkxMTFpMWkxIF0KIGlmIDgwIC0gODA6IE9vbzAwb09vMDBvICUgaUlpaTFJMTFJMUlJMQogSWkxaUlpMTExaTFpMSA9ICduZXR3b3JrX3BhZ2UuanNvbicKIElpMWlJaTExMWkxaTEgPSBvcyAuIHBhdGggLiBqb2luICggTzBPT28gLCBJaTFpSWkxMTFpMWkxICkKIG9vbzBvME9PME9Pb28wb08gKz0gWyBJaTFpSWkxMTFpMWkxIF0KIGlmIDYzIC0gNjM6IG9vb08wb28wb09PT08gKiBpMTFpSWlpSWlpCiBJaTFpSWkxMTFpMWkxID0gJ25ldHdvcmtfcGFnZTIxLmpzb24nCiBJaTFpSWkxMTFpMWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgSWkxaUlpMTExaTFpMSApCiBvb28wbzBPTzBPT29vMG9PICs9IFsgSWkxaUlpMTExaTFpMSBdCiBpZiA4NiAtIDg2OiBPb09PMG9vT09vbzBPICUgT29PTzBvb09Pb28wTyAtIG9PbzBPME9vbyArIG8wb28wbyAvIG9vICogT29vb29vb29PTwogSWkxaUlpMTExaTFpMSA9ICduZXR3b3JrX3BhZ2UyMi5qc29uJwogSWkxaUlpMTExaTFpMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPME9PbyAsIElpMWlJaTExMWkxaTEgKQogb29vMG8wT08wT09vbzBvTyArPSBbIElpMWlJaTExMWkxaTEgXQogaWYgMjYgLSAyNjogSUkxMTFpaWlpICogaTFJMWlpMUlJMWlJSSArIE9vbzAwb09vMDBvIC8gTzAgKyBpMUlJaSAtIE9vT08wb29PT29vME8KIGlmIDU2IC0gNTY6IElJMTFpaUlJCiBJaTFpSWkxMTFpMWkxID0gJ05ldHdvcmtkYXRhLmpzb24nCiBJaTFpSWkxMTFpMWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgSWkxaUlpMTExaTFpMSApCiBvb28wbzBPTzBPT29vMG9PICs9IFsgSWkxaUlpMTExaTFpMSBdCiBpZiA3NiAtIDc2OiBpMUlJaSAlIGlJaWkxSTExSTFJSTEgLSBPb28wMG9PbzAwbyArIG9vb08wb28wb09PT08gLSBPb09PMG9vT09vbzBPCiBJaTFpSWkxMTFpMWkxID0gJ05ldHdvcmtkYXRhMjEuanNvbicKIElpMWlJaTExMWkxaTEgPSBvcyAuIHBhdGggLiBqb2luICggTzBPT28gLCBJaTFpSWkxMTFpMWkxICkKIG9vbzBvME9PME9Pb28wb08gKz0gWyBJaTFpSWkxMTFpMWkxIF0KIElpMWlJaTExMWkxaTEgPSAnTmV0d29ya2RhdGEyMi5qc29uJwogSWkxaUlpMTExaTFpMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPME9PbyAsIElpMWlJaTExMWkxaTEgKQogb29vMG8wT08wT09vbzBvTyArPSBbIElpMWlJaTExMWkxaTEgXQogaWYgODEgLSA4MTogb09vTzBvbzBPT09vICsgT29vb29vb29PTyAtIElJMTFpaUlJICogTzAKIGlmIDEwMCAtIDEwMDogaUlpaTFJMTFJMUlJMSAtIG9PbzBPME9vbwogSWkxaUlpMTExaTFpMSA9ICdwaXR2cGFnZS5qc29uJwogSWkxaUlpMTExaTFpMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPME9PbyAsIElpMWlJaTExMWkxaTEgKQogb29vMG8wT08wT09vbzBvTyArPSBbIElpMWlJaTExMWkxaTEgXQogZm9yIE8wT29vME8gaW4gWyAndScgLCAncCcgLCAnaCcgXSA6CiAgSWkxaUlpMTExaTFpMSA9ICd5cHR2cGFnZV8lcy5qc29uJyAlIE8wT29vME8KICBJaTFpSWkxMTFpMWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgSWkxaUlpMTExaTFpMSApCiAgb29vMG8wT08wT09vbzBvTyArPSBbIElpMWlJaTExMWkxaTEgXQogIGlmIDI4IC0gMjg6IE9vTzBPMDAgLiBPMCAuIE9vT08wb29PT29vME8KICBpZiA2MCAtIDYwOiBJSTExMWlpaWkgKyBvMG9vMG8gLyBpaWlpSWkxMWkgJSBPb29vb29vb09PIC0gaTFJSWkKICBpZiA1NyAtIDU3OiBPbwogdHJ5IDoKICBmb3IgTzBPb28wTyBpbiBvMG9vMDAwMCAoICkgWyAiTElWRVRWIiBdIDoKICAgSWkxaUlpMTExaTFpMSA9ICdmYXN0XyVzX3BhZ2UuanNvbicgJSBPME9vbzBPIFsgImNpZCIgXQogICBJaTFpSWkxMTFpMWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgSWkxaUlpMTExaTFpMSApCiAgIG9vbzBvME9PME9Pb28wb08gKz0gWyBJaTFpSWkxMTFpMWkxIF0KIGV4Y2VwdCA6IHBhc3MKIGlmIDk5IC0gOTk6IE9vTzBPMDAgKyBvMG9vMG8gJSBPbyAtIE9vbzAwb09vMDBvCiBJaTFpSWkxMTFpMWkxID0gJ0Zhc3RkYXRhLmpzb24nCiBJaTFpSWkxMTFpMWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgSWkxaUlpMTExaTFpMSApCiBvb28wbzBPTzBPT29vMG9PICs9IFsgSWkxaUlpMTExaTFpMSBdCiBJaTFpSWkxMTFpMWkxID0gJ0Zhc3RDYXRzLmpzb24nCiBJaTFpSWkxMTFpMWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgSWkxaUlpMTExaTFpMSApCiBvb28wbzBPTzBPT29vMG9PICs9IFsgSWkxaUlpMTExaTFpMSBdCiBpZiA1MiAtIDUyOiBvT29PMG9vME9PT28KIGlmIDkzIC0gOTM6IGkxSTFpaTFJSTFpSUkgLiBpMTFpSWlpSWlpCiBpZiAyNCAtIDI0OiBJSTExaWlJSSAuIG9vT08wMG9PbyArIG8wb28wbyAuIGlpaWlJaTExaSAtIG9Pb08wb28wT09PbyAlIGkxSTFpaTFJSTFpSUkKIGZvciBvME8wT09PME9vbyBpbiBvb28wbzBPTzBPT29vMG9PIDoKICB0cnkgOgogICBpaWlpMWlJMUlJaUlpICggbzBPME9PTzBPb28gKQogIGV4Y2VwdCA6IHBhc3MKICBpZiA0OSAtIDQ5OiBvb29PMG9vMG9PT09PICUgT29vb29vb29PTyAtIG9vCiBPMG9vMG8wT29PMCA9ICJDYWNoZSBjbGVhcmVkLiIKIHhibWMgLiBleGVjdXRlYnVpbHRpbiAoICdOb3RpZmljYXRpb24oJXMsICVzLCAlZCwgJXMpJyAlICggX19hZGRvbm5hbWVfXyAsIE8wb28wbzBPb08wICwgMzAwMCAsIF9faWNvbl9fICkgKQogaWYgOTUgLSA5NTogb29PTzAwb09vIC0gaTExaUlpaUlpaSAuIG9vT08wMG9PbyAlIElJMTFpaUlJICogTzAgKyBpMTFpSWlpSWlpCmRlZiBpaWlpMWlJMUlJaUlpICggZm5hbWUgKSA6CiB0cnkgOgogIG9zIC4gcmVtb3ZlICggZm5hbWUgKQogZXhjZXB0IDogcGFzcwogaWYgNjUgLSA2NTogTzAgLyBpMUkxaWkxSUkxaUlJIC4gaTFJSWkgKiBpMUkxaWkxSUkxaUlJIC8gaUlpaTFJMTFJMUlJMSAtIGlpaWlJaTExaQpkZWYgaTFJaWlpMTExICggKSA6CiBvTzAwT29PTyA9IFsgXQogdHJ5IDoKICBvME8wb29vb29vbzAwID0gaTFpaUkxMUkgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMMjl5YVdkcGJpNWthWFIwYjNSMkxtTnZiUzlzYVhabGRIWXZZV3hzTHpBPScgKSApCiAgb08wME9vT08gPSByZSAuIGZpbmRhbGwgKCAnPGRpdiBjbGFzcz0ic3VicGF0dGVybi4qP1xzKjxhIGhyZWY9IiguKj8pIiB0aXRsZT0iKC4qPykiLio/XHMqPGltZyBzcmM9IiguKj8pIicgLCBvME8wb29vb29vbzAwICkKICBpZiA5MyAtIDkzOiBvT28wTzBPb28gJSBpMTFpSWlpSWlpIC0gbzAwMDBvT29Pb08wbyAlIG9vT08wMG9PbwogIGlmIDU1IC0gNTU6IE9vbzAwb09vMDBvIC4gb09vTzBvbzBPT09vCiBleGNlcHQgOgogIHBhc3MKICBpZiA2MyAtIDYzOiBpaWlpSWkxMWkKICBpZiA3OSAtIDc5OiBvT29PMG9vME9PT28gLSBpaWlpSWkxMWkgLSBPb28wMG9PbzAwbyAuIElJMTFpaUlJCiAgaWYgNjUgLSA2NTogaTExaUlpaUlpaSAuIG9vT08wMG9PbyAlIGkxSTFpaTFJSTFpSUkgKyBvb29PMG9vMG9PT09PIC0gaTExaUlpaUlpaQogcmV0dXJuIG9PMDBPb09PCiBpZiA2MCAtIDYwOiBvMG9vMG8KZGVmIGkxSUkxaTFpaUkxICggdXJsICwgcHJvZ3Jlc3MgKSA6CiBpZiAxNCAtIDE0OiBPb08wTzAwICUgaWlpaUlpMTFpICogaTFJMWlpMUlJMWlJSSAtIGkxMWlJaWlJaWkgLyBvT29PMG9vME9PT28gKiBpMTFpSWlpSWlpCiBwcmludCAndXJsJyAsIHVybAogSWkxaUlpMTExaTFpMSA9ICd6ZW5nYS5qc29uJwogSWkxaUlpMTExaTFpMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPME9PbyAsIElpMWlJaTExMWkxaTEgKQogT29vT09vID0gTm9uZQogdHJ5IDoKICBvbzBPMG8gPSBpMTExaTFpICggSWkxaUlpMTExaTFpMSAsIDYwICogNjAgKiAyICkKICBpZiBub3Qgb28wTzBvID09IE5vbmUgOgogICByZXR1cm4ganNvbiAuIGxvYWRzICggb28wTzBvICkKIGV4Y2VwdCA6CiAgcHJpbnQgJ2ZpbGUgZ2V0dGluZyBlcnJvcicKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICBpZiA5NiAtIDk2OiBPb09PMG9vT09vbzBPICsgaUlpaTFJMTFJMUlJMSAlIElJMTExaWlpaQogaTFpaTExMTFpMWkgPSBbICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChpUGhvbmU7IENQVSBpUGhvbmUgT1MgOV8wXzIgbGlrZSBNYWMgT1MgWCkgQXBwbGVXZWJLaXQvNjAxLjEuNDYgKEtIVE1MLCBsaWtlIEdlY2tvKSBNb2JpbGUvMTNBNDUyICg1MjE1MTYxNDQwKScgKSAsICggJ09yaWdpbicgLCAnZmlsZTovLycgKSBdCiBpZiA2MSAtIDYxOiBJSTExaWlJSSAuIG9Pb08wb28wT09PbyAqIGlpaWlJaTExaSAvIG8wb28wbyAtIG9vT08wMG9PbwogdHJ5IDoKICBwcmludCAndXJsJyAsIHVybAogIE9vb09PbyA9IGpzb24gLiBsb2FkcyAoIGkxaWlJMTFJICggdXJsICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICwgcG9zdCA9ICIiICkgKQogIE9PTzBvME9PME9PICgganNvbiAuIGR1bXBzICggT29vT09vICkgLCBJaTFpSWkxMTFpMWkxICkKIGV4Y2VwdCA6CiAgcHJpbnQgJ3plbmdhIGZpbGUgc2F2aW5nIGVycm9yJwogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcmV0dXJuIE9vb09PbwogaWYgMTggLSAxODogbzBvbzBvCmRlZiBJSWkxSWlJaWkgKCB1cmwgLCBwcm9ncmVzcyApIDoKIGlmIDM0IC0gMzQ6IGkxSTFpaTFJSTFpSUkgKyBvMG9vMG8gKiBPb09PMG9vT09vbzBPIC8gSUkxMTFpaWlpCiBPME9vbzBPID0gInUiIGlmICd1cmR1JyBpbiB1cmwgLiBsb3dlciAoICkgZWxzZSAnaCcgaWYgJ2hpbmRpJyBpbiB1cmwgLiBsb3dlciAoICkgZWxzZSAncCcKIGlmIDE0IC0gMTQ6IElJMTExaWlpaSArIGkxSTFpaTFJSTFpSUkgKyBvMDAwMG9Pb09vTzBvIC8gaTFJMWlpMUlJMWlJSSAuIGlJaWkxSTExSTFJSTEKIElpMWlJaTExMWkxaTEgPSAneXB0dnBhZ2VfJXMuanNvbicgJSBPME9vbzBPCiBJaTFpSWkxMTFpMWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgSWkxaUlpMTExaTFpMSApCiB0cnkgOgogIG9vME8wbyA9IGkxMTFpMWkgKCBJaTFpSWkxMTFpMWkxICwgNSAqIDI0ICogNjAgKiA2MCApCiAgaWYgbm90IG9vME8wbyA9PSBOb25lIDoKICAgcmV0dXJuIGpzb24gLiBsb2FkcyAoIG9vME8wbyApCiBleGNlcHQgOgogIHByaW50ICdmaWxlIGdldHRpbmcgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgaWYgODUgLSA4NTogT29PTzBvb09Pb28wTyAlIE9vT08wb29PT29vME8gLiBPMAogaTFpaTExMTFpMWkgPSBbICggJ1VzZXItQWdlbnQnICwgJ0NGVU5UVi8zLjEgQ0ZOZXR3b3JrLzc1OC4wLjIgRGFyd2luLzE1LjAuME1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS80OC4wLjI1NjQuOTcgU2FmYXJpLzUzNy4zNicgKSBdCiBvME8wb29vb29vbzAwID0gaTFpaUkxMUkgKCB1cmwgLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogT09vb09PTyA9IHJlIC4gZmluZGFsbCAoICc8YSBocmVmPSIoLio/KSIuKj9pbWcuKj9zcmM9IiguKj8pIi4qP2FsdD1cJyguKj8pXCcnICwgbzBPMG9vb29vb28wMCApCiBvTzAgPSBbIF0KIE8wME8gPSAwCiBmb3IgT29vbzBvMG9PIGluIE9Pb29PT08gOgogIE8wME8gKz0gMQogIHByb2dyZXNzIC4gdXBkYXRlICggaW50ICggKCBPMDBPICogMTAwICkgLyBsZW4gKCBPT29vT09PICkgKSAsICIiICwgIkZpbHRlcmluZyBZUCBsaW5rcy4uJWQgb2YgJWQiICUgKCBPMDBPICwgbGVuICggT09vb09PTyApICkgKQogIGlmIHByb2dyZXNzIC4gaXNjYW5jZWxlZCAoICkgOiByZXR1cm4gWyBdCiAgaWYgMSA9PSAxIDoKICAgb08wICs9IFsgT29vbzBvMG9PIF0KIE9Pb29PT08gPSBvTzAKIE9vb09PbyA9IGpzb24gLiBkdW1wcyAoIE9Pb29PT08gKQogdHJ5IDoKICBPT08wbzBPTzBPTyAoIE9vb09PbyAsIElpMWlJaTExMWkxaTEgKQogZXhjZXB0IDoKICBwcmludCAneXAgZmlsZSBzYXZpbmcgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiByZXR1cm4gT09vb09PTwogaWYgNDAgLSA0MDogb29PTzAwb09vICogb09vME8wT29vICogaUlpaTFJMTFJMUlJMSAvIG9PbzBPME9vbyAqIE9vb29vb29vT08gLyBvT29PMG9vME9PT28KZGVmIElpaUkxMWkxMWlpICggdXBkYXRlZFVOYW1lID0gRmFsc2UgKSA6CiBvT08wT29vbyA9IE5vbmUKIHRyeSA6CiAgb09PME9vb28gPSBjb29raWVsaWIgLiBMV1BDb29raWVKYXIgKCApCiAgaWYgbm90IHVwZGF0ZWRVTmFtZSA6CiAgIG9PTzBPb29vIC4gbG9hZCAoIG9vME9vbzAgLCBpZ25vcmVfZGlzY2FyZCA9IFRydWUgKQogZXhjZXB0IDoKICBvT08wT29vbyA9IE5vbmUKICBpZiA0MiAtIDQyOiBvMG9vMG8gKiBPb08wTzAwICUgb09vME8wT29vCiBpZiBub3Qgb09PME9vb28gOgogIG9PTzBPb29vID0gY29va2llbGliIC4gTFdQQ29va2llSmFyICggKQogcmV0dXJuIG9PTzBPb29vCiBpZiA2IC0gNjogSUkxMWlpSUkgLSBPMCAqIG9Pb08wb28wT09PbwogaWYgOTggLSA5ODogb29vTzBvbzBvT09PTyAqIGkxSTFpaTFJSTFpSUkgLiBPb29vb29vb09PIC4gTzAKIGlmIDg5IC0gODk6IGkxSTFpaTFJSTFpSUkgLyBPMCAlIE9vb29vb29vT08gLSBPMCAuIG9vT08wMG9PbwogaWYgMzIgLSAzMjogT28KIGlmIDI2IC0gMjY6IE8wICogbzAwMDBvT29Pb08wbyAtIG9vIC0gaTFJMWlpMUlJMWlJSSAvIGlJaWkxSTExSTFJSTEKIGlmIDU3IC0gNTc6IG9Pb08wb28wT09PbyAtIG9vT08wMG9PbyAqIGlJaWkxSTExSTFJSTEKIGlmIDI2IC0gMjY6IG9vT08wMG9PbyAlIE9vICUgT29vMDBvT28wMG8gJSBvT28wTzBPb28gLiBpMUkxaWkxSUkxaUlJICUgTzAKIGlmIDkxIC0gOTE6IElJMTExaWlpaSAuIE9vTzBPMDAgLiBpaWlpSWkxMWkgLSBPb29vb29vb09PIC8gb09vME8wT29vCiBpZiAzMCAtIDMwOiBPb09PMG9vT09vbzBPICUgT29vMDBvT28wMG8gKyBpMUlJaSAqIE9vb29vb29vT08gKiBvb09PMDBvT28gLSBJSTExMWlpaWkKIGlmIDU1IC0gNTU6IG9vT08wMG9PbwogaWYgMjAgLSAyMDogT28gKiBvMG9vMG8gKiBPb28wMG9PbzAwbyAtIE9vCiBpZiAzMiAtIDMyOiBvMDAwMG9Pb09vTzBvICogaWlpaUlpMTFpCiBpZiA4NSAtIDg1OiBpMTFpSWlpSWlpIC4gb29PTzAwb09vICsgb29PTzAwb09vCiBpZiAyOCAtIDI4OiBPb08wTzAwCiBpZiA2MiAtIDYyOiBPb08wTzAwICsgT29vb29vb29PTyAvIGkxSTFpaTFJSTFpSUkKIGlmIDYwIC0gNjA6IG8wMDAwb09vT29PMG8gLyBvT28wTzBPb28gLiBPb09PMG9vT09vbzBPICUgSUkxMWlpSUkKIGlmIDYxIC0gNjE6IE8wIC4gbzAwMDBvT29Pb08wbyAuIE8wICogaTExaUlpaUlpaSAqIElJMTExaWlpaSAvIG8wb28wbwpkZWYgb29vT29vMG9PTzAgKCApIDoKIG9PTzBPb29vID0gSWlpSTExaTExaWkgKCApCiB0cnkgOgogIGltcG9ydCB0aW1lCiAgaTFpaTExMTFpMWkgPSBbICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81Mi4wLjI3NDMuMTE2IFNhZmFyaS81MzcuMzYnICkgXQogIG8wb08wb09PT28gPSBpMWlpSTExSSAoICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20veXBwc2Vzc2lvbi5waHA/aScgKyBzdHIgKCB0aW1lIC4gdGltZSAoICkgKSAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiAgSUkxMUlpID0gcmUgLiBmaW5kYWxsICggJ0FTUC5ORVRfU2Vzc2lvbklkXHMoLiopJyAsIG8wb08wb09PT28gKSBbIDAgXQogIHJldHVybiAiQVNQLk5FVF9TZXNzaW9uSWQ9IiArIElJMTFJaSArICI7IgogZXhjZXB0IDogcGFzcwogcmV0dXJuICIiCiBpZiA2OSAtIDY5OiBPb09PMG9vT09vbzBPCmRlZiBvb09vMDBvb08gKCBjYXRJZCApIDoKIGkxaWkxMTExaTFpID0gWyAoICdVc2VyLUFnZW50JyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdDRlVOVFYvMy4xIENGTmV0d29yay83NTguMC4yIERhcndpbi8xNS4wLjAnICkgKSBdCiBpZiAxNyAtIDE3OiBPb09PMG9vT09vbzBPCiBvME8wb29vb29vbzAwID0gaTFpaUkxMUkgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNITTZMeTlqYVc1bFpuVnVkSFl1WTI5dEwzTnRkR0ZzYm1NdlkyOXVkR1Z1ZEM1d2FIQS9ZMjFrUFdOdmJuUmxiblFtWTJGMFpXZHZjbmxwWkQwbGN5WmtaWFpwWTJVOWFXOXpKblpsY25OcGIyNDlNQ1pyWlhrOVExbDRVRWxXUlRsaFpTWjFQV3QzY0RNd05qY3dRSEpqWVhOa0xtTnZiU1poY0hCMGVYQmxQV2x2Y3c9PScgKSAlIGNhdElkICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKIHJldHVybiBqc29uIC4gbG9hZHMgKCBvME8wb29vb29vbzAwICkKIGlmIDM4IC0gMzg6IG8wb28wbyAlIElJMTFpaUlJCmRlZiBvT29PT09PTyAoICkgOgogaWYgOSAtIDk6IE8wIC4gaUlpaTFJMTFJMUlJMQogSWkxaUlpMTExaTFpMSA9ICdteXR2cGFnZS5qc29uJwogSWkxaUlpMTExaTFpMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPME9PbyAsIElpMWlJaTExMWkxaTEgKQogdHJ5IDoKICBvbzBPMG8gPSBpMTExaTFpICggSWkxaUlpMTExaTFpMSAsIDMgKiA2MCAqIDYwICkKICBpZiBub3Qgb28wTzBvID09IE5vbmUgOgogICByZXR1cm4gb28wTzBvCiBleGNlcHQgOgogIHByaW50ICdmaWxlIGdldHRpbmcgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgaWYgNDQgLSA0NDogb09vTzBvbzBPT09vICUgb29vTzBvbzBvT09PTwogaTFpaTExMTFpMWkgPSBbICggJ1VzZXItQWdlbnQnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2MzQnZjblFsTWpCVVZpVXlNRXhwZG1Vdk1pNDNJRU5HVG1WMGQyOXlheTgzTlRndU1DNHlJRVJoY25kcGJpOHhOUzR3TGpBPScgKSApIF0KIG9vME8wbyA9IGkxaWlJMTFJICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDIxbFpHbGhiMjV6Y0c5eWRDNWtaUzkwZGk5emNHOXlkR2x2Y3k5aGNHa3VjR2h3UDJ4aGRHVnpkRDB6TlRBPScgKSAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiBwcmludCAnZGVjcnlwdGVkIHBha3R2cGFnZScKIGlmIDYgLSA2OiBvb09PMDBvT28KIG9vME8wbyA9IGpzb24gLiBsb2FkcyAoIG9vME8wbyApCiB0cnkgOgogIE9PTzBvME9PME9PICggb28wTzBvICwgSWkxaUlpMTExaTFpMSApCiBleGNlcHQgOgogIHByaW50ICdwYWt0diBmaWxlIHNhdmluZyBlcnJvcicKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIHJldHVybiBvbzBPMG8KIGlmIDgyIC0gODI6IGlJaWkxSTExSTFJSTEgLiBPb09PMG9vT09vbzBPIC8gb29vTzBvbzBvT09PTyAvIElJMTFpaUlJICogSUkxMTFpaWlpICUgaWlpaUlpMTFpCiBpZiA2MiAtIDYyOiBJSTExMWlpaWkKZGVmIG9PT29PbzBPb28gKCBhcHB0eXBlICkgOgogSWkxaUlpMTExaTFpMSA9ICduZXR3b3JrX3BhZ2UyJXMuanNvbicgJSBzdHIgKCBhcHB0eXBlICkKIElpMWlJaTExMWkxaTEgPSBvcyAuIHBhdGggLiBqb2luICggTzBPT28gLCBJaTFpSWkxMTFpMWkxICkKIHRyeSA6CiAgb28wTzBvID0gaTExMWkxaSAoIElpMWlJaTExMWkxaTEgLCAzMCAqIDYwICkKICBpZiBub3Qgb28wTzBvID09IE5vbmUgOgogICByZXR1cm4ganNvbiAuIGxvYWRzICggb28wTzBvICkKIGV4Y2VwdCA6CiAgcHJpbnQgJ2ZpbGUgZ2V0dGluZyBlcnJvcicKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICBpZiA5NiAtIDk2OiBPb09PMG9vT09vbzBPICUgb09vME8wT29vICogb09vTzBvbzBPT09vCiBPT29vMG9vTzAgPSBpMTExSUkgKCBhcHB0eXBlICkgWyAiREFUQSIgXSBbIDAgXQogaWYgNjMgLSA2MzogaTExaUlpaUlpaSAlIG9Pb08wb28wT09PbyAlIG9vIC4gb29vTzBvbzBvT09PTyAqIE9vbzAwb09vMDBvICsgSUkxMWlpSUkKIE9vMG9PT28gPSBPT29vMG9vTzAgWyAiTWFpblVSTCIgXSArICIvcGFuZWxfYXBpLnBocD9tb2RlPWxpdmUmdXNlcm5hbWU9IiArIE9Pb28wb29PMCBbICJVc2VybmFtZSIgXSArICImcGFzc3dvcmQ9IiArIE9Pb28wb29PMCBbICJQYXNzd29yZCIgXQogT29vb29vTzAgPSBPT29vMG9vTzAgWyAiVXNlckFnZW50IiBdCiBpZiA3NyAtIDc3OiBPb28wMG9PbzAwbwogdHJ5IDoKICBpZiBhcHB0eXBlID09IDEgOgogICBpMWlpMTExMWkxaSA9IFsgKCAnVXNlci1BZ2VudCcgLCBpSUlJaUlpMUkxaSAoICkgKSAsICggJ0F1dGhvcml6YXRpb24nICwgJ0Jhc2ljICVzJyAlIGJhc2U2NCAuIGI2NGRlY29kZSAoICJiV1p3TWpVMU56TkFaSE5wWVhrdVkyOXRYMmRsYnpFME9sTjFjR1Z5TVRJeiIgKSApIF0KICBlbHNlIDoKICAgaTFpaTExMTFpMWkgPSBbICggJ1VzZXItQWdlbnQnICwgaUlJSWlJaTFJMWkgKCApICkgXQogICBpZiA2MyAtIDYzOiBPbyAqIGlpaWlJaTExaSArIE9vICogbzAwMDBvT29Pb08wbyArIE9vTzBPMDAgLyBvT29PMG9vME9PT28KICBvbzBPMG8gPSBqc29uIC4gbG9hZHMgKCBpMWlpSTExSSAoIE9vMG9PT28gLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKSApCiAgT09PMG8wT08wT08gKCBqc29uIC4gZHVtcHMgKCBvbzBPMG8gKSAsIElpMWlJaTExMWkxaTEgKQogZXhjZXB0IDoKICBwcmludCAnZ2V0TmV0d29ya1RWUGFnZTIgZmlsZSBzYXZpbmcgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiByZXR1cm4gb28wTzBvCiBpZiAxNSAtIDE1OiBPMCAuIG9Pb08wb28wT09PbyAqIG9Pb08wb28wT09PbwogaWYgNjUgLSA2NTogbzBvbzBvICsgTzAgJSBPb28wMG9PbzAwbwogaWYgNzIgLSA3MjogSUkxMWlpSUkgLiBvT28wTzBPb28gLyBJSTExMWlpaWkKIGlmIDY5IC0gNjk6IElJMTFpaUlJICogSUkxMTFpaWlpIC0gT28gLSBpMUlJaSArIGkxMWlJaWlJaWkKZGVmIG8wT28wMG8wICggKSA6CiBJaTFpSWkxMTFpMWkxID0gJ25ldHdvcmtfcGFnZS5qc29uJwogSWkxaUlpMTExaTFpMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPME9PbyAsIElpMWlJaTExMWkxaTEgKQogdHJ5IDoKICBvbzBPMG8gPSBpMTExaTFpICggSWkxaUlpMTExaTFpMSAsIDIgKiA2MCAqIDYwICkKICBpZiBub3Qgb28wTzBvID09IE5vbmUgOgogICByZXR1cm4ganNvbiAuIGxvYWRzICggb28wTzBvICkKIGV4Y2VwdCA6CiAgcHJpbnQgJ2ZpbGUgZ2V0dGluZyBlcnJvcicKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICBpZiA1MCAtIDUwOiBPb29vb29vb09PICogaTFJSWkgLyBpaWlpSWkxMWkKICBpZiA4MyAtIDgzOiBpMUlJaQogIGlmIDM4IC0gMzg6IE9vb29vb29vT08gKiBpSWlpMUkxMUkxSUkxCiAgaWYgNTQgLSA1NDogT29vb29vb29PTyAuIG8wb28wbwogIGlmIDcxIC0gNzE6IG8wMDAwb09vT29PMG8KICBpZiAzMSAtIDMxOiBPb09PMG9vT09vbzBPIC4gaTExaUlpaUlpaSAuIG9vT08wMG9PbyAqIE9vTzBPMDAgJSBvMDAwMG9Pb09vTzBvIC4gT29vMDBvT28wMG8KICBpZiA5MiAtIDkyOiBPb29vb29vb09PIC8gTzAgKiBpMUlJaSArIGlJaWkxSTExSTFJSTEKICBpZiA5MyAtIDkzOiBPbyAlIG8wb28wbwogIGlmIDQ2IC0gNDY6IG9Pb08wb28wT09PbyAqIG9PbzBPME9vbyAqIG9vb08wb28wb09PT08gKiBvT29PMG9vME9PT28gLiBvT29PMG9vME9PT28KICBpZiA0MyAtIDQzOiBPbyAuIGkxSUlpCiAgaWYgNjggLSA2ODogb29vTzBvbzBvT09PTyAlIE9vTzBPMDAgLiBPMCAtIG9PbzBPME9vbyArIG9Pb08wb28wT09PbyAuIGkxMWlJaWlJaWkKICBpZiA0NSAtIDQ1OiBvbwogaTFpaTExMTFpMWkgPSBbICggJ1VzZXItQWdlbnQnICwgJ3plbXR2YWRkb25zJyApIF0KIGlmIDE3IC0gMTc6IE9vb29vb29vT08gLSBPbyArIG8wMDAwb09vT29PMG8gLiBPb29vb29vb09PICUgT29PME8wMAogaWYgOTIgLSA5MjogbzBvbzBvIC0gSUkxMWlpSUkgJSBvb09PMDBvT28gLSBPb28wMG9PbzAwbyAlIGkxSUlpCiBpZiAzOCAtIDM4OiBvT29PMG9vME9PT28gLiBPb09PMG9vT09vbzBPIC8gb09vME8wT29vICUgT29PTzBvb09Pb28wTwogaW1wb3J0IHRpbWUKIG9vME8wbyA9IGkxaWlJMTFJICggYmFzZTY0IC4gYjY0ZGVjb2RlICggImFIUjBjRG92TDNOb1lXNXBMbTltWm5Ob2IzSmxjR0Z6ZEdWaWFXNHVZMjl0TDI1bGRDNXFjMjl1IiApICsgIj9kdD0iICsgc3RyICggaW50ICggdGltZSAuIHRpbWUgKCApICkgKSAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiBpZiAxMCAtIDEwOiBPMCAuIG9vICogT29vMDBvT28wMG8gLyBpMUkxaWkxSUkxaUlJCiBvbzBPMG8gPSBqc29uIC4gbG9hZHMgKCBvbzBPMG8gKQogaWYgNjEgLSA2MTogT29PME8wMCAtIG8wb28wbwogTzBvMG9vb09vMG9vID0gImVZMmhoYm01bGJITmZiR2x6ZEE9PSIKIEkxMUkxSUlpaUlJMSA9ICJyWTE5cFpBPT0iCiBvME9JaUlJID0gIlpZMTl1WVcxbCIKIE9PMG9Pb29vID0gIlFjM1J5WldGdFgyeHBjM1E9IgogT29Pb08gPSAiY2MzUnlaV0Z0WDJsayIKIG9PT08wb09vbyA9ICJCYzNSeVpXRnRYM1Z5YkE9PSIKIGlpSTFJSUlpID0gIkFkRzlyWlc0PSIKIG9PME8wbzBvMDAgPSAiYWJHOW5iMTkxY213PSIKIE9vb09vMG9vME8wbzAwTyA9IHsgImNoYW5uZWxzIiA6IFsgXSAsICJjYXRzIiA6IFsgXSB9CiBpaTFJID0geyB9CiBPb29PbzBvbzBPMG8wME8gWyAiY2F0cyIgXSA9IG9vME8wbyBbICJjYXRlZ29yaWVzX2xpc3QiIF0KIGZvciBpSUlpaWlJaWlpaTExIGluIG9vME8wbyBbIE8wbzBvb29PbzBvbyBdIDoKICBpaWkxaSA9IDAKICBpSTFpMWkxaTFpID0gRmFsc2UKICBpZiAxMCAtIDEwOiBJSTExMWlpaWkgLiBJSTExaWlJSSAvIGkxSTFpaTFJSTFpSUkKICBpZiBsZW4gKCBpSUlpaWlJaWlpaTExIFsgT08wb09vb28gXSApIDw9IDEgOgogICBpSTFpMWkxaTFpID0gVHJ1ZQogIGZvciBPMG8wb29vT28wb28gaW4gaUlJaWlpSWlpaWkxMSBbIE9PMG9Pb29vIF0gOgogICBpaWkxaSArPSAxCiAgIGlmIDM1IC0gMzU6IGkxSTFpaTFJSTFpSUkgLyBPb08wTzAwICsgTzAgKiBpSWlpMUkxMUkxSUkxIC0gTzAKICAgaUkxMTFJSUkxID0gTzBvMG9vb09vMG9vIFsgaWlJMUlJSWkgXSBbIDogLSAxIF0gLiBkZWNvZGUgKCAiYmFzZTY0IiApCiAgIGlmIDE2IC0gMTY6IGlJaWkxSTExSTFJSTEgLSBJSTExMWlpaWkgJSBPb09PMG9vT09vbzBPICogTzAgJSBPb08wTzAwCiAgIGlmIGlJMTExSUlJMSBpbiBpaTFJIDoKICAgIGlpMUkgWyBpSTExMUlJSTEgXSArPSAxCiAgIGVsc2UgOgogICAgaWkxSSBbIGlJMTExSUlJMSBdID0gMQogICAgaWYgMTcgLSAxNzogaTFJSWkgJSBvT28wTzBPb28gLiBPb08wTzAwIC0gb09vTzBvbzBPT09vCiAgICBpZiAzNyAtIDM3OiBvMG9vMG8gKiBvMDAwMG9Pb09vTzBvICsgT29PME8wMCAqIG8wb28wbyAlIE9vbzAwb09vMDBvIC4gT29PME8wMAogICAgaWYgMzcgLSAzNzogbzAwMDBvT29Pb08wbyAvIElJMTExaWlpaQogICAgaWYgNjYgLSA2NjogT28gKyBpaWlpSWkxMWkgJSBPb29vb29vb09PCiAgICBpZiAyMyAtIDIzOiBpaWlpSWkxMWkgLiBvT28wTzBPb28gKyBpSWlpMUkxMUkxSUkxCiAgIE9vb09vMG9vME8wbzAwTyBbICJjaGFubmVscyIgXSAuIGFwcGVuZCAoIHsKICdjaWQnIDogaUlJaWlpSWlpaWkxMSBbIEkxMUkxSUlpaUlJMSBdIFsgOiAtIDEgXSAuIGRlY29kZSAoICJiYXNlNjQiICkgLAogJ2NobmFtZScgOiBpSUlpaWlJaWlpaTExIFsgbzBPSWlJSSBdIFsgOiAtIDEgXSAuIGRlY29kZSAoICJiYXNlNjQiICkgLAogICAnc3RyZWFtaWQnIDogTzBvMG9vb09vMG9vIFsgT29Pb08gXSBbIDogLSAxIF0gLiBkZWNvZGUgKCAiYmFzZTY0IiApICwKICdzdHJlYW11cmwnIDogTzBvMG9vb09vMG9vIFsgb09PTzBvT29vIF0gWyAxIDogXSAuIGRlY29kZSAoICJiYXNlNjQiICkgLAogJ3Rva2VuJyA6IE8wbzBvb29PbzBvbyBbIGlpSTFJSUlpIF0gWyA6IC0gMSBdIC4gZGVjb2RlICggImJhc2U2NCIgKSAsCiAnbG9nbycgOiBpSUlpaWlJaWlpaTExIFsgb08wTzBvMG8wMCBdIFsgMSA6IF0gLiBkZWNvZGUgKCAiYmFzZTY0IiApICwKICdxdWFsaXR5JyA6IE8wbzBvb29PbzBvbyBbICdxdWFsaXR5JyBdICwKICdyZWZlcmVyJyA6IE8wbzBvb29PbzBvbyBbICdyZWZlcmVyJyBdICwKICd1c2VyX2FnZW50JyA6IE8wbzBvb29PbzBvbyBbICd1c2VyX2FnZW50JyBdICwKICdwbGF5ZXJfdXNlcl9hZ2VudCcgOiBPMG8wb29vT28wb28gWyAncGxheWVyX3VzZXJfYWdlbnQnIF0gLAogJ3BsYXllcl9yZWZlcmVyJyA6IE8wbzBvb29PbzBvbyBbICdwbGF5ZXJfcmVmZXJlcicgXSAsCiAnY2F0X2lkJyA6IGlJSWlpaUlpaWlpMTEgWyAnY2F0X2lkJyBdICwKICdjb3VudHJ5X2lkJyA6IGlJSWlpaUlpaWlpMTEgWyAnY291bnRyeV9pZCcgXSAsCiAnc3RhdHVzJyA6IGlJSWlpaUlpaWlpMTEgWyAnc3RhdHVzJyBdICwKICdjYXRfbmFtZScgOiBpSUlpaWlJaWlpaTExIFsgJ2NhdF9uYW1lJyBdICwKICdjb3VudHJ5X25hbWUnIDogaUlJaWlpSWlpaWkxMSBbICdjb3VudHJ5X25hbWUnIF0KIH0gKQogICBpZiAxNyAtIDE3OiBvb29PMG9vMG9PT09PCiBwcmludCBpaTFJCiBpbXBvcnQgb3BlcmF0b3IKIHByaW50IHNvcnRlZCAoIGlpMUkgLiBpdGVtcyAoICkgLCBrZXkgPSBvcGVyYXRvciAuIGl0ZW1nZXR0ZXIgKCAxICkgKQogaWYgMTIgLSAxMjogaTFJSWkgLiBvb09PMDBvT28KIHRyeSA6CiAgT09PMG8wT08wT08gKCBqc29uIC4gZHVtcHMgKCBPb29PbzBvbzBPMG8wME8gKSAsIElpMWlJaTExMWkxaTEgKQogZXhjZXB0IDoKICBwcmludCAnbmV0d29ya3R2IGZpbGUgc2F2aW5nIGVycm9yJwogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcmV0dXJuIE9vb09vMG9vME8wbzAwTwogaWYgMTQgLSAxNDogSUkxMWlpSUkgKyBJSTExMWlpaWkgJSBJSTExaWlJSSAuIGlpaWlJaTExaSAqIE9vCiBpZiA1NCAtIDU0OiBPbyAqIE9vT08wb29PT29vME8gLSBvMG9vMG8KZGVmIG9vMCAoIGNhdCApIDoKIElpMWlJaTExMWkxaTEgPSAnZmFzdF8lc19wYWdlLmpzb24nICUgY2F0CiBJaTFpSWkxMTFpMWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgSWkxaUlpMTExaTFpMSApCiB0cnkgOgogIG9vME8wbyA9IGkxMTFpMWkgKCBJaTFpSWkxMTFpMWkxICwgMyAqIDYwICogNjAgKQogIGlmIG5vdCBvbzBPMG8gPT0gTm9uZSA6CiAgIHJldHVybiBqc29uIC4gbG9hZHMgKCBvbzBPMG8gKQogZXhjZXB0IDoKICBwcmludCAnZmlsZSBnZXR0aW5nIGVycm9yJwogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogIGlmIDE1IC0gMTU6IGkxSTFpaTFJSTFpSUkgLyBPMAogT08wT29vbzBvbyA9IEkxaTExMUlpSWlJaTEgKCApCiBpMWlpMTExMWkxaSA9IFsgKCAnVXNlci1BZ2VudCcgLCBpSUlJaUlpMUkxaSAoICkgKSAsICggJ0F1dGhvcml6YXRpb24nICwgJ0Jhc2ljICVzJyAlIGJhc2U2NCAuIGI2NGVuY29kZSAoIE9PME9vb28wb28gWyAiREFUQSIgXSBbIDAgXSBbICJQYXNzd29yZCIgXSApICkgXQogb28wTzBvID0gaTFpaUkxMUkgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMM04zYVdaMGMzUnlaV0Z0ZWk1amIyMHZVM2RwWm5SVGRISmxZVzB2WVhCcExuQm9jRDlqWVhSZmFXUTlKWE09JyApICUgY2F0ICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKIHRyeSA6CiAgT29Pb28gPSBqc29uIC4gbG9hZHMgKCBvbzBPMG8gKQogZXhjZXB0IDoKICBPb09vbyA9IGpzb24gLiBsb2FkcyAoIG9vME8wbyAuIHNwbGl0ICggJ119JyApIFsgMCBdICsgJ119JyApCiB0cnkgOgogIE9PTzBvME9PME9PICggb28wTzBvICwgSWkxaUlpMTExaTFpMSApCiBleGNlcHQgOgogIHByaW50ICdwYWt0diBmaWxlIHNhdmluZyBlcnJvcicKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIHJldHVybiBPb09vbwogaWYgOTcgLSA5NzogT28gKiBPb08wTzAwIC8gT29vMDBvT28wMG8gLiBJSTExMWlpaWkgLyBpMUkxaWkxSUkxaUlJIC8gaTFJMWlpMUlJMWlJSQogaWYgMjUgLSAyNTogaTFJMWlpMUlJMWlJSQpkZWYgTzAwT09Pb09PT28wbyAoICkgOgogaWYgODUgLSA4NTogT29PME8wMCArIE9vTzBPMDAgJSBPb09PMG9vT09vbzBPICsgbzBvbzBvCiBJaTFpSWkxMTFpMWkxID0gJ3Bha3R2cGFnZS5qc29uJwogSWkxaUlpMTExaTFpMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPME9PbyAsIElpMWlJaTExMWkxaTEgKQogdHJ5IDoKICBvbzBPMG8gPSBpMTExaTFpICggSWkxaUlpMTExaTFpMSAsIDMgKiA2MCAqIDYwICkKICBpZiBub3Qgb28wTzBvID09IE5vbmUgOgogICByZXR1cm4gb28wTzBvCiBleGNlcHQgOgogIHByaW50ICdmaWxlIGdldHRpbmcgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgaWYgNTcgLSA1Nzogb09vME8wT29vIC8gb09vTzBvbzBPT09vCiBPbzBPb08wMG9PTzBvID0gdXJsbGliMiAuIFJlcXVlc3QgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMM050WVhKMFpYSnNiMmRwZUM1amIyMHZhVzl6VTJWamRYSmxRWEJ3Y3k5UVlXdFVWaTlXTVMwekwyMWhhVzVEYjI1MFpXNTBMbkJvY0E9PScgKSApCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJWWE5sY2kxQloyVnVkQT09IiApICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggIlVHRnJWRll2TVM0ekxqQWdRMFpPWlhSM2IzSnJMemMxT0M0d0xqSWdSR0Z5ZDJsdUx6RTFMakF1TUE9PSIgKSApCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJRWFYwYUc5eWFYcGhkR2x2Ymc9PSIgKSAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICJRbUZ6YVdNZ1lXdEdNMWxVUlhkamVuQXdaSHBHZFdFeWQzcFJiVVoxVVZjMVFrNXFaek09IiApICkKIE9PTzAwTyA9IHVybGxpYjIgLiB1cmxvcGVuICggT28wT29PMDBvT08wbyApCiBPT29PTzBvbzBvb08gPSBPT08wME8gLiByZWFkICggKQogaW1wb3J0IHJjCiBPMDBPMCA9IHJjIC4gUk5DcnlwdG9yICggKQogaUlvMDBvbyA9IGJhc2U2NCAuIGI2NGRlY29kZSAoIE9Pb09PMG9vMG9vTyApCiBpSTFJMUkgPSBPMDBPMCAuIGRlY3J5cHQgKCBpSW8wMG9vICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggIllrRnVaM0kwYkRGMGRHd3pOVFkzIiApICkKIGlJMUkxSSA9IGpzb24gLiBsb2FkcyAoIGlJMUkxSSApCiBPb2lJSTFJMSA9IGlJMUkxSSBbIDAgXSBbICJkYXRhVXJsIiBdCiBpZiA5NCAtIDk0OiBPMCAvIG8wMDAwb09vT29PMG8gKyBvbyAtIG9Pb08wb28wT09PbyAqIGkxSTFpaTFJSTFpSUkgKyBPb29vb29vb09PCiBPbzBPb08wMG9PTzBvID0gdXJsbGliMiAuIFJlcXVlc3QgKCBPb2lJSTFJMSApCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJWWE5sY2kxQloyVnVkQT09IiApICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggIlVHRnJWRll2TVM0ekxqQWdRMFpPWlhSM2IzSnJMemMxT0M0d0xqSWdSR0Z5ZDJsdUx6RTFMakF1TUE9PSIgKSApCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJRWFYwYUc5eWFYcGhkR2x2Ymc9PSIgKSAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICJRbUZ6YVdNZ1lXdEdNMWxVUlhkamVuQXdaSHBHZFdFeWQzcFJiVVoxVVZjMVFrNXFaek09IiApICkKIHByaW50ICdnZXR0aW5nIHBha3R2cGFnZScKIE9PTzAwTyA9IHVybGxpYjIgLiB1cmxvcGVuICggT28wT29PMDBvT08wbyApCiBPT29PTzBvbzBvb08gPSBPT08wME8gLiByZWFkICggKQogcHJpbnQgJ3JlYWRpbmcgcGFrdHZwYWdlJwogaUlvMDBvbyA9IGJhc2U2NCAuIGI2NGRlY29kZSAoIE9Pb09PMG9vMG9vTyApCiBwcmludCAnZGVjb2RlZCBwYWt0dnBhZ2UnCiBpSTFJMUkgPSBPMDBPMCAuIGRlY3J5cHQgKCBpSW8wMG9vICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggIllrRnVaM0kwYkRGMGRHd3pOVFkzIiApICkKIHByaW50ICdkZWNyeXB0ZWQgcGFrdHZwYWdlJwogaWYgODYgLSA4NjogT28gKyBpSWlpMUkxMUkxSUkxCiBvbzBPMG8gPSBqc29uIC4gbG9hZHMgKCBpSTFJMUkgKQogdHJ5IDoKICBPT08wbzBPTzBPTyAoIG9vME8wbyAsIElpMWlJaTExMWkxaTEgKQogZXhjZXB0IDoKICBwcmludCAncGFrdHYgZmlsZSBzYXZpbmcgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiByZXR1cm4gb28wTzBvCiBpZiAzNyAtIDM3OiBJSTExMWlpaWkgKiBvMG9vMG8gKyBPbyAvIElJMTFpaUlJICogb09vTzBvbzBPT09vCiBpZiAyNSAtIDI1OiBpMUkxaWkxSUkxaUlJICogb28gLyBPb09PMG9vT09vbzBPIC8gb09vTzBvbzBPT09vIC4gbzAwMDBvT29Pb08wbyAvIGkxSUlpCmRlZiBpSWlJMWlJaWkgKCApIDoKIElpMWlJaTExMWkxaTEgPSAndW5pdHZwYWdlLmpzb24nCiBJaTFpSWkxMTFpMWkxID0gb3MgLiBwYXRoIC4gam9pbiAoIE8wT09vICwgSWkxaUlpMTExaTFpMSApCiB0cnkgOgogIG9vME8wbyA9IGkxMTFpMWkgKCBJaTFpSWkxMTFpMWkxICwgMSAqIDYwICogNjAgKQogIGlmIG5vdCBvbzBPMG8gPT0gTm9uZSA6CiAgIHJldHVybiBvbzBPMG8KIGV4Y2VwdCA6CiAgcHJpbnQgJ2ZpbGUgZ2V0dGluZyBlcnJvcicKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICBpZiA5NyAtIDk3OiBPb28wMG9PbzAwbyAuIGlJaWkxSTExSTFJSTEgJSBpMUkxaWkxSUkxaUlJICogaUlpaTFJMTFJMUlJMSAqIGlJaWkxSTExSTFJSTEKICBpZiAzNyAtIDM3OiBvMG9vMG8gLiBPb29vb29vb09PIC8gT28gKyBJSTExMWlpaWkKICBpZiA5MCAtIDkwOiBvMDAwMG9Pb09vTzBvICogaTFJMWlpMUlJMWlJSSAvIElJMTFpaUlJCiB0cnkgOgogIE9vME9vTzAwb09PMG8gPSB1cmxsaWIyIC4gUmVxdWVzdCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyNWxkMk50Y3pab2NIQmhheTVrZVc1a2JuTXVkSFl2UTAxVE9DOWpiWE12V0ZabGNpOW5aWFJEYjI1MGRGWXhMVEF1Y0dodycgKSApCiAgT28wT29PMDBvT08wbyAuIGFkZF9oZWFkZXIgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiVlhObGNpMUJaMlZ1ZEE9PSIgKSAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICJWVzVwZG1WeWMyRnNKVEl3VTNCdmNuUnpKVEl3U0VRbE1qQlVWaTh4TGpFZ1EwWk9aWFIzYjNKckx6YzFPQzR3TGpJZ1JHRnlkMmx1THpFMUxqQXVNQT09IiApICkKICBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJRWFYwYUc5eWFYcGhkR2x2Ymc9PSIgKSAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICJRbUZ6YVdNZ1VUSXhlazlHVm5wS1NFazJVVEl4ZWs5R1ZucEtTRXBCWTBWR1FWRklaSFpqYTFFOSIgKSApCiAgT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICkKICBPT29PTzBvbzBvb08gPSBPT08wME8gLiByZWFkICggKQogIGltcG9ydCByYwogIE8wME8wID0gcmMgLiBSTkNyeXB0b3IgKCApCiAgaUlvMDBvbyA9IGJhc2U2NCAuIGI2NGRlY29kZSAoIE9Pb09PMG9vMG9vTyApCiAgaUkxSTFJID0gTzAwTzAgLiBkZWNyeXB0ICggaUlvMDBvbyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICJRMjFUT0RoUVFFQkFjMU4zTUhKa056ZzIiICkgKQogIGlJMUkxSSA9IGpzb24gLiBsb2FkcyAoIGlJMUkxSSApCiAgT29pSUkxSTEgPSBpSTFJMUkgWyAwIF0gWyAiTGl2ZUxpbmsiIF0KICBpZiA2OCAtIDY4OiBvT28wTzBPb28KICBPbzBPb08wMG9PTzBvID0gdXJsbGliMiAuIFJlcXVlc3QgKCBPb2lJSTFJMSApCiAgT28wT29PMDBvT08wbyAuIGFkZF9oZWFkZXIgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiVlhObGNpMUJaMlZ1ZEE9PSIgKSAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICJWVzVwZG1WeWMyRnNKVEl3VTNCdmNuUnpKVEl3U0VRbE1qQlVWaTh4TGpFZ1EwWk9aWFIzYjNKckx6YzFPQzR3TGpJZ1JHRnlkMmx1THpFMUxqQXVNQT09IiApICkKICBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJRWFYwYUc5eWFYcGhkR2x2Ymc9PSIgKSAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICJRbUZ6YVdNZ1VUSXhlazlHVm5wS1NFazJVVEl4ZWs5R1ZucEtTRXBCWTBWR1FWRklaSFpqYTFFOSIgKSApCiAgT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICkKICBPT29PTzBvbzBvb08gPSBPT08wME8gLiByZWFkICggKQogIGlmIDY1IC0gNjU6IGlpaWlJaTExaQogIGlJbzAwb28gPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCBPT29PTzBvbzBvb08gKQogIGlJMUkxSSA9IE8wME8wIC4gZGVjcnlwdCAoIGlJbzAwb28gLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiUTIxVE9EaFFRRUJBYzFOM01ISmtOemcyIiApICkKICBwcmludCBpSTFJMUkKICBvbzBPMG8gPSBqc29uIC4gbG9hZHMgKCBpSTFJMUkgKQogZXhjZXB0IDoKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICBwcmludCAndHJ5aW5nIGRpZmZlcmVudCBzZXJ2ZXInCiAgT28wT29PMDBvT08wbyA9IHVybGxpYjIgLiBSZXF1ZXN0ICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDNWdWFYWmxjbk5oYkhSMkxtUmtibk11Ym1WMEwxVnVhWFpsY25OaGJDMVVWaTFJUkM5amJYTXZXRlpsY2k5blpYUkRiMjUwZEZZeExUQXVjR2h3JyApICkKICBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJWWE5sY2kxQloyVnVkQT09IiApICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggIlZXNXBkbVZ5YzJGc1ZGWklSQzh4TGpBZ1EwWk9aWFIzYjNKckx6YzFPQzR3TGpJZ1JHRnlkMmx1THpFMUxqQXVNQT09IiApICkKICBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJRWFYwYUc5eWFYcGhkR2x2Ymc9PSIgKSAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICJRbUZ6YVdNZ1lXcE9NR1J0Vm5sak1rWnpUMjFTZVZGSFkzZGlha1oyWXpCQk0wOUVXVDA9IiApICkKICBPT08wME8gPSB1cmxsaWIyIC4gdXJsb3BlbiAoIE9vME9vTzAwb09PMG8gKQogIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiAgaW1wb3J0IHJjCiAgTzAwTzAgPSByYyAuIFJOQ3J5cHRvciAoICkKICBpSW8wMG9vID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggT09vT08wb28wb29PICkKICBpSTFJMUkgPSBPMDBPMCAuIGRlY3J5cHQgKCBpSW8wMG9vICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggImRHVnNZekE1T1ZCQWMzTjNiM0prTnpnMiIgKSApCiAgaUkxSTFJID0ganNvbiAuIGxvYWRzICggaUkxSTFJICkKICBPb2lJSTFJMSA9IGlJMUkxSSBbIDAgXSBbICJMaXZlTGluayIgXQogIGlmIDgyIC0gODI6IE9vbzAwb09vMDBvCiAgT28wT29PMDBvT08wbyA9IHVybGxpYjIgLiBSZXF1ZXN0ICggT29pSUkxSTEgKQogIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggYmFzZTY0IC4gYjY0ZGVjb2RlICggIlZYTmxjaTFCWjJWdWRBPT0iICkgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiVlc1cGRtVnljMkZzVkZaSVJDOHhMakFnUTBaT1pYUjNiM0pyTHpjMU9DNHdMaklnUkdGeWQybHVMekUxTGpBdU1BPT0iICkgKQogIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggYmFzZTY0IC4gYjY0ZGVjb2RlICggIlFYVjBhRzl5YVhwaGRHbHZiZz09IiApICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggIlFtRnphV01nWVdwT01HUnRWbmxqTWtaelQyMVNlVkZIWTNkaWFrWjJZekJCTTA5RVdUMD0iICkgKQogIE9PTzAwTyA9IHVybGxpYjIgLiB1cmxvcGVuICggT28wT29PMDBvT08wbyApCiAgT09vT08wb28wb29PID0gT09PMDBPIC4gcmVhZCAoICkKICBpZiA4MCAtIDgwOiBpMUlJaSAlIG9PbzBPME9vbyArIG9vT08wMG9PbyAtIE9vb29vb29vT08gLyBpSWlpMUkxMUkxSUkxICsgbzBvbzBvCiAgaUlvMDBvbyA9IGJhc2U2NCAuIGI2NGRlY29kZSAoIE9Pb09PMG9vMG9vTyApCiAgaUkxSTFJID0gTzAwTzAgLiBkZWNyeXB0ICggaUlvMDBvbyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICJkR1ZzWXpBNU9WQkFjM04zYjNKa056ZzIiICkgKQogIHByaW50IGlJMUkxSQogIG9vME8wbyA9IGpzb24gLiBsb2FkcyAoIGlJMUkxSSApCiAgaWYgNjUgLSA2NTogbzAwMDBvT29Pb08wbwogdHJ5IDoKICBPT08wbzBPTzBPTyAoIG9vME8wbyAsIElpMWlJaTExMWkxaTEgKQogZXhjZXB0IDoKICBwcmludCAndW5pdHYgZmlsZSBzYXZpbmcgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiByZXR1cm4gb28wTzBvCiBpZiA3MSAtIDcxOiBvMG9vMG8gJSBvMG9vMG8gLiBpaWlpSWkxMWkgKyBpMTFpSWlpSWlpIC0gaTExaUlpaUlpaQpkZWYgSWkgKCApIDoKIElpMWlJaTExMWkxaTEgPSAnd3R2cGFnZS5qc29uJwogSWkxaUlpMTExaTFpMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPME9PbyAsIElpMWlJaTExMWkxaTEgKQogdHJ5IDoKICBvbzBPMG8gPSBpMTExaTFpICggSWkxaUlpMTExaTFpMSAsIDEgKiA2MCAqIDYwICkKICBpZiBub3Qgb28wTzBvID09IE5vbmUgOgogICByZXR1cm4gb28wTzBvCiBleGNlcHQgOgogIHByaW50ICdmaWxlIGdldHRpbmcgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgaWYgMTYgLSAxNjogaUlpaTFJMTFJMUlJMSAvIG9vIC8gbzBvbzBvIC0gaTExaUlpaUlpaSAuIE9vIC8gSUkxMWlpSUkKIE9vME9vTzAwb09PMG8gPSB1cmxsaWIyIC4gUmVxdWVzdCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyTnRjekV6TG1sd2RIWnpZV3hsTG1OdmJTOURUVk14TXk5amJYTXZRM1pCV2xwWUwyZGxkRU52Ym5SMFZqRXRNQzV3YUhBPScgKSApCiBpZiAxMyAtIDEzOiBPb28wMG9PbzAwbyAlIE8wIC0gbzBvbzBvICogT29vb29vb29PTyAvIE9vTzBPMDAgLSBPb29vb29vb09PCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJWWE5sY2kxQloyVnVkQT09IiApICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggIlYyOXliR1FsTWpCVVZpVXlNRkJzZFhNbE1qQklSQzh4TGpFZ1EwWk9aWFIzYjNKckx6YzFPQzR3TGpJZ1JHRnlkMmx1THpFMUxqQXVNQT09IiApICkKIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggYmFzZTY0IC4gYjY0ZGVjb2RlICggIlFYVjBhRzl5YVhwaGRHbHZiZz09IiApICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggIlFtRnphV01nV2tkc2MxRkhVbkJpUkhCb1VWaE9lVlZEVVhOYVIxcFVZbGd3UFE9PSIgKSApCiBPT08wME8gPSB1cmxsaWIyIC4gdXJsb3BlbiAoIE9vME9vTzAwb09PMG8gKQogT09vT08wb28wb29PID0gT09PMDBPIC4gcmVhZCAoICkKIGltcG9ydCByYwogTzAwTzAgPSByYyAuIFJOQ3J5cHRvciAoICkKIGlJbzAwb28gPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCBPT29PTzBvbzBvb08gKQogaUkxSTFJID0gTzAwTzAgLiBkZWNyeXB0ICggaUlvMDBvbyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICJWVzFoY21Kb1lXbERUWE5RTUhNamN5NTNNSEprIiApICkKIGlJMUkxSSA9IGpzb24gLiBsb2FkcyAoIGlJMUkxSSApCiBPb2lJSTFJMSA9IGlJMUkxSSBbIDAgXSBbICJMaXZlTGluayIgXQogaWYgNzggLSA3ODogaWlpaUlpMTFpICUgT29vb29vb29PTwogT28wT29PMDBvT08wbyA9IHVybGxpYjIgLiBSZXF1ZXN0ICggT29pSUkxSTEgKQogT28wT29PMDBvT08wbyAuIGFkZF9oZWFkZXIgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiVlhObGNpMUJaMlZ1ZEE9PSIgKSAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICJWMjl5YkdRbE1qQlVWaVV5TUZCc2RYTWxNakJJUkM4eExqRWdRMFpPWlhSM2IzSnJMemMxT0M0d0xqSWdSR0Z5ZDJsdUx6RTFMakF1TUE9PSIgKSApCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJRWFYwYUc5eWFYcGhkR2x2Ymc9PSIgKSAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICJRbUZ6YVdNZ1drZHNjMUZIVW5CaVJIQm9VVmhPZVZWRFVYTmFSMXBVWWxnd1BRPT0iICkgKQogT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICkKIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiBpZiA3MyAtIDczOiBvbyAlIE9vICUgb29vTzBvbzBvT09PTyArIGkxSUlpIC0gT29vb29vb29PTyAvIGlpaWlJaTExaQogaUlvMDBvbyA9IGJhc2U2NCAuIGI2NGRlY29kZSAoIE9Pb09PMG9vMG9vTyApCiBpSTFJMUkgPSBPMDBPMCAuIGRlY3J5cHQgKCBpSW8wMG9vICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggIlZXMWhjbUpvWVdsRFRYTlFNSE1qY3k1M01ISmsiICkgKQogaWYgNzggLSA3ODogT29vb29vb29PTyAlIGlpaWlJaTExaSAtIGkxMWlJaWlJaWkKIG9vME8wbyA9IGpzb24gLiBsb2FkcyAoIGlJMUkxSSApCiB0cnkgOgogIE9PTzBvME9PME9PICggb28wTzBvICwgSWkxaUlpMTExaTFpMSApCiBleGNlcHQgOgogIHByaW50ICd3dHYgZmlsZSBzYXZpbmcgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiByZXR1cm4gb28wTzBvCiBpZiAzNyAtIDM3OiBvb29PMG9vMG9PT09PICUgbzAwMDBvT29Pb08wbyAlIGkxSUlpCmRlZiBpMW9vME9PME9vICggKSA6CiBJaTFpSWkxMTFpMWkxID0gJ2d0dnBhZ2UuanNvbicKIElpMWlJaTExMWkxaTEgPSBvcyAuIHBhdGggLiBqb2luICggTzBPT28gLCBJaTFpSWkxMTFpMWkxICkKIHRyeSA6CiAgb28wTzBvID0gaTExMWkxaSAoIElpMWlJaTExMWkxaTEgLCAxICogNjAgKiA2MCApCiAgaWYgbm90IG9vME8wbyA9PSBOb25lIDoKICAgcmV0dXJuIG9vME8wbwogZXhjZXB0IDoKICBwcmludCAnZmlsZSBnZXR0aW5nIGVycm9yJwogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogIGlmIDIzIC0gMjM6IE9vIC0gTzAgKyBpMTFpSWlpSWlpCiBPbzBPb08wMG9PTzBvID0gdXJsbGliMiAuIFJlcXVlc3QgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMM2QzZHk1emIyWjBiV0ZuYm1GMFpTNWpiMjB2UTAxVExWTmxjblpsY2kxVGNHOXlkSE10VkZZdldGWmxjaTlRVkZZdFUzQnZjblJ6TFZSV0wyZGxkRU52Ym5SMFZqRXRNQzV3YUhBPScgKSApCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJWWE5sY2kxQloyVnVkQT09IiApICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggIlVGUldVM0J2Y25Sekx6RXVNQ0JEUms1bGRIZHZjbXN2TnpVNExqQXVNaUJFWVhKM2FXNHZNVFV1TUM0dyIgKSApCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJRWFYwYUc5eWFYcGhkR2x2Ymc9PSIgKSAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICJRbUZ6YVdNZ1ZGUkNjVTFGZEVGaE1FVTJZMFZHZDJOSVZrRk9hbWN6VVVWUmVGa3pVWGhpTWpWQ1kyNXJQUT09IiApICkKIE9PTzAwTyA9IHVybGxpYjIgLiB1cmxvcGVuICggT28wT29PMDBvT08wbyApCiBPT29PTzBvbzBvb08gPSBPT08wME8gLiByZWFkICggKQogaW1wb3J0IHJjCiBPMDBPMCA9IHJjIC4gUk5DcnlwdG9yICggKQogaUlvMDBvbyA9IGJhc2U2NCAuIGI2NGRlY29kZSAoIE9Pb09PMG9vMG9vTyApCiBpSTFJMUkgPSBPMDBPMCAuIGRlY3J5cHQgKCBpSW8wMG9vICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggImRGY3hiak5zWlVJemJucEFORGMxUUdRd016TT0iICkgKQogaUkxSTFJID0ganNvbiAuIGxvYWRzICggaUkxSTFJICkKIE9vaUlJMUkxID0gaUkxSTFJIFsgMCBdIFsgIkxpdmVMaW5rIiBdCiBpZiA5OCAtIDk4OiBPb29vb29vb09PCiBPbzBPb08wMG9PTzBvID0gdXJsbGliMiAuIFJlcXVlc3QgKCBPb2lJSTFJMSApCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJWWE5sY2kxQloyVnVkQT09IiApICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggIlVGUldVM0J2Y25Sekx6RXVNQ0JEUms1bGRIZHZjbXN2TnpVNExqQXVNaUJFWVhKM2FXNHZNVFV1TUM0dyIgKSApCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJRWFYwYUc5eWFYcGhkR2x2Ymc9PSIgKSAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICJRbUZ6YVdNZ1ZGUkNjVTFGZEVGaE1FVTJZMFZHZDJOSVZrRk9hbWN6VVVWUmVGa3pVWGhpTWpWQ1kyNXJQUT09IiApICkKIE9PTzAwTyA9IHVybGxpYjIgLiB1cmxvcGVuICggT28wT29PMDBvT08wbyApCiBPT29PTzBvbzBvb08gPSBPT08wME8gLiByZWFkICggKQogaWYgNjEgLSA2MTogT29vMDBvT28wMG8gLiBvb29PMG9vMG9PT09PIC4gTzAgKyBPb29vb29vb09PICsgTzAKIGlJbzAwb28gPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCBPT29PTzBvbzBvb08gKQogaUkxSTFJID0gTzAwTzAgLiBkZWNyeXB0ICggaUlvMDBvbyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICJkRmN4YmpOc1pVSXpibnBBTkRjMVFHUXdNek09IiApICkKIGlmIDY1IC0gNjU6IGkxSUlpICogSUkxMWlpSUkgKiBPb29vb29vb09PIC0gb29vTzBvbzBvT09PTyAuIGkxSTFpaTFJSTFpSUkgLSBvb09PMDBvT28KIG9vME8wbyA9IGpzb24gLiBsb2FkcyAoIGlJMUkxSSApCiB0cnkgOgogIE9PTzBvME9PME9PICggb28wTzBvICwgSWkxaUlpMTExaTFpMSApCiBleGNlcHQgOgogIHByaW50ICd3dHYgZmlsZSBzYXZpbmcgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiByZXR1cm4gb28wTzBvCiBpZiA3MSAtIDcxOiBvMDAwMG9Pb09vTzBvICogb09vME8wT29vCmRlZiBJMUlJSTFJMUlpSSAoICkgOgogSWkxaUlpMTExaTFpMSA9ICdwaXR2cGFnZS5qc29uJwogSWkxaUlpMTExaTFpMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPME9PbyAsIElpMWlJaTExMWkxaTEgKQogdHJ5IDoKICBvbzBPMG8gPSBpMTExaTFpICggSWkxaUlpMTExaTFpMSAsIDEgKiA2MCAqIDYwICkKICBpZiBub3Qgb28wTzBvID09IE5vbmUgOgogICByZXR1cm4gb28wTzBvCiBleGNlcHQgOgogIHByaW50ICdmaWxlIGdldHRpbmcgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgaWYgMzMgLSAzMzogaTFJSWkgLiBpMUlJaSAqIE9vb29vb29vT08gJSBvMG9vMG8gKiBPb28wMG9PbzAwbwogT28wT29PMDBvT08wbyA9IHVybGxpYjIgLiBSZXF1ZXN0ICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDNOdFlYSjBaWEpzYjJkcGVDNWpiMjB2VG1WM1FYQndjeTlRWVd0SmJtUnBZVk53YjNKMGMwaEVMMVl4TFRBdmJXRnBia052Ym5SbGJuUXVjR2h3JyApICkKIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggYmFzZTY0IC4gYjY0ZGVjb2RlICggIlZYTmxjaTFCWjJWdWRBPT0iICkgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiVUdGckpUSXdTVzVrYVdFbE1qQlRjRzl5ZEhNbE1qQklSQzh4TGpBZ1EwWk9aWFIzYjNKckx6YzFPQzR3TGpJZ1JHRnlkMmx1THpFMUxqQXVNQT09IiApICkKIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggYmFzZTY0IC4gYjY0ZGVjb2RlICggIlFYVjBhRzl5YVhwaGRHbHZiZz09IiApICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggIlFtRnphV01nWVd0R00xbFVSWGRqZW5Bd1pIcEdkV0V5ZDNwUmJVWjFVVmMxUWs1cVp6TT0iICkgKQogT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICkKIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiBpbXBvcnQgcmMKIE8wME8wID0gcmMgLiBSTkNyeXB0b3IgKCApCiBpSW8wMG9vID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggT09vT08wb28wb29PICkKIGlJMUkxSSA9IE8wME8wIC4gZGVjcnlwdCAoIGlJbzAwb28gLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiWWtGdVozSTBiREYwZEd3ek5UWTMiICkgKQogaWYgNjQgLSA2NDogT28gLyBPbyArIG9Pb08wb28wT09PbyAqIElJMTFpaUlJICUgSUkxMWlpSUkKIGlJMUkxSSA9IGpzb24gLiBsb2FkcyAoIGlJMUkxSSApCiBPb2lJSTFJMSA9IGlJMUkxSSBbIDAgXSBbICJkYXRhVXJsIiBdCiBpZiA4NyAtIDg3OiBvb09PMDBvT28gKiBPb08wTzAwCiBPbzBPb08wMG9PTzBvID0gdXJsbGliMiAuIFJlcXVlc3QgKCBPb2lJSTFJMSApCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJWWE5sY2kxQloyVnVkQT09IiApICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggIlVHRnJKVEl3U1c1a2FXRWxNakJUY0c5eWRITWxNakJJUkM4eExqQWdRMFpPWlhSM2IzSnJMemMxT0M0d0xqSWdSR0Z5ZDJsdUx6RTFMakF1TUE9PSIgKSApCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJRWFYwYUc5eWFYcGhkR2x2Ymc9PSIgKSAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICJRbUZ6YVdNZ1lXdEdNMWxVUlhkamVuQXdaSHBHZFdFeWQzcFJiVVoxVVZjMVFrNXFaek09IiApICkKIE9PTzAwTyA9IHVybGxpYjIgLiB1cmxvcGVuICggT28wT29PMDBvT08wbyApCiBPT29PTzBvbzBvb08gPSBPT08wME8gLiByZWFkICggKQogaWYgODMgLSA4MzogaTFJSWkgKiBvMG9vMG8gLSBvb29PMG9vMG9PT09PIC8gbzAwMDBvT29Pb08wbwogaUlvMDBvbyA9IGJhc2U2NCAuIGI2NGRlY29kZSAoIE9Pb09PMG9vMG9vTyApCiBpSTFJMUkgPSBPMDBPMCAuIGRlY3J5cHQgKCBpSW8wMG9vICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggIllrRnVaM0kwYkRGMGRHd3pOVFkzIiApICkKIGlmIDQ4IC0gNDg6IGlpaWlJaTExaSAuIElJMTExaWlpaSAtIG9PbzBPME9vbyAlIGkxSUlpIC4gb09vME8wT29vCiBvbzBPMG8gPSBqc29uIC4gbG9hZHMgKCBpSTFJMUkgKQogdHJ5IDoKICBPT08wbzBPTzBPTyAoIG9vME8wbyAsIElpMWlJaTExMWkxaTEgKQogZXhjZXB0IDoKICBwcmludCAncGl0diBmaWxlIHNhdmluZyBlcnJvcicKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIHJldHVybiBvbzBPMG8KIGlmIDMyIC0gMzI6IG8wMDAwb09vT29PMG8gKiBvbyAtIElJMTFpaUlJIC4gT29PME8wMCAvIE8wICsgbzAwMDBvT29Pb08wbwpkZWYgb09PbzAwb29PMDAgKCBuZXdjb2RlID0gRmFsc2UgKSA6CiBvMG9PME9PID0gb29PMDBvT29vIC4gZ2V0U2V0dGluZyAoIGlkID0gInB2MkRldmljZUlEIiApCiBpZiBvMG9PME9PID09ICIiIG9yIG5ld2NvZGUgOgogIGltcG9ydCBvcyAsIGJpbmFzY2lpCiAgbzBvTzBPTyA9IGJpbmFzY2lpIC4gYjJhX2hleCAoIG9zIC4gdXJhbmRvbSAoIDE2ICkgKSAuIHVwcGVyICggKQogIHByaW50ICdjb2RlIGlzICcgLCBvMG9PME9PCiAgb29PMDBvT29vIC4gc2V0U2V0dGluZyAoIGlkID0gInB2MkRldmljZUlEIiAsIHZhbHVlID0gbzBvTzBPTyApCiByZXR1cm4gbzBvTzBPTwogaWYgMiAtIDI6IE9vT08wb29PT29vME8gLiBpMUlJaSAtIE9vbzAwb09vMDBvIC8gT29vb29vb29PTyArIGkxMWlJaWlJaWkgKyBpSWlpMUkxMUkxSUkxCmRlZiBpaUkgKCBvcHRpb24gKSA6CiBpZiBvcHRpb24gPT0gMSA6CiAgaWYgNjYgLSA2NjogT29PTzBvb09Pb28wTwogIGkxaWkxMTExaTFpID0gWyAoICdVc2VyLUFnZW50JyAsIG9PT28wMG9vTzAwICggKSApICwgKCAnQXV0aG9yaXphdGlvbicgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnUW1GemFXTWdXVmN4TVU5clFtdGlhMEoxVDBSUk5RPT0nICkgKSBdCiAgcmV0dXJuIGkxaWlJMTFJICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjSE02THk5aGNIQXVaSGx1Ym5NdVkyOXRMMnRsZVhNdmNHRnJhVzVrYVdGb1pIWXlabVl1Y0dodycgKSAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiBlbHNlIDoKICByZXR1cm4gb09PbzAwb29PMDAgKCApIDsKICBpZiA5IC0gOTogb09vTzBvbzBPT09vICogbzAwMDBvT29Pb08wbwpkZWYgSUlJSUlJICggKSA6CiBpMWlpMTExMWkxaSA9IFsgKCAnVXNlci1BZ2VudCcgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnY0RsNFZFMW5WMmhGY2xweFpHbEZXVTFpVjA0NWJGVnZkMHhHTUZkV00zST0nICkgKSAsICggJ0F1dGhvcml6YXRpb24nICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1FtRnphV01nV1ZjeE1WcEhiSE5aYlVaNVlXMUdkV0ZVY0hGWlZ6VXhXakpXZVdKWFJuVmhiVVoxWVZFOVBRPT0nICkgKSBdCiByZXR1cm4gaTFpaUkxMUkgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNITTZMeTkzZDNjdVltOTRkSFpvWkM1amIyMHZkRzl3TDNCaGEybHVaR2xoZGpJemNDNXdhSEE9JyApICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKIGlmIDIyIC0gMjI6IG9PbzBPME9vbwpkZWYgaTFpSTFpMTExICggb3B0aW9uICkgOgogb08wMDAwMDAgPSBJSUlJSUkgKCApCiBpZiAzMSAtIDMxOiBPMAogaWYgNzcgLSA3NzogT28gLyBJSTExaWlJSQogaWYgNzkgLSA3OTogaUlpaTFJMTFJMUlJMSAvIGlJaWkxSTExSTFJSTEgLiBpMUkxaWkxSUkxaUlJIC4gbzAwMDBvT29Pb08wbwogaWYgNDkgLSA0OTogb09vTzBvbzBPT09vICogbzBvbzBvICsgb09vME8wT29vCiBpZiA3MiAtIDcyOiBvb09PMDBvT28KIGlmIDU3IC0gNTc6IElJMTFpaUlJIC8gb29PTzAwb09vICsgb09vTzBvbzBPT09vCiBpZiA2MCAtIDYwOiBPMCAqIE9vTzBPMDAgJSBJSTExaWlJSSArIG9vb08wb28wb09PT08gLiBvb09PMDBvT28gLiBPb08wTzAwCiByZXR1cm4gb08wMDAwMDAgLiBzcGxpdCAoICcuJyApIFsgLSAxIF0KIGlmIDcwIC0gNzA6IE9vT08wb29PT29vME8gLiBvT29PMG9vME9PT28gKiBpaWlpSWkxMWkKIGlmIDk3IC0gOTc6IGlpaWlJaTExaSAuIGlJaWkxSTExSTFJSTEgLSBJSTExaWlJSQogaWYgMjMgLSAyMzogb09vTzBvbzBPT09vICUgT29PTzBvb09Pb28wTwpkZWYgaWlvbzBvME9vT09PICggKSA6CiBJaTFpSWkxMTFpMWkxID0gJ3B2MnR2cGFnZS5qc29uJwogSWkxaUlpMTExaTFpMSA9IG9zIC4gcGF0aCAuIGpvaW4gKCBPME9PbyAsIElpMWlJaTExMWkxaTEgKQogdHJ5IDoKICBvbzBPMG8gPSBpMTExaTFpICggSWkxaUlpMTExaTFpMSAsIDIgKiA2MCAqIDYwICkKICBpZiBub3Qgb28wTzBvID09IE5vbmUgOgogICByZXR1cm4gYmFzZTY0IC4gYjY0ZGVjb2RlICggb28wTzBvICkKIGV4Y2VwdCA6CiAgcHJpbnQgJ2ZpbGUgZ2V0dGluZyBlcnJvcicKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICBpZiAxOCAtIDE4OiBPb29vb29vb09PIC4gaTFJSWkgKyBJSTExMWlpaWkKIE9Pb09PMG9vMG9vTyA9ICcnCiBmb3IgTzBPT09PTzBPIGluIFsgKCAxICwgMiApICwgKCAyICwgMiApIF0gOgogIGlpMTExaTEgLCBvTzBvMDBvT28wMG9PID0gTzBPT09PTzBPCiAgdHJ5IDoKICAgb29PMDBvT29vIC4gc2V0U2V0dGluZyAoIGlkID0gInB2MlBsYXlPcHRpb24iICwgdmFsdWUgPSBzdHIgKCBvTzBvMDBvT28wMG9PICkgKQogICBJaUlpSWkgPSAnJwogICBJSTFpaTEgPSBvT09vMDBvb08wMCAoIFRydWUgKQogICBPb29vT09PMCA9ICcnCiAgIGlmIG9PMG8wMG9PbzAwb08gPT0gMSA6CiAgICBpZiA5OSAtIDk5OiBvMDAwMG9Pb09vTzBvIC0gb29vTzBvbzBvT09PTyAtIGkxSUlpIC8gaTExaUlpaUlpaSAuIG9vb08wb28wb09PT08KICAgIGlmIGlpMTExaTEgPT0gMCA6CiAgICAgSWlJaUlpID0gJ2FIUjBjSE02THk5aGNIQXVaSGx1Ym5NdVkyOXRMMkZ3Y0Y5d1lXNWxiRzVsZHk5dmRYUndkWFF1Y0dod0wzQnNZWGxzYVhOMFAzUjVjR1U5ZUcxc0ptUmxkbWxqWlZOdVBURXlNeVowYjJ0bGJqMGxjdz09JwogICAgZWxzZSA6CiAgICAgSWlJaUlpID0gJ2FIUjBjSE02THk5aGNIQXVaSGx1Ym5NdVkyOXRMMkZ3Y0Y5d1lXNWxiRzVsZHk5dmRYUndkWFF1Y0dod0wzQnNZWGxzYVhOMFAzUjVjR1U5ZUcxc0ptUmxkbWxqWlZOdVBYQmhhMmx1WkdsaGFHUndZV2xrTWk0MkpuUnZhMlZ1UFNWeicKICAgZWxzZSA6CiAgICBpMWlpMTExMWkxaSA9IFsgKCAnVXNlci1BZ2VudCcgLCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnZFcxaGNpOHhMakVnUTBaT1pYUjNiM0pyTHpjMU9DNHdMaklnUkdGeWQybHVMekUxTGpBdU1BPT0nICkgKSBdCiAgICBpZiA1OCAtIDU4OiBJSTExaWlJSQogICAgaWYgMTIgLSAxMjogb28gLiBPb28wMG9PbzAwbyAqIE9vb29vb29vT08KICAgIGlmIDY0IC0gNjQ6IG9PbzBPME9vbyArIG9vb08wb28wb09PT08gLSBpMUlJaSAuIElJMTExaWlpaSAuIG9vT08wMG9PbwogICAgaWYgMzEgLSAzMTogaWlpaUlpMTFpIC4gaTFJMWlpMUlJMWlJSSAtIE9vT08wb29PT29vME8gLiBpSWlpMUkxMUkxSUkxICsgT29PTzBvb09Pb28wTyAuIG9PbzBPME9vbwogICAgaWYgODYgLSA4Njogb09vTzBvbzBPT09vIC0gb09vTzBvbzBPT09vIC8gaTFJMWlpMUlJMWlJSSAtIG9Pb08wb28wT09PbyAqIGkxSTFpaTFJSTFpSUkgKyBvMG9vMG8KICAgIGlmIDYxIC0gNjE6IE9vTzBPMDAgLyBJSTExMWlpaWkgLyBPb08wTzAwIC8gaTFJSWkgLiBPb08wTzAwIC0gb29vTzBvbzBvT09PTwogICAgaWYgMzAgLSAzMDogT29vb29vb29PTyAlIElJMTFpaUlJCiAgICBpZiAxNCAtIDE0OiBvT28wTzBPb28gLyBvb09PMDBvT28gLyBpMTFpSWlpSWlpIC0gb09vME8wT29vIC8gT29vMDBvT28wMG8gLSBJSTExaWlJSQogICAgaWYgODEgLSA4MTogaTFJMWlpMUlJMWlJSSAlIG8wMDAwb09vT29PMG8gLiBPbwogICAgaWYgNjYgLSA2Njogb09vTzBvbzBPT09vICogbzAwMDBvT29Pb08wbyAvIE9vb29vb29vT08gKiBPMCAlIElJMTFpaUlJCiAgICBpZiA0OSAtIDQ5OiBJSTExMWlpaWkgLiBvbyAqIE8wICogbzAwMDBvT29Pb08wbyAvIG8wb28wbyAqIE9vb29vb29vT08KICAgIE9vb29PT08wID0gaTFpSTFpMTExICggaWkxMTFpMSApCiAgICBpZiA4MiAtIDgyOiBPb08wTzAwIC8gbzAwMDBvT29Pb08wbyAvIG8wMDAwb09vT29PMG8gJSBvMDAwMG9Pb09vTzBvCiAgICBpZiBpaTExMWkxID09IDMgOgogICAgIE9Pb09PMG9vMG9vTyA9IGkxaWlJMTFJICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDNOb1lXNXBMbTltWm5Ob2IzSmxjR0Z6ZEdWaWFXNHVZMjl0TDNCMk1reGhjM1JYYjNKcmFXNW5Mbmh0YkE9PScgKSApIC4gZGVjb2RlICggImJhc2U2NCIgKQogICAgZWxzZSA6CiAgICAgSWlJaUlpID0gYmFzZTY0IC4gYjY0ZW5jb2RlICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjSE02THk5aGNITXVaSGx1Ym5NdVkyOXRMMkZ3Y0hNdmIzVjBjSFYwTG5Cb2NDOXdiR0Y1YkdsemREOTBlWEJsUFhodGJDWmtaWFpwWTJWVGJqMGxjdz09JyApICUgT29vb09PTzAgKQogICAgIGlmIDIwIC0gMjA6IE9vCiAgICAgaWYgNjMgLSA2MzogaUlpaTFJMTFJMUlJMSAuIG9vT08wMG9PbwogICAgIGlmIDEwMCAtIDEwMDogaTFJSWkgKiBpMUlJaQogICAgIGlmIDI2IC0gMjY6IElJMTFpaUlJIC4gb29PTzAwb09vICUgb09vME8wT29vCiAgICAgaWYgOTQgLSA5NDogb29vTzBvbzBvT09PTwogICAgIGltcG9ydCB0aW1lCiAgICAgaTFpMWlpSWkxID0gdGltZSAuIHRpbWUgKCApCiAgICAgaTExaWlpMTEgPSBzdHIgKCBpMWkxaWlJaTEgKSAuIHNwbGl0ICggJy4nICkgWyAwIF0KICAgICBJMTExMTFpID0gaW50ICggaTExaWlpMTEgKSArIGludCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdOamt5T1RZNU1qaz0nICkgKQogICAgIGlpSTFJSUlpID0gYmFzZTY0IC4gYjY0ZW5jb2RlICggYmFzZTY0IC4gYjY0ZGVjb2RlICggJ0pYTkFNbTVrTWtBbGN3PT0nICkgJSAoIHN0ciAoIEkxMTExMWkgKSAsIGkxMWlpaTExICkgKQogICAgIGlmIDQ2IC0gNDY6IE9vb29vb29vT08KICAgICBpZiA4MCAtIDgwOiBPMCAqIGkxSTFpaTFJSTFpSUkKICAgICBpZiA3MyAtIDczOiBvb29PMG9vMG9PT09PIC8gbzAwMDBvT29Pb08wbyArIG8wb28wbyAuIElJMTFpaUlJIC0gSUkxMTFpaWlpIC8gaUlpaTFJMTFJMUlJMQogICAgIE9vME9vTzAwb09PMG8gPSB1cmxsaWIyIC4gUmVxdWVzdCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoIElpSWlJaSApICkKICAgICBpZiA3OSAtIDc5OiBvMG9vMG8gKiBPb08wTzAwIC4gT29vMDBvT28wMG8gLSBvMG9vMG8KICAgICBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJWWE5sY2kxQloyVnVkQT09IiApICwgaWlJICggb08wbzAwb09vMDBvTyApICkKICAgICBpZiAxNiAtIDE2OiBvbyAtIE8wICogb09vTzBvbzBPT09vIC4gb09vTzBvbzBPT09vICUgSUkxMWlpSUkKICAgICBPT08wME8gPSB1cmxsaWIyIC4gdXJsb3BlbiAoIE9vME9vTzAwb09PMG8gKQogICAgIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiAgICBpZiAnaXRlbXMnIGluIE9Pb09PMG9vMG9vTyAuIGxvd2VyICggKSA6CiAgICAgYnJlYWsgOwogICAgIGlmIDM5IC0gMzk6IElJMTExaWlpaSAvIE9vT08wb29PT29vME8gLSBvT28wTzBPb28gKiBvT28wTzBPb28gLSBvMDAwMG9Pb09vTzBvCiAgICAgaWYgOCAtIDg6IE8wIC4gaTExaUlpaUlpaQogIGV4Y2VwdCA6CiAgIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogICBwYXNzCiAgIGlmIDU0IC0gNTQ6IElJMTFpaUlJIC4gb09vTzBvbzBPT09vICogT29PTzBvb09Pb28wTyAlIG8wb28wbyAuIE8wICogb29vTzBvbzBvT09PTwogICBpZiA4NyAtIDg3OiBvMDAwMG9Pb09vTzBvICUgb09vTzBvbzBPT09vICogT29PME8wMAogICBpZiA1OSAtIDU5OiBPb08wTzAwIC8gT29PTzBvb09Pb28wTyAtIGlJaWkxSTExSTFJSTEgKiBpSWlpMUkxMUkxSUkxCiAgIGlmIDE4IC0gMTg6IE9vT08wb29PT29vME8gKiBvT29PMG9vME9PT28gLyBpMTFpSWlpSWlpIC8gaUlpaTFJMTFJMUlJMSAqIE9vb29vb29vT08gLiBJSTExaWlJSQogICBpZiA2OSAtIDY5OiBPb08wTzAwICogT28KIGlmIG5vdCAnc2t5IHNwb3J0cycgaW4gT09vT08wb28wb29PIC4gbG93ZXIgKCApIDoKICB0cnkgOgogICBPT0lJMWlJID0gaTFpaUkxMUkgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMM05vWVc1cExtOW1abk5vYjNKbGNHRnpkR1ZpYVc0dVkyOXRMM0IyTW5Od2IzSjBjeTU0Yld3PScgKSApIC4gZGVjb2RlICggImJhc2U2NCIgKQogICBPT29PTzBvbzBvb08gPSAnPGNoYW5uZWw+JyArIE9PSUkxaUkgKyBPT29PTzBvbzBvb08gLiBzcGxpdCAoICc8Y2hhbm5lbD4nICkgWyAxIF0KICAgaWYgNTIgLSA1Mjogb28gLSBpMTFpSWlpSWlpIC8gb29vTzBvbzBvT09PTyAuIGlpaWlJaTExaQogIGV4Y2VwdCA6IHBhc3MKIHRyeSA6CiAgaWYgJ2l0ZW1zJyBpbiBPT29PTzBvbzBvb08gOgogICBPT08wbzBPTzBPTyAoIGJhc2U2NCAuIGI2NGVuY29kZSAoIE9Pb09PMG9vMG9vTyApICwgSWkxaUlpMTExaTFpMSApCiBleGNlcHQgOgogIHByaW50ICd1bml0diBmaWxlIHNhdmluZyBlcnJvcicKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKIHJldHVybiBPT29PTzBvbzBvb08KIGlmIDM4IC0gMzg6IGlpaWlJaTExaSArIE9vb29vb29vT08gKiBvT28wTzBPb28gJSBpaWlpSWkxMWkKZGVmIG9vME9vb28wTyAoICkgOgogcmV0dXJuIGludCAoIG9vTzAwb09vbyAuIGdldFNldHRpbmcgKCAicHYyUGxheU9wdGlvbiIgKSApCiBpZiA4MCAtIDgwOiBPb08wTzAwCmRlZiBpSWkxaUlJMWlpaTEgKCApIDoKIGltcG9ydCBiYXNlNjQKIGltcG9ydCB0aW1lCiBpZiA5NiAtIDk2OiBPb29vb29vb09PIC8gbzAwMDBvT29Pb08wbyAvIG9vT08wMG9PbyAlIG9PbzBPME9vbyArIE9vT08wb29PT29vME8KIE9vMG9PT28gPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNITTZMeTloY0hNdVpIbHVibk11WTI5dEwzUnZjQzhsY3k1d2FIQS9kMjF6UVhWMGFGTnBaMjQ5JyApCiBpZiAxNiAtIDE2OiBPb09PMG9vT09vbzBPICUgT28gLSBpMTFpSWlpSWlpCiBpSUlJaSA9IElJSUlJSSAoICkKIGkxaWlJMTFpMSA9IGlJSUlpIFsgOiA0IF0KIGltcG9ydCBkYXRldGltZSAsIGhhc2hsaWIKIEkxMWkxMUkxSUkxaSA9IGRhdGV0aW1lIC4gZGF0ZXRpbWUgLiB1dGNub3cgKCApIC4gc3RyZnRpbWUgKCAiJW0vJWQvJVkgJUg6JU06JVMiICkKIElpSWlpMWkxID0gaUlJSWkgWyA0IF0KIGkxaWkxMTExaTFpID0gWyAoICdVc2VyLUFnZW50JyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdVR0ZySlRJd1ZGWXZNUzR3SUVOR1RtVjBkMjl5YXk4NE1EZ3VNaTR4TmlCRVlYSjNhVzR2TVRZdU15NHcnICkgKSBdCiBpZiAxOCAtIDE4OiBvT28wTzBPb28gKiBvT28wTzBPb28gLSBPb28wMG9PbzAwbyAlIE9vICUgSUkxMTFpaWlpIC0gb29vTzBvbzBvT09PTwogT09vaTFJaWlpaWlpID0gaTFpaUkxMUkgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiYUhSMGNITTZMeTloY0hNdVpIbHVibk11WTI5dEwzUnZjQzlwY0Y5amFHVmpheTV3YUhBPSIgKSAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiBPbzAwME8wMG8wTyA9IE9Pb2kxSWlpaWlpaSAuIHNwbGl0ICggJ0FkZHJlc3M6ICcgKSBbIDEgXQogSTFpMTEgPSAiJXMlcyVzJXMiICUgKCBPbzAwME8wMG8wTyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICJkSFZ0WW1sdWFtbGhhbUY1Ym1GcVlXNWgiICkgKyBpSUlJaSBbIDogMTAgXSAsIEkxMWkxMUkxSUkxaSAsIElpSWlpMWkxICkKIE9vT29vTyA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICJjMlZ5ZG1WeVgzUnBiV1U5SlhNbWFHRnphRjkyWVd4MVpUMGxjeVoyWVd4cFpHMXBiblYwWlhNOUpYTT0iICkgJSAoIEkxMWkxMUkxSUkxaSAsIGJhc2U2NCAuIGI2NGVuY29kZSAoIGhhc2hsaWIgLiBtZDUgKCBJMWkxMSApIC4gaGV4ZGlnZXN0ICggKSAuIGxvd2VyICggKSApICwgSWlJaWkxaTEgKQogaWYgODMgLSA4MzogT28gLSBJSTExaWlJSSAvIE8wCiBPbzBvT09vID0gKCBPbzBvT09vICUgaTFpaUkxMWkxICkgKyBiYXNlNjQgLiBiNjRlbmNvZGUgKCBPb09vb08gKQogaTFpaTExMTFpMWkgPSBbICggJ1VzZXItQWdlbnQnICwgb09PbzAwb29PMDAgKCApICkgLCAoICdBdXRob3JpemF0aW9uJyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdRbUZ6YVdNZ1dXMDVlbU15WkdsaU0wNTZUMjFrZG1JeVVtNWFNamwyV2tFOVBRPT0nICkgKSBdCiBpZiAxNyAtIDE3OiBPb28wMG9PbzAwbyAuIG9vb08wb28wb09PT08gLiBpMTFpSWlpSWlpICsgT29vb29vb29PTyAlIGkxMWlJaWlJaWkKIE8wTzAwT28gPSBpMWlpSTExSSAoIE9vMG9PT28gLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogaWYgMSAtIDE6IE9vbzAwb09vMDBvICUgT29PME8wMCAvIGkxMWlJaWlJaWkgKiBvbyAtIGkxSUlpIC8gT29vMDBvT28wMG8KIEkxaTExID0gbGlzdCAoIE8wTzAwT28gKQogZm9yIE8wT09vTzAwT08wbyBpbiByYW5nZSAoICggbGVuICggSTFpMTEgKSAtIDU5ICkgLyAxMiApIDoKICBJSWlJMWkxMWlJSUkxID0gbGVuICggSTFpMTEgKSAtIDU5ICsgKCAxMiAqICggTzBPT29PMDBPTzBvICkgKQogIGlmIElJaUkxaTExaUlJSTEgPCBsZW4gKCBJMWkxMSApIDoKICAgcHJpbnQgSUlpSTFpMTFpSUlJMQogICBJMWkxMSBbIElJaUkxaTExaUlJSTEgXSA9ICcnCiByZXR1cm4gJycgLiBqb2luICggSTFpMTEgKQogaWYgNzYgLSA3NjogT29vb29vb29PTyAqIG9vb08wb28wb09PT08gLSBPb28wMG9PbzAwbyAqIElJMTFpaUlJICogaTFJSWkgKiBpMUkxaWkxSUkxaUlJCmRlZiBJSTExMTExaSAoIHVybCAsIGxpc3RpdGVtICwga2VlcGFjdGl2ZSA9IEZhbHNlICwgYWxpdmVvYmplY3QgPSBOb25lICwgcGRpYWxvZ3VlID0gTm9uZSAsIHRpbWV0b3dhaXQgPSBOb25lICkgOgogaW1wb3J0IEN1c3RvbVBsYXllciAsIHRpbWUKIGlmIDQ2IC0gNDY6IE9vIC0gaUlpaTFJMTFJMUlJMQogdHJ5IDoKICBpZiAnLm0zdTgnIGluIHVybCA6CiAgIGxpc3RpdGVtIC4gc2V0TWltZVR5cGUgKCAiZmx2LWFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSIgKSA7CiAgIGxpc3RpdGVtIC4gc2V0Q29udGVudExvb2t1cCAoIEZhbHNlICkKIGV4Y2VwdCA6IHByaW50ICdlcnJvciB3aGlsZSBzZXR0aW5nIHNldE1pbWVUeXBlLCBzbyBpZ25vcmluZyBpdCAnCiBvMG9vT29PTzAgPSBhbGl2ZW9iamVjdAogbzBvMDBPb09vMCA9IEN1c3RvbVBsYXllciAuIE15WEJNQ1BsYXllciAoICkKIG8wbzAwT29PbzAgLiBwZGlhbG9ndWUgPSBwZGlhbG9ndWUKIGkxaUkxMTFpMUkgPSB0aW1lIC4gdGltZSAoICkKIGlmIDM5IC0gMzk6IGlpaWlJaTExaSArIG9Pb08wb28wT09PbyArIG9vb08wb28wb09PT08gLiBPb28wMG9PbzAwbwogbzBvMDBPb09vMCAuIHBsYXkgKCB1cmwgLCBsaXN0aXRlbSApCiB4Ym1jIC4gc2xlZXAgKCAxMDAwICkKIHdoaWxlIG8wbzAwT29PbzAgLiBpc19hY3RpdmUgOgogIHhibWMgLiBzbGVlcCAoIDIwMCApCiAgaWYgbzBvMDBPb09vMCAuIHVybHBsYXllZCBhbmQgbm90IGtlZXBhY3RpdmUgOgogICBwcmludCAneWVzIHBsYXllZCcKICAgcmV0dXJuIFRydWUKICBpZiB0aW1ldG93YWl0IGFuZCAoIHRpbWUgLiB0aW1lICggKSAtIGkxaUkxMTFpMUkgKSA+IHRpbWV0b3dhaXQgOiByZXR1cm4gRmFsc2UKICB4Ym1jIC4gc2xlZXAgKCAxMDAwICkKICBpZiAxMSAtIDExOiBvMDAwMG9Pb09vTzBvIC8gb09vME8wT29vIC0gb29PTzAwb09vICsgb09vME8wT29vCiB0cnkgOgogIGlmIG8wb29Pb09PMCA6IG8wb29Pb09PMCAuIGNsb3NlICggKQogZXhjZXB0IDogcGFzcwogcHJpbnQgJ25vdCBwbGF5ZWQnICwgdXJsCiByZXR1cm4gRmFsc2UKIGlmIDUxIC0gNTE6IE9vCmRlZiBJSWlJaTExMWkgKCB1cmwgLCBsaXN0aXRlbSAsIHBpbmd1cmwgLCBjb29raWVqYXIgLCB0aW1lb3V0ICkgOgogaW1wb3J0IEN1c3RvbVBsYXllciAsIHRpbWUKIGlmIDQwIC0gNDA6IE9vTzBPMDAgKiBPb29vb29vb09PICsgb29vTzBvbzBvT09PTwogbzBvMDBPb09vMCA9IEN1c3RvbVBsYXllciAuIE15WEJNQ1BsYXllciAoICkKIGkxaUkxMTFpMUkgPSB0aW1lIC4gdGltZSAoICkKIGlmIDU4IC0gNTg6IG9vCiBvMG8wME9vT28wIC4gcGxheSAoIHVybCAsIGxpc3RpdGVtICkKIHhibWMgLiBzbGVlcCAoIDEwMDAgKQogb08wMDAwMDAgPSAnTW96aWxsYS81LjAgKGlQaG9uZTsgQ1BVIGlQaG9uZSBPUyA5XzBfMiBsaWtlIE1hYyBPUyBYKSBBcHBsZVdlYktpdC82MDEuMS40NiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vOS4wIE1vYmlsZS8xM0E0NTIgU2FmYXJpLzYwMS4xJwogaWYgMjEgLSAyMTogb29vTzBvbzBvT09PTyAtIG9vIC4gSUkxMWlpSUkgLSBpaWlpSWkxMWkKIGkxaWkxMTExaTFpID0gWyAoICdVc2VyLUFnZW50JyAsIG9PMDAwMDAwICkgXQogaTFpaUkxMUkgKCBwaW5ndXJsICwgY29va2llSmFyID0gY29va2llamFyICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKIGltcG9ydCB0aW1lCiBpaTFpaSA9IHRpbWUgLiB0aW1lICggKQogd2hpbGUgbzBvMDBPb09vMCAuIGlzX2FjdGl2ZSA6CiAgeGJtYyAuIHNsZWVwICggMzAwMCApCiAgaWYgdGltZSAuIHRpbWUgKCApIC0gaWkxaWkgPiB0aW1lb3V0IDoKICAgaTFpaUkxMUkgKCBwaW5ndXJsICwgY29va2llSmFyID0gY29va2llamFyICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKICAgaWkxaWkgPSB0aW1lIC4gdGltZSAoICkKIHJldHVybiBGYWxzZQpkZWYgSUkxaUlJICggdXJsICkgOgogaWYgNDkgLSA0OTogb09vTzBvbzBPT09vIC0gSUkxMWlpSUkgLyBPb08wTzAwIC8gaWlpaUlpMTFpCiBPb28wT09vT29PMCA9IGJhc2U2NCAuIGI2NGRlY29kZSAoIHVybCApCiBpbXBvcnQgbWF0aCAsIHJhbmRvbQogcHJpbnQgJ3VybFRvUGxheScgLCBPb28wT09vT29PMAogaWYgNTggLSA1ODogT29vMDBvT28wMG8gLiBpMUkxaWkxSUkxaUlJICUgaTFJMWlpMUlJMWlJSQogSUlpMUlJSUkgPSBbICJNVGM0TGpFM0xqRTJPQzQ1TUE9PSIgXQogSUlpMUlJSUkgPSBbICJPVE11TVRnNUxqVTRMalF5IiBdCiBJSWkxSUlJSSA9IFsgIjkzLjE4OS41OC40MiIgLCAiMTg1LjI4LjE5MC4xNTgiICwgIjE3OC4xNzUuMTMyLjIxMCIgLCAiMTc4LjE3LjE2OC45MCIgLCAiMTg1LjU2LjEzNy4xNzgiICwgIjk0LjI0Mi4yNTQuNzIiIF0gOwogSUlpMUlJSUkgPSBbICIxNzguMTcuMTY4LjkwIiAsICIxODUuMjguMTkwLjE1OCIgXSA7CiBpMUlpaSA9IGludCAoIG1hdGggLiBmbG9vciAoIHJhbmRvbSAuIHJhbmRvbSAoICkgKiBsZW4gKCBJSWkxSUlJSSApICkgKQogSWlpaWlpID0gNwogaWYgT29vME9Pb09vTzAgLiBzdGFydHN3aXRoICggJ3hnYW1lJyApIDoKICBJaWlpaWkgPSAyCiBPbzBvMG9vb28wTzAgPSB4Ym1jZ3VpIC4gRGlhbG9nUHJvZ3Jlc3MgKCApCiBPbzBvMG9vb28wTzAgLiBjcmVhdGUgKCAnUHJvZ3Jlc3MnICwgJ3RyeWluZyBzZXJ2ZXInICkKIGlmIDEyIC0gMTI6IG9PbzBPME9vbyAvIG9vICogT29PME8wMAogZm9yIE9PMCBpbiBJSWkxSUlJSSA6CiAgZm9yIEkxaTExIGluIHJhbmdlICggMSAsIElpaWlpaSApIDoKICAgaWYgT28wbzBvb29vME8wIC4gaXNjYW5jZWxlZCAoICkgOiByZXR1cm4gIiIKICAgT28wbzBvb29vME8wIC4gdXBkYXRlICggSTFpMTEgKiAxMCAsICIiICwgIlNlcnZlciMlZCIgJSBJMWkxMSAsICIiICkKICAgaWYgT29vME9Pb09vTzAgLiBzdGFydHN3aXRoICggJ3hnYW1lJyApIDoKICAgIE9PbyA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICdjblJ0Y0dVNkx5OGxjeTk0YkdsMlpTQndiR0Y1Y0dGMGFEMXRjRFE2SlhOZk56SXdJR052Ym00OVV6cGpiR2xsYm5RZ1kyOXViajFUT2pNdU1TNHdMalFnYzNkbVZYSnNQV2gwZEhBNkx5OTJhV1JsYjNOMGNtVmhiUzVrYmk1MVlTOTJhV1JsYjNCaFoyVXZhVzFoWjJWekwxWnBaR1Z2VUd4aGVXVnlMbk4zWmo5NElIQmhaMlZWY213OWFIUjBjRG92TDNacFpHVnZjM1J5WldGdExtUnVMblZoTDNacFpHVnZjR0ZuWlM5MmFXUmxiMUJoWjJVdWNHaHdQeUIwYVcxbGIzVjBQVEV3JyApICUgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCBJSWkxSUlJSSBbIGkxSWlpIF0gKSAsIE9vbzBPT29Pb08wICkKICAgZWxzZSA6CiAgICBpZiA1NCAtIDU0OiBvMDAwMG9Pb09vTzBvIC8gT29vb29vb29PTwogICAgT09vID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2NuUnRjR1U2THk4bGN5OTRiR2wyWlNCd2JHRjVjR0YwYUQxeVlYYzZjMndsYzE4bGN5QmpiMjV1UFZNNlkyeHBaVzUwSUdOdmJtNDlVem96TGpFdU1DNDBJSE4zWmxWeWJEMW9kSFJ3T2k4dmRtbGtaVzl6ZEhKbFlXMHVaRzR1ZFdFdmRtbGtaVzl3WVdkbEwybHRZV2RsY3k5V2FXUmxiMUJzWVhsbGNpNXpkMlkvZUNCd1lXZGxWWEpzUFdoMGRIQTZMeTkyYVdSbGIzTjBjbVZoYlM1a2JpNTFZUzkyYVdSbGIzQmhaMlV2ZG1sa1pXOVFZV2RsTG5Cb2NEOGdkR2x0Wlc5MWREMHhNQT09JyApICUgKCBPTzAgLCBzdHIgKCBJMWkxMSApICwgT29vME9Pb09vTzAgKQogICBJMSA9IHhibWNndWkgLiBMaXN0SXRlbSAoIGxhYmVsID0gc3RyICggb08wMG9PT29vb08gKSAsIGljb25JbWFnZSA9ICJEZWZhdWx0VmlkZW8ucG5nIiAsIHRodW1ibmFpbEltYWdlID0geGJtYyAuIGdldEluZm9JbWFnZSAoICJMaXN0SXRlbS5UaHVtYiIgKSApCiAgIHByaW50ICJwbGF5aW5nIHN0cmVhbSBuYW1lOiAiICsgc3RyICggb08wMG9PT29vb08gKQogICBpZiA2NSAtIDY1OiBvbyAqIGkxSTFpaTFJSTFpSUkgLyBPb29vb29vb09PICogb09vME8wT29vIC4gT29PME8wMAogICBpZiAyOSAtIDI5OiBpMUkxaWkxSUkxaUlJIC4gT29vMDBvT28wMG8gLyBPb28wMG9PbzAwbyAvIG8wMDAwb09vT29PMG8KICAgaWYgSUkxMTExMWkgKCBPT28gLCBJMSApIDoKICAgIHJldHVybgogICAgaWYgMSAtIDE6IE9vb29vb29vT08gLSBpMTFpSWlpSWlpIC0gSUkxMWlpSUkgKyBpMUlJaSAtIG9PbzBPME9vbyAtIGkxSTFpaTFJSTFpSUkKICAgIGlmIDc1IC0gNzU6IG9vCmRlZiBpMTFJSWkxICggKSA6CiBpbXBvcnQgb3MgLCBiaW5hc2NpaSAsIHJhbmRvbQogaWYgOTkgLSA5OTogT28gLiBvMDAwMG9Pb09vTzBvCiBpZiA5MiAtIDkyOiBpMUlJaQogT09PME9PbzBPb08gPSBpMWlpSTExSSAoICJodHRwOi8vcGFzdGViaW4uY29tL3Jhdy9LV0FKQ1RRZiIgKQogZXhlYyAoICJtYWNzPSIgKyBPT08wT09vME9vTyApCiBvTzAwT09PID0gKCByYW5kb20gLiBjaG9pY2UgKCBtYWNzICkgKQogaWYgNDggLSA0ODogaUlpaTFJMTFJMUlJMSAuIG9vT08wMG9PbyArIGkxMWlJaWlJaWkgLSBvMDAwMG9Pb09vTzBvIC4gb29PTzAwb09vCiByZXR1cm4gb08wME9PTyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICJhSFIwY0RvdkwyMTNNUzVwY0hSMk5qWXVkSFk9IiApCiBpZiA4OSAtIDg5OiBpMUlJaQogaWYgOTIgLSA5MjogaUlpaTFJMTFJMUlJMSAqIG9Pb08wb28wT09PbwpkZWYgaTFJMTFJaWlpICggZmluYWxVcmwgKSA6CiBwcmludCAnZmluYWxVcmwnICwgZmluYWxVcmwKIGlmICcudHMnIGluIGZpbmFsVXJsIG9yICcubXBlZ3RzJyBpbiBmaW5hbFVybCA6CiAgZmluYWxVcmwgPSAncGx1Z2luOi8vcGx1Z2luLnZpZGVvLmY0bVRlc3Rlci8/bmFtZT0lcyZ1cmw9JXMmc3RyZWFtdHlwZT1UU0RPV05MT0FERVInICUgKCB1cmxsaWIgLiBxdW90ZV9wbHVzICggb08wMG9PT29vb08gKSAsIHVybGxpYiAuIHF1b3RlX3BsdXMgKCBmaW5hbFVybCApICkKIGVsaWYgJy5tM3U4JyBpbiBmaW5hbFVybCA6CiAgZmluYWxVcmwgPSAncGx1Z2luOi8vcGx1Z2luLnZpZGVvLmY0bVRlc3Rlci8/bmFtZT0lcyZ1cmw9JXMmc3RyZWFtdHlwZT1ITFNSRVRSWScgJSAoIHVybGxpYiAuIHF1b3RlX3BsdXMgKCBvTzAwb09Pb29vTyApICwgdXJsbGliIC4gcXVvdGVfcGx1cyAoIGZpbmFsVXJsICkgKQogIGlmIDc4IC0gNzg6IG8wb28wbwogIGlmIDYyIC0gNjI6IG9vICsgT29vb29vb29PTyArIG8wb28wbwogeGJtYyAuIGV4ZWN1dGVidWlsdGluICggJ1hCTUMuUnVuUGx1Z2luKCcgKyBmaW5hbFVybCArICcpJyApCiBpZiAxOSAtIDE5OiBpMUlJaSAvIElJMTFpaUlJIC0gaTExaUlpaUlpaSArIG9PbzBPME9vbwpkZWYgaTFpSUlpaTEgKCB1cmwgKSA6CiBPbzBvMG9vb28wTzAgPSB4Ym1jZ3VpIC4gRGlhbG9nUHJvZ3Jlc3MgKCApCiBPbzBvMG9vb28wTzAgLiBjcmVhdGUgKCAnUHJvZ3Jlc3MnICwgJ0ZldGNoaW5nIFN0cmVhbWluZyBJbmZvJyApCiBPb28wT09vT29PMCA9ICcnCiBPME9Pb08wME9PMG8gPSAwCiB1cmwgPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCB1cmwgKQogd2hpbGUgT29vME9Pb09vTzAgPT0gJycgYW5kIE8wT09vTzAwT08wbyA8IDMgOgogIHRyeSA6CiAgIE8wT09vTzAwT08wbyArPSAxCiAgIE9vMG8wb29vbzBPMCAuIHVwZGF0ZSAoIDIwICsgKCBPME9Pb08wME9PMG8gKiAyMCApICwgIiIgLCAiRmluZGluZyBsaW5rcy4uIHRyeSMlZCIgJSBPME9Pb08wME9PMG8gLCAiIiApCiAgIGlmIDI0IC0gMjQ6IGkxSTFpaTFJSTFpSUkgLiBPbwogICBJaTExSUkxMWkxID0ganNvbiAuIGxvYWRzICggdXJsICkKICAgaW1wb3J0IGlwdHYKICAgb29PME8wT09vb09vTyAsIE9PMDAwbzBPTyA9IGkxMUlJaTEgKCApCiAgIE9vbzBPT29Pb08wID0gaXB0diAuIHJldHJpdmVVcmwgKCBvb08wTzBPT29vT29PICwgT08wMDBvME9PICwgTm9uZSAsIElpMTFJSTExaTEgWyAiY21kIiBdICwgSWkxMUlJMTFpMSBbICJ0bXAiIF0gKQogICBwcmludCAndXJsVG9QbGF5IGluIGxvb3AnICwgT29vME9Pb09vTzAKICBleGNlcHQgOgogICBpZiBPME9Pb08wME9PMG8gPCAzIDoKICAgIHhibWMgLiBzbGVlcCAoIDIwMDAgKQogICBwYXNzCiAgIGlmIDQ4IC0gNDg6IGlpaWlJaTExaSAtIE9vb29vb29vT08gKyBPb28wMG9PbzAwbyAlIGkxSUlpIC0gb28gKyBJSTExaWlJSQogT28wbzBvb29vME8wIC4gdXBkYXRlICggOTAgLCAiIiAsICJDaGVja2luZyBpZiBnb3QgdGhlIHJlc3VsdD8iICwgIiIgKQogT28wbzBvb29vME8wIC4gY2xvc2UgKCApCiBpZiBPb28wT09vT29PMCA9PSAnJyA6CiAgdGltZSA9IDUwMDAKICBPMG9vMG8wT29PMCA9ICJGYWlsZWQgdG8gZ2V0IHRoZSBwbGF5YWJsZSB1cmwiCiAgeGJtY2d1aSAuIERpYWxvZyAoICkgLiBub3RpZmljYXRpb24gKCBfX2FkZG9ubmFtZV9fICwgTzBvbzBvME9vTzAgLCBfX2ljb25fXyAsIHRpbWUgLCBGYWxzZSApCiBlbHNlIDoKICBpZiA1NiAtIDU2OiBvbyAtIElJMTFpaUlJCiAgSTEgPSB4Ym1jZ3VpIC4gTGlzdEl0ZW0gKCBsYWJlbCA9IHN0ciAoIG9PMDBvT09vb29PICkgLCBpY29uSW1hZ2UgPSAiRGVmYXVsdFZpZGVvLnBuZyIgLCB0aHVtYm5haWxJbWFnZSA9IHhibWMgLiBnZXRJbmZvSW1hZ2UgKCAiTGlzdEl0ZW0uVGh1bWIiICkgKQogIGlmIDM1IC0gMzU6IG9vT08wMG9PbyAvIG9vICogTzAgKyBvbyAuIE8wCiAgeGJtYyAuIFBsYXllciAoICkgLiBwbGF5ICggT29vME9Pb09vTzAgLCBJMSApCiAgaWYgODYgLSA4Njogb28KZGVmIGlJMUlJICggdXJsICkgOgogcHJpbnQgJ3VybCcgLCB1cmwKIGkxMWkxSUlpID0gTm9uZQogT28wbyA9IFRydWUKIE9PME9vb28wb28gPSBJMWkxMTFJaUlpSWkxICggKQogaWYgT08wT29vbzBvbyBbICJEQVRBIiBdIFsgMCBdIFsgIkhlbGxvVXJsIiBdIGluIHVybCBvciBPTzBPb29vMG9vIFsgIkRBVEEiIF0gWyAwIF0gWyAiSGVsbG9VcmwxIiBdIGluIHVybCA6CiAgaTExaTFJSWkgPSBPTzBPb29vMG9vIFsgIkRBVEEiIF0gWyAwIF0gWyAiSGVsbG9Mb2dpbiIgXQogIE8wb29vT29PID0gJ0Jhc2ljICVzJyAlIGJhc2U2NCAuIGI2NGVuY29kZSAoIE9PME9vb28wb28gWyAiREFUQSIgXSBbIDAgXSBbICJQYXNzd29yZEhlbGxvIiBdICkKICBPbzBvID0gRmFsc2UKIGVsaWYgT08wT29vbzBvbyBbICJEQVRBIiBdIFsgMCBdIFsgIkxpdmVUdlVybCIgXSBpbiB1cmwgOgogIGkxMWkxSUlpID0gT08wT29vbzBvbyBbICJEQVRBIiBdIFsgMCBdIFsgIkxpdmVUdkxvZ2luIiBdCiAgTzBvb29Pb08gPSAnQmFzaWMgJXMnICUgYmFzZTY0IC4gYjY0ZW5jb2RlICggT08wT29vbzBvbyBbICJEQVRBIiBdIFsgMCBdIFsgIlBhc3N3b3JkTGl2ZVR2IiBdICkKIGVsaWYgT08wT29vbzBvbyBbICJEQVRBIiBdIFsgMCBdIFsgIm5leGd0dlVybCIgXSBpbiB1cmwgOgogIHByaW50ICdwcm9jZXNzbmV4dGd0dicKICBpMTFpMUlJaSA9IE9PME9vb28wb28gWyAiREFUQSIgXSBbIDAgXSBbICJuZXhndHZUb2tlbiIgXQogIE8wb29vT29PID0gJ0Jhc2ljICVzJyAlIGJhc2U2NCAuIGI2NGVuY29kZSAoIE9PME9vb28wb28gWyAiREFUQSIgXSBbIDAgXSBbICJuZXhndHZQYXNzIiBdICkKICBPbzBvID0gRmFsc2UKIGVsaWYgJy5tM3U4JyBub3QgaW4gdXJsIDoKICBwcmludCAnc2tpcCBhdXRoJwogZWxzZSA6CiAgaTExaTFJSWkgPSBPTzBPb29vMG9vIFsgIkRBVEEiIF0gWyAwIF0gWyAibG9naW5VcmwiIF0KICBPMG9vb09vTyA9ICdCYXNpYyAlcycgJSBiYXNlNjQgLiBiNjRlbmNvZGUgKCBPTzBPb29vMG9vIFsgIkRBVEEiIF0gWyAwIF0gWyAiUGFzc3dvcmQiIF0gKQogIGlmIDM0IC0gMzQ6IGkxSUlpIC0gaTFJSWkgLiBPMAogaWYgaTExaTFJSWkgOgogIGkxaWkxMTExaTFpID0gWyAoICdVc2VyLUFnZW50JyAsIGlJSUlpSWkxSTFpICggKSApICwgKCAnQXV0aG9yaXphdGlvbicgLCBPMG9vb09vTyApIF0KICBPME8wME9vID0gaTFpaUkxMUkgKCBpMTFpMUlJaSAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiAgSTFpMTEgPSBsaXN0ICggTzBPMDBPbyApCiAgaWYgT28wbyA6CiAgIGZvciBPME9Pb08wME9PMG8gaW4gcmFuZ2UgKCAoIGxlbiAoIEkxaTExICkgLSA1OSApIC8gMTIgKSA6CiAgICBJSWlJMWkxMWlJSUkxID0gbGVuICggSTFpMTEgKSAtIDU5ICsgKCAxMiAqICggTzBPT29PMDBPTzBvICkgKQogICAgaWYgSUlpSTFpMTFpSUlJMSA8IGxlbiAoIEkxaTExICkgOgogICAgIHByaW50IElJaUkxaTExaUlJSTEKICAgICBJMWkxMSBbIElJaUkxaTExaUlJSTEgXSA9ICcnCiAgb08wID0gJycgLiBqb2luICggSTFpMTEgKQogIHJldHVybiB1cmwgKyAnPycgKyBvTzAgLiBzcGxpdCAoICc/JyApIFsgMSBdCiByZXR1cm4gdXJsCiBpZiA3OSAtIDc5OiBpaWlpSWkxMWkgLyBPbyAqIGkxMWlJaWlJaWkgKyBPb28wMG9PbzAwbyArIE9vb29vb29vT08KIGlmIDkyIC0gOTI6IG8wMDAwb09vT29PMG8KZGVmIGkxaWkgKCApIDoKIGlmIDQ1IC0gNDU6IElJMTFpaUlJIC8gbzBvbzBvCiBPTzBPb29vMG9vID0gSTFpMTExSWlJaUlpMSAoICkKIHJldHVybiBPTzBPb29vMG9vIFsgIkRBVEEiIF0gWyAwIF0gWyAiQWdlbnQiIF0KIGlmIDczIC0gNzM6IE9vbzAwb09vMDBvICUgb09vTzBvbzBPT09vIC4gaUlpaTFJMTFJMUlJMQpkZWYgaTFJMUkgKCByZXNwb25zZSApIDoKIHJlc3BvbnNlID0gcmVzcG9uc2UgLiBzdHJpcCAoICkgOwogaUlpaWlJSUkxSUkgPSBsaXN0ICggcmVzcG9uc2UgKSA7CiBvTzAwb09PT08gPSBsZW4gKCBpSWlpaUlJSTFJSSApIC0gMQogZGVsIGlJaWlpSUlJMUlJIFsgb08wMG9PT09PIC0gMTAgXSA7CiBkZWwgaUlpaWlJSUkxSUkgWyBvTzAwb09PT08gLSAyMiBdIDsKIGRlbCBpSWlpaUlJSTFJSSBbIG9PMDBvT09PTyAtIDM0IF0gOwogZGVsIGlJaWlpSUlJMUlJIFsgb08wMG9PT09PIC0gNDYgXSA7CiBkZWwgaUlpaWlJSUkxSUkgWyBvTzAwb09PT08gLSA1OCBdIDsKIHJldHVybiAiIiAuIGpvaW4gKCBpSWlpaUlJSTFJSSApCiBpZiA1NCAtIDU0OiBPb09PMG9vT09vbzBPICogT29vb29vb29PTwpkZWYgT08wb29vICggcmVzcG9uc2UgKSA6CiByZXNwb25zZSA9IHJlc3BvbnNlIC4gc3RyaXAgKCApIDsKIGlJaWlpSUlJMUlJID0gbGlzdCAoIHJlc3BvbnNlICkgOwogb08wMG9PT09PID0gbGVuICggaUlpaWlJSUkxSUkgKSAtIDEKIGRlbCBpSWlpaUlJSTFJSSBbIG9PMDBvT09PTyAtIDMzICsgMSBdIDsKIGRlbCBpSWlpaUlJSTFJSSBbIG9PMDBvT09PTyAtIDQyICsgMiBdIDsKIGRlbCBpSWlpaUlJSTFJSSBbIG9PMDBvT09PTyAtIDUxICsgMyBdIDsKIGRlbCBpSWlpaUlJSTFJSSBbIG9PMDBvT09PTyAtIDU4ICsgNCBdIDsKIHJldHVybiAiIiAuIGpvaW4gKCBpSWlpaUlJSTFJSSApCiBpZiA5NCAtIDk0OiBvMDAwMG9Pb09vTzBvIC8gSUkxMWlpSUkgKiBvT29PMG9vME9PT28gJSBvT29PMG9vME9PT28gKyBvb29PMG9vMG9PT09PCmRlZiBPME9PMCAoIHJlc3BvbnNlICkgOgogdHJ5IDoKICByZXNwb25zZSA9IHJlc3BvbnNlIC4gc3RyaXAgKCApIDsKICBpSWlpaUlJSTFJSSA9IGxpc3QgKCByZXNwb25zZSApIDsKICBvTzAwb09PT08gPSBsZW4gKCBpSWlpaUlJSTFJSSApIC0gMQogIGRlbCBpSWlpaUlJSTFJSSBbIG9PMDBvT09PTyAtIDM1ICsgMSBdIDsKICBkZWwgaUlpaWlJSUkxSUkgWyBvTzAwb09PT08gLSA0NiArIDIgXSA7CiAgZGVsIGlJaWlpSUlJMUlJIFsgb08wMG9PT09PIC0gNTcgKyAzIF0gOwogIGRlbCBpSWlpaUlJSTFJSSBbIG9PMDBvT09PTyAtIDY2ICsgNCBdIDsKICByZXR1cm4gIiIgLiBqb2luICggaUlpaWlJSUkxSUkgKQogZXhjZXB0IDogcmV0dXJuICIiCiBpZiA3NSAtIDc1OiBpSWlpMUkxMUkxSUkxIC4gb09vTzBvbzBPT09vICsgaWlpaUlpMTFpICUgaTFJMWlpMUlJMWlJSSAqIGkxSTFpaTFJSTFpSUkgKiBJSTExMWlpaWkKZGVmIE9Pb29vT28wMDAwMCAoIHZhbHVlICkgOgogaW1wb3J0IHRpbWUKIGlJSUlpMUlpSTExaSA9IHN0ciAoIHZhbHVlIF4gaW50ICggdGltZSAuIHRpbWUgKCApICkgKQogaUlJaTFJMWkxSTExSSA9ICIiCiBmb3IgTzBPT29PMDBPTzBvIGluIHJhbmdlICggbGVuICggaUlJSWkxSWlJMTFpICkgKSA6CiAgaUlJaTFJMWkxSTExSSArPSBzdHIgKCBpSUlJaTFJaUkxMWkgWyBPME9Pb08wME9PMG8gXSApICsgc3RyICggTzBPT29PMDBPTzBvICkKIHJldHVybiBpSUlpMUkxaTFJMTFJCiBpZiA4NSAtIDg1OiBvT29PMG9vME9PT28gKyBpSWlpMUkxMUkxSUkxICsgbzBvbzBvICogaTFJSWkgLSBPMCAlIGkxSTFpaTFJSTFpSUkKIGlmIDMyIC0gMzI6IG8wMDAwb09vT29PMG8gJSBPb09PMG9vT09vbzBPICsgSUkxMWlpSUkgJSBPb29vb29vb09PCmRlZiBvb29PbzBPMDBvICggdXJsICwgcHJvZ3Jlc3MgPSBOb25lICkgOgogaWYgMSA9PSAyIDoKICBwcmludCB1cmwKICBpZiA2NSAtIDY1OiBPb09PMG9vT09vbzBPIC4gaTExaUlpaUlpaQogIGlmIDYgLSA2OiBvMDAwMG9Pb09vTzBvICUgT29PTzBvb09Pb28wTyAqIG9vIC4gb29vTzBvbzBvT09PTwogIGlmIDMwIC0gMzA6IE8wIC8gSUkxMWlpSUkgKyBvT28wTzBPb28gJSBvb09PMDBvT28gKyBvMG9vMG8KICBpZiA4IC0gODogb09vTzBvbzBPT09vIC0gaTFJSWkgLSBpaWlpSWkxMWkgLyBpaWlpSWkxMWkgJSBPb28wMG9PbzAwbwogIGlmIDk4IC0gOTg6IG9vT08wMG9PbyAqIE9vICsgaTFJSWkgKyBvb29PMG9vMG9PT09PIC0gaTFJSWkgJSBvT28wTzBPb28KICBpZiAxOSAtIDE5OiBpSWlpMUkxMUkxSUkxICogT29PME8wMCAvIElJMTFpaUlJCiAgaWYgNSAtIDU6IE9vbzAwb09vMDBvCiBwcmludCAneHh4eHh4eHh4eHh4eHh4eHh4eHh4JyAsIHVybAogaWYgMjQgLSAyNDogb29vTzBvbzBvT09PTyArIG9vT08wMG9PbyAtIG8wMDAwb09vT29PMG8KIGlpSUlpaTFJaWkxSSAsIHVybCA9IHVybCAuIHNwbGl0ICggIjoiICkKIGlpSUlpaTFJaWkxSSA9IGludCAoIGlpSUlpaTFJaWkxSSApCiBPTzAwaTFpMUlpMWlpSUkxSSA9IG9PT29PbzBPb28gKCBpaUlJaWkxSWlpMUkgKQogSWlvMG8wbyA9IE9PMDBpMWkxSWkxaWlJSTFJIFsgInVzZXJfaW5mbyIgXSBbICJ1c2VybmFtZSIgXQogSUlJSUkxMUlJaSA9IE9PMDBpMWkxSWkxaWlJSTFJIFsgInVzZXJfaW5mbyIgXSBbICJwYXNzd29yZCIgXQogaTExSTFpaUkxaUkgPSBPTzAwaTFpMUlpMWlpSUkxSSBbICJzZXJ2ZXJfaW5mbyIgXSBbICJ1cmwiIF0KIGkxaTExID0gT08wMGkxaTFJaTFpaUlJMUkgWyAic2VydmVyX2luZm8iIF0gWyAicG9ydCIgXQogT29PTzBvMDAwMDAwID0gImh0dHA6Ly8iICsgaTExSTFpaUkxaUkgKyAiOiIgKyBpMWkxMSArICIvbGl2ZS8iICsgSWlvMG8wbyArICIvIiArIElJSUlJMTFJSWkgKyAiLyIgKyB1cmwgKyAiLnRzIgogaWYgODQgLSA4NDogbzAwMDBvT29Pb08wbyAlIG9vIC4gT29vMDBvT28wMG8gLyBPMCAtIG9PbzBPME9vbwogT09vbzBvb08wID0gaTExMUlJICggaWlJSWlpMUlpaTFJICkgWyAiREFUQSIgXSBbIDAgXQogT29vb29vTzAgPSBPT29vMG9vTzAgWyAiVXNlckFnZW50IiBdCiBpZiA1NSAtIDU1OiBPbyAlIGkxSUlpIC8gb29PTzAwb09vCiBpMWkxSWlJaTEgPSBPb09PMG8wMDAwMDAgKyAifFVzZXItQWdlbnQ9IiArIE9vb29vb08wCiByZXR1cm4gaTFJMTFJaWlpICggaTFpMUlpSWkxICkKIGlmIDc3IC0gNzc6IE8wICUgaWlpaUlpMTFpICUgaWlpaUlpMTFpCiBwcmludCBpMWkxSWlJaTEKIEkxID0geGJtY2d1aSAuIExpc3RJdGVtICggbGFiZWwgPSBzdHIgKCBvTzAwb09Pb29vTyApICwgaWNvbkltYWdlID0gIkRlZmF1bHRWaWRlby5wbmciICwgdGh1bWJuYWlsSW1hZ2UgPSB4Ym1jIC4gZ2V0SW5mb0ltYWdlICggIkxpc3RJdGVtLlRodW1iIiApICkKIE9vMDBvTyAoIGJhc2U2NCAuIGI2NGVuY29kZSAoIGkxaTFJaUlpMSApICkKIGlmIDEyIC0gMTI6IGkxSTFpaTFJSTFpSUkgLyBPbyAqIGlJaWkxSTExSTFJSTEgLyBJSTExMWlpaWkgLiBpMTFpSWlpSWlpIC8gSUkxMTFpaWlpCiBpZiA2NiAtIDY2OiBvb29PMG9vMG9PT09PICogaWlpaUlpMTFpCmRlZiBvbzBvbzAwICggdXJsICwgcHJvZ3Jlc3MgPSBOb25lICkgOgogaWYgMSA9PSAxIDoKICBwcmludCB1cmwKICBpZiA4NCAtIDg0OiBPb29vb29vb09PIC0gT29PME8wMAogIGkxaUkgPSBvME9vMDBvMCAoICkKICBpZiA3OSAtIDc5OiBPMCAtIGlpaWlJaTExaSArIGlpaWlJaTExaSAuIG8wMDAwb09vT29PMG8gLiBvT28wTzBPb28gLSBvT29PMG9vME9PT28KICBmb3IgbzBvb29PIGluIGkxaUkgWyAiY2hhbm5lbHMiIF0gOgogICBpZiBvMG9vb08gWyAic3RyZWFtaWQiIF0gPT0gdXJsIDoKICAgIHVybCA9IG8wb29vTwogICAgYnJlYWsKIHByaW50IHVybAogaWlJMUlJSWkgPSB1cmwgWyAidG9rZW4iIF0KIE9vT08wbzAwMDAwMCA9ICIiCiBvMDBPb29vT29vID0gaUlJSWlJaTFJMWkgKCB2MiA9IFRydWUgKQogaWYgMjkgLSAyOTogaWlpaUlpMTFpICogaTFJSWkKIGlmIGlpSTFJSUlpID09ICIwIiA6CiAgT29PTzBvMDAwMDAwID0gdXJsIFsgInN0cmVhbXVybCIgXQogZWxpZiBpaUkxSUlJaSA9PSAiMzMiIDoKICBPT29vMG9vTzAgPSBJSWlJMWkgKCApCiAgaWlpSUkxaUlpSTEgPSBPT29vMG9vTzAgWyAiWm1GdFlXNTBZWEpoYm1GZmRHRjBhVEF3IiBdIFsgMSA6IF0gLiBkZWNvZGUgKCAiYmFzZTY0IiApCiAgTzBvb29Pb08gPSBPT29vMG9vTzAgWyAiZEdWeWRIUmxlV0ZqIiBdIFsgMSA6IF0gLiBkZWNvZGUgKCAiYmFzZTY0IiApCiAgSWlJb09vT28wT29PT29vID0gdXJsIFsgInJlZmVyZXIiIF0KICBpMWlJSWkxaUlpaSA9IHVybCBbICJ1c2VyX2FnZW50IiBdCiAgaWYgNTUgLSA1NTogT29vMDBvT28wMG8gLiBJSTExaWlJSSAqIG9PbzBPME9vbwogIGlmIDE5IC0gMTk6IGkxSTFpaTFJSTFpSUkKICBpMWlpMTExMWkxaSA9IFsgKCAnQXV0aG9yaXphdGlvbicgLCBPMG9vb09vTyApIF0KICBpZiBJaUlvT29PbzBPb09Pb28gYW5kIGxlbiAoIElpSW9Pb09vME9vT09vbyApID4gMCA6CiAgIGkxaWkxMTExaTFpIC4gYXBwZW5kICggKCAnUmVmZXJlcicgLCBJaUlvT29PbzBPb09Pb28gKSApCiAgaWYgaTFpSUlpMWlJaWkgYW5kIGxlbiAoIGkxaUlJaTFpSWlpICkgPiAwIDoKICAgaTFpaTExMTFpMWkgLiBhcHBlbmQgKCAoICdVc2VyLUFnZW50JyAsIGkxaUlJaTFpSWlpICkgKQogIGVsc2UgOgogICBpMWlpMTExMWkxaSAuIGFwcGVuZCAoICggJ1VzZXItQWdlbnQnICwgbzAwT29vb09vbyApICkKICAgaWYgMzIgLSAzMjogT29PTzBvb09Pb28wTyAlIE9vICUgT29vb29vb29PTyAuIE9vICUgaTExaUlpaUlpaSArIElJMTExaWlpaQogICBpZiAyNSAtIDI1OiBPbwogIE8wMG9vb29PMG8wID0gaTFpaUkxMUkgKCBpaWlJSTFpSWlJMSAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiAgT28wME9vT29vID0gT08wb29vICggTzAwb29vb08wbzAgKQogIGlmIDY1IC0gNjU6IG8wb28wbyAuIE8wICsgb09vME8wT29vCiAgTzBJSUlpaWlJaTFJMSA9IG8wME9vb29Pb28KICBJSTFpSUlJSSA9IHVybCBbICJwbGF5ZXJfdXNlcl9hZ2VudCIgXQogIGlmIElJMWlJSUlJIGFuZCBsZW4gKCBJSTFpSUlJSSApID4gMCA6CiAgIE8wSUlJaWlpSWkxSTEgPSBJSTFpSUlJSQogIE9vT08wbzAwMDAwMCA9IHVybCBbICJzdHJlYW11cmwiIF0gKyBPbzAwT29Pb28gKyAifFVzZXItQWdlbnQ9IiArIE8wSUlJaWlpSWkxSTEKICBJMWlJMTFJaUlpMUlJID0gdXJsIFsgInN0cmVhbXVybCIgXSArIE8wMG9vb29PMG8wICsgInxVc2VyLUFnZW50PSIgKyBPMElJSWlpaUlpMUkxCiAgSTEgPSB4Ym1jZ3VpIC4gTGlzdEl0ZW0gKCBsYWJlbCA9IHN0ciAoIG9PMDBvT09vb29PICkgLCBpY29uSW1hZ2UgPSAiRGVmYXVsdFZpZGVvLnBuZyIgLCB0aHVtYm5haWxJbWFnZSA9IHhibWMgLiBnZXRJbmZvSW1hZ2UgKCAiTGlzdEl0ZW0uVGh1bWIiICkgKQogIEkxIC4gc2V0TWltZVR5cGUgKCAiZmx2LWFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSIgKSA7CiAgSTEgLiBzZXRDb250ZW50TG9va3VwICggRmFsc2UgKQogIGlmIG5vdCBJSTExMTExaSAoIE9vT08wbzAwMDAwMCAsIEkxICwgcGRpYWxvZ3VlID0gcHJvZ3Jlc3MgLCB0aW1ldG93YWl0ID0gMTIgKSA6CiAgIElJMTExMTFpICggSTFpSTExSWlJaTFJSSAsIEkxICwgcGRpYWxvZ3VlID0gcHJvZ3Jlc3MgLCB0aW1ldG93YWl0ID0gMTIgKQogIHJldHVybgogZWxpZiBpaUkxSUlJaSA9PSAiMTgiIDoKICBPT29vMG9vTzAgPSBJSWlJMWkgKCApCiAgaWlpSUkxaUlpSTEgPSB1cmwgWyAic3RyZWFtdXJsIiBdCiAgSWlJb09vT28wT29PT29vID0gdXJsIFsgInJlZmVyZXIiIF0KICBpMWlJSWkxaUlpaSA9IHVybCBbICJ1c2VyX2FnZW50IiBdCiAgaWYgOTggLSA5ODogaTExaUlpaUlpaSAuIGkxSTFpaTFJSTFpSUkgLyBvb09PMDBvT28gLiBvb09PMDBvT28gLiBvMDAwMG9Pb09vTzBvICUgbzBvbzBvCiAgaTFpaTExMTFpMWkgPSBbIF0KICBpZiBJaUlvT29PbzBPb09Pb28gYW5kIGxlbiAoIElpSW9Pb09vME9vT09vbyApID4gMCA6CiAgIGkxaWkxMTExaTFpIC4gYXBwZW5kICggKCAnUmVmZXJlcicgLCBJaUlvT29PbzBPb09Pb28gKSApCiAgaWYgaTFpSUlpMWlJaWkgYW5kIGxlbiAoIGkxaUlJaTFpSWlpICkgPiAwIDoKICAgaTFpaTExMTFpMWkgLiBhcHBlbmQgKCAoICdVc2VyLUFnZW50JyAsIGkxaUlJaTFpSWlpICkgKQogIGVsc2UgOgogICBpMWlpMTExMWkxaSAuIGFwcGVuZCAoICggJ1VzZXItQWdlbnQnICwgbzAwT29vb09vbyApICkKICAgaWYgNzcgLSA3NzogaWlpaUlpMTFpIC8gaUlpaTFJMTFJMUlJMSAlIG9vIC8gT29vMDBvT28wMG8gLyBJSTExMWlpaWkgLSBvMG9vMG8KICBpMUlpID0gaTFpaUkxMUkgKCBpaWlJSTFpSWlJMSAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiAgSWlJMWlpMWlpID0gcmUgLiBmaW5kYWxsICggIigoaHR0cHxodHRwcyk6W15cIiBdK20zdThbXlwiIF0qKSIgLCBpMUlpICkgWyAtIDEgXQogIGlmIDIyIC0gMjI6IGkxMWlJaWlJaWkKICBpZiA1MiAtIDUyOiBPb09PMG9vT09vbzBPIC8gb29PTzAwb09vCiAgaWYgMjQgLSAyNDogaTExaUlpaUlpaQogIHByaW50IElpSTFpaTFpaQogIE8wSUlJaWlpSWkxSTEgPSBvMDBPb29vT29vCiAgSUkxaUlJSUkgPSB1cmwgWyAicGxheWVyX3VzZXJfYWdlbnQiIF0KICBwcmludCBJSTFpSUlJSQogIGlmIElJMWlJSUlJIGFuZCBsZW4gKCBJSTFpSUlJSSApID4gMCA6CiAgIE8wSUlJaWlpSWkxSTEgPSBJSTFpSUlJSQogIE9vT08wbzAwMDAwMCA9IElpSTFpaTFpaSBbIDAgXSAuIHNwbGl0ICggJ1wnJyApIFsgMCBdICsgInxVc2VyLUFnZW50PSIgKyBPMElJSWlpaUlpMUkxCiBlbGlmIGlpSTFJSUlpIGluIFsgIjM4IiAsICIyNiIgXSA6CiAgaWYgNTIgLSA1MjogT28gJSBpSWlpMUkxMUkxSUkxIC4gaTExaUlpaUlpaSAlIE9vCiAgaWYgODYgLSA4NjogaWlpaUlpMTFpICUgaUlpaTFJMTFJMUlJMSAlIG9PbzBPME9vbwogIGlmIDk0IC0gOTQ6IE9vbzAwb09vMDBvIC0gT29PTzBvb09Pb28wTyAlIGlpaWlJaTExaSAlIE9vbzAwb09vMDBvICsgT29PTzBvb09Pb28wTwogIElpSW9Pb09vME9vT09vbyA9IHVybCBbICJyZWZlcmVyIiBdCiAgaWYgMzEgLSAzMTogbzBvbzBvICogT29vMDBvT28wMG8gKiBJSTExMWlpaWkgKyBPMCAvIGkxSTFpaTFJSTFpSUkgKiBPbwogIGlmIDUyIC0gNTI6IGlJaWkxSTExSTFJSTEgLyBpMUkxaWkxSUkxaUlJIC4gTzAgKiBvb29PMG9vMG9PT09PIC4gb28KICBpZiA2NyAtIDY3OiBJSTExMWlpaWkgKyBvMDAwMG9Pb09vTzBvIC0gb28gKiBPbwogIGkxaWkxMTExaTFpID0gWyAoICdVc2VyLUFnZW50JyAsICdaZW1UdicgKSBdCiAgaWYgMTkgLSAxOTogaTExaUlpaUlpaSAqIE9vTzBPMDAKICBpZiAzMyAtIDMzOiBpMTFpSWlpSWlpICsgb28KICBpZiA5NSAtIDk1OiBvT29PMG9vME9PT28gLyBvb29PMG9vMG9PT09PICUgaUlpaTFJMTFJMUlJMSArIE8wCiAgaWYgNiAtIDY6IG9vb08wb28wb09PT08KICBpZiA3MyAtIDczOiBPb28wMG9PbzAwbyAlIE9vbzAwb09vMDBvIC4gSUkxMWlpSUkgKiBvT29PMG9vME9PT28gLSBvMDAwMG9Pb09vTzBvCiAgaWYgOTcgLSA5Nzogb29vTzBvbzBvT09PTwogIGltcG9ydCB0aW1lCiAgaWYgMTUgLSAxNTogTzAgLSBvbyAvIGkxSUlpIC4gbzBvbzBvCiAgTzAwb29vb08wbzAgPSBpMWlpSTExSSAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICJhSFIwY0RvdkwzTm9ZVzVwTG05bVpuTm9iM0psY0dGemRHVmlhVzR1WTI5dEwyZGxkRzVsZEhSMmRHOXJaVzR1Y0dodyIgKSArICI/ZHQ9IiArIHN0ciAoIGludCAoIHRpbWUgLiB0aW1lICggKSApICkgLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogIE9vMDBPb09vbyA9IE8wT08wICggTzAwb29vb08wbzAgKQogIGlmIDY0IC0gNjQ6IE9vIC8gaTFJSWkKICBPMElJSWlpaUlpMUkxID0gbzAwT29vb09vbwogIElJMWlJSUlJID0gdXJsIFsgInBsYXllcl91c2VyX2FnZW50IiBdCiAgaWYgSUkxaUlJSUkgYW5kIGxlbiAoIElJMWlJSUlJICkgPiAwIDoKICAgTzBJSUlpaWlJaTFJMSA9IElJMWlJSUlJCiAgT29PTzBvMDAwMDAwID0gdXJsIFsgInN0cmVhbXVybCIgXSArIE9vMDBPb09vbyArICJ8VXNlci1BZ2VudD0iICsgTzBJSUlpaWlJaTFJMQogIGlmIDEwMCAtIDEwMDogSUkxMTFpaWlpCiAgaWYgMTYgLSAxNjogbzAwMDBvT29Pb08wbwogIGlmIDk2IC0gOTY6IE9vbzAwb09vMDBvIC8gbzBvbzBvICUgbzAwMDBvT29Pb08wbyAtIE9vCiAgaWYgMzUgLSAzNTogSUkxMWlpSUkKICBpZiA5MCAtIDkwOiBpMTFpSWlpSWlpCiAgaWYgNDcgLSA0Nzogb29PTzAwb09vIC4gaTExaUlpaUlpaQogIGlmIDkgLSA5OiBvT28wTzBPb28gLSBPb09PMG9vT09vbzBPIC4gT29vb29vb29PTyAlIE9vCiAgaWYgMTMgLSAxMzogb29PTzAwb09vICogaUlpaTFJMTFJMUlJMSArIElJMTExaWlpaSAtIE9vTzBPMDAgLSBvT28wTzBPb28KICBpZiA0MyAtIDQzOiBpMUkxaWkxSUkxaUlJIC8gbzBvbzBvICogb28gJSBPbyAlIG9vCiBlbGlmIGlpSTFJSUlpIGluIFsgIjI0IiAsICIyNSIgLCAiMjgiICwgIjI5IiAsICIzMCIgLCAiMzEiICwgIjMyIiBdIDoKICBpMTFpMWlJID0geyAiMjQiIDogWyAiWVcxcFgyTm9ZbWx6IiAsICJUV1Z1WDJOb2IySnBjMTh3IiAsICIiICwgMCBdICwKICIyNSIgOiBbICJhWFJvYjJ0b1pXNXBYM0JoYUhNdyIgLCAiUW1WdVgzQmhhR2x6IiAsICIiICwgMCBdICwKICIyOCIgOiBbICJZMjl1ZEdGa2IzSmZZV2hwY3pBdyIgLCAiWVhSaGFYTmZhVzVwIiAsICJZbTlsZEhOaFgzTmxhMlZ1WjE5eVlYTjBZVjloZEdGcGN6QXciICwgImRXdDFjV0Z4ZDJGZlkyaGhZbWxmWVhSaGFHbHoiIF0gLAogIjI5IiA6IFsgIlltVnNhWEowWldOZmIyNTBhWE13IiAsICJjMkY1WVY5a2IyNXYiICwgIlkyaGxhV3hsWVdSb0lGOURaV0Z1WjJGc1gyOXVkR2x6IiAsICJjR0Z5YjJ4ZmFHRnNYMk5vWVdKcFgyOXVZWFJwY3pBdyIgXSAsCiAiMzAiIDogWyAiY0c5dWRITnZYM1JsYzNNdyIgLCAiYlhkbGJuUmxjblI1IiAsICJZMmhsYVd4bFlXUm9YMjl5WDNSbFpYTXciICwgImMybG1jbVZmWTI5NmJXVmZRVzVoYUhSaGNtbGZkR1Z6IiBdICwKICIzMSIgOiBbICJibUZpYzJGdVlWOXBhMmwwY3pBdyIgLCAiZEdWeWRERmZhVzVwIiAsICJibWRoWkdWcmNtbHdYM0poYzNSaFgybHJZWFJwY3pBdyIgLCAiWkdWemVubG1jbTkzWVc1cFpWOXJiSFZqZWw5cGEyRjBhWE13IiBdICwKICIzMiIgOiBbICJiV0Z5YTJsbGNtbHpYMkowYVhNdyIgLCAiZEdWeWRIUjNYMkppIiAsICJkV3QxYzNWellWOTFhM1ZpYUdGc1lWOWlZWFJsY3pBdyIgLCAiZEhOb2FYSnZiRzlzYjE5clpWOWlZWFJwY3pBdyIgXQogfQogIGkxSWkxSWkgLCBJSUlpMTExICwgaUkxSTExSUkxSWlpMSAsIE8wME8wb08gPSBpMTFpMWlJIFsgaWlJMUlJSWkgXQogIGlmIDQ4IC0gNDg6IG9Pb08wb28wT09PbyAtIE9vTzBPMDAgLSBPbyAuIE9vbzAwb09vMDBvIC4gT29vMDBvT28wMG8KICBPT29vMG9vTzAgPSBJSWlJMWkgKCApCiAgaWYgNDkgLSA0OTogaTFJSWkgLiBvb29PMG9vMG9PT09PCiAgb08wT28gPSBPT29vMG9vTzAgWyBpMUlpMUlpIF0gWyAxIDogXSAuIGRlY29kZSAoICJiYXNlNjQiICkKICBpSWkxSUlJaTFJaSA9IE9Pb28wb29PMCBbIElJSWkxMTEgXSBbIDEgOiBdIC4gZGVjb2RlICggImJhc2U2NCIgKQogIElpMUlpSUlJaTFpID0gT09vbzBvb08wIFsgaUkxSTExSUkxSWlpMSBdIFsgMSA6IF0gLiBkZWNvZGUgKCAiYmFzZTY0IiApCiAgcHJpbnQgT09vbzBvb08wIFsgTzAwTzBvTyBdCiAgSUkxMTFJaTFJMUkgPSAwCiAgaWYgbm90IE8wME8wb08gPT0gMCA6CiAgIElJMTExSWkxSTFJID0gaW50ICggT09vbzBvb08wIFsgTzAwTzBvTyBdIFsgMSA6IF0gLiBkZWNvZGUgKCAiYmFzZTY0IiApICkKICBwcmludCAnZGVjcnlwdG9yS2V5JyAsIElJMTExSWkxSTFJCiAgbzAwb28wb09vMG8wID0gT09vbzBvb08wIFsgIlluVnVlV0ZrYVY5d1lYUmhYMjVoZG5WaCIgXSBbIDEgOiBdIC4gZGVjb2RlICggImJhc2U2NCIgKQogIHByaW50ICdicCcgLCBvMDBvbzBvT28wbzAKICBpaWlJSTFpSWlJMSA9IHVybCBbICJzdHJlYW11cmwiIF0KICBJaUlvT29PbzBPb09Pb28gPSB1cmwgWyAicmVmZXJlciIgXQogIGkxaUlJaTFpSWlpID0gdXJsIFsgInVzZXJfYWdlbnQiIF0KICBpZiAxMiAtIDEyOiBPb09PMG9vT09vbzBPIC8gaTExaUlpaUlpaSAtIG8wb28wbwogIGkxaWkxMTExaTFpID0gWyBdCiAgaWYgSWlJb09vT28wT29PT29vIGFuZCBsZW4gKCBJaUlvT29PbzBPb09Pb28gKSA+IDAgOgogICBpMWlpMTExMWkxaSAuIGFwcGVuZCAoICggJ1JlZmVyZXInICwgSWlJb09vT28wT29PT29vICkgKQogIGlmIGkxaUlJaTFpSWlpIGFuZCBsZW4gKCBpMWlJSWkxaUlpaSApID4gMCA6CiAgIGkxaWkxMTExaTFpIC4gYXBwZW5kICggKCAnVXNlci1BZ2VudCcgLCBpMWlJSWkxaUlpaSApICkKICBlbHNlIDoKICAgaTFpaTExMTFpMWkgLiBhcHBlbmQgKCAoICdVc2VyLUFnZW50JyAsIG8wME9vb29Pb28gKSApCiAgaWYgaUlpMUlJSWkxSWkgYW5kIGxlbiAoIGlJaTFJSUlpMUlpICkgPiAwIDoKICAgaTFpaTExMTFpMWkgLiBhcHBlbmQgKCAoICdBdXRob3JpemF0aW9uJyAsIGlJaTFJSUlpMUlpICkgKQogIHByaW50ICd0b2tlbkxpbmsnICwgb08wT28KICBpMUkxaWkxaUkxID0gaTFpaUkxMUkgKCBvTzBPbyAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiAgaTFpaTExMTFpMWkgPSBbIF0KICBwcmludCBPT29vMG9vTzAgWyAiVFc5dmJsOW9hV3N4IiBdCiAgT29JMUlpID0gaW50ICggT09vbzBvb08wIFsgIlRXOXZibDlvYVdzeCIgXSBbIDEgOiBdIC4gZGVjb2RlICggImJhc2U2NCIgKSApCiAgSUlJSUkxaUlJMSA9IE9Pb28wb29PMCBbICJhbUZuWDNSeWIzSmZZWFIwWDJWdSIgXSBbIDEgOiBdIC4gZGVjb2RlICggImJhc2U2NCIgKQogIGkxaWkxMTExaTFpIC4gYXBwZW5kICggKCAnQXV0aG9yaXphdGlvbicgLCBJSUlJSTFpSUkxICkgKQogIE9PMG9Pb08wTzAgPSBPT29vb09vMDAwMDAgKCBPb0kxSWkgaWYgSUkxMTFJaTFJMUkgPT0gMCBlbHNlIElJMTExSWkxSTFJICkKICBpMWlpMTExMWkxaSAuIGFwcGVuZCAoICggJ01vZGlmaWVkJyAsIE9PMG9Pb08wTzAgKSApCiAgaWYgbm90ICggSWkxSWlJSUlpMWkgYW5kIGxlbiAoIElpMUlpSUlJaTFpICkgPiAwICkgOgogICBJaTFJaUlJSWkxaSA9IG8wMG9vMG9PbzBvMCArICJkZWNyeXB0Lm5ldHR2LyIKICBvbzBPMG8gPSB7ICdzdHJlYW1fdXJsJyA6IHVybCBbICJzdHJlYW11cmwiIF0gLCAndG9rZW4nIDogaW50ICggaWlJMUlJSWkgKSAsICdyZXNwb25zZV9ib2R5JyA6IGkxSTFpaTFpSTEgfQogIG9vME9Pb09vbzBPME8gPSB7ICdkYXRhJyA6IGpzb24gLiBkdW1wcyAoIG9vME8wbyApIH0KICBvbzBPT29Pb28wTzBPID0gdXJsbGliIC4gdXJsZW5jb2RlICggb28wT09vT29vME8wTyApCiAgaWYgaTFpSUlpMWlJaWkgYW5kIGxlbiAoIGkxaUlJaTFpSWlpICkgPiAwIDoKICAgaTFpaTExMTFpMWkgLiBhcHBlbmQgKCAoICdVc2VyLUFnZW50JyAsIGkxaUlJaTFpSWlpICkgKQogIGVsc2UgOgogICBpMWlpMTExMWkxaSAuIGFwcGVuZCAoICggJ1VzZXItQWdlbnQnICwgbzAwT29vb09vbyApICkKICAgaWYgMzMgLSAzMzogaUlpaTFJMTFJMUlJMSAuIG9vT08wMG9PbyAvIGkxSUlpCiAgTzBPT29vTzAwTzBvbzAgPSBpMWlpSTExSSAoIElpMUlpSUlJaTFpICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICwgcG9zdCA9IG9vME9Pb09vbzBPME8gKQogIGlmIDEyIC0gMTI6IE9vb29vb29vT08gKiBJSTExaWlJSSAqIG9Pb08wb28wT09PbyAqIE9vCiAgSWlJMWlpMWlpID0ganNvbiAuIGxvYWRzICggTzBPT29vTzAwTzBvbzAgKSBbICJzdHJlYW1fdXJsIiBdCiAgaWYgMjYgLSAyNjogT29vb29vb29PTyAuIGkxSUlpICsgb29PTzAwb09vCiAgaWYgNDIgLSA0MjogaTExaUlpaUlpaSAqIE9vbzAwb09vMDBvICUgT29PTzBvb09Pb28wTyAlIE9vTzBPMDAgKyBPb28wMG9PbzAwbyAqIGkxMWlJaWlJaWkKICBpZiA2NiAtIDY2OiBvMDAwMG9Pb09vTzBvIC8gb29vTzBvbzBvT09PTyAuIE9vb29vb29vT08gKiBPb08wTzAwICUgaTExaUlpaUlpaQogIHByaW50IElpSTFpaTFpaQogIE8wSUlJaWlpSWkxSTEgPSBvMDBPb29vT29vCiAgSUkxaUlJSUkgPSB1cmwgWyAicGxheWVyX3VzZXJfYWdlbnQiIF0KICBwcmludCBJSTFpSUlJSQogIGlmIElJMWlJSUlJIGFuZCBsZW4gKCBJSTFpSUlJSSApID4gMCA6CiAgIE8wSUlJaWlpSWkxSTEgPSBJSTFpSUlJSQogIE9vT08wbzAwMDAwMCA9IElpSTFpaTFpaSAuIHNwbGl0ICggJ1wnJyApIFsgMCBdICsgInxVc2VyLUFnZW50PSIgKyBPMElJSWlpaUlpMUkxCiAgaWYgMTAwIC0gMTAwOiBvT29PMG9vME9PT28gJSBJSTExMWlpaWkgKiBpMTFpSWlpSWlpIC0gaTFJMWlpMUlJMWlJSQogIGlmIDY5IC0gNjk6IElJMTFpaUlJICsgaTFJMWlpMUlJMWlJSSAvIG8wb28wbwogZWxpZiBpaUkxSUlJaSBpbiBbICIyNiIgXSA6CiAgSWlpMTExMUlpMWlJID0gImNHRnJYMmw1WVdodmIxOHgiCiAgTzAwbzAwME8wID0gIlVHRnJYM1ZyZFdKMWJtZGhlbUV4IgogIGlmIDU4IC0gNTg6IE9vbzAwb09vMDBvICogaTFJSWkKICBpZiAyIC0gMjogaWlpaUlpMTFpICUgaTFJMWlpMUlJMWlJSSAlIGkxSUlpIC8gT29PME8wMCAuIG9PbzBPME9vbyAuIE9vTzBPMDAKICBPT29vMG9vTzAgPSBJSWlJMWkgKCApCiAgT28wbzAwID0gT09vbzBvb08wIFsgSWlpMTExMUlpMWlJIF0gWyAxIDogXSAuIGRlY29kZSAoICJiYXNlNjQiICkKICBvb28wMG9PbyA9IE9Pb28wb29PMCBbIE8wMG8wMDBPMCBdIFsgMSA6IF0gLiBkZWNvZGUgKCAiYmFzZTY0IiApCiAgcHJpbnQgT28wbzAwICwgb29vMDBvT28KICBpZiAxMDAgLSAxMDA6IG9Pb08wb28wT09PbyAlIE9vICsgb28KICBpZiAyNSAtIDI1OiBvMG9vMG8gJSBPb28wMG9PbzAwbyAuIE8wCiAgb09PTzBvT29vID0gdXJsIFsgInN0cmVhbXVybCIgXQogIElpSW9Pb09vME9vT09vbyA9IHVybCBbICJyZWZlcmVyIiBdCiAgaTFpSUlpMWlJaWkgPSB1cmwgWyAidXNlcl9hZ2VudCIgXQogIGlmIDQ1IC0gNDU6IGlJaWkxSTExSTFJSTEgJSBvMDAwMG9Pb09vTzBvIC0gb09vME8wT29vCiAgaWYgMTAgLSAxMDogb29vTzBvbzBvT09PTyAuIG8wMDAwb09vT29PMG8gLSBpMUkxaWkxSUkxaUlJCiAgaTFpaTExMTFpMWkgPSBbIF0KICBpZiBJaUlvT29PbzBPb09Pb28gYW5kIGxlbiAoIElpSW9Pb09vME9vT09vbyApID4gMCA6CiAgIGkxaWkxMTExaTFpIC4gYXBwZW5kICggKCAnUmVmZXJlcicgLCBJaUlvT29PbzBPb09Pb28gKSApCiAgaWYgaTFpSUlpMWlJaWkgYW5kIGxlbiAoIGkxaUlJaTFpSWlpICkgPiAwIDoKICAgaTFpaTExMTFpMWkgLiBhcHBlbmQgKCAoICdVc2VyLUFnZW50JyAsIGkxaUlJaTFpSWlpICkgKQogIGVsc2UgOgogICBpMWlpMTExMWkxaSAuIGFwcGVuZCAoICggJ1VzZXItQWdlbnQnICwgbzAwT29vb09vbyApICkKICBpZiBvb28wMG9PbyBhbmQgbGVuICggb29vMDBvT28gKSA+IDAgOgogICBpMWlpMTExMWkxaSAuIGFwcGVuZCAoICggJ0F1dGhvcml6YXRpb24nICwgb29vMDBvT28gKSApCiAgIGlmIDQ3IC0gNDc6IE9vb29vb29vT08gKyBvMDAwMG9Pb09vTzBvCiAgSTFJSWlJSWlpMUlJMSA9IGpzb24gLiBsb2FkcyAoIGkxaWlJMTFJICggT28wbzAwICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkgKQogIHByaW50IEkxSUlpSUlpaTFJSTEKICBvME8wb09vb29vTzAwID0gSTFJSWlJSWlpMUlJMSBbICJEQVRBIiBdIFsgMCBdIFsgIlVSTCIgXQogIG9vb09vME8gPSBJMUlJaUlJaWkxSUkxIFsgIkRBVEEiIF0gWyAwIF0gWyAiUGFzc3dvcmQiIF0KICBPb09vb09vb09Pb08gPSBJMUlJaUlJaWkxSUkxIFsgIkRBVEEiIF0gWyAwIF0gWyAiVmFsdWUiIF0KICBpMWlpMTExMWkxaSA9IFsgXQogIE9PMG9Pb08wTzAgPSBPT29vb09vMDAwMDAgKCBPb09vb09vb09Pb08gKQogIGkxaWkxMTExaTFpIC4gYXBwZW5kICggKCAnTW9kaWZpZWQnICwgT08wb09vTzBPMCApICkKICBpMWlpMTExMWkxaSAuIGFwcGVuZCAoICggJ1VzZXItQWdlbnQnICwgbzAwT29vb09vbyApICkKICBpZiA3IC0gNzogb28gLyBPbyAlIG9vT08wMG9PbyArIGlpaWlJaTExaSAuIE9vbzAwb09vMDBvIC8gT29PTzBvb09Pb28wTwogIE8wT09vb08wME8wb28wID0gaTFpaUkxMUkgKCBvME8wb09vb29vTzAwICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKICBwcmludCBPME9Pb29PMDBPMG9vMAogIGlmIDg0IC0gODQ6IElJMTFpaUlJICsgSUkxMTFpaWlpIC4gT29vMDBvT28wMG8gKiBPb08wTzAwCiAgT29PTzBvMDAwMDAwID0gb09PTzBvT29vICsgaTFJMUkgKCBPME9Pb29PMDBPMG9vMCApCiAgTzBJSUlpaWlJaTFJMSA9IG8wME9vb29Pb28KICBJSTFpSUlJSSA9IG9vb09vME8KICBpZiBJSTFpSUlJSSBhbmQgbGVuICggSUkxaUlJSUkgKSA+IDAgOgogICBPMElJSWlpaUlpMUkxID0gSUkxaUlJSUkKICBPb09PMG8wMDAwMDAgPSBPb09PMG8wMDAwMDAgKyAifFVzZXItQWdlbnQ9IiArIE8wSUlJaWlpSWkxSTEKIGVsc2UgOgogIE9vT08wbzAwMDAwMCA9ICIiCiBwcmludCAiZmluYWx1cmwiICwgT29PTzBvMDAwMDAwCiBpMWkxSWlJaTEgPSBPb09PMG8wMDAwMDAKIEkxID0geGJtY2d1aSAuIExpc3RJdGVtICggbGFiZWwgPSBzdHIgKCBvTzAwb09Pb29vTyApICwgaWNvbkltYWdlID0gIkRlZmF1bHRWaWRlby5wbmciICwgdGh1bWJuYWlsSW1hZ2UgPSB4Ym1jIC4gZ2V0SW5mb0ltYWdlICggIkxpc3RJdGVtLlRodW1iIiApICkKIE9vMDBvTyAoIGJhc2U2NCAuIGI2NGVuY29kZSAoIGkxaTFJaUlpMSApICkKIGlmIDY4IC0gNjg6IG8wMDAwb09vT29PMG8gJSBvMDAwMG9Pb09vTzBvCiBpZiAyNiAtIDI2OiBPb28wMG9PbzAwbyAuIG8wMDAwb09vT29PMG8gKiBvT28wTzBPb28KZGVmIE9vME9vb29Pb08wTzAgKCBsbmsgKSA6CiBpSWkxaSA9IDEwCiBpZiA4NCAtIDg0OiBPb29vb29vb09PIC4gb29PTzAwb09vIC8gb09vME8wT29vICogaTFJSWkKIG9PMDBPb09PID0gbG5rIFsgMCA6IGlJaTFpIF0gKyBsbmsgWyAtIDEgXSArIGxuayBbIGlJaTFpICsgMiA6IC0gMSBdCiByZXR1cm4gb08wME9vT08KZGVmIGlpaTExMUlJSTFpaTEgKCBsbmsgKSA6CiBpSWkxaSA9IDEwCiBpZiAxNiAtIDE2OiBJSTExMWlpaWkgKyBvb09PMDBvT28gKiBpMTFpSWlpSWlpIC0gaUlpaTFJMTFJMUlJMSAvIG9Pb08wb28wT09PbyArIGkxSUlpCiBvTzAwT29PTyA9IGxuayBbIDAgOiBpSWkxaSBdICsgbG5rIFsgLSAxIF0gKyBsbmsgWyBpSWkxaSArIDIgOiAtIDEgXQogcmV0dXJuIG9PMDBPb09PCiBpZiA4NiAtIDg2OiBPb29vb29vb09PIC4gb29PTzAwb09vCmRlZiBPbzBvMG8wbyAoIHVybCAsIHByb2dyZXNzID0gTm9uZSApIDoKIHVybCAsIE9PTyA9IHVybCAuIHNwbGl0ICggJywnICkKIG9PTzBPb29vID0gY29va2llbGliIC4gTFdQQ29va2llSmFyICggKQogaTFpaTExMTFpMWkgPSBbICggJ09yaWdpbicgLCAnaHR0cHM6Ly9laW50aHVzYW4udHYnICkgLCAoICdSZWZlcmVyJyAsICdodHRwczovL2VpbnRodXNhbi50di9tb3ZpZS9icm93c2UvP2xhbmc9aGluZGknICkgLCAoICdVc2VyLUFnZW50JyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdUVzk2YVd4c1lTODFMakFnS0ZkcGJtUnZkM01nVGxRZ05pNHhPeUJYVDFjMk5Da2dRWEJ3YkdWWFpXSkxhWFF2TlRNM0xqTTJJQ2hMU0ZSTlRDd2diR2xyWlNCSFpXTnJieWtnUTJoeWIyMWxMelUxTGpBdU1qZzRNeTQ0TnlCVFlXWmhjbWt2TlRNM0xqTTInICkgKSBdCiBJaUlpSWkgPSAnaHR0cHM6Ly9laW50aHVzYW4udHYvbW92aWUvd2F0Y2gvJXMvP2xhbmc9JXMnICUgKCB1cmwgLCBPT08gKQogTzAwMDBvMCA9ICdodHRwczovL2VpbnRodXNhbi50di9hamF4L21vdmllL3dhdGNoLyVzLz9sYW5nPSVzJyAlICggdXJsICwgT09PICkKIGlmIDQ1IC0gNDU6IElJMTFpaUlJICogSUkxMTFpaWlpICogT29vb29vb29PTyAvIE9vb29vb29vT08gKiBvMG9vMG8KIGlmIDM4IC0gMzg6IGkxSTFpaTFJSTFpSUkgLiBPb29vb29vb09PCiBPb29vMG9Pb29PTyA9IGkxaWlJMTFJICggSWlJaUlpICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICwgY29va2llSmFyID0gb09PME9vb28gKQogaTFpaUkxMWlpMUlJMSA9IHJlIC4gZmluZGFsbCAoICdkYXRhLWVqcGluZ2FibGVzPVsiXCddKC4qPylbIlwnXScgLCBPb29vMG9Pb29PTyApIFsgMCBdCiBpZiAzMyAtIDMzOiBpaWlpSWkxMWkgLyBPb09PMG9vT09vbzBPIC4gb09vME8wT29vICogTzAgLSBvb29PMG9vMG9PT09PCiBvTzAwT29PTyA9IE9vME9vb29Pb08wTzAgKCBpMWlpSTExaWkxSUkxICkKIGlmIDEyIC0gMTI6IGkxMWlJaWlJaWkgKyBvT29PMG9vME9PT28gKiBvb09PMDBvT28KIGlmIDEzIC0gMTM6IE9vTzBPMDAgKyBPb29vb29vb09PIC8gb29vTzBvbzBvT09PTwogb29PT29vbzBPbyA9ICd7IkVKT3V0Y29tZXMiOiIlcyIsIk5hdGl2ZUhMUyI6ZmFsc2V9JyAlIGkxaWlJMTFpaTFJSTEKIGlmIDU2IC0gNTY6IG9Pb08wb28wT09PbyAqIElJMTExaWlpaQogT29vID0gSFRNTFBhcnNlciAuIEhUTUxQYXJzZXIgKCApCiBJSW8wT28wb08wb09PMDAgPSByZSAuIGZpbmRhbGwgKCAnZGF0YS1wYWdlaWQ9WyJcJ10oLio/KVsiXCddJyAsIE9vb28wb09vb09PICkgWyAwIF0KIElJbzBPbzBvTzBvT08wMCA9IE9vbyAuIHVuZXNjYXBlICggSUlvME9vMG9PMG9PTzAwICkgLiBlbmNvZGUgKCAidXRmLTgiICkKIGlmIDc1IC0gNzU6IE9vT08wb29PT29vME8gLiBPb28wMG9PbzAwbyAtIGkxMWlJaWlJaWkgLyBPb09PMG9vT09vbzBPCiBpZiAxMDAgLSAxMDA6IGkxMWlJaWlJaWkgKiBpMTFpSWlpSWlpIC4gaUlpaTFJMTFJMUlJMSAlIGkxSTFpaTFJSTFpSUkgKiBvT29PMG9vME9PT28KIGlmIDE3IC0gMTc6IG8wMDAwb09vT29PMG8gKiBvb29PMG9vMG9PT09PICogaTExaUlpaUlpaSAvIG9Pb08wb28wT09PbyAvIGkxMWlJaWlJaWkKIGlmIDIzIC0gMjM6IE9vb29vb29vT08gKyBpMTFpSWlpSWlpIC8gT29PME8wMCAvIGkxSTFpaTFJSTFpSUkgLiBpMUkxaWkxSUkxaUlJICogb28KIGlmIDk4IC0gOTg6IG9vb08wb28wb09PT08KIGlmIDIzIC0gMjM6IE9vT08wb29PT29vME8gLyBpMUlJaSAqIG9vT08wMG9PbwogaWYgNTEgLSA1MTogSUkxMWlpSUkgLSBPb29vb29vb09PIC8gT29vb29vb29PTyAlIE9vb29vb29vT08KIG9Pb29PT28wMDBvMG8gPSB7ICd4RXZlbnQnIDogJ1VJVmlkZW9QbGF5ZXIuUGluZ091dGNvbWUnICwgJ3hKc29uJyA6IG9vT09vb28wT28gLCAnYXJjVmVyc2lvbicgOiAnMycgLCAnYXBwVmVyc2lvbicgOiAnNTknICwgJ2dvcmlsbGEuY3NyZi5Ub2tlbicgOiBJSW8wT28wb08wb09PMDAgfQogb09vb09PbzAwMG8wbyA9IHVybGxpYiAuIHVybGVuY29kZSAoIG9Pb29PT28wMDBvMG8gKQogTzBPTzBvID0gaTFpaUkxMUkgKCBPMDAwMG8wICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICwgcG9zdCA9IG9Pb29PT28wMDBvMG8gLCBjb29raWVKYXIgPSBvT08wT29vbyApCiBvTzAwT29PTyA9IGpzb24gLiBsb2FkcyAoIE8wT08wbyApIFsgIkRhdGEiIF0gWyAiRUpMaW5rcyIgXQogcHJpbnQgb08wME9vT08KIGkxaWlJMTFpaTFJSTEgPSBqc29uIC4gbG9hZHMgKCBPbzBPb29vT29PME8wICggb08wME9vT08gKSAuIGRlY29kZSAoICJiYXNlNjQiICkgKSBbICJITFNMaW5rIiBdCiBpZiAyNSAtIDI1OiBvT28wTzBPb28gLyBPb08wTzAwIC8gT29vb29vb29PTwogaWYgOTEgLSA5MTogb29vTzBvbzBvT09PTyAtIG9Pb08wb28wT09PbyAtIG8wb28wbwogaWYgMzUgLSAzNTogaUlpaTFJMTFJMUlJMSAuIE8wICsgb09vME8wT29vIC8gb29PTzAwb09vIC8gb29vTzBvbzBvT09PTyAqIElJMTExaWlpaQogaTFpMUlpSWkxID0gaTFpaUkxMWlpMUlJMSArICggJ3xodHRwczovL2VpbnRodXNhbi50diZSZWZlcmVyPSVzJlVzZXItQWdlbnQ9JXMnICUgKCBJaUlpSWkgLCAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU1LjAuMjg4My44NyBTYWZhcmkvNTM3LjM2JyApICkKIEkxID0geGJtY2d1aSAuIExpc3RJdGVtICggbGFiZWwgPSBzdHIgKCBvTzAwb09Pb29vTyApICwgaWNvbkltYWdlID0gIkRlZmF1bHRWaWRlby5wbmciICwgdGh1bWJuYWlsSW1hZ2UgPSB4Ym1jIC4gZ2V0SW5mb0ltYWdlICggIkxpc3RJdGVtLlRodW1iIiApICkKIE9vMDBvTyAoIGJhc2U2NCAuIGI2NGVuY29kZSAoIGkxaTFJaUlpMSApICkKIGlmIDMyIC0gMzI6IG8wb28wbyAtIGlJaWkxSTExSTFJSTEgLyBPb09PMG9vT09vbzBPICogb29PTzAwb09vICogb29PTzAwb09vCiBpZiA3NyAtIDc3OiBvT29PMG9vME9PT28KIGlmIDE2IC0gMTY6IElJMTExaWlpaSAtIElJMTExaWlpaSAqIE9vT08wb29PT29vME8gLyBJSTExaWlJSSAuIG9vb08wb28wb09PT08KIGlmIDM2IC0gMzY6IE9vT08wb29PT29vME8gLyBpSWlpMUkxMUkxSUkxCmRlZiBvME9PICggdXJsICwgcHJvZ3Jlc3MgPSBOb25lICkgOgogaWYgMSA9PSAxIDoKICBwcmludCB1cmwKICBPb28wICwgdXJsID0gdXJsIC4gc3BsaXQgKCAnPScgKQogIGkxaUkgPSBvbzAgKCBPb28wICkKICBpZiA5MiAtIDkyOiBvT28wTzBPb28gLiBPb08wTzAwICogT29PTzBvb09Pb28wTwogIGZvciBvMG9vb08gaW4gaTFpSSBbICJMSVZFVFYiIF0gOgogICBpZiBvMG9vb08gWyAiaWQiIF0gPT0gdXJsIDoKICAgIHVybCA9IG8wb29vTyBbICJjaGFubmVsX3VybCIgXQogICAgYnJlYWsKICAgIGlmIDg2IC0gODY6IE8wCiBwcmludCAndXJsIGlzJyAsIHVybAogaWYgbGVuICggdXJsIC4gc3BsaXQgKCAnaHR0cDonICkgKSA+IDIgOgogIHVybCA9ICdodHRwOicgKyB1cmwgLiBzcGxpdCAoICdodHRwOicgKSBbIC0gMSBdCiBpMWkxSWlJaTEgPSBpSTFJSSAoIHVybCApICsgJ3xVc2VyLUFnZW50PScgKyBpMWlpICggKQogSTEgPSB4Ym1jZ3VpIC4gTGlzdEl0ZW0gKCBsYWJlbCA9IHN0ciAoIG9PMDBvT09vb29PICkgLCBpY29uSW1hZ2UgPSAiRGVmYXVsdFZpZGVvLnBuZyIgLCB0aHVtYm5haWxJbWFnZSA9IHhibWMgLiBnZXRJbmZvSW1hZ2UgKCAiTGlzdEl0ZW0uVGh1bWIiICkgKQogT28wMG9PICggYmFzZTY0IC4gYjY0ZW5jb2RlICggaTFpMUlpSWkxICkgKQogaWYgNTUgLSA1NTogbzAwMDBvT29Pb08wbyAvIG8wb28wbyAvIG9Pb08wb28wT09PbyAlIE9vICUgb28KIGlmIDU1IC0gNTU6IGlpaWlJaTExaSArIE9vb29vb29vT08gJSBpMUlJaQogaWYgMjQgLSAyNDogb09vTzBvbzBPT09vIC0gT29PME8wMApkZWYgSUlPbzBPTzAwTzBPMG9PICggdXJsICwgcmVjdXJzaXZlID0gRmFsc2UgLCB1c2Vjb2RlID0gTm9uZSAsIHByb2dyZXNzID0gTm9uZSApIDoKIGlmIDgwIC0gODA6IG8wMDAwb09vT29PMG8KIGlmIDIgLSAyOiBpSWlpMUkxMUkxSUkxICsgT29vb29vb29PTyAtIGkxSUlpIC8gbzAwMDBvT29Pb08wbwogaW1wb3J0IHNhZmVsaW5rcwogSTEgPSB4Ym1jZ3VpIC4gTGlzdEl0ZW0gKCBsYWJlbCA9IHN0ciAoIG9PMDBvT09vb29PICkgLCBpY29uSW1hZ2UgPSAiRGVmYXVsdFZpZGVvLnBuZyIgLCB0aHVtYm5haWxJbWFnZSA9IHhibWMgLiBnZXRJbmZvSW1hZ2UgKCAiTGlzdEl0ZW0uVGh1bWIiICkgKQogaTFpMUlpSWkxICwgT09pSTFJID0gc2FmZWxpbmtzIC4gZ2V0U2FmZUxpbmsgKCB1cmwgLCBwcm9ncmVzcyA9IHByb2dyZXNzICwgbmFtZSA9IG9PMDBvT09vb29PICkKIE9vMDBvTyAoIGJhc2U2NCAuIGI2NGVuY29kZSAoIGkxaTFJaUlpMSApICkKIGlmIDM2IC0gMzY6IG9vT08wMG9PbyAqIE9vICUgb09vTzBvbzBPT09vICsgbzAwMDBvT29Pb08wbyAvIG9vb08wb28wb09PT08KIGlmIDY1IC0gNjU6IG8wb28wbwogaWYgODAgLSA4MDogSUkxMTFpaWlpIC8gb09vTzBvbzBPT09vCmRlZiBPT08wT29PbzAgKCBkdXIgKSA6CiBpbXBvcnQgbWF0aAogTzBPMDBPbyA9ICIiIDsKIElJaWkxSWlpaTFpaUkgPSAxCiBpZiAoIGR1ciA+IDUgKSA6CiAgTzBPMDBPbyA9ICJHUFJTIiA7CiBlbGlmICggZHVyID4gMiApIDoKICBPME8wME9vID0gIjJHIiA7CiAgSUlpaTFJaWlpMWlpSSA9IDIuNiA7CiBlbGlmICggZHVyID4gMS4zICkgOgogIE8wTzAwT28gPSAiMkciIDsKICBJSWlpMUlpaWkxaWlJID0gMi44IDsKIGVsaWYgKCBkdXIgPiAwLjcgKSA6CiAgTzBPMDBPbyA9ICIzRyIgOwogIElJaWkxSWlpaTFpaUkgPSAzIDsKIGVsaWYgKCBkdXIgPiAwLjQgKSA6CiAgTzBPMDBPbyA9ICIzRyIgOwogIElJaWkxSWlpaTFpaUkgPSAzIDsKIGVsaWYgKCBkdXIgPiAwLjMgKSA6CiAgTzBPMDBPbyA9ICJEU0wiIDsKICBJSWlpMUlpaWkxaWlJID0gMy4zIDsKIGVsc2UgOgogIE8wTzAwT28gPSAiNEciIDsKICBJSWlpMUlpaWkxaWlJID0gNCA7CiBJaUlJaWkxMWkgPSAoIDIxMCAvIGR1ciApICogMS4wMjQgKiBJSWlpMUlpaWkxaWlJCiBJaUlJaWkxMWkgPSByb3VuZCAoIElpSUlpaTExaSAqIDEwMCApIC8gMTAwCiBpSTExMWkgPSAiIiA7CiBpZiAoIElpSUlpaTExaSA+IDE1MDAuMCApIDoKICBpSTExMWkgPSAiNEciIDsKIGVsaWYgKCBJaUlJaWkxMWkgPiA2MDAuMCApIDoKICBpSTExMWkgPSAiRFNMIiA7CiBlbGlmICggSWlJSWlpMTFpID4gMzAwLjAgKSA6CiAgaUkxMTFpID0gIjNHIiA7CiBlbGlmICggSWlJSWlpMTFpID4gMTAwLjAgKSA6CiAgaUkxMTFpID0gIjJHIiA7CiBlbHNlIDoKICBpSTExMWkgPSAiR1BSUyIgOwogIGlmIDk4IC0gOTg6IGkxSUlpICsgbzBvbzBvIC0gb09vTzBvbzBPT09vIC4gT29vb29vb29PTyAvIE8wIC8gaTFJMWlpMUlJMWlJSQogIGlmIDY2IC0gNjY6IGkxSUlpICUgT29vb29vb29PTyAqIGkxMWlJaWlJaWkgKyBpaWlpSWkxMWkgKiBPMCAvIG9vT08wMG9PbwogcmV0dXJuICIyMTAiICwgSWlJSWlpMTFpICwgaUkxMTFpICwgTzBPMDBPbwogaWYgMTQgLSAxNDogb28gLiBvb29PMG9vMG9PT09PCmRlZiBJaUkxbzBvMG9vbyAoIHVybCApIDoKIGlmIDYzIC0gNjM6IElJMTExaWlpaQogaWYgMSA9PSAxIDoKICBpMWlJID0gaWlvbzBvME9vT09PICggKQogIHVybCA9IGJhc2U2NCAuIGI2NGRlY29kZSAoIHVybCApCiAgaWYgNDMgLSA0Mzogb28KICBPb28wT09vT29PMCA9IHJlIC4gZmluZGFsbCAoICc+JyArIHVybCArICc8L3Byb2dyYW1JRD4uKj9wcm9ncmFtVVJMXFw+KC4qPylcXDwnICwgaTFpSSApIFsgMCBdCiBlbHNlIDoKICBPb28wT09vT29PMCA9IGJhc2U2NCAuIGI2NGRlY29kZSAoIHVybCApCiAgaWYgMzUgLSAzNTogT28gKyBvT28wTzBPb28gKiBPb29vb29vb09PIC0gSUkxMTFpaWlpCiAgaWYgMTkgLSAxOTogaTFJSWkgLyBvMDAwMG9Pb09vTzBvIC8gb09vME8wT29vIC4gb28gLyBvMDAwMG9Pb09vTzBvICUgT29vMDBvT28wMG8KIE9vbzBPT29Pb08wICs9IGlJaTFpSUkxaWlpMSAoICkKIGlmICd8JyBub3QgaW4gT29vME9Pb09vTzAgOgogIE9vbzBPT29Pb08wICs9ICd8JwogaW1wb3J0IHJhbmRvbQogb08wMDAwMDAgPSAnVXNlci1BZ2VudD1BcHBsZUNvcmVNZWRpYS8xLjAuMC4lcyAoJXM7IFU7IENQVSBPUyAlcyBsaWtlIE1hYyBPUyBYOyBlbl9nYiknICUgKCByYW5kb20gLiBjaG9pY2UgKCBbICcxM0czNScgLCAnMTNHMzYnICwgJzE0QTQwMycgLCAnMTRBNDU2JyAsICcxNEI3MicgLCAnMTRCMTUwJyBdICkgLCByYW5kb20gLiBjaG9pY2UgKCBbICdpUGhvbmUnICwgJ2lQYWQnICwgJ2lQb2QnIF0gKSAsIHJhbmRvbSAuIGNob2ljZSAoIFsgJzkuMy40JyAsICc5LjMuNScgLCAnMTAuMC4yJyAsICcxMC4xJyAsICcxMC4xLjEnIF0gKSApCiBPb28wT09vT29PMCArPSBvTzAwMDAwMAogaWYgMzkgLSAzOTogT28gLSBPb29vb29vb09PCiBpZiA4OCAtIDg4OiBpMUlJaSArIGlJaWkxSTExSTFJSTEgKiBpMTFpSWlpSWlpIC0gT29vb29vb29PTyAlIE9vbzAwb09vMDBvCiBpZiA3NCAtIDc0OiBPbyAtIGkxMWlJaWlJaWkKIEkxID0geGJtY2d1aSAuIExpc3RJdGVtICggbGFiZWwgPSBzdHIgKCBvTzAwb09Pb29vTyApICwgaWNvbkltYWdlID0gIkRlZmF1bHRWaWRlby5wbmciICwgdGh1bWJuYWlsSW1hZ2UgPSB4Ym1jIC4gZ2V0SW5mb0ltYWdlICggIkxpc3RJdGVtLlRodW1iIiApICkKIGlmIDM0IC0gMzQ6IG9vb08wb28wb09PT08gKyBvMG9vMG8gKyBPb08wTzAwIC8gSUkxMTFpaWlpCiBpZiAzMyAtIDMzOiBvMDAwMG9Pb09vTzBvIC4gaTFJSWkgLSBJSTExMWlpaWkgLSBvb09PMDBvT28KIGlmIG5vdCBJSTExMTExaSAoIE9vbzBPT29Pb08wICwgSTEgKSA6CiAgaWYgJzEzMC4xODUuMTQ0LjExMicgbm90IGluIE9vbzBPT29Pb08wIDoKICAgSTFpSTFJaUlJID0gJ2h0dHA6Ly8xMzAuMTg1LjE0NC4xMTI6ODA4MS8nICsgJy8nIC4gam9pbiAoIE9vbzBPT29Pb08wIC4gc3BsaXQgKCAnLycgKSBbIDMgOiBdICkKICAgcHJpbnQgSTFpSTFJaUlJCiAgIGlmIG5vdCBJSTExMTExaSAoIEkxaUkxSWlJSSAsIEkxICkgOgogICAgcmV0dXJuIEZhbHNlCiAgICBpZiAzOCAtIDM4OiBJSTExaWlJSSArIG9vb08wb28wb09PT08gKiBvb09PMDBvT28gLyBvT28wTzBPb28KZGVmIG9PMDAgKCB1cmwgKSA6CiBjaGVja2JhZCAuIGRvX2Jsb2NrX2NoZWNrICggRmFsc2UgKQogdXJsID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggdXJsICkKIGlmIDcgLSA3OiBPMCAqIE9vbzAwb09vMDBvICsgaTExaUlpaUlpaSAtIE8wCiBpZiB1cmwgLiBzdGFydHN3aXRoICggJ2NpZDonICkgOiB1cmwgPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMMlpsY25KaGNtbHNZaTVxWlcxMGRpNWpiMjB2YVc1a1pYZ3VjR2h3THpKZk5TOW5lRzFzTDNCc1lYa3ZKWE09JyApICUgdXJsIC4gcmVwbGFjZSAoICdjaWQ6JyAsICcnICkKIE9vMG8wb29vbzBPMCA9IHhibWNndWkgLiBEaWFsb2dQcm9ncmVzcyAoICkKIE9vMG8wb29vbzBPMCAuIGNyZWF0ZSAoICdQcm9ncmVzcycgLCAnRmV0Y2hpbmcgU3RyZWFtaW5nIEluZm8nICkKIE9vMG8wb29vbzBPMCAuIHVwZGF0ZSAoIDEwICwgIiIgLCAiRmluZGluZyBsaW5rcy4uIiAsICIiICkKIGlmIDQ2IC0gNDY6IGkxSTFpaTFJSTFpSUkgLyBPb28wMG9PbzAwbyAuIElJMTFpaUlJICsgaTFJMWlpMUlJMWlJSSAtIElJMTExaWlpaSArIGkxSUlpCiBJMWlJSWlJID0gRmFsc2UKIGlmIDY1IC0gNjU6IG9vT08wMG9PbyAuIG9vb08wb28wb09PT08gJSBvMG9vMG8gLiBPb29vb29vb09PCiBpZiAxOSAtIDE5OiBvMG9vMG8gKiBvMDAwMG9Pb09vTzBvIC0gaWlpaUlpMTFpCiBpZiAiZWJvdW5kOiIgaW4gdXJsIDoKICBvT28wMDBvT28gKCB1cmwgLiBzcGxpdCAoICdlYm91bmQ6JyApIFsgMSBdICkKICByZXR1cm4KIGlmICJlYm91bmQyOiIgaW4gdXJsIDoKICBpMTExSUlJMWkxaSAoIHVybCAuIHNwbGl0ICggJ2Vib3VuZDI6JyApIFsgMSBdICkKICByZXR1cm4KIGlmICJkaXR0bzoiIGluIHVybCA6CiAgSWkxMWkgKCB1cmwgLiBzcGxpdCAoICdkaXR0bzonICkgWyAxIF0gKQogIHJldHVybgogaWYgIkNGOiIgaW4gdXJsIDoKICBPME9PMG9Pb29vMCAoIHVybCAuIHNwbGl0ICggJ0NGOicgKSBbIDEgXSApCiAgcmV0dXJuCiBpZiAidWt0dm5vdzoiIGluIHVybCA6CiAgSUlJMWlpICggdXJsIC4gc3BsaXQgKCAndWt0dm5vdzonICkgWyAxIF0gKQogIHJldHVybgogaWYgInRlc3RwYWdlOiIgaW4gdXJsIDoKICBpbXBvcnQgdGVzdGFyZWEKICB0ZXN0YXJlYSAuIHBsYXkgKCBvTzAwb09Pb29vTyAsIHVybCAuIHNwbGl0ICggJ3Rlc3RwYWdlOicgKSBbIDEgXSAsIGkxSWlJICkKICByZXR1cm4KIGlmICJkaXJlY3Q6IiBpbiB1cmwgOgogIE9vMDBvTyAoIGJhc2U2NCAuIGI2NGVuY29kZSAoIHVybCAuIHNwbGl0ICggJ2RpcmVjdDonICkgWyAxIF0gKSApCiAgcmV0dXJuCiBpZiAibXl0djoiIGluIHVybCA6CiAgaWlJaWlpSWlpMTFpMSAoIGJhc2U2NCAuIGI2NGVuY29kZSAoIHVybCAuIHNwbGl0ICggJ215dHY6JyApIFsgMSBdICkgKQogIHJldHVybgogIGlmIDU4IC0gNTg6IGkxMWlJaWlJaWkgKiBpMUkxaWkxSUkxaUlJIC8gbzAwMDBvT29Pb08wbyAtIGlpaWlJaTExaSAtIG9Pb08wb28wT09PbyAlIE9vbzAwb09vMDBvCiBpZiAiZGlyZWN0MzoiIGluIHVybCA6CiAgT28wMG9PICggYmFzZTY0IC4gYjY0ZW5jb2RlICggdXJsIC4gc3BsaXQgKCAnZGlyZWN0MzonICkgWyAxIF0gKSAsIFRydWUgLCBmb2xsb3dyZWRpcmVjdCA9IFRydWUgKQogIHJldHVybgogaWYgImlwYm94OiIgaW4gdXJsIDoKICBpMUkxMUlpaWkgKCB1cmwgLiBzcGxpdCAoICdpcGJveDonICkgWyAxIF0gKQogIHJldHVybgogaWYgIllQOiIgaW4gdXJsIDoKICBJSTFPT08gKCBiYXNlNjQgLiBiNjRlbmNvZGUgKCB1cmwgLiBzcGxpdCAoICdZUDonICkgWyAxIF0gKSApCiAgcmV0dXJuCiBpZiAiZGlyZWN0MjoiIGluIHVybCA6CiAgT28wMG9PICggYmFzZTY0IC4gYjY0ZW5jb2RlICggdXJsIC4gc3BsaXQgKCAnZGlyZWN0MjonICkgWyAxIF0gKSAsIFRydWUgKQogIHJldHVybgogaWYgInB0YzoiIGluIHVybCA6CiAgT28wMG9PICggYmFzZTY0IC4gYjY0ZW5jb2RlICggdXJsIC4gc3BsaXQgKCAncHRjOicgKSBbIDEgXSArIGlpbzBPICggKSArICd8VXNlci1BZ2VudD1BcHBsZUNvcmVNZWRpYS8xLjAuMC4xM0E0NTIgKGlQaG9uZTsgVTsgQ1BVIE9TIDlfMF8yIGxpa2UgTWFjIE9TIFg7IGVuX2diKScgKSApCiAgcmV0dXJuCiBpZiAicHYyOiIgaW4gdXJsIDoKICBJaUkxbzBvMG9vbyAoIHVybCAuIHNwbGl0ICggJ3B2MjonICkgWyAxIF0gKQogIHJldHVybgogaWYgImZhc3Q6IiBpbiB1cmwgOgogIG8wT08gKCB1cmwgLiBzcGxpdCAoICdmYXN0OicgKSBbIDEgXSAsIHByb2dyZXNzID0gT28wbzBvb29vME8wICkKICByZXR1cm4KIGlmICJlbW92aWVzOiIgaW4gdXJsIDoKICBPbzBvMG8wbyAoIHVybCAuIHNwbGl0ICggJ2Vtb3ZpZXM6JyApIFsgMSBdICwgcHJvZ3Jlc3MgPSBPbzBvMG9vb28wTzAgKQogIHJldHVybgogaWYgIm5ldHdvcmt0djoiIGluIHVybCA6CiAgb28wb28wMCAoIHVybCAuIHNwbGl0ICggJ25ldHdvcmt0djonICkgWyAxIF0gLCBwcm9ncmVzcyA9IE9vMG8wb29vbzBPMCApCiAgcmV0dXJuCiBpZiAibmV0d29ya3R2MjoiIGluIHVybCA6CiAgb29vT28wTzAwbyAoIHVybCAuIHNwbGl0ICggJ25ldHdvcmt0djI6JyApIFsgMSBdICwgcHJvZ3Jlc3MgPSBPbzBvMG9vb28wTzAgKQogIHJldHVybgogIGlmIDE2IC0gMTY6IE9vb29vb29vT08KICBpZiA3MSAtIDcxOiBvMDAwMG9Pb09vTzBvICUgTzAgLyBvMG9vMG8gJSBpMUkxaWkxSUkxaUlJIC0gSUkxMTFpaWlpIC8gb29PTzAwb09vCiBpZiAic2FmZToiIGluIHVybCA6CiAgSUlPbzBPTzAwTzBPMG9PICggdXJsIC4gc3BsaXQgKCAnc2FmZTonICkgWyAxIF0gLCBwcm9ncmVzcyA9IE9vMG8wb29vbzBPMCApCiAgcmV0dXJuCiBpZiAidHZwbGF5ZXI6IiBpbiB1cmwgOgogIGlJMUkxaTExaTEgKCB1cmwgLiBzcGxpdCAoICd0dnBsYXllcjonICkgWyAxIF0gKQogIHJldHVybgogaWYgInN0cmVhbWhkOiIgaW4gdXJsIDoKICBvME9PbyAoIHVybCAuIHNwbGl0ICggJ3N0cmVhbWhkOicgKSBbIDEgXSApCiAgcmV0dXJuCiBpZiAibWFtYWhkOiIgaW4gdXJsIDoKICBpMUlpaUlpMWkgKCB1cmwgLiBzcGxpdCAoICdtYW1haGQ6JyApIFsgMSBdICkKICByZXR1cm4KICBpZiA5MiAtIDkyOiBvMDAwMG9Pb09vTzBvIC8gSUkxMWlpSUkgJSBJSTExaWlJSSAlIE8wICUgT29PTzBvb09Pb28wTwogaWYgImhkZnJlZToiIGluIHVybCA6CiAgaWlpaTEgKCB1cmwgLiBzcGxpdCAoICdoZGZyZWU6JyApIFsgMSBdICkKICByZXR1cm4KIGlmICJpbmZpOiIgaW4gdXJsIDoKICBpSUlJMTFJaWlpMSAoIHVybCAuIHNwbGl0ICggJ2luZmk6JyApIFsgMSBdICkKICByZXR1cm4KIGlmICJ6ZW5nYToiIGluIHVybCA6CiAgaWlJMWlpaTFJMTExICggdXJsIC4gc3BsaXQgKCAnemVuZ2E6JyApIFsgMSBdICwgT28wbzBvb29vME8wICkKICByZXR1cm4KICBpZiAxMSAtIDExOiBvMDAwMG9Pb09vTzBvIC8gSUkxMWlpSUkgKiBJSTExaWlJSSAqIE8wCiAgaWYgMSAtIDE6IGlJaWkxSTExSTFJSTEgJSBvT29PMG9vME9PT28gLiBpaWlpSWkxMWkgLiBvb29PMG9vMG9PT09PIC4gT29vMDBvT28wMG8gLyBPb28wMG9PbzAwbwogaWYgdXJsIGluIFsgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDJ4cGRtVXVZWEo1Ym1WM2N5NTBkaTg9JyApICwKIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyeHBkbVV1WVhKNWVtbHVaR0ZuYVM1MGRpOD0nICkgLAogYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDJ4cGRtVXVZWEo1Y1hSMkxuUjJMdz09JyApICwKIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyeHBkbVV1WVhKNWJYVnphV3N1ZEhZdicgKSAsCiBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMMnhwZG1VdVlYSjVaR2xuYVhSaGJDNTBkaTg9JyApIF0gOgogIE9vME9vTzAwb09PMG8gPSB1cmxsaWIyIC4gUmVxdWVzdCAoIHVybCApCiAgaWYgNTIgLSA1MjogTzAgKiBPb29vb29vb09PIC4gbzBvbzBvIC4gSUkxMWlpSUkgLSBpMUkxaWkxSUkxaUlJICUgaTFJMWlpMUlJMWlJSQogIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1RXOTZhV3hzWVM4MUxqQWdLRmRwYm1SdmQzTWdUbFFnTmk0eE95QlhUMWMyTkNrZ1FYQndiR1ZYWldKTGFYUXZOVE0zTGpNMklDaExTRlJOVEN3Z2JHbHJaU0JIWldOcmJ5a2dRMmh5YjIxbEx6UTNMakF1TWpVeU5pNHhNVEVnVTJGbVlYSnBMelV6Tnk0ek5nPT0nICkgKQogIE9PTzAwTyA9IHVybGxpYjIgLiB1cmxvcGVuICggT28wT29PMDBvT08wbyApCiAgT09vT08wb28wb29PID0gT09PMDBPIC4gcmVhZCAoICkKICBwcmludCBPT29PTzBvbzBvb08KICBJaWlJSUlJSUkgPSAnKGNvbnRlbnQuandwbGF0Zm9ybS5jb20ucGxheWVycy4qPy5qcyknCiAgTzAwTyA9IHJlIC4gZmluZGFsbCAoIElpaUlJSUlJSSAsIE9Pb09PMG9vMG9vTyApCiAgaWYgbGVuICggTzAwTyApID4gMCA6CiAgIHByaW50IE8wME8gLCAnbG4gdmFsJwogICBPT29PTzBvbzBvb08gPSBpMWlpSTExSSAoICdodHRwOi8vJyArIE8wME8gWyAwIF0gKQogICBpZiAyOCAtIDI4OiBPb28wMG9PbzAwbwogICBpZiA0MyAtIDQzOiBvT29PMG9vME9PT28gLiBvb29PMG9vMG9PT09PICogb09vME8wT29vIC8gT29PME8wMAogIGlpSUkxSTExaWkxSUlJID0gJ2ZpbGVbXCciXT86IFtcJyJdKC4qPylbXCciXScKICBpZiAzNCAtIDM0OiBvT28wTzBPb28gJSBPb29vb29vb09PIC4gSUkxMTFpaWlpICUgSUkxMWlpSUkKICBPbzBvMG9vb28wTzAgLiB1cGRhdGUgKCA1MCAsICIiICwgIlByZXBhcmluZyB1cmwuLiIgLCAiIiApCiAgb09Pb28wME9vID0gcmUgLiBmaW5kYWxsICggaWlJSTFJMTFpaTFJSUkgLCBPT29PTzBvbzBvb08gKSBbIC0gMSBdCiAgaWYgb09Pb28wME9vIC4gc3RhcnRzd2l0aCAoICdydG1wJyApIDogb09Pb28wME9vICs9ICcgdGltZW91dD0yMCcKICBJMWlJSWlJID0gVHJ1ZQogZWxpZiB1cmwgPT0gJ2V0dicgOgogIE9vME9vTzAwb09PMG8gPSB1cmxsaWIyIC4gUmVxdWVzdCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyVnVaMnhwYzJndWNISmhaR1Z6YURFNExtTnZiUzloYW1GNExYTjBjbVZoYldsdVp5NXdhSEEvWkdWMmFXTmxQWGRsWWlaamFHRnVibVZzUFdWMGRpMTFjbVIxSm5jOU1UQXdKVEkxSm1nOU5UQXcnICkgKQogIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wKGlQYWQ7IFU7IENQVSBpUGhvbmUgT1MgM18yIGxpa2UgTWFjIE9TIFg7IGVuLXVzKSBBcHBsZVdlYktpdC81MzEuMjEuMTAgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMC40IE1vYmlsZS83QjMxNCBTYWZhcmkvNTMxLjIxLjEwJyApCiAgT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICkKICBPT29PTzBvbzBvb08gPSBPT08wME8gLiByZWFkICggKQogIGlpSUkxSTExaWkxSUlJID0gJzxiYWNrdXAuKj8oaHR0cC4qPylcXT9cXT8+JwogIElJMTFpSTFpID0gcmUgLiBmaW5kYWxsICggaWlJSTFJMTFpaTFJSUkgLCBPT29PTzBvbzBvb08gKSBbIDAgXQogIG9vMDBvTyA9IGkxaWlJMTFJICggSUkxMWlJMWkgKQogIGlmIDcwIC0gNzA6IE8wIC0gb29PTzAwb09vIC0gT29PME8wMAogIGlmIDk1IC0gOTU6IG9vb08wb28wb09PT08gKiBJSTExMWlpaWkgJSBPb28wMG9PbzAwbyAqIE9vTzBPMDAgLiBPb09PMG9vT09vbzBPCiAgaWkxSTExaWkgPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCAiVUdGamF5QnRlU0JpYjNnZ2QybDBhQ0FqTVRJMUlHeHBjWFZ2Y2lCcWRXZHpMaUJDVEU5WFdsa2dUa2xIU0ZRdFJsSlZUVkJUSUZaRldDZEVJRXBCUTBzZ1VTNGdTbUZqYTJSaGQzTWdiRzkyWlNCdGVTQXpPQ0JpYVdjZ2MzQm9hVzU0SUc5bUlDSnhkV0Z5ZEhvaUxpQXlLekk5TkN3Z1FTQlJWVWxEU3kxdGIzWmxiV1Z1ZENCdlppQjBhR1VnWlc1bGJYa2dkMmxzYkNCcVpXOXdZWEprYVhwbElDTTJPU0JuZFc1aWIyRjBjenNnWm05eWMyRnJhVzVuSUcxdmJtRnpkR2xqSUhSeVlXUnBkR2x2YmpvZ05EY2xJR3B2ZG1saGJDQm1jbWxoY25NZ1oyRjJaU0IxY0NCMGFHVnBjaUFxZG05allYUnBiMjRxSUdadmNpQmhJSEYxWlhOMGFXOXVZV0pzWlNCbGVHbHpkR1Z1WTJVZ2IyNGdkR2hsSUNobWJIbHBibWNwSUhSeVlYQmxlbVVnWldGeWJtbHVaeUFrTUMxeVpYUjFjbTV6SVNCWFJTQnhkV2xqYTJ4NUlGTkZTVnBGUkNCVVNFVWdXMEpNUVVOTFhTQkJXRXhGSUNZZ1NsVlRWQ0JUUVZaRlJDQkpWQ0JHVWs5TklFZFBTVTVISUZCQlUxUWdTRWxOTGlCSmN5QXpQalUvSUc5eUlHbHpJRFU4TXo4Z0lHTnZiblJoWTNSQWJtVjBkMjl5YXpFNGRHVmphQzVqYjIxK0wxOD0iICkKICBPb09PMG8wMDAwMDAgPSAnJwogIGZvciBPME9Pb08wME9PMG8gaW4gb28wMG9PIC4gc3BsaXQgKCAnLCcgKSA6CiAgIE9vT08wbzAwMDAwMCArPSBpaTFJMTFpaSBbIGludCAoIE8wT09vTzAwT08wbyApIF0KICAgaWYgNDEgLSA0MTogT28gJSBvT29PMG9vME9PT28gKyBpSWlpMUkxMUkxSUkxCiAgT28wbzBvb29vME8wIC4gdXBkYXRlICggNTAgLCAiIiAsICJQcmVwYXJpbmcgdXJsLi4iICwgIiIgKQogIG9PT29vMDBPbyA9IE9vT08wbzAwMDAwMAogZWxpZiAnZGFnMS5hc3gnIG5vdCBpbiB1cmwgYW5kICdoZGNhc3Qub3JnJyBub3QgaW4gdXJsIGFuZCAnP3NlY3VyaXR5dHlwZT0yJyBub3QgaW4gdXJsIGFuZCAnYmVybmFyZG90di5jbHViJyBub3QgaW4gdXJsIGFuZCAnaW1vYi5kdW55YW5ld3MudHYnIG5vdCBpbiB1cmwgOgogIGlmICcvcGxheS8nIGluIHVybCA6CiAgIE8wMDBvb28gPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnTURBd05rUkRPRFV6JyApICsgYmluYXNjaWkgLiBiMmFfaGV4ICggb3MgLiB1cmFuZG9tICggMiApICkgWyA6IDMgXQogICB1cmwgKz0gYmFzZTY0IC4gYjY0ZGVjb2RlICggJ0wxVlRMekV2JyApICsgTzAwMG9vbwogICBpMWlpSTExSSAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyWmxjbkpoY21sc1lpNXFaVzEwZGk1amIyMHZhVzVrWlhndWNHaHdMM2h0YkM5cGJtbDBhV0ZzYVhwbEx6QTFMVEF5TFRFek1ERXdOeTB5TkMxUVQxQXROakU0TFRBd01DOHlMakl1TVM0MEx3PT0nICkgKyBPMDAwb29vICkKICBPbzBPb08wMG9PTzBvID0gdXJsbGliMiAuIFJlcXVlc3QgKCB1cmwgKQogIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1ZtVnlhWE50YnkxQ2JHRmphMVZKWHlneUxqUXVOeTQxTGpndU1DNHpOQ2s9JyApICkKICBpZiA2MSAtIDYxOiBvb09PMDBvT28gLiBpMTFpSWlpSWlpIC0gb29PTzAwb09vCiAgT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICkKICBPT29PTzBvbzBvb08gPSBPT08wME8gLiByZWFkICggKQogIGlpSUkxSTExaWkxSUlJID0gJzxsaW5rPiguKj8pPFwvbGluaz4nCiAgT28wbzBvb29vME8wIC4gdXBkYXRlICggNTAgLCAiIiAsICJQcmVwYXJpbmcgdXJsLi4iICwgIiIgKQogIG9PT29vMDBPbyA9IHJlIC4gZmluZGFsbCAoIGlpSUkxSTExaWkxSUlJICwgT09vT08wb28wb29PICkKICBpZiAnW0NEQVRBJyBpbiBvT09vbzAwT28gOgogICBvT09vbzAwT28gPSBvT09vbzAwT28gLiBzcGxpdCAoICdDREFUQVsnICkgWyAxIF0gLiBzcGxpdCAoICddJyApIFsgMCBdCiAgaWYgbm90ICggb09Pb28wME9vIGFuZCBsZW4gKCBvT09vbzAwT28gKSA+IDAgKSA6CiAgIGlpSUkxSTExaWkxSUlJID0gJ1w8RU5UUllcPlw8UkVGIEhSRUY9IiguKj8pIicKICAgb09Pb28wME9vID0gcmUgLiBmaW5kYWxsICggaWlJSTFJMTFpaTFJSUkgLCBPT29PTzBvbzBvb08gKSBbIDAgXQogIGVsc2UgOgogICBvT09vbzAwT28gPSBvT09vbzAwT28gWyAwIF0KIGVsc2UgOgogIGlmICdoZGNhc3Qub3JnJyBpbiB1cmwgb3IgJ2Jlcm5hcmRvdHYuY2x1YicgaW4gdXJsIDoKICAgSTFpSUlpSSA9IFRydWUKICBvT09vbzAwT28gPSB1cmwKIGlmICdbQ0RBVEEnIGluIG9PT29vMDBPbyA6CiAgb09Pb28wME9vID0gb09Pb28wME9vIC4gc3BsaXQgKCAnQ0RBVEFbJyApIFsgMSBdIC4gc3BsaXQgKCAnXScgKSBbIDAgXQogIGlmIDggLSA4OiBvT29PMG9vME9PT28gKiBvb29PMG9vMG9PT09PIC8gT29PME8wMAogIGlmIDk5IC0gOTk6IElJMTFpaUlJICogbzBvbzBvIC4gT28gLSBpMUlJaSAtIE9vT08wb29PT29vME8gJSBvb29PMG9vMG9PT09PCiAgaWYgNDAgLSA0MDogb09vME8wT29vICUgbzBvbzBvIC8gb28gKyBpMUlJaQogaWYgJz9zZWN1cml0eXR5cGU9MicgaW4gdXJsIDoKICBPT29vT08wMDAgPSB1cmxsaWIyIC4gYnVpbGRfb3BlbmVyICggb09vMDBPbzAwTyApCiAgT09PMDBPID0gT09vb09PMDAwIC4gb3BlbiAoIHVybCApCiAgb09Pb28wME9vID0gT09PMDBPIC4gaW5mbyAoICkgLiBnZXRoZWFkZXIgKCAnTG9jYXRpb24nICkKICBpZiAnMTI3LjAuMC4xJyBub3QgaW4gb09Pb28wME9vIDoKICAgb09Pb28wME9vID0gJ3J0bXA6Ly9xdWluemVsaXZlZnMuZnBsaXZlLm5ldC9xdWluemVsaXZlLWxpdmUgbGl2ZT10cnVlIHRpbWVvdXQ9MTUgcGxheXBhdGg9JXMnICUgb09Pb28wME9vIC4gc3BsaXQgKCAnLycgKSBbIC0gMSBdCiAgIGlmIDUzIC0gNTM6IG8wb28wbwogICBJMWlJSWlJID0gVHJ1ZQogICBpZiA4MSAtIDgxOiBPMCAlIE9vbzAwb09vMDBvIC8gbzAwMDBvT29Pb08wbyAvIE9vIC4gaTExaUlpaUlpaSArIG9vb08wb28wb09PT08KICAgaWYgMjkgLSAyOTogT28KICAgaWYgNzAgLSA3MDogaWlpaUlpMTFpIC4gTzAgJSBPb09PMG9vT09vbzBPICUgb29vTzBvbzBvT09PTyAtIE9vT08wb29PT29vME8gKiBvT29PMG9vME9PT28KIGlmICdkYWcxLmFzeCcgaW4gb09Pb28wME9vIDoKICBPbzBPb08wMG9PTzBvID0gdXJsbGliMiAuIFJlcXVlc3QgKCBvT09vbzAwT28gKQogIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1ZtVnlhWE50YnkxQ2JHRmphMVZKWHlneUxqUXVOeTQxTGpndU1DNHpOQ2s9JyApICkKICBPT08wME8gPSB1cmxsaWIyIC4gdXJsb3BlbiAoIE9vME9vTzAwb09PMG8gKQogIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiAgaTFJaU9PTyA9ICdocmVmPSIoW14iXSspIlteIl0rJCcKICBvT09vbzAwT28gPSByZSAuIGZpbmRhbGwgKCBpMUlpT09PICwgT09vT08wb28wb29PICkgWyAwIF0KICBpZiA2NSAtIDY1OiBPb29vb29vb09PICsgbzBvbzBvICUgbzBvbzBvIC4gT28gLyBpaWlpSWkxMWkKICBpZiA2IC0gNjogaTFJSWkgKyBvT29PMG9vME9PT28KICBpZiA0OSAtIDQ5OiBpMUkxaWkxSUkxaUlJIC0gSUkxMTFpaWlpIC0gbzBvbzBvCiBpZiBJMWlJSWlJIDoKICBPME9Pb09vbzBPT28gPSBvT09vbzAwT28KIGVsc2UgOgogIE8wT09vT29vME9PbyA9IE9vb08wME9Pb29PTyAoIG9PT29vMDBPbyApCiAgaWYgNDEgLSA0MTogT28gLSBvMG9vMG8gJSBpMTFpSWlpSWlpICogT29PME8wMCAqIG9vb08wb28wb09PT08gLSBPMAogcHJpbnQgJ2ZpbmFsX3VybCcgLCBPME9Pb09vbzBPT28KIGlmICd0b2tlbj1od190b2tlbicgaW4gTzBPT29Pb28wT09vIDoKICBPME9Pb09vbzBPT28gPSBPME9Pb09vbzBPT28gLiBzcGxpdCAoICc/JyApIFsgMCBdCiAgcHJpbnQgJ2ZpbmFsX3VybCcgLCBPME9Pb09vbzBPT28KIGlmICd0b2tlbj1lY19obHNfdG9rZW4nIGluIE8wT09vT29vME9PbyA6CiAgTzBPT29Pb28wT09vID0gTzBPT29Pb28wT09vIC4gc3BsaXQgKCAnPycgKSBbIDAgXQogIHByaW50ICdmaW5hbF91cmwnICwgTzBPT29Pb28wT09vCiAgaWYgNjYgLSA2Njogb29PTzAwb09vICogb29PTzAwb09vCiAgaWYgMTEgLSAxMTogT28gLSBvMDAwMG9Pb09vTzBvIC4gaWlpaUlpMTFpICogbzAwMDBvT29Pb08wbwogIGlmIDg1IC0gODU6IGkxSUlpCiAgaWYgOTQgLSA5NDogT29vb29vb29PTyAuIE8wIC8gT29vb29vb29PTwogaWYgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FtRmtiMjlmZEc5clpXND0nICkgaW4gTzBPT29Pb28wT09vIG9yICdlbGFzdGljYmVhbnN0YWxrJyBpbiBPME9Pb09vbzBPT28gOgogIHByaW50ICdJbiBGZXJhcmkgdXJsJwogIE8wT09vT29vME9PbyA9IGlpaWkxSSAoIE8wT09vT29vME9PbyAsIE9vMG8wb29vbzBPMCApCiBPbzBvMG9vb28wTzAgLiB1cGRhdGUgKCAxMDAgLCAiIiAsICJBbG1vc3QgZG9uZS4uIiAsICIiICkKIGlmIDY3IC0gNjc6IGkxMWlJaWlJaWkgKyBvT28wTzBPb28KIGlmIE8wT09vT29vME9PbyAuIHN0YXJ0c3dpdGggKCAnaHR0cCcgKSBhbmQgJ1VzZXItQWdlbnQnIG5vdCBpbiBPME9Pb09vbzBPT28gOgogIE8wT09vT29vME9PbyArPSAnfFVzZXItQWdlbnQ9VmVyaXNtby1CbGFja1VJXygyLjQuNy41LjguMC4zNCknCiAgaWYgNTAgLSA1MDogT28gLiBpMUlJaSArIG9Pb08wb28wT09PbyAuIElJMTFpaUlJCiAgaWYgOTcgLSA5Nzogb28KIEkxID0geGJtY2d1aSAuIExpc3RJdGVtICggbGFiZWwgPSBzdHIgKCBvTzAwb09Pb29vTyApICwgaWNvbkltYWdlID0gIkRlZmF1bHRWaWRlby5wbmciICwgdGh1bWJuYWlsSW1hZ2UgPSB4Ym1jIC4gZ2V0SW5mb0ltYWdlICggIkxpc3RJdGVtLlRodW1iIiApICkKIGlmIDYzIC0gNjM6IE8wIC0gb09vME8wT29vIC8gaTExaUlpaUlpaSAvIE9vb29vb29vT08gLyBPbyAvIElJMTExaWlpaQogeGJtYyAuIFBsYXllciAoICkgLiBwbGF5ICggTzBPT29Pb28wT09vICwgSTEgKQogaWYgNDUgLSA0NTogSUkxMTFpaWlpIC4gb29PTzAwb09vICsgb29PTzAwb09vICogaUlpaTFJMTFJMUlJMQpkZWYgSTFJSTFpSWkgKCApIDoKIElpMWlJaTExMWkxaTEgPSAncG92ZWUuanNvbicKIElpMWlJaTExMWkxaTEgPSBvcyAuIHBhdGggLiBqb2luICggTzBPT28gLCBJaTFpSWkxMTFpMWkxICkKIHRyeSA6CiAgb28wTzBvID0gaTExMWkxaSAoIElpMWlJaTExMWkxaTEgLCAyICogNjAgKiA2MCApCiAgaWYgbm90IG9vME8wbyA9PSBOb25lIDoKICAgcmV0dXJuIGV2YWwgKCBiYXNlNjQgLiBiNjRkZWNvZGUgKCBvbzBPMG8gKSApCiBleGNlcHQgOgogIHByaW50ICdmaWxlIGdldHRpbmcgZXJyb3InCiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgaWYgMjMgLSAyMzogb29vTzBvbzBvT09PTyAqIG9PbzBPME9vbyAlIG8wMDAwb09vT29PMG8gLyBvMDAwMG9Pb09vTzBvIC0gT28gLSBJSTExaWlJSQogTzBPTyA9IE8wMCAoICkKIHRyeSA6CiAgaWYgTzBPTyBhbmQgbGVuICggTzBPTyApID4gMCA6CiAgIE9PTzBvME9PME9PICggYmFzZTY0IC4gYjY0ZW5jb2RlICggc3RyICggTzBPTyApICkgLCBJaTFpSWkxMTFpMWkxICkKIGV4Y2VwdCA6CiAgcHJpbnQgJ3BvdmVlIGZpbGUgc2F2aW5nIGVycm9yJwogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcmV0dXJuIE8wT08KIGlmIDE3IC0gMTc6IElJMTExaWlpaSArIE9vICsgaTFJMWlpMUlJMWlJSSAuIG9Pb08wb28wT09PbwpkZWYgTzAwICggKSA6CiBpZiAzNiAtIDM2OiBvbwogSTExMTFJMWlJSTExID0gWyBdCiBPbzBvME8wb08wbyA9IGkxaWlJMTFJICggJ2h0dHA6Ly9wb292ZWUubmV0L3Byb2ZpbGUvcG9vdmVlLzEvJyApCiBpaTExaTFJMWlpaWkgPSAnPGRpdiBjbGFzcz1cInZpZGVvLWRhdGFcIj5ccyouKj9ocmVmPVwiLio/XC92aWRlb1wvKFswLTldKj8pXC8uKj90aXRsZT1cIiguKj8pXCInCiBPT29vT09PID0gcmUgLiBmaW5kYWxsICggaWkxMWkxSTFpaWlpICwgT28wbzBPMG9PMG8gKQogZm9yIEkxaTExIGluIE9Pb29PT08gOgogIGlmIG5vdCAoIEkxaTExIFsgMSBdIC4gbG93ZXIgKCApIC4gc3RhcnRzd2l0aCAoICdvZmZpY2UnICkgb3IgSTFpMTEgWyAxIF0gLiBsb3dlciAoICkgaW4gWyAncG9vdmVlJyAsICdhcnkgemluZGFnYWknICwgJ3F0dicgLCAnc2VlIHR2JyAsICdzYW1hYSB0dicgLCAnbWFzaHJpcSB0dicgLCAnbWFkYW5pJyAsICdqYWFnIHR2JyAsICdoYWRpJyAsICdkdW55YScgLCAnZGF3biBsb3cnICwgJ2RhaWx5IGplZWphbCcgLCAnY2hhbm5lbCAyNCcgXSApIDoKICAgSUkxaWkxID0gSTFpMTEgWyAxIF0KICAgaWYgJ0JhaGFyaWEnIGluIElJMWlpMSA6IElJMWlpMSA9IElJMWlpMSAuIHJlcGxhY2UgKCAnQmFoYXJpYScgLCAnQmFocmlhJyApCiAgIGlmICdCYWhhcmknIGluIElJMWlpMSA6IElJMWlpMSA9IElJMWlpMSAuIHJlcGxhY2UgKCAnQmFoYXJpJyAsICdCYWhyaWEnICkKICAgaWYgNTAgLSA1MDogaTExaUlpaUlpaSAuIGkxSTFpaTFJSTFpSUkgLyBpMTFpSWlpSWlpCiAgIGlmIDMyIC0gMzI6IElJMTExaWlpaSAuIG8wMDAwb09vT29PMG8gLiBvMDAwMG9Pb09vTzBvIC0gT29vb29vb29PTyAtIGkxMWlJaWlJaWkgJSBpMUlJaQogICBJMTExMUkxaUlJMTEgLiBhcHBlbmQgKCAoIElJMWlpMSAsIEkxaTExIFsgMCBdICwgJ3BvdmVlJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvJXMucG5nJyAlIElJMWlpMSAuIGxvd2VyICggKSAuIHJlcGxhY2UgKCAnICcgLCAnJyApICkgKQogICBpZiAzOSAtIDM5OiBPb09PMG9vT09vbzBPICUgT29vMDBvT28wMG8gLiBPb28wMG9PbzAwbyAqIG8wb28wbyArIGlpaWlJaTExaQogICBpZiA3MCAtIDcwOiBvb09PMDBvT28KIGlmIDEgPT0gMiA6CiAgT28wbzBPMG9PMG8gPSBpMWlpSTExSSAoICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvZWIueG1sJyApCiAgaWkxMWkxSTFpaWlpID0gJzx0aXRsZT4oLio/KTxcL3RpdGxlPlxzLio/ZG9yZWcuKj9ccy4qXHMuKlxzLipccy4qP1wvZW1iZWRcLyhbMC05XSopXC8uKlxzLipcczx0aHVtYm5haWw+KC4qPyk8JwogIE9Pb29PT08gPSByZSAuIGZpbmRhbGwgKCBpaTExaTFJMWlpaWkgLCBPbzBvME8wb08wbyApCiAgb09PME8gPSBbIF0KICBmb3IgSTFpMTEgaW4gT09vb09PTyA6CiAgIGlmIEkxaTExIFsgMCBdIC4gcmVwbGFjZSAoICcgJyAsICcnICkgLiBsb3dlciAoICkgbm90IGluICggaSBbIDAgXSAuIHJlcGxhY2UgKCAnICcgLCAnJyApIC4gbG93ZXIgKCApIGZvciBpIGluIEkxMTExSTFpSUkxMSApIDoKICAgIG9PTzBPIC4gYXBwZW5kICggKCBJMWkxMSBbIDAgXSAsIEkxaTExIFsgMSBdICwgJ3BvdmVlJyAsIEkxaTExIFsgMiBdICkgKQogIHByaW50ICdyZWcnICwgc3RyICggb09PME8gKQogSTExMTFJMWlJSTExICs9IFsgKCAnSEVBTFRIIFRWJyAsICczNDknICwgJ3BvdmVlJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvaHR2LnBuZycgKSAsICggJ1pBSVFBIFRGQycgLCAnMTAxNTc2JyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL3phaXFhdGZjLnBuZycgKSAsICggJ0EgUExVUycgLCAnMjk3JyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2FwbHVzLnBuZycgKSAsICggJ0EgVFYnICwgJzM5OScgLCAncG92ZWUnICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9hdHYucG5nJyApICwgKCAnQVJZIERJR0lUQUwnICwgJzIyMDE4NicgLCAncG92ZWUnICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9hcnlkaWdpdGFsLnBuZycgKSAsICggJ0FSWSBaSU5EQUdJJyAsICcyMjAyNDEnICwgJ3BvdmVlJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvYXJ5emluZGFnaS5wbmcnICkgLCAoICdETSBESUdJVEFMJyAsICczNzMnICwgJ3BvdmVlJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvZG1kaWdpdGFsLnBuZycgKSAsICggJ0RUViBQTFVTJyAsICczMTMnICwgJ3BvdmVlJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvZHR2cGx1cy5wbmcnICkgLCAoICdGSUxNQVNJQScgLCAnMjMyNCcgLCAncG92ZWUnICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9maWxtYXNpYS5wbmcnICkgLCAoICdIVU0gVFYgQVNJQScgLCAnMzA3JyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2h1bXR2LnBuZycgKSAsICggJ09OIFRWJyAsICcxMzY4MScgLCAncG92ZWUnICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9vbnR2LnBuZycgKSAsICggJ1BMQVkgRU5URVJUQUlOTUVOVCcgLCAnMzc5JyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL3BsYXllbnRlcnRhaW5tZW50LnBuZycgKSAsICggJ1NFRSBUViBIRCcgLCAnMTg3JyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL3NlZXR2aGQucG5nJyApICwgKCAnU1RBUiBNQVgnICwgJzIzMjInICwgJ3BvdmVlJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3Mvc3Rhcm1heC5wbmcnICkgLCAoICdUSU1FUycgLCAnMzk3JyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL3RpbWVzLnBuZycgKSAsICggJ1RWIE9ORScgLCAnMzYzJyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL3R2b25lLnBuZycgKSAsICggJ1ZJQkUnICwgJzM4MycgLCAncG92ZWUnICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy92aWJldHYucG5nJyApICwgKCAnOFhNIEhEJyAsICc1MTMwOCcgLCAncG92ZWUnICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy84eG1oZC5wbmcnICkgLCAoICdBTkRBWiBUVicgLCAnNTIxNjYnICwgJ3BvdmVlJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvYW5kYXp0di5wbmcnICkgLCAoICdKQUxXQScgLCAnMzkzJyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2phbHdhLnBuZycgKSAsICggJzkyIE5FV1MgSEQnICwgJzIzOScgLCAncG92ZWUnICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy85Mm5ld3NoZC5wbmcnICkgLCAoICdBQUogTkVXUycgLCAnMzQzJyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2Fham5ld3MucG5nJyApICwgKCAnQUJCIFRBS0snICwgJzE1NDEwJyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2FiYnRha2sucG5nJyApICwgKCAnQURBTEFUIE5FV1MnICwgJzI5NDE2JyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2FkYWxhdG5ld3MucG5nJyApICwgKCAnQ0FQSVRBTCBUVicgLCAnMzM1JyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2NhcGl0YWx0di5wbmcnICkgLCAoICdDSEFOTkVMIDUnICwgJzMzNycgLCAncG92ZWUnICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9jaGFubmVsNS5wbmcnICkgLCAoICdEQVdOIE5FV1MnICwgJzMyMycgLCAncG92ZWUnICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9kYXdubmV3cy5wbmcnICkgLCAoICdESU4gTkVXUycgLCAnMzUxJyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2Rpbm5ld3MucG5nJyApICwgKCAnRFVOWUEgTkVXUycgLCAnMjIwMTU2JyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2R1bnlhbmV3cy5wbmcnICkgLCAoICdKQUFHJyAsICcyMDg2NDYnICwgJ3BvdmVlJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvamFhZy5wbmcnICkgLCAoICdNRVRSTyAxIE5FV1MnICwgJzM5MScgLCAncG92ZWUnICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9tZXRybzFuZXdzLnBuZycgKSAsICggJ05FTyBORVdTJyAsICczMzEnICwgJ3BvdmVlJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvbmVvbmV3cy5wbmcnICkgLCAoICdORVdTIE9ORScgLCAnMzg1JyAsICdwb3ZlZScgLCAnaHR0cDovL3d3dy5uZXdzb25lLnR2L3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE2LzAxL2Nyb3BwZWQtbG9nby1uZXdzb25lLnBuZycgKSAsICggJ1JBU1NBSScgLCAnMjk5MDQnICwgJ3BvdmVlJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvcmFzc2FpLnBuZycgKSAsICggJ1JPWUFMIE5FV1MgMjQvNycgLCAnMzc3JyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL3JveWFsbmV3czI0Ny5wbmcnICkgLCAoICdST1pFIE5FV1MnICwgJzMwMScgLCAncG92ZWUnICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9yb3plbmV3cy5wbmcnICkgLCAoICdTQU1BQScgLCAnMjIwMTQ5JyAsICdwb3ZlZScgLCAnaHR0cDovL3ZpZ25ldHRlMi53aWtpYS5ub2Nvb2tpZS5uZXQvbG9nb3BlZGlhL2ltYWdlcy8xLzEyL1NhbWFhX1RWLnBuZycgKSAsICggJ1NVQ0ggVFYnICwgJ3BvdmVlJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3Mvc3VjaHR2LnBuZycgKSAsICggJ1dBUVQgTkVXUycgLCAnMzUzJyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL3dhcXRuZXdzLnBuZycgKSAsICggJ01PVklFUyAyNC83JyAsICc0MDc3NCcgLCAncG92ZWUnICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9tb3ZpZXMyNDcucG5nJyApICwgKCAnQVBOQSBDSEFOTkVMJyAsICczNDUnICwgJ3BvdmVlJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvYXBuYWNoYW5uZWwucG5nJyApICwgKCAnQVJVSicgLCAnMTA0MjI3JyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2FydWoucG5nJyApICwgKCAnQVZUIEtIWUJFUicgLCAnMjg5JyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2F2dGtoeWJlci5wbmcnICkgLCAoICdBV0FaJyAsICczMzMnICwgJ3BvdmVlJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvYXdhei5wbmcnICkgLCAoICdJTkRFUEVOREVOVCcgLCAnMzA1JyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2luZGVwZW5kZW50LnBuZycgKSAsICggJ0sgMjEnICwgJzM4MTU4JyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2syMS5wbmcnICkgLCAoICdLQVkgMicgLCAnMjkxJyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2theTIucG5nJyApICwgKCAnS0hZQkVSIE5FV1MnICwgJzI4NycgLCAncG92ZWUnICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9raHliZXJuZXdzLnBuZycgKSAsICggJ01BU0hSSVEnICwgJzE0MDQwOScgLCAncG92ZWUnICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9tYXNocmlxLnBuZycgKSAsICggJ01FSFJBTiBUVicgLCAnNDAxJyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL21laHJhbnR2LnBuZycgKSAsICggJ1BBU0hUTyAxJyAsICcyOTMnICwgJ3BvdmVlJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvcGFzaHRvMS5wbmcnICkgLCAoICdTSEFNU0hBRCcgLCAnMzc1JyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL3NoYW1zaGFkLnBuZycgKSAsICggJ1NIQVJRIFJBRElPIFRWJyAsICcxMTg5MicgLCAncG92ZWUnICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9zaGFycXJhZGlvdHYucG5nJyApICwgKCAnU0lOREggVFYnICwgJzE2MzgxMCcgLCAncG92ZWUnICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9zaW5kaHR2LnBuZycgKSAsICggJ1NJTkRIIFRWIE5FV1MnICwgJzM2OScgLCAncG92ZWUnICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9zaW5kaHR2bmV3cy5wbmcnICkgLCAoICdWU0ggTkVXUycgLCAnMzYxJyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL3ZzaG5ld3MucG5nJyApICwgKCAnV0FTRUInICwgJzM3MScgLCAncG92ZWUnICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy93YXNlYi5wbmcnICkgLCAoICdaSFdBTkRPT04nICwgJzM1NycgLCAncG92ZWUnICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy96aHdhbmRvb24ucG5nJyApICwgKCAnQVJZIFFUVicgLCAnMjIwMjQ4JyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2FyeXF0di5wbmcnICkgLCAoICdIQURJIFRWIDEnICwgJzQ5MzM4JyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2hhZGl0djEucG5nJyApICwgKCAnTUFEQU5JIENIQU5ORUwnICwgJzM4NycgLCAncG92ZWUnICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9tYWRhbmljaGFubmVsLnBuZycgKSAsICggJ1FVUkFOIFRWIE1BRElOQScgLCAnMjc3NjgnICwgJ3BvdmVlJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvcXVyYW50di5wbmcnICkgLCAoICdRVVJBTiBUViBNRUNDQScgLCAnMzAzJyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL3F1cmFudHYucG5nJyApICwgKCAnUEFJR0hBTScgLCAnMzgxJyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL3BhaWdoYW0ucG5nJyApICwgKCAnUEVBQ0UgVFYgVVJEVScgLCAnMjIwMTMxJyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL3BlYWNldHZ1cmR1LnBuZycgKSAsICggJ1JBQUggVFYnICwgJzM5NScgLCAncG92ZWUnICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9yYWFodHYucG5nJyApICwgKCAnVEVIWkVFQiBUVicgLCAnMjMxJyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL3RlaHplZWJ0di5wbmcnICkgLCAoICdaSU5EQUdJIFRWJyAsICczMjcnICwgJ3BvdmVlJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvemluZGFnaXR2LnBuZycgKSAsICggJ1RFTiBTUE9SVFMgT0ZGSUNJQUwnICwgJzMyMzYwJyAsICdwb3ZlZScgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL3RlbnNwb3J0cy5wbmcnICkgXQogaWYgNzAgLSA3MDogaTFJSWkgLyBPb09PMG9vT09vbzBPIC8gTzAgLiBPbyAvIElJMTExaWlpaQogaWYgMSA9PSAyIDoKICBPbzBvME8wb08wbyA9IGkxaWlJMTFJICggJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9lYi54bWwnICkKICBpaTExaTFJMWlpaWkgPSAnPHRpdGxlPiguKj8pPFwvdGl0bGU+XHM8bGluaz4oaHR0cC4qP2Vib3VuZHNlcnZpY2UuKj8pPC4qXHM8dGh1bWJuYWlsPiguKj8pPCcKICBPT29vT09PID0gcmUgLiBmaW5kYWxsICggaWkxMWkxSTFpaWlpICwgT28wbzBPMG9PMG8gKQogIG9PTzBPID0gWyBdCiAgZm9yIEkxaTExIGluIE9Pb29PT08gOgogICBpZiBJMWkxMSBbIDAgXSAuIHJlcGxhY2UgKCAnICcgLCAnJyApIC4gbG93ZXIgKCApIG5vdCBpbiAoIGkgWyAwIF0gLiByZXBsYWNlICggJyAnICwgJycgKSAuIGxvd2VyICggKSBmb3IgaSBpbiBJMTExMUkxaUlJMTEgKSA6CiAgICBvT08wTyAuIGFwcGVuZCAoICggSTFpMTEgWyAwIF0gLCBiYXNlNjQgLiBiNjRlbmNvZGUgKCBJMWkxMSBbIDEgXSApICwgJ2dlbicgLCBJMWkxMSBbIDIgXSApICkKICBwcmludCAnc3RhdGljJyAsIHN0ciAoIG9PTzBPICkKICBpZiA4NiAtIDg2OiBPMCAtIG9vT08wMG9PbyAlIE9vT08wb29PT29vME8gLiBpaWlpSWkxMWkKIEkxMTExSTFpSUkxMSArPSBbICggJ0hVTSBNQVNBTEEnICwgJ2FIUjBjRG92TDNOMGNtVmhiV1Z5TWpjdVpXSnZkVzVrYzJWeWRtbGpaWE11WTI5dEwzUmxhR0Z0YVcxbGEzbHNNREF2YldGellXeGhkSFl2Y0d4aGVXeHBjM1F1YlROMU9BPT0nICwgJ2dlbicgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2h1bW1hc2FsYS5wbmcnICkgLCAoICdBQUogRU5URVJUQUlOTUVOVCcgLCAnYUhSMGNEb3ZMM04wY21WaGJXVnlNamN1WldKdmRXNWtjMlZ5ZG1salpYTXVZMjl0TDNSbGFHRnRhVzFsYTNsc01EQXZZV0ZxWlc1MFpYSjBZV2x1YldWdWRDOXdiR0Y1YkdsemRDNXRNM1U0JyAsICdnZW4nICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9hYWplbnRlcnRhaW5tZW50LnBuZycgKSAsICggJ0NPTE9SUycgLCAnYUhSMGNEb3ZMM04wY21WaGJXVnlNamN1WldKdmRXNWtjMlZ5ZG1salpYTXVZMjl0TDNSbGFHRnRhVzFsYTNsc01EQXZZMjlzYjNKekwzQnNZWGxzYVhOMExtMHpkVGc9JyAsICdnZW4nICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9jb2xvcnMucG5nJyApICwgKCAnRVhQUkVTUyBFTlRFUlRBSU5NRU5UJyAsICdhSFIwY0RvdkwzTjBjbVZoYldWeU5qRXVaV0p2ZFc1a2MyVnlkbWxqWlhNdVkyOXRMMjF2WW1sc1pTOWxlSEJ5WlhOelpXNTBaWEowWVdsdWJXVnVkQzl3YkdGNWJHbHpkQzV0TTNVNCcgLCAnZ2VuJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvZXhwcmVzc2VudGVydGFpbm1lbnQucG5nJyApICwgKCAnRzEgVFYnICwgJ2FIUjBjRG92TDNOMGNtVmhiV1Z5TWpjdVpXSnZkVzVrYzJWeWRtbGpaWE11WTI5dEwzUmxhR0Z0YVcxbGEzbHNNREF2WnpGMGRpOXdiR0Y1YkdsemRDNXRNM1U0JyAsICdnZW4nICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9nMXR2LnBuZycgKSAsICggJ0dFTyBLQUhBTkknICwgJ2FIUjBjRG92TDNOMGNtVmhiV1Z5TWpjdVpXSnZkVzVrYzJWeWRtbGpaWE11WTI5dEwzUmxhR0Z0YVcxbGEzbHNNREF2WjJWdmEyRm9ZVzVwTDNCc1lYbHNhWE4wTG0wemRUZz0nICwgJ2dlbicgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2dlb2thaGFuaS5wbmcnICkgLCAoICdHRU8gVFYnICwgJ2FIUjBjRG92TDNOMGNtVmhiV1Z5TWpjdVpXSnZkVzVrYzJWeWRtbGpaWE11WTI5dEwzUmxhR0Z0YVcxbGEzbHNNREF2WjJWdlpXNTBaWEowWVdsdWJXVnVkQzl3YkdGNWJHbHpkQzV0TTNVNCcgLCAnZ2VuJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvZ2VvZW50ZXJ0YWlubWVudC5wbmcnICkgLCAoICdIQk8nICwgJ2FIUjBjRG92TDNOMGNtVmhiV1Z5TWpjdVpXSnZkVzVrYzJWeWRtbGpaWE11WTI5dEwzUmxhR0Z0YVcxbGEzbHNNREF2YUdKdkwzQnNZWGxzYVhOMExtMHpkVGc9JyAsICdnZW4nICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9oYm8ucG5nJyApICwgKCAnSFVNIFNJVEFSQVkgV09STEQnICwgJ2FIUjBjRG92TDNOMGNtVmhiV1Z5TmpFdVpXSnZkVzVrYzJWeWRtbGpaWE11WTI5dEwyMXZZbWxzWlM5b2RXMHlMM0JzWVhsc2FYTjBMbTB6ZFRnPScgLCAnZ2VuJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvaHVtc2l0YXJheS5wbmcnICkgLCAoICdQVFYgR0xPQkFMJyAsICdhSFIwY0RvdkwzTjBjbVZoYldWeU1qY3VaV0p2ZFc1a2MyVnlkbWxqWlhNdVkyOXRMM1JsYUdGdGFXMWxhM2xzTURBdmNIUjJaMnh2WW1Gc0wzQnNZWGxzYVhOMExtMHpkVGc9JyAsICdnZW4nICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9wdHZnbG9iYWwucG5nJyApICwgKCAnU1RZTEUgMzYwJyAsICdhSFIwY0RvdkwzTjBjbVZoYldWeU5qRXVaV0p2ZFc1a2MyVnlkbWxqWlhNdVkyOXRMMjF2WW1sc1pTOXpkSGxzWlRNMk1DOXdiR0Y1YkdsemRDNXRNM1U0JyAsICdnZW4nICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9zdHlsZTM2MC5wbmcnICkgLCAoICdBUlkgTVVTSUsnICwgJ2FIUjBjRG92TDNOMGNtVmhiV1Z5TWpjdVpXSnZkVzVrYzJWeWRtbGpaWE11WTI5dEwzUmxhR0Z0YVcxbGEzbHNNREF2WVhKNWJYVnphV3N2Y0d4aGVXeHBjM1F1YlROMU9BPT0nICwgJ2dlbicgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2FyeW11c2lrLnBuZycgKSAsICggJzI0IE5FV1MgSEQnICwgJ2FIUjBjRG92TDNOMGNtVmhiV1Z5TWpjdVpXSnZkVzVrYzJWeWRtbGpaWE11WTI5dEwzUmxhR0Z0YVcxbGEzbHNNREF2WTJoaGJtNWxiREkwY0dzdmNHeGhlV3hwYzNRdWJUTjFPQT09JyAsICdnZW4nICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy8yNG5ld3NoZC5wbmcnICkgLCAoICcyNCBORVdTIEhEICgyKScgLCAnYUhSMGNEb3ZMM04wY21WaGJXVnlNamN1WldKdmRXNWtjMlZ5ZG1salpYTXVZMjl0TDNSbGFHRnRhVzFsYTNsc01EQXZZMmhoYm01bGJESTBMM0JzWVhsc2FYTjBMbTB6ZFRnPScgLCAnZ2VuJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvMjRuZXdzaGQucG5nJyApICwgKCAnQ0lUWSA0MicgLCAnYUhSMGNEb3ZMM04wY21WaGJXVnlNamN1WldKdmRXNWtjMlZ5ZG1salpYTXVZMjl0TDNSbGFHRnRhVzFsYTNsc01EQXZZMmwwZVRReUwzQnNZWGxzYVhOMExtMHpkVGc9JyAsICdnZW4nICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9jaXR5NDIucG5nJyApICwgKCAnRVhQUkVTUyBORVdTJyAsICdhSFIwY0RvdkwzTjBjbVZoYldWeU1qY3VaV0p2ZFc1a2MyVnlkbWxqWlhNdVkyOXRMM1JsYUdGdGFXMWxhM2xzTURBdlpYaHdjbVZ6Y3k5d2JHRjViR2x6ZEM1dE0zVTQnICwgJ2dlbicgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2V4cHJlc3NuZXdzLnBuZycgKSAsICggJ0dFTyBORVdTJyAsICdhSFIwY0RvdkwzTjBjbVZoYldWeU1qY3VaV0p2ZFc1a2MyVnlkbWxqWlhNdVkyOXRMM1JsYUdGdGFXMWxhM2xzTURBdloyVnZibVYzY3k5d2JHRjViR2x6ZEM1dE0zVTQnICwgJ2dlbicgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL2dlb25ld3MucG5nJyApICwgKCAnR0VPIFRFWicgLCAnYUhSMGNEb3ZMM04wY21WaGJXVnlNamN1WldKdmRXNWtjMlZ5ZG1salpYTXVZMjl0TDNSbGFHRnRhVzFsYTNsc01EQXZaMlZ2ZEdWNmVpOXdiR0Y1YkdsemRDNXRNM1U0JyAsICdnZW4nICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9nZW90ZXoucG5nJyApICwgKCAnTU9WSUVTIDI0LzctaUtJRCcgLCAnYUhSMGNEb3ZMM04wY21WaGJXVnlNamN1WldKdmRXNWtjMlZ5ZG1salpYTXVZMjl0TDNSbGFHRnRhVzFsYTNsc01EQXZhV3RwWkM5d2JHRjViR2x6ZEM1dE0zVTQnICwgJ2dlbicgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL21vdmllczI0Ny5wbmcnICkgLCAoICdNT1ZJRVMgMjQvNy1pTU9WSUUnICwgJ2FIUjBjRG92TDNOMGNtVmhiV1Z5TWpjdVpXSnZkVzVrYzJWeWRtbGpaWE11WTI5dEwzUmxhR0Z0YVcxbGEzbHNNREF2Ylc5MmFXVXZjR3hoZVd4cGMzUXViVE4xT0E9PScgLCAnZ2VuJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvbW92aWVzMjQ3LnBuZycgKSAsICggJ0FQTkEgTkVXUycgLCAnYUhSMGNEb3ZMM04wY21WaGJXVnlOakV1WldKdmRXNWtjMlZ5ZG1salpYTXVZMjl0TDIxdlltbHNaUzloY0c1aGJtVjNjeTl3YkdGNWJHbHpkQzV0TTNVNCcgLCAnZ2VuJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3MvYXBuYW5ld3MucG5nJyApICwgKCAnR0VPIFNVUEVSJyAsICdhSFIwY0RvdkwzTjBjbVZoYldWeU1qY3VaV0p2ZFc1a2MyVnlkbWxqWlhNdVkyOXRMM1JsYUdGdGFXMWxhM2xzTURBdloyVnZjM1Z3WlhJdmNHeGhlV3hwYzNRdWJUTjFPQT09JyAsICdnZW4nICwgJ2h0dHA6Ly9zaGFuaS5vZmZzaG9yZXBhc3RlYmluLmNvbS9aZW1Mb2dvcy9nZW9zdXBlci5wbmcnICkgLCAoICdTUE9SVFMnICwgJ2FIUjBjRG92TDNOMGNtVmhiV1Z5TWpjdVpXSnZkVzVrYzJWeWRtbGpaWE11WTI5dEwzUmxhR0Z0YVcxbGEzbHNNREF2YzNCdmNuUnpMM0JzWVhsc2FYTjBMbTB6ZFRnPScgLCAnZ2VuJyAsICdodHRwOi8vc2hhbmkub2Zmc2hvcmVwYXN0ZWJpbi5jb20vWmVtTG9nb3Mvc3BvcnRzLnBuZycgKSAsICggJ1RlbiBTcG9ydHMnICwgJ2FIUjBjRG92TDNOMGNtVmhiV1Z5TWpjdVpXSnZkVzVrYzJWeWRtbGpaWE11WTI5dEwzUmxhR0Z0YVcxbGEzbHNNREF2ZEdWdWMzQnZjblJ6TDNCc1lYbHNhWE4wTG0wemRUZz0nICwgJ2dlbicgLCAnaHR0cDovL3NoYW5pLm9mZnNob3JlcGFzdGViaW4uY29tL1plbUxvZ29zL3RlbnNwb3J0cy5wbmcnICkgXQogaWYgNDkgLSA0OTogaTExaUlpaUlpaSAtIGlJaWkxSTExSTFJSTEgJSBPMCAlIGkxSTFpaTFJSTFpSUkgKiBPbyAtIG9vb08wb28wb09PT08KIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggJ1F1cmFuIFRWIFVyZHUnICwgJ2FIUjBjRG92TDJsemJERXVhWE5zWVcwMGNHVmhZMlV1WTI5dEwxRjFjbUZ1VlhKa2RWUlcnICwgJ2dlbicgLCAnJyApICkKIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggJ0NoYW5uZWwgMjQnICwgJ2NuUnRjRG92TDJSemRISmxZVzF2Ym1VdVkyOXRPakU1TXpVdmJHbDJaUzhnY0d4aGVYQmhkR2c5WTJsMGVUUXlJSE4zWmxWeWJEMW9kSFJ3T2k4dlpITjBjbVZoYlc5dVpTNWpiMjB2YW5BdmFuZHdiR0Y1WlhJdVpteGhjMmd1YzNkbUlIQmhaMlZWY213OWFIUjBjRG92TDJSemRISmxZVzF2Ym1VdVkyOXRMMk5wZEhrME1pOXBabkpoYldVdWFIUnRiQ0IwYVcxbGIzVjBQVEl3JyAsICdnZW4nICwgJycgKSApCiBJMTExMUkxaUlJMTEgLiBhcHBlbmQgKCAoICdRVFYnICwgJ2FIUjBjRG92THpFMU9DNDJPUzR5TWprdU16QTZNVGt6TlM5QlVsbFJWRll2YlhsVGRISmxZVzB2Y0d4aGVXeHBjM1F1YlROMU9BPT0nICwgJ2dlbicgLCAnJyApICkKIEkxMTExSTFpSUkxMSAuIGFwcGVuZCAoICggJ1NFRSBUVicgLCAnY25SdGNEb3ZMek0yTnpjNE9UZzROaTV5TG0xNVkyUnVPVEl1Ym1WMEx6TTJOemM0T1RnNE5pOWZaR1ZtYVc1emRGOHZJSEJzWVhsd1lYUm9QWE5sWlhSMklITjNabFZ5YkQxb2RIUndPaTh2WkhOMGNtVmhiVzl1WlM1amIyMHZhbkF2YW5kd2JHRjVaWEl1Wm14aGMyZ3VjM2RtSUhCaFoyVlZjbXc5YUhSMGNEb3ZMMlJ6ZEhKbFlXMXZibVV1WTI5dEwzTmxaWFIyTDJsbWNtRnRaUzVvZEcxc0lIUnBiV1Z2ZFhROU1UQT0nICwgJ2dlbicgLCAnJyApICkKIGlmIDggLSA4OiBpSWlpMUkxMUkxSUkxICogT29PME8wMAogSTExMTFJMWlJSTExID0gc29ydGVkICggSTExMTFJMWlJSTExICwga2V5ID0gbGFtYmRhIEkxaTExIDogSTFpMTEgWyAwIF0gLiBsb3dlciAoICkgKQogaWYgMTEgLSAxMTogb28gLyBPb29vb29vb09PIC4gT29PME8wMAogaWYgMTkgLSAxOTogb09vTzBvbzBPT09vCiBJMWlPMDBPMDAwb09PMG9PID0gWyBdCiBpZiA0MSAtIDQxOiBJSTExaWlJSSArIE9vCiBmb3IgbzBPSWlJSSBpbiBJMTExMUkxaUlJMTEgOgogIGlmIDE1IC0gMTU6IG9PbzBPME9vbyAtIGkxMWlJaWlJaWkKICBpZiA0OCAtIDQ4OiBJSTExMWlpaWkgJSBPb09PMG9vT09vbzBPCiAgaWYgbzBPSWlJSSBbIDIgXSA9PSAncG92ZWUnIDoKICAgSTFpTzAwTzAwMG9PTzBvTyAuIGFwcGVuZCAoICggbzBPSWlJSSBbIDAgXSAuIGNhcGl0YWxpemUgKCApICwgJ2VibW9kZTo5MycgLCBvME9JaUlJIFsgMSBdICwgbzBPSWlJSSBbIDMgXSApICkKICBlbGlmIG8wT0lpSUkgWyAyIF0gPT0gJ2dlbicgOgogICBJMWlPMDBPMDAwb09PMG9PIC4gYXBwZW5kICggKCBvME9JaUlJIFsgMCBdIC4gY2FwaXRhbGl6ZSAoICkgLCAnZWJtb2RlOjMzJyAsIG8wT0lpSUkgWyAxIF0gLCBvME9JaUlJIFsgMyBdICkgKQogICBpZiA5NiAtIDk2OiBPb28wMG9PbzAwbwogICBpZiA5MCAtIDkwOiBvb29PMG9vMG9PT09PICogbzAwMDBvT29Pb08wbyAuIE9vT08wb29PT29vME8gLyBvT29PMG9vME9PT28gJSBPb09PMG9vT09vbzBPCiByZXR1cm4gSTFpTzAwTzAwMG9PTzBvTwogaWYgNTggLSA1ODogaTFJMWlpMUlJMWlJSSAlIGlJaWkxSTExSTFJSTEgKiBvb09PMDBvT28KIGlmIDI1IC0gMjU6IG8wb28wbyAtIE9vICsgT29PME8wMCAuIG9vICUgaUlpaTFJMTFJMUlJMQpkZWYgSTExSUlpSWlJICggdGV4dCA9ICcnICwgY29sb3JpZCA9ICcnICwgaXNCb2xkID0gRmFsc2UgKSA6CiBpZiBub3Qgb29PMDBvT29vIC4gZ2V0U2V0dGluZyAoICJlbmFibGVjb2xvciIgKSA9PSAndHJ1ZScgOgogIHJldHVybiB0ZXh0CiBpZiBjb2xvcmlkID09ICdaTScgOgogIElpSUlpMUkgPSAnRkYxMWI1MDAnCiBlbGlmIGNvbG9yaWQgPT0gJ0VCJyA6CiAgSWlJSWkxSSA9ICdGRmUzNzEwMScKIGVsaWYgY29sb3JpZCA9PSAnYm9sZCcgOgogIHJldHVybiAnW0JdJyArIHRleHQgKyAnWy9CXScKIGVsc2UgOgogIElpSUlpMUkgPSBjb2xvcmlkCiAgaWYgNSAtIDU6IGkxMWlJaWlJaWkgKyBPb09PMG9vT09vbzBPIC4gb29vTzBvbzBvT09PTwogaWYgaXNCb2xkID09IFRydWUgOgogIHRleHQgPSAnW0JdJyArIHRleHQgKyAnWy9CXScKIHJldHVybiAnW0NPTE9SICcgKyBJaUlJaTFJICsgJ10nICsgdGV4dCArICdbL0NPTE9SXScKIGlmIDkgLSA5OiBpMTFpSWlpSWlpIC8gaUlpaTFJMTFJMUlJMSAtIG9Pb08wb28wT09PbyAqIG9Pb08wb28wT09PbwpkZWYgSTFpMTFpICggdGV4dCA9ICcnICwgY29sb3JpZCA9ICcnICwgaXNCb2xkID0gRmFsc2UgKSA6CiBpZiBjb2xvcmlkID09ICdaTScgOgogIElpSUlpMUkgPSAnRkYxMWI1MDAnCiBlbGlmIGNvbG9yaWQgPT0gJ0VCJyA6CiAgSWlJSWkxSSA9ICdGRmUzNzEwMScKIGVsaWYgY29sb3JpZCA9PSAnYm9sZCcgOgogIHJldHVybiAnW0JdJyArIHRleHQgKyAnWy9CXScKIGVsc2UgOgogIElpSUlpMUkgPSBjb2xvcmlkCiAgaWYgOTkgLSA5OTogT29PTzBvb09Pb28wTwogaWYgaXNCb2xkID09IFRydWUgOgogIHRleHQgPSAnW0JdJyArIHRleHQgKyAnWy9CXScKIHJldHVybiAnW0NPTE9SICcgKyBJaUlJaTFJICsgJ10nICsgdGV4dCArICdbL0NPTE9SXScKIGlmIDY0IC0gNjQ6IGlJaWkxSTExSTFJSTEKZGVmIE9Pb09PMG9vbyAoIHMgKSA6CiB0cnkgOgogIHJldHVybiBzIC4gZ3JvdXAgKCAwICkgLiBlbmNvZGUgKCAnbGF0aW4xJyApIC4gZGVjb2RlICggJ3V0ZjgnICkKIGV4Y2VwdCA6CiAgcmV0dXJuIHMgLiBncm91cCAoIDAgKQogIGlmIDYxIC0gNjE6IG8wMDAwb09vT29PMG8gJSBPb08wTzAwICsgb09vME8wT29vCmRlZiBvbzAwMG9PbzBPb08wICggRnJvbXVybCApIDoKIG9Pb2lJaTFJMUlpaTEgPSBPMEkxMUlJSUlJICggKQogaTFpaTExMTFpMWkgPSBbICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wKGlQYWQ7IFU7IENQVSBpUGhvbmUgT1MgM18yIGxpa2UgTWFjIE9TIFg7IGVuLXVzKSBBcHBsZVdlYktpdC81MzEuMjEuMTAgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMC40IE1vYmlsZS83QjMxNCBTYWZhcmkvNTMxLjIxLjEwJyApIF0KIGlmIDk5IC0gOTk6IG9vIC4gT28gJSBJSTExMWlpaWkgLyBvbwogdHJ5IDoKICBPT29PTzBvbzBvb08gPSBpMWlpSTExSSAoIEZyb211cmwgLCBjb29raWVKYXIgPSBvT29pSWkxSTFJaWkxICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKIGV4Y2VwdCA6CiAgaW1wb3J0IGNsb3VkZmxhcmUKICBjbG91ZGZsYXJlIC4gY3JlYXRlQ29va2llICggRnJvbXVybCAsIG9Pb2lJaTFJMUlpaTEgLCAnTW96aWxsYS81LjAoaVBhZDsgVTsgQ1BVIGlQaG9uZSBPUyAzXzIgbGlrZSBNYWMgT1MgWDsgZW4tdXMpIEFwcGxlV2ViS2l0LzUzMS4yMS4xMCAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wLjQgTW9iaWxlLzdCMzE0IFNhZmFyaS81MzEuMjEuMTAnICkKICBPT29PTzBvbzBvb08gPSBpMWlpSTExSSAoIEZyb211cmwgLCBjb29raWVKYXIgPSBvT29pSWkxSTFJaWkxICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKICBpZiA1MiAtIDUyOiBpMTFpSWlpSWlpCiBvT29pSWkxSTFJaWkxIC4gc2F2ZSAoIGkxMWlpSUkgLCBpZ25vcmVfZGlzY2FyZCA9IFRydWUgKQogT09vT08wb28wb29PID0gT09vT08wb28wb29PIC4gc3BsaXQgKCAnPGRpdiBjbGFzcz0idGl0bGUgbWIxMCI+UHJvZ3JhbXMnICkgWyAxIF0gLiBzcGxpdCAoICc8L3NlbGVjdD4nICkgWyAwIF0KIHByaW50IE9Pb09PMG9vMG9vTwogSTExMTFJMWlJSTExID0gcmUgLiBmaW5kYWxsICggJzxvcHRncm91cCBsYWJlbD0iKC4qPykiJyAsIE9Pb09PMG9vMG9vTyAsIHJlIC4gVU5JQ09ERSApCiBwcmludCBJMTExMUkxaUlJMTEKIE9vbyA9IEhUTUxQYXJzZXIgLiBIVE1MUGFyc2VyICggKQogaWYgNTcgLSA1Nzogb28gLSBpMUlJaSArIGkxSTFpaTFJSTFpSUkgKiBPb08wTzAwICUgb29PTzAwb09vCiBpZiA4NyAtIDg3OiBpSWlpMUkxMUkxSUkxICUgb09vME8wT29vICsgb29PTzAwb09vIC8gaTExaUlpaUlpaQogZm9yIG8wT0lpSUkgaW4gSTExMTFJMWlJSTExIDoKICBPMDAwT08wICggSTExSUlpSWlJICggbzBPSWlJSSAsICdaTScgKSAsIG8wT0lpSUkgLCAtIDkgLCAnJyAsIFRydWUgLCBpc0l0Rm9sZGVyID0gRmFsc2UgKQogIG8wb09PbzBvTzBvID0gT09vT08wb28wb29PIC4gc3BsaXQgKCAnPG9wdGdyb3VwIGxhYmVsPSIlcyInICUgbzBPSWlJSSApIFsgMSBdIC4gc3BsaXQgKCAnPC9vcHRncm91cD4nICkgWyAwIF0KICBJSWlpSTEgPSByZSAuIGZpbmRhbGwgKCAnPG9wdGlvbiB2YWx1ZT0iKC4qPykiPiguKj8pPCcgLCBvMG9PT28wb08wbyAsIHJlIC4gVU5JQ09ERSApCiAgZm9yIG9vT09Pb28gaW4gSUlpaUkxIDoKICAgaWYgMjYgLSAyNjogaTFJSWkKICAgTzAwME9PMCAoICcgICAgJyArIG9vT09Pb28gWyAxIF0gLCAnaHR0cDovL3d3dy56ZW10di5jb20nICsgb29PT09vbyBbIDAgXSAsIDQzICwgJycgLCBUcnVlICwgaXNJdEZvbGRlciA9IFRydWUgKQogcmV0dXJuCiBpZiAzMyAtIDMzOiBPb09PMG9vT09vbzBPIC8gT29PTzBvb09Pb28wTyAqIE9vTzBPMDAKIGlmIDEwIC0gMTA6IE9vICUgTzAgKyBpSWlpMUkxMUkxSUkxICUgTzAgKiBpaWlpSWkxMWkKZGVmIGlJMTExMWlpSTEgKCBGcm9tdXJsICkgOgogaWYgNTMgLSA1MzogT28gKyBpMUkxaWkxSUkxaUlJICogaTFJSWkgKyBvbwogb09vaUlpMUkxSWlpMSA9IE8wSTExSUlJSUkgKCApCiBpZiA4OSAtIDg5OiBvbyAvIElJMTExaWlpaSAtIG9PbzBPME9vbyAlIE9vbzAwb09vMDBvCiBpZiAxIC0gMTogT29vb29vb29PTyAuIE9vT08wb29PT29vME8gLyBvT28wTzBPb28gKyBPb28wMG9PbzAwbyAlIGkxSUlpCiBpZiAxIC0gMTogT29vb29vb29PTyAtIG9vT08wMG9PbyAtIE9vb29vb29vT08gLyBpMUkxaWkxSUkxaUlJCiBpZiA3MCAtIDcwOiBvMDAwMG9Pb09vTzBvICsgb09vTzBvbzBPT09vIC4gSUkxMTFpaWlpICogaTExaUlpaUlpaQogaWYgODcgLSA4NzogbzAwMDBvT29Pb08wbyAvIG8wb28wbyAlIG9PbzBPME9vbyAqIG9Pb08wb28wT09PbyAtIE9vb29vb29vT08gLyBvT28wTzBPb28KIGkxaWkxMTExaTFpID0gWyAoICdVc2VyLUFnZW50JyAsICdNb3ppbGxhLzUuMChpUGFkOyBVOyBDUFUgaVBob25lIE9TIDNfMiBsaWtlIE1hYyBPUyBYOyBlbi11cykgQXBwbGVXZWJLaXQvNTMxLjIxLjEwIChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAuNCBNb2JpbGUvN0IzMTQgU2FmYXJpLzUzMS4yMS4xMCcgKSBdCiBpZiAyNCAtIDI0OiBPb09PMG9vT09vbzBPIC4gSUkxMWlpSUkgKiBpMUlJaSAuIG9Pb08wb28wT09PbyAvIE9vIC8gTzAKIHRyeSA6CiAgb09vb29PT08wbzAgPSBpMWlpSTExSSAoIEZyb211cmwgLCBjb29raWVKYXIgPSBvT29pSWkxSTFJaWkxICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKIGV4Y2VwdCA6CiAgaW1wb3J0IGNsb3VkZmxhcmUKICBjbG91ZGZsYXJlIC4gY3JlYXRlQ29va2llICggRnJvbXVybCAsIG9Pb2lJaTFJMUlpaTEgLCAnTW96aWxsYS81LjAoaVBhZDsgVTsgQ1BVIGlQaG9uZSBPUyAzXzIgbGlrZSBNYWMgT1MgWDsgZW4tdXMpIEFwcGxlV2ViS2l0LzUzMS4yMS4xMCAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wLjQgTW9iaWxlLzdCMzE0IFNhZmFyaS81MzEuMjEuMTAnICkKICBvT29vb09PTzBvMCA9IGkxaWlJMTFJICggRnJvbXVybCAsIGNvb2tpZUphciA9IG9Pb2lJaTFJMUlpaTEgLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogaTExaUlJMUlpMWlpMTExID0gMQogaUlJMTFJSWkxSTEgPSAnJwogaWYgbm90ICdsb29wSGFuZGxlcicgaW4gRnJvbXVybCA6CiAgaUlJMTFJSWkxSTEgPSByZSAuIGZpbmRhbGwgKCAiY3VycmVudGNhdCA9ICguKj8pOyIgLCBvT29vb09PTzBvMCApIFsgMCBdCiAgRnJvbXVybCA9ICdodHRwOi8vd3d3LnplbXR2LmNvbS93cC1jb250ZW50L3RoZW1lcy96ZW1yZXNwb25zaXZlL2xvb3BIYW5kbGVyLnBocD9wYWdlTnVtYmVyPSVzJmNhdE51bWJlcj0lcycgJSAoIHN0ciAoIGkxMWlJSTFJaTFpaTExMSApICwgaUlJMTFJSWkxSTEgKQogIG9Pb29vT09PMG8wID0gaTFpaUkxMUkgKCBGcm9tdXJsICwgY29va2llSmFyID0gb09vaUlpMUkxSWlpMSAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiAgaWYgNzAgLSA3MDogT29PME8wMAogIGlmIDkzIC0gOTM6IGkxSTFpaTFJSTFpSUkgLiBvT29PMG9vME9PT28gLiBPb08wTzAwIC4gaWlpaUlpMTFpIC4gT29vb29vb29PTwogIGlmIDUxIC0gNTE6IE8wIC0gaTFJMWlpMUlJMWlJSQogIGlmIDY1IC0gNjU6IE8wIC8gSUkxMTFpaWlpICogb29vTzBvbzBvT09PTyAlIG8wMDAwb09vT29PMG8gKyBPb28wMG9PbzAwbwogIGlmIDQzIC0gNDM6IG8wb28wbyArIG9vT08wMG9PbyAqIE9vb29vb29vT08KICBpZiA4NSAtIDg1OiBpMUkxaWkxSUkxaUlJICsgSUkxMWlpSUkKICBpZiAzNiAtIDM2OiBvb09PMDBvT28gJSBJSTExMWlpaWkgKiBPMCArIElJMTExaWlpaSAtIGlpaWlJaTExaSAtIGkxSUlpCiAgaWYgNTMgLSA1MzogbzAwMDBvT29Pb08wbyAtIElJMTFpaUlJCiAgaWYgNzUgLSA3NTogaTFJMWlpMUlJMWlJSSAlIE8wIC0gT29PTzBvb09Pb28wTyAtIG9Pb08wb28wT09PbyArIG9vIC0gb28KICBpZiA4NyAtIDg3OiBpMUlJaSAlIG8wMDAwb09vT29PMG8gJSBpMUlJaSArIGlJaWkxSTExSTFJSTEKICBpZiAyMyAtIDIzOiBpSWlpMUkxMUkxSUkxICogT29PTzBvb09Pb28wTyAuIG8wb28wbyAtIE9vbzAwb09vMDBvCiAgaWYgNjYgLSA2Njogb28gKiBvMG9vMG8gLyBpMTFpSWlpSWlpIC8gSUkxMWlpSUkKIG9Pb2lJaTFJMUlpaTEgLiBzYXZlICggaTExaWlJSSAsIGlnbm9yZV9kaXNjYXJkID0gVHJ1ZSApCiBpZiAxOSAtIDE5OiBPbyAlIGlJaWkxSTExSTFJSTEgKiBPb29vb29vb09PCiBpZiA2MCAtIDYwOiBvMG9vMG8gKiBpMUkxaWkxSUkxaUlJIC8gT29vb29vb29PTyAqIE9vTzBPMDAKIGlmIDQ3IC0gNDc6IGkxSTFpaTFJSTFpSUkgKyBPb28wMG9PbzAwbyAlIGlJaWkxSTExSTFJSTEgKiBvT28wTzBPb28KIEkxMTExSTFpSUkxMSA9IHJlIC4gZmluZGFsbCAoICc8ZGl2IGNsYXNzPVwiKD86dGVhbCk/Lj9jYXJkXCI+Lio/PGltZyBzcmM9XCIoLio/KVwiLio/PGEgaHJlZj1cIiguKj8pXCIuKj8+KC4qPyk8JyAsIG9Pb29vT09PMG8wICwgcmUgLiBVTklDT0RFIHwgcmUgLiBET1RBTEwgKQogcHJpbnQgSTExMTFJMWlJSTExCiBpZiA2NSAtIDY1OiBJSTExaWlJSSAuIElJMTExaWlpaSAqIGkxMWlJaWlJaWkgKyBJSTExaWlJSQogaWYgOTkgLSA5OTogb09vTzBvbzBPT09vICUgT29PME8wMAogT29vID0gSFRNTFBhcnNlciAuIEhUTUxQYXJzZXIgKCApCiBpZiAzMSAtIDMxOiBPb28wMG9PbzAwbyAtIElJMTExaWlpaSAqIElJMTFpaUlJIC4gSUkxMWlpSUkgLSBpaWlpSWkxMWkKIGlmIDU3IC0gNTc6IElJMTFpaUlJIC8gaTExaUlpaUlpaSAvIG8wb28wbyAtIE9vTzBPMDAgLiBpSWlpMUkxMUkxSUkxCiBmb3IgbzBPSWlJSSBpbiBJMTExMUkxaUlJMTEgOgogIG9PT29vbzAwME9vTyA9IG8wT0lpSUkgWyAyIF0KICB0cnkgOgogICBvT09vb28wMDBPb08gPSBPb28gLiB1bmVzY2FwZSAoIG9PT29vbzAwME9vTyApIC4gZW5jb2RlICggInV0Zi04IiApCiAgZXhjZXB0IDoKICAgb09Pb29vMDAwT29PID0gcmUgLiBzdWIgKCByJ1tceDgwLVx4RkZdKycgLCBPT29PTzBvb28gLCBvT09vb28wMDBPb08gKQogICBpZiA5MyAtIDkzOiBvMDAwMG9Pb09vTzBvIC8gb09vME8wT29vICsgT28gLiBvb09PMDBvT28gLyBPMCAuIE9vbzAwb09vMDBvCiAgTzAwME9PMCAoIG9PT29vbzAwME9vTyAsIG8wT0lpSUkgWyAxIF0gLCAzICwgbzBPSWlJSSBbIDAgXSArICd8Q29va2llPSVzJyAlIElJaTFJSSAoIG9Pb2lJaTFJMUlpaTEgKSArICcmVXNlci1BZ2VudD1Nb3ppbGxhLzUuMChpUGFkOyBVOyBDUFUgaVBob25lIE9TIDNfMiBsaWtlIE1hYyBPUyBYOyBlbi11cykgQXBwbGVXZWJLaXQvNTMxLjIxLjEwIChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAuNCBNb2JpbGUvN0IzMTQgU2FmYXJpLzUzMS4yMS4xMCcgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKICBpZiAzNiAtIDM2OiBvb29PMG9vMG9PT09PIC4gb29vTzBvbzBvT09PTwogIGlmIDI3IC0gMjc6IG9PbzBPME9vbyAtIGlJaWkxSTExSTFJSTEgLyBpMUlJaSAqIG8wb28wbyAtIE9vCiBpMTFpSUkxSWkxaWkxMTEgPSByZSAuIGZpbmRhbGwgKCAicGFnZU51bWJlcj0oLio/KSYiICwgRnJvbXVybCApIFsgMCBdCiBpSUkxMUlJaTFJMSA9IHJlIC4gZmluZGFsbCAoICJjYXROdW1iZXI9KC4qKSIgLCBGcm9tdXJsICkgWyAwIF0KIGlmIDIgLSAyOiBpMUkxaWkxSUkxaUlJICogT29PTzBvb09Pb28wTyAqIE9vICsgaTExaUlpaUlpaSArIGlpaWlJaTExaQogaTExaUlJMUlpMWlpMTExID0gaW50ICggaTExaUlJMUlpMWlpMTExICkgKyAxCiBGcm9tdXJsID0gJ2h0dHA6Ly93d3cuemVtdHYuY29tL3dwLWNvbnRlbnQvdGhlbWVzL3plbXJlc3BvbnNpdmUvbG9vcEhhbmRsZXIucGhwP3BhZ2VOdW1iZXI9JXMmY2F0TnVtYmVyPSVzJyAlICggc3RyICggaTExaUlJMUlpMWlpMTExICkgLCBpSUkxMUlJaTFJMSApCiBPMDAwT08wICggJ05leHQgUGFnZScgLCBGcm9tdXJsICwgMiAsICcnICwgaXNJdEZvbGRlciA9IFRydWUgKQogaWYgODEgLSA4MTogT29vMDBvT28wMG8gKiBvb09PMDBvT28KIGlmIDE4IC0gMTg6IGkxMWlJaWlJaWkgLyBPb28wMG9PbzAwbyAtIGlpaWlJaTExaSAuIE9vT08wb29PT29vME8gKiBpMUlJaQogcmV0dXJuCiBpZiA2NyAtIDY3OiBvMDAwMG9Pb09vTzBvCmRlZiBPT08wb29PME9vMCAoIEZyb211cmwgKSA6CiBpZiA2NCAtIDY0OiBvT28wTzBPb28gKyBpMUkxaWkxSUkxaUlJICogb09vME8wT29vIC0gb28gKiBPb29vb29vb09PCiBpMWlpMTExMWkxaSA9IFsgKCAnVXNlci1BZ2VudCcgLCAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUwLjAuMjY2MS4xMDIgU2FmYXJpLzUzNy4zNicgKSBdCiBPT29PTzBvbzBvb08gPSBpMWlpSTExSSAoIEZyb211cmwgLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogSTExMTFJMWlJSTExID0gcmUgLiBmaW5kYWxsICggJzxkaXYgY2xhc3M9InRocmVhZGluZm8iLio/PGltZyBzcmM9IiguKj8pIi4qP2hyZWY9IiguKj8pIiBpZD0idGhyZWFkX3RpdGxlLio/PiguKj8pPCcgLCBPT29PTzBvbzBvb08gLCByZSAuIERPVEFMTCApCiBpZiAyNyAtIDI3OiBJSTExMWlpaWkgKyBpMTFpSWlpSWlpCiBpZiAzMiAtIDMyOiBpMUlJaQogaWYgNzYgLSA3NjogSUkxMTFpaWlpICUgT28gLSBvT29PMG9vME9PT28KIGlmIDUwIC0gNTA6IElJMTExaWlpaSAvIG9vIC4gbzAwMDBvT29Pb08wbyAlIGkxMWlJaWlJaWkKIGlmIDY2IC0gNjY6IGlpaWlJaTExaSAvIElJMTFpaUlJIC8gaTFJMWlpMUlJMWlJSQogaWYgNSAtIDU6IG8wb28wbyAuIGlpaWlJaTExaQogaWYgNzcgLSA3NzogaTFJMWlpMUlJMWlJSSAvIGkxMWlJaWlJaWkKIGlmIDIwIC0gMjA6IE8wIC4gT29PTzBvb09Pb28wTwogT29vID0gSFRNTFBhcnNlciAuIEhUTUxQYXJzZXIgKCApCiBpZiA2NyAtIDY3OiBvT28wTzBPb28gLSBPbyAtIGlJaWkxSTExSTFJSTEKIHByaW50IEkxMTExSTFpSUkxMQogaWYgMzEgLSAzMTogSUkxMTFpaWlpICsgT29vMDBvT28wMG8gKiBpMTFpSWlpSWlpIC4gT29vMDBvT28wMG8KIGZvciBvME9JaUlJIGluIEkxMTExSTFpSUkxMSA6CiAgb09Pb29vMDAwT29PID0gbzBPSWlJSSBbIDIgXQogIE9vMG9PT28gPSBvME9JaUlJIFsgMSBdCiAgaUkxMTFpMUkxSUkgPSBvME9JaUlJIFsgMCBdIC4gcmVwbGFjZSAoICcmYW1wOycgLCAnJicgKQogIHRyeSA6CiAgIG9PT29vbzAwME9vTyA9IE9vbyAuIHVuZXNjYXBlICggb09Pb29vMDAwT29PICkgLiBlbmNvZGUgKCAidXRmLTgiICkKICBleGNlcHQgOgogICBvT09vb28wMDBPb08gPSByZSAuIHN1YiAoIHInW1x4ODAtXHhGRl0rJyAsIE9Pb09PMG9vbyAsIG9PT29vbzAwME9vTyApCiAgIGlmIDczIC0gNzM6IGlpaWlJaTExaSAvIElJMTFpaUlJICogSUkxMTFpaWlpICUgT29vb29vb29PTyAtIGkxSUlpIC0gT28KICBpZiBub3QgT28wb09PbyAuIHN0YXJ0c3dpdGggKCAnaHR0cCcgKSA6CiAgIE9vMG9PT28gPSAnaHR0cDovL3d3dy5zaWFzYXQucGsvZm9ydW0vJyArIE9vMG9PT28KICAgaWYgNDMgLSA0MzogT29vMDBvT28wMG8gKyBvMDAwMG9Pb09vTzBvICUgb29PTzAwb09vIC4gbzBvbzBvICsgaTFJSWkKICBpZiBub3QgaUkxMTFpMUkxSUkgLiBzdGFydHN3aXRoICggJ2h0dHAnICkgOgogICBPbzBvT09vID0gJ2h0dHA6Ly93d3cuc2lhc2F0LnBrL2ZvcnVtLycgKyBPbzBvT09vCiAgIGlmIDg1IC0gODU6IE9vTzBPMDAgJSBvT29PMG9vME9PT28gLyBJSTExaWlJSQogICBpZiA2NSAtIDY1OiBPbyArIG9vb08wb28wb09PT08gLSBvT28wTzBPb28gJSBJSTExMWlpaWkgLSBpSWlpMUkxMUkxSUkxCiAgTzAwME9PMCAoIG9PT29vbzAwME9vTyAsIE9vMG9PT28gLCAzICwgaUkxMTFpMUkxSUkgLCBUcnVlICwgaXNJdEZvbGRlciA9IEZhbHNlICkKICBpZiAzOSAtIDM5OiBvbyArIG9Pb08wb28wT09PbyAtIGkxMWlJaWlJaWkKICBpZiA0MyAtIDQzOiBpSWlpMUkxMUkxSUkxCiBJMTExMUkxaUlJMTEgPSByZSAuIGZpbmRhbGwgKCAndGl0bGU9IlJlc3VsdHMuKj88YSBocmVmPSIoLio/KSIgdGl0bGUnICwgT09vT08wb28wb29PICwgcmUgLiBJR05PUkVDQVNFICkKIGlmIDczIC0gNzM6IG9PbzBPME9vbyArIE9vbzAwb09vMDBvCiBpZiBsZW4gKCBJMTExMUkxaUlJMTEgKSA+IDAgOgogIGlpMUlJaUlJMTExSSA9IEkxMTExSTFpSUkxMSBbIDAgXQogIElpMTExMWlJMWkxID0gJycKICB0cnkgOgogICBpZiAnL3BhZ2UnIGluIGlpMUlJaUlJMTExSSA6CiAgICBJaTExMTFpSTFpMSA9IGlpMUlJaUlJMTExSSAuIHNwbGl0ICggJy9wYWdlJyApIFsgMSBdIC4gc3BsaXQgKCAnJicgKSBbIDAgXSAuIHNwbGl0ICggJy8nICkgWyAwIF0KICBleGNlcHQgOiBwYXNzCiAgTzAwME9PMCAoICdOZXh0IFBhZ2UgJXMgKFNpYXNhdC5wayknICUgSWkxMTExaUkxaTEgLCAnaHR0cDovL3d3dy5zaWFzYXQucGsvZm9ydW0vJyArIGlpMUlJaUlJMTExSSAsIDIgLCAnJyAsIGlzSXRGb2xkZXIgPSBUcnVlICkKICBpZiA1OCAtIDU4OiBpMUlJaSAqIG9Pb08wb28wT09PbyAlIGkxSTFpaTFJSTFpSUkgLiBvb09PMDBvT28gJSBvb29PMG9vMG9PT09PICUgT29PTzBvb09Pb28wTwogIGlmIDYzIC0gNjM6IG9Pb08wb28wT09PbyAlIE9vICUgb09vTzBvbzBPT09vCiByZXR1cm4KIGlmIDcxIC0gNzE6IG8wMDAwb09vT29PMG8KZGVmIElJaTFJSSAoIGNvb2tpZUphciApIDoKIHRyeSA6CiAgaUkxMSA9ICIiCiAgZm9yIG8wb29vMDBvICwgT09JaUlpSUkgaW4gZW51bWVyYXRlICggY29va2llSmFyICkgOgogICBpSTExICs9IE9PSWlJaUlJIC4gbmFtZSArICI9IiArIE9PSWlJaUlJIC4gdmFsdWUgKyAiOyIKIGV4Y2VwdCA6IHBhc3MKIGlmIDk5IC0gOTk6IE9vb29vb29vT08gLSBpMUlJaSAlIE9vbzAwb09vMDBvIC8gT29vMDBvT28wMG8gKyBvb29PMG9vMG9PT09PCiByZXR1cm4gaUkxMQpkZWYgT29PMG8wICggKSA6CiBPbzBPb08wMG9PTzBvID0gdXJsbGliMiAuIFJlcXVlc3QgKCBJSSApCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoICdVc2VyLUFnZW50JyAsICdNb3ppbGxhLzUuMChpUGFkOyBVOyBDUFUgaVBob25lIE9TIDNfMiBsaWtlIE1hYyBPUyBYOyBlbi11cykgQXBwbGVXZWJLaXQvNTMxLjIxLjEwIChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAuNCBNb2JpbGUvN0IzMTQgU2FmYXJpLzUzMS4yMS4xMCcgKQogT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICkKIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiBPT08wME8gLiBjbG9zZSAoICkKIGlmIDc5IC0gNzk6IG9vIC0gb29vTzBvbzBvT09PTyAuIE9vb29vb29vT08gLSBvT29PMG9vME9PT28KIGlmIDc5IC0gNzk6IElJMTFpaUlJICsgT29vMDBvT28wMG8gJSBpMUkxaWkxSUkxaUlJIC4gaWlpaUlpMTFpCiBpZiA0OSAtIDQ5OiBvMDAwMG9Pb09vTzBvICsgaTExaUlpaUlpaSAqIG9PbzBPME9vbyAuIG9PbzBPME9vbyAuIG9Pb08wb28wT09PbyAuIE9vTzBPMDAKIGlmIDYxIC0gNjE6IE9vT08wb29PT29vME8gLyBJSTExaWlJSQogaWYgODUgLSA4NTogb09vME8wT29vIC0gT29PTzBvb09Pb28wTyAuIG9PbzBPME9vbyAuIG9PbzBPME9vbwogaWYgNjIgLSA2Mjogb29vTzBvbzBvT09PTyAlIE9vb29vb29vT08gKiBvb09PMDBvT28gKyBvb09PMDBvT28gJSBvMDAwMG9Pb09vTzBvICUgaTFJMWlpMUlJMWlJSQogaWYgNjYgLSA2Njogb28gLiBJSTExaWlJSSAtIG9vT08wMG9PbyAlIE9vTzBPMDAgKiBPb28wMG9PbzAwbyAtIGlpaWlJaTExaQogaWYgNjggLSA2ODogT29PTzBvb09Pb28wTyAtIGkxMWlJaWlJaWkgLyBPb28wMG9PbzAwbyArIE9vIC8gb28KIGlmIDMxIC0gMzE6IG8wb28wbyAuIE9vb29vb29vT08gLiBpMUlJaQogSTExMTFJMWlJSTExID0gcmUgLiBmaW5kYWxsICggJzxkaXYgY2xhc3M9ImVwaWMtY3MiPlxzKjxhIGhyZWY9IiguKykiIHJlbD0uKjxpbWcgc3JjPSIoLispIiBhbHQ9IiguKykiIFwvPicgLCBPT29PTzBvbzBvb08gLCByZSAuIFVOSUNPREUgKQogaWYgNjUgLSA2NTogb29PTzAwb09vIC4gT28KIGlmIDEyIC0gMTI6IG8wb28wbyArIE8wIC0gaWlpaUlpMTFpIC4gb29vTzBvbzBvT09PTwogT29vID0gSFRNTFBhcnNlciAuIEhUTUxQYXJzZXIgKCApCiBmb3IgbzBPSWlJSSBpbiBJMTExMUkxaUlJMTEgOgogIE8wMDBPTzAgKCBJMTFJSWlJaUkgKCBPb28gLiB1bmVzY2FwZSAoIG8wT0lpSUkgWyAyIF0gLiByZXBsYWNlICggIldhdGNoIE5vdyBXYXRjaCAiICwgIiIgKSAuIHJlcGxhY2UgKCAiTGl2ZSwgSGlnaCBRdWFsaXR5IFN0cmVhbWluZyIgLCAiIiApIC4gcmVwbGFjZSAoICJMaXZlICYjODIxMTsgSGlnaCBRdWFsaXR5IFN0cmVhbWluZyIgLCAiIiApIC4gcmVwbGFjZSAoICJXYXRjaCBOb3cgIiAsICIiICkgKSAsICdaTScgKSAsIG8wT0lpSUkgWyAwIF0gLCA0ICwgbzBPSWlJSSBbIDEgXSAsIEZhbHNlICwgVHJ1ZSAsIGlzSXRGb2xkZXIgPSBGYWxzZSApCiByZXR1cm4KIGlmIDQ2IC0gNDY6IG9vb08wb28wb09PT08gLiBPbyAvIGkxSTFpaTFJSTFpSUkKZGVmIG9vME9vMDAwICggdXJsICwgcmVkaXJlY3QgPSBUcnVlICkgOgogZ2xvYmFsIEkxaWlpaWlJSTFJMUkKIGlmIDcxIC0gNzE6IG8wb28wbwogaWYgNjcgLSA2NzogT29vMDBvT28wMG8gLyBvMDAwMG9Pb09vTzBvICogaTExaUlpaUlpaSAvIG9Pb08wb28wT09PbwogaWYgOSAtIDk6IElJMTFpaUlJICogT28gLSBPb29vb29vb09PIC8gTzAKIGlmIDg2IC0gODY6IG9vIC4gT29vMDBvT28wMG8gJSBvMDAwMG9Pb09vTzBvIC0gb09vME8wT29vIC4gaTFJSWkKIGlmIDMwIC0gMzA6IElJMTExaWlpaSArIGlJaWkxSTExSTFJSTEgLyBPb09PMG9vT09vbzBPCiBpZiA1OCAtIDU4OiBvMG9vMG8gLSBPb09PMG9vT09vbzBPICsgaWlpaUlpMTFpICogb29PTzAwb09vCiBpZiA0NSAtIDQ1OiBvb29PMG9vMG9PT09PICogSUkxMWlpSUkgLiBvb09PMDBvT28KIGkxaWkxMTExaTFpID0gWyAoICdVc2VyLUFnZW50JyAsICdNb3ppbGxhLzUuMChpUGFkOyBVOyBDUFUgaVBob25lIE9TIDNfMiBsaWtlIE1hYyBPUyBYOyBlbi11cykgQXBwbGVXZWJLaXQvNTMxLjIxLjEwIChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAuNCBNb2JpbGUvN0IzMTQgU2FmYXJpLzUzMS4yMS4xMCcgKSBdCiBPMG8wb29PMG9PMG9PID0gVHJ1ZQogaWYgJ3plbXR2LicgaW4gdXJsIDoKICBvT29pSWkxSTFJaWkxID0gTzBJMTFJSUlJSSAoICkKICBPT29PTzBvbzBvb08gPSBpMWlpSTExSSAoIHVybCAsIGNvb2tpZUphciA9IG9Pb2lJaTFJMUlpaTEgLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogZWxzZSA6CiAgTzBvMG9vTzBvTzBvTyA9IEZhbHNlCiAgaTFpaTExMTFpMWkgPSBbICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81MC4wLjI2NjEuMTAyIFNhZmFyaS81MzcuMzYnICkgXQogIE9Pb09PMG9vMG9vTyA9IGkxaWlJMTFJICggdXJsICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKICBpZiA0NSAtIDQ1OiBPbwogIGlmIDYwIC0gNjA6IG9vT08wMG9PbyAuIE9vIC0gbzAwMDBvT29Pb08wbyAqIE9vb29vb29vT08gLiBPbwogIGlmIDY0IC0gNjQ6IG9Pb08wb28wT09PbyAlIE9vTzBPMDAgLSBpSWlpMUkxMUkxSUkxICUgb29PTzAwb09vICogaUlpaTFJMTFJMUlJMSArIE9vT08wb29PT29vME8KIE8wb28wbzBPb08wID0gIlBsYXlpbmcgRE0gTGluayIKIHRpbWUgPSA1MDAwCiBvbzAwMG8wMG8wbzAwID0gMAogb28wMDBvMDBvMG8wMCA9IG9vTzAwb09vbyAuIGdldFNldHRpbmcgKCAiRGVmYXVsdFZpZGVvVHlwZSIgKQogaWYgMjcgLSAyNzogb29vTzBvbzBvT09PTyAuIG9vT08wMG9PbyAvIGkxSUlpICsgb29PTzAwb09vCiBwcmludCAiTFQgbGluayBpcyIgLCBJMWlpaWlpSUkxSTFJICwgb28wMDBvMDBvMG8wMCAsIHJlZGlyZWN0CiBpZiBvbzAwMG8wMG8wbzAwID09ICIiIDogb28wMDBvMDBvMG8wMCA9ICIwIgogaWYgMzYgLSAzNjogb29vTzBvbzBvT09PTyAuIG9vIC0gSUkxMTFpaWlpIC0gSUkxMTFpaWlpICsgaTExaUlpaUlpaQogaWYgMTcgLSAxNzogTzAgKiBvbwogaWYgSTFpaWlpaUlJMUkxSSAuIHVwcGVyICggKSA9PSAiU0hPV0FMTCIgb3IgKCBJMWlpaWlpSUkxSTFJIC4gdXBwZXIgKCApID09ICIiIGFuZCBvbzAwMG8wMG8wbzAwID09ICI0IiApIDoKICBpZiByZWRpcmVjdCA6IGlpMTFpSUlpaUkxSSAoIHVybCAsIE9Pb09PMG9vMG9vTyApCiAgcmV0dXJuCiBpZiBJMWlpaWlpSUkxSTFJIC4gdXBwZXIgKCApIGluIFsgIkRNIiAsICJETUFTTElWRSIgXSBvciAoIEkxaWlpaWlJSTFJMUkgPT0gIiIgYW5kIG9vMDAwbzAwbzBvMDAgPT0gIjAiICkgOgogIGlmIDkxIC0gOTE6IG9vIC0gT29vb29vb29PTyAtIE9vb29vb29vT08KICBPMG9vMG8wT29PMCA9ICJQbGF5aW5nIERNIExpbmsiCiAgeGJtY2d1aSAuIERpYWxvZyAoICkgLiBub3RpZmljYXRpb24gKCBfX2FkZG9ubmFtZV9fICwgTzBvbzBvME9vTzAgLCBfX2ljb25fXyAsIHRpbWUgLCBGYWxzZSApCiAgaWYgNjkgLSA2OTogaTFJMWlpMUlJMWlJSSAqIGkxMWlJaWlJaWkgLyBpMUlJaQogIGlmIDg2IC0gODY6IG9vICUgT29PTzBvb09Pb28wTyAqIE8wICsgaTFJSWkgJSBvMG9vMG8KICBPb09PbzBvb09vb29PID0gSTExMTFJMWlJSTExID0gcmUgLiBmaW5kYWxsICggJ3NyYz1bIlwnXSgoPzpodHRwKT8uKj8oZGFpbHltb3Rpb24uY29tKS4qPylbIlwnXScgLCBPT29PTzBvbzBvb08gKQogIGlmIGxlbiAoIE9vT09vMG9vT29vb08gKSA9PSAwIDoKICAgTzBvbzBvME9vTzAgPSAiRGFpbHkgbW90aW9uIGxpbmsgbm90IGZvdW5kIgogICB4Ym1jZ3VpIC4gRGlhbG9nICggKSAuIG5vdGlmaWNhdGlvbiAoIF9fYWRkb25uYW1lX18gLCBPMG9vMG8wT29PMCAsIF9faWNvbl9fICwgdGltZSAsIEZhbHNlICkKICAgaWYgcmVkaXJlY3QgOiBpaTExaUlJaWlJMUkgKCB1cmwgLCBPT29PTzBvbzBvb08gKQogICByZXR1cm4KICBPb09PbzBvb09vb29PID0gSTExMTFJMWlJSTExIFsgMCBdIFsgMCBdCiAgaWYgT29PT28wb29Pb29vTyAuIHN0YXJ0c3dpdGggKCAnLy8nICkgOgogICBPb09PbzBvb09vb29PID0gJ2h0dHA6JyArIE9vT09vMG9vT29vb08KICBwcmludCBPb09PbzBvb09vb29PCiAgaWlJaWkgPSB4Ym1jIC4gUGxheUxpc3QgKCAxICkKICBpaUlpaSAuIGNsZWFyICggKQogIEkxID0geGJtY2d1aSAuIExpc3RJdGVtICggb08wMG9PT29vb08gLCBpY29uSW1hZ2UgPSAiRGVmYXVsdFZpZGVvLnBuZyIgKQogIEkxIC4gc2V0SW5mbyAoICJWaWRlbyIgLCB7ICJUaXRsZSIgOiBvTzAwb09Pb29vTyB9ICkKICBJMSAuIHNldFByb3BlcnR5ICggJ21pbWV0eXBlJyAsICd2aWRlby94LW1zdmlkZW8nICkKICBJMSAuIHNldFByb3BlcnR5ICggJ0lzUGxheWFibGUnICwgJ3RydWUnICkKICBwcmludCAncGxheVVSTCcgLCBPb09PbzBvb09vb29PCiAgaWYgMzggLSAzODogSUkxMWlpSUkgLiBpMUkxaWkxSUkxaUlJIC8gTzAgLiBvMDAwMG9Pb09vTzBvIC8gb09vME8wT29vCiAgaWYgNTIgLSA1MjogTzAgLyBpMTFpSWlpSWlpICogb28gLiBpMUlJaQogIGlmIDUwIC0gNTA6IE9vb29vb29vT08gLiBpMUkxaWkxSUkxaUlJICUgT29vMDBvT28wMG8KICBpZiA2IC0gNjogT28gLSBpMUlJaSAuIE8wIC4gaTFJSWkgLiBvT28wTzBPb28KICBpZiA0MiAtIDQyOiBpMTFpSWlpSWlpICogTzAgJSBpMTFpSWlpSWlpICsgSUkxMWlpSUkKICBpZiA2NCAtIDY0OiBvbyAvIG9PbzBPME9vbwogIGkxaWkxMTExaTFpID0gWyAoICdVc2VyLUFnZW50JyAsICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTMuMC4yNzg1LjE0MyBTYWZhcmkvNTM3LjM2JyApIF0KICBvME8wb29vb29vbzAwID0gaTFpaUkxMUkgKCBPb09PbzBvb09vb29PICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKICBvME8wb29vb29vbzAwID0gbzBPMG9vb29vb28wMCAuIHJlcGxhY2UgKCAnXFwnICwgJycgKQogIGlmIDYgLSA2OiBpMTFpSWlpSWlpIC0gaTFJMWlpMUlJMWlJSSAqIGkxSUlpIC0gaTFJMWlpMUlJMWlJSQogIEkxaWkgPSByZSAuIGZpbmRhbGwgKCAnImF1dG8iXHMqOlxzKi4rPyJ1cmwiXHMqOlxzKiIoLis/KSInICwgbzBPMG9vb29vb28wMCApCiAgaUlJSTExaWkxaTFpMSA9IHJlIC4gZmluZGFsbCAoICciKFxkKz8pIlxzKjpccyouKz8idXJsIlxzKjpccyoiKC4rPykiJyAsIG8wTzBvb29vb29vMDAgKQogIGlmIDMgLSAzOiBvbyAuIE9vT08wb29PT29vME8gLyBvT29PMG9vME9PT28KICBpZiBJMWlpIGFuZCBub3QgaUlJSTExaWkxaTFpMSA6CiAgIE9PbyA9IEkxaWkgWyAwIF0KICBlbHNlIDoKICAgaUlJSTExaWkxaTFpMSA9IFsgKCBpbnQgKCBPME9Pb08wME9PMG8gWyAwIF0gKSAsIE8wT09vTzAwT08wbyBbIDEgXSApIGZvciBPME9Pb08wME9PMG8gaW4gaUlJSTExaWkxaTFpMSBdCiAgIGlJSUkxMWlpMWkxaTEgPSBzb3J0ZWQgKCBpSUlJMTFpaTFpMWkxICwga2V5ID0gbGFtYmRhIE9Pb08wb08wMG8gOiBPT29PMG9PMDBvIFsgMCBdICkgWyA6IDogLSAxIF0KICAgaWYgMiAtIDI6IG9vb08wb28wb09PT08gKyBPb09PMG9vT09vbzBPIC8gaUlpaTFJMTFJMUlJMSAuIGkxMWlJaWlJaWkgLiBpMUlJaSAqIE9vCiAgIElJb09vbzBvb29vID0gWyBPME9Pb08wME9PMG8gWyAxIF0gZm9yIE8wT09vTzAwT08wbyBpbiBpSUlJMTFpaTFpMWkxIF0KICAgT09vID0gSUlvT29vMG9vb28gWyAwIF0KICAgaWYgMjMgLSAyMzogT29PME8wMCAvIE9vCiAgbzBPMG9vb29vb28wMCA9IGkxaWlJMTFJICggT09vICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKICBvbzBPb29vT28wID0gcmUgLiBmaW5kYWxsICggJyhodHRwLiopJyAsIG8wTzBvb29vb29vMDAgKSBbIC0gMSBdIC4gc3BsaXQgKCAnIycgKSBbIDAgXQogIG9vME9vb29PbzAgPSBvbzBPb29vT28wICsgJ3xPcmlnaW49aHR0cDovL3d3dy5kYWlseW1vdGlvbi5jb20mUmVmZXJlcj1odHRwOi8vd3d3LmRhaWx5bW90aW9uLmNvbS9lbWJlZC92aWRlby8mVXNlci1BZ2VudD1Nb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTcuMC4yOTg3LjExMCBTYWZhcmkvNTM3LjM2JwogIGlmIEkxaWlpaWlJSTFJMUkgLiB1cHBlciAoICkgaW4gWyAiRE1BU0xJVkUiIF0gOgogICByZXR1cm4gaTFJMTFJaWlpICggb28wT29vb09vMCApCiAgcHJpbnQgb28wT29vb09vMAogIGlpSWlpIC4gYWRkICggb28wT29vb09vMCAsIEkxICkKICBJaUlpMTFpSSA9IHhibWMgLiBQbGF5ZXIgKCApCiAgSWlJaTExaUkgLiBwbGF5ICggaWlJaWkgKQogIGlmIDYxIC0gNjE6IElJMTExaWlpaSAuIG9vT08wMG9PbyAtIElJMTExaWlpaQogIGlmIDc1IC0gNzU6IE9vTzBPMDAgLSBvT28wTzBPb28gKyBpaWlpSWkxMWkgJSBpMUlJaSAqIElJMTFpaUlJCiBlbGlmIEkxaWlpaWlJSTFJMUkgLiB1cHBlciAoICkgPT0gIkVCT1VORCIgb3IgKCBJMWlpaWlpSUkxSTFJID09ICIiIGFuZCBvbzAwMG8wMG8wbzAwID09ICIzIiApIDoKICBPMG9vMG8wT29PMCA9ICJQbGF5aW5nIEVib3VuZCBMaW5rIgogIHhibWNndWkgLiBEaWFsb2cgKCApIC4gbm90aWZpY2F0aW9uICggX19hZGRvbm5hbWVfXyAsIE8wb28wbzBPb08wICwgX19pY29uX18gLCB0aW1lICwgRmFsc2UgKQogIGlmIDU2IC0gNTY6IG9PbzBPME9vbyAvIG9vT08wMG9PbyAvIG9vICUgT29vb29vb29PTwogIE9vT09vMG9vT29vb08gPSBJMTExMUkxaUlJMTEgPSByZSAuIGZpbmRhbGwgKCAnIHNyYz1bIlwnXS4qP2Vib3VuZFxcLnR2Lio/c2l0ZT0oLio/KSYuKj9kYXRlPSguKj8pXFwmJyAsIE9Pb09PMG9vMG9vTyApCiAgaWYgbGVuICggT29PT28wb29Pb29vTyApID4gMCA6CiAgIE9vT09vMG9vT29vb08gPSBJMTExMUkxaUlJMTEgWyAwIF0KICAgSWkxaTFJID0gT29PT28wb29Pb29vTyBbIDEgXQogICBJSUlJaWkxSWkxMWkgPSBPb09PbzBvb09vb29PIFsgMCBdCiAgIE8wTzAwT08wME8wME8gPSBiYXNlNjQgLiBiNjRkZWNvZGUgKCAnYUhSMGNEb3ZMM2QzZHk1bFltOTFibVJ6WlhKMmFXTmxjeTVqYjIwdmFXWnlZVzFsTDI1bGR5OTJiMlJmZFdkakxuQm9jRDl6ZEhKbFlXMDliWEEwT25adlpDOGxjeThsY3laM2FXUjBhRDAyTWpBbWFHVnBaMmgwUFRNMU1DWmpiR2x3UFNWekptUmhlVDBsY3ladGIyNTBhRDExYm1SbFptbHVaV1E9JyApICUgKCBJaTFpMUkgLCBJSUlJaWkxSWkxMWkgLCBJSUlJaWkxSWkxMWkgLCBJaTFpMUkgKQogICBpZiA4OSAtIDg5OiBpMUlJaSAuIG8wMDAwb09vT29PMG8gKiBvMG9vMG8gKyBpSWlpMUkxMUkxSUkxIC4gb09vME8wT29vCiAgIGlmIDE2IC0gMTY6IG8wb28wbyAtIE9vT08wb29PT29vME8gKiBPb28wMG9PbzAwbwogICBpZiAyMyAtIDIzOiBJSTExMWlpaWkgKiBPb28wMG9PbzAwbwogICBpZiA1MSAtIDUxOiBpMTFpSWlpSWlpICUgT29PME8wMCAlIE9vbzAwb09vMDBvCiAgIGlmIDMwIC0gMzA6IGlpaWlJaTExaSAtIG8wMDAwb09vT29PMG8gJSBvMDAwMG9Pb09vTzBvCiAgIG9vME9Pb09vbzBPME8gPSB7ICd1c2VybmFtZScgOiAnaGFzaCcgfQogICBvbzBPT29Pb28wTzBPID0gdXJsbGliIC4gdXJsZW5jb2RlICggb28wT09vT29vME8wTyApCiAgIE9vME9vTzAwb09PMG8gPSB1cmxsaWIyIC4gUmVxdWVzdCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyVmliM1Z1WkhObGNuWnBZMlZ6TG1OdmJTOW1iR0Z6YUhCc1lYbGxjbWhoYzJndmFXNWtaWGd1Y0dodycgKSApCiAgIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8zMy4wLjE3NTAuMTE3IFNhZmFyaS81MzcuMzYnICkKICAgT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICwgb28wT09vT29vME8wTyApCiAgIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiAgIE9PTzAwTyAuIGNsb3NlICggKQogICBPMG9Pb09PID0gT09vT08wb28wb29PIDsKICAgb28wT29vb09vMCA9IGJhc2U2NCAuIGI2NGRlY29kZSAoICdjblJ0Y0RvdkwyTmtiaTVsWW05MWJtUXVkSFl2ZG05a0lIQnNZWGx3WVhSb1BXMXdORHAyYjJRdkpYTXZKWE1nWVhCd1BYWnZaRDkzYlhOQmRYUm9VMmxuYmowbGN5QnpkMloxY213OWFIUjBjRG92TDNkM2R5NWxZbTkxYm1SelpYSjJhV05sY3k1amIyMHZiR2wyWlM5Mk5pOXdiR0Y1WlhJdWMzZG1QMlJ2YldGcGJqMTNkM2N1ZW1WdGRIWXVZMjl0Sm1Ob1lXNXVaV3c5SlhNbVkyOTFiblJ5ZVQxRlZTQndZV2RsVlhKc1BTVnpJSFJqVlhKc1BYSjBiWEE2THk5alpHNHVaV0p2ZFc1a0xuUjJMM1p2WkQ5M2JYTkJkWFJvVTJsbmJqMGxjeUJzYVhabFBYUnlkV1VnZEdsdFpXOTFkRDB4TlE9PScgKSAlICggSWkxaTFJICwgSUlJSWlpMUlpMTFpICwgTzBvT29PTyAsIElJSUlpaTFJaTExaSAsIE8wTzAwT08wME8wME8gLCBPMG9Pb09PICkKICBlbHNlIDoKICAgT29PT28wb29Pb29vTyA9IEkxMTExSTFpSUkxMSA9IHJlIC4gZmluZGFsbCAoICdzcmM9WyJcJ10oLio/KHBvb3ZlZVwubmV0KS4qPylbIlwnXScgLCBPT29PTzBvbzBvb08gKQogICBpZiA4IC0gODogb29vTzBvbzBvT09PTwogICBpZiBsZW4gKCBPb09PbzBvb09vb29PICkgPT0gMCA6CiAgICBPMG9vMG8wT29PMCA9ICJFQm91bmQvUG92ZWUgbGluayBub3QgZm91bmQiCiAgICB4Ym1jZ3VpIC4gRGlhbG9nICggKSAuIG5vdGlmaWNhdGlvbiAoIF9fYWRkb25uYW1lX18gLCBPMG9vMG8wT29PMCAsIF9faWNvbl9fICwgdGltZSAsIEZhbHNlICkKICAgIGlmIDY4IC0gNjg6IG9vb08wb28wb09PT08gLiBPb29vb29vb09PIC0gaTExaUlpaUlpaSArIGkxMWlJaWlJaWkKICAgIGlmIHJlZGlyZWN0IDogaWkxMWlJSWlpSTFJICggdXJsICwgT09vT08wb28wb29PICkKICAgIHJldHVybgogICBPb09PbzBvb09vb29PID0gSTExMTFJMWlJSTExIFsgMCBdIFsgMCBdCiAgIEkxaTExMUkgPSAnPHNvdXJjZSBzcmM9IiguKj8pIicKICAgaWYgODEgLSA4MTogb09vME8wT29vICsgaTFJMWlpMUlJMWlJSSAuIGkxMWlJaWlJaWkKICAgaWYgT29PT28wb29Pb29vTyAuIHN0YXJ0c3dpdGggKCAnLy8nICkgOiBPb09PbzBvb09vb29PID0gJ2h0dHA6JyArIE9vT09vMG9vT29vb08KICAgaWYgMTAgLSAxMDogb09vME8wT29vICsgT29PTzBvb09Pb28wTyAtIGlJaWkxSTExSTFJSTEgLSBPb09PMG9vT09vbzBPCiAgIE9Pb09PMG9vMG9vTyA9IGkxaWlJMTFJICggT29PT28wb29Pb29vTyAsIGNvb2tpZUphciA9IG9Pb2lJaTFJMUlpaTEgLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogICBpZiA1OCAtIDU4OiBPbwogICBPb09PbzBvb09vb29PID0gcmUgLiBmaW5kYWxsICggSTFpMTExSSAsIE9Pb09PMG9vMG9vTyApCiAgIG9vME9vb29PbzAgPSBPb09PbzBvb09vb29PIFsgMCBdCiAgaWlJaWkgPSB4Ym1jIC4gUGxheUxpc3QgKCAxICkKICBpaUlpaSAuIGNsZWFyICggKQogIEkxID0geGJtY2d1aSAuIExpc3RJdGVtICggb08wMG9PT29vb08gLCBpY29uSW1hZ2UgPSAiRGVmYXVsdFZpZGVvLnBuZyIgKQogIEkxIC4gc2V0SW5mbyAoICJWaWRlbyIgLCB7ICJUaXRsZSIgOiBvTzAwb09Pb29vTyB9ICkKICBJMSAuIHNldFByb3BlcnR5ICggJ21pbWV0eXBlJyAsICd2aWRlby94LW1zdmlkZW8nICkKICBJMSAuIHNldFByb3BlcnR5ICggJ0lzUGxheWFibGUnICwgJ3RydWUnICkKICBpaUlpaSAuIGFkZCAoIG9vME9vb29PbzAgLCBJMSApCiAgSWlJaTExaUkgPSB4Ym1jIC4gUGxheWVyICggKQogIElpSWkxMWlJIC4gcGxheSAoIGlpSWlpICkKIGVsaWYgSTFpaWlpaUlJMUkxSSAuIHVwcGVyICggKSA9PSAiVklEUkFJTCIgb3IgKCBJMWlpaWlpSUkxSTFJID09ICIiIGFuZCBvbzAwMG8wMG8wbzAwID09ICI1IiApIDoKICBPMG9vMG8wT29PMCA9ICJQbGF5aW5nIFZpZHJhaWwgTGluayIKICB4Ym1jZ3VpIC4gRGlhbG9nICggKSAuIG5vdGlmaWNhdGlvbiAoIF9fYWRkb25uYW1lX18gLCBPMG9vMG8wT29PMCAsIF9faWNvbl9fICwgdGltZSAsIEZhbHNlICkKICBPb09PbzBvb09vb29PID0gSTExMTFJMWlJSTExID0gcmUgLiBmaW5kYWxsICggJ3NyYz1bIlwnXSguKj8odmlkcmFpbFwuY29tKS4qPylbIlwnXScgLCBPT29PTzBvbzBvb08gKQogIGlmIGxlbiAoIE9vT09vMG9vT29vb08gKSA9PSAwIDoKICAgTzBvbzBvME9vTzAgPSAiVmlkcmFpbCBsaW5rIG5vdCBmb3VuZCIKICAgeGJtY2d1aSAuIERpYWxvZyAoICkgLiBub3RpZmljYXRpb24gKCBfX2FkZG9ubmFtZV9fICwgTzBvbzBvME9vTzAgLCBfX2ljb25fXyAsIHRpbWUgLCBGYWxzZSApCiAgIGlmIHJlZGlyZWN0IDogaWkxMWlJSWlpSTFJICggdXJsICwgT09vT08wb28wb29PICkKICAgcmV0dXJuCiAgIGlmIDk4IC0gOTg6IG8wMDAwb09vT29PMG8gLyBvb09PMDBvT28gJSBPb29vb29vb09PCiAgT29PT28wb29Pb29vTyA9IEkxMTExSTFpSUkxMSBbIDAgXSBbIDAgXQogIEkxaTExMUkgPSAnPHNvdXJjZSBzcmM9IiguKj8pIicKICBPT29PTzBvbzBvb08gPSBpMWlpSTExSSAoIE9vT09vMG9vT29vb08gLCBjb29raWVKYXIgPSBvT29pSWkxSTFJaWkxICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICkKICBPb09PbzBvb09vb29PID0gcmUgLiBmaW5kYWxsICggSTFpMTExSSAsIE9Pb09PMG9vMG9vTyApCiAgaWYgbGVuICggT29PT28wb29Pb29vTyApID09IDAgOgogICBPMG9vMG8wT29PMCA9ICJWaWRyYWlsIGxpbmsgbm90IGZvdW5kIgogICB4Ym1jZ3VpIC4gRGlhbG9nICggKSAuIG5vdGlmaWNhdGlvbiAoIF9fYWRkb25uYW1lX18gLCBPMG9vMG8wT29PMCAsIF9faWNvbl9fICwgdGltZSAsIEZhbHNlICkKICAgaWYgcmVkaXJlY3QgOiBpaTExaUlJaWlJMUkgKCB1cmwgLCBPT29PTzBvbzBvb08gKQogICByZXR1cm4KICBvbzBPb29vT28wID0gT29PT28wb29Pb29vTyBbIDAgXQogIGlpSWlpID0geGJtYyAuIFBsYXlMaXN0ICggMSApCiAgaWlJaWkgLiBjbGVhciAoICkKICBJMSA9IHhibWNndWkgLiBMaXN0SXRlbSAoIG9PMDBvT09vb29PICwgaWNvbkltYWdlID0gIkRlZmF1bHRWaWRlby5wbmciICkKICBJMSAuIHNldEluZm8gKCAiVmlkZW8iICwgeyAiVGl0bGUiIDogb08wMG9PT29vb08gfSApCiAgSTEgLiBzZXRQcm9wZXJ0eSAoICdtaW1ldHlwZScgLCAndmlkZW8veC1tc3ZpZGVvJyApCiAgSTEgLiBzZXRQcm9wZXJ0eSAoICdJc1BsYXlhYmxlJyAsICd0cnVlJyApCiAgaWYgNjUgLSA2NTogT28gJSBPb08wTzAwIC0gb28gJSBvMG9vMG8gKyBpSWlpMUkxMUkxSUkxIC8gaUlpaTFJMTFJMUlJMQogIGlmIDk0IC0gOTQ6IG9vb08wb28wb09PT08gLSBPb08wTzAwIC4gT29vMDBvT28wMG8gLSBPbyAtIGlpaWlJaTExaSAuIE9vT08wb29PT29vME8KICBpaUlpaSAuIGFkZCAoIG9vME9vb29PbzAgLCBJMSApCiAgSWlJaTExaUkgPSB4Ym1jIC4gUGxheWVyICggKQogIElpSWkxMWlJIC4gcGxheSAoIGlpSWlpICkKIGVsaWYgSTFpaWlpaUlJMUkxSSAuIHVwcGVyICggKSA9PSAiTElOSyIgb3IgKCBJMWlpaWlpSUkxSTFJID09ICIiIGFuZCBvbzAwMG8wMG8wbzAwID09ICIxIiApIDoKICBPMG9vMG8wT29PMCA9ICJQbGF5aW5nIFR1bmUucGsgTGluayIKICB4Ym1jZ3VpIC4gRGlhbG9nICggKSAuIG5vdGlmaWNhdGlvbiAoIF9fYWRkb25uYW1lX18gLCBPMG9vMG8wT29PMCAsIF9faWNvbl9fICwgdGltZSAsIEZhbHNlICkKICBpZiAzOSAtIDM5OiBpaWlpSWkxMWkgKyBvT28wTzBPb28KICBPb09PbzBvb09vb29PID0gSTExMTFJMWlJSTExID0gcmUgLiBmaW5kYWxsICggJ3NyYz1bXCciXSguKj8odHVuZVwucGspLio/KVtcJyJdJyAsIE9Pb09PMG9vMG9vTyApCiAgaWYgbGVuICggT29PT28wb29Pb29vTyApID09IDAgOgogICBPMG9vMG8wT29PMCA9ICJMaW5rLnBrIGxpbmsgbm90IGZvdW5kIgogICB4Ym1jZ3VpIC4gRGlhbG9nICggKSAuIG5vdGlmaWNhdGlvbiAoIF9fYWRkb25uYW1lX18gLCBPMG9vMG8wT29PMCAsIF9faWNvbl9fICwgdGltZSAsIEZhbHNlICkKICAgaWYgcmVkaXJlY3QgOiBpaTExaUlJaWlJMUkgKCB1cmwgLCBPT29PTzBvbzBvb08gKQogICByZXR1cm4KICAgaWYgNjggLSA2ODogaTFJSWkgKiBpaWlpSWkxMWkgLyBpMTFpSWlpSWlpCiAgT29PT28wb29Pb29vTyA9IEkxMTExSTFpSUkxMSBbIDAgXSBbIDAgXQogIGlmIDk2IC0gOTY6IG9vCiAgaWlJaWkgPSB4Ym1jIC4gUGxheUxpc3QgKCAxICkKICBpaUlpaSAuIGNsZWFyICggKQogIEkxID0geGJtY2d1aSAuIExpc3RJdGVtICggb08wMG9PT29vb08gLCBpY29uSW1hZ2UgPSAiRGVmYXVsdFZpZGVvLnBuZyIgKQogIEkxIC4gc2V0SW5mbyAoICJWaWRlbyIgLCB7ICJUaXRsZSIgOiBvTzAwb09Pb29vTyB9ICkKICBJMSAuIHNldFByb3BlcnR5ICggJ21pbWV0eXBlJyAsICd2aWRlby94LW1zdmlkZW8nICkKICBJMSAuIHNldFByb3BlcnR5ICggJ0lzUGxheWFibGUnICwgJ3RydWUnICkKICB0cnkgOgogICBpbXBvcnQgdXJscmVzb2x2ZXIKICBleGNlcHQgOgogICBwcmludCAndXJscmVzb2x2ZXIgZXJyJwogICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICBvbzBPb29vT28wID0gdXJscmVzb2x2ZXIgLiBIb3N0ZWRNZWRpYUZpbGUgKCBPb09PbzBvb09vb29PICkgLiByZXNvbHZlICggKQogIG9vME9vb29PbzAgPSBvbzBPb29vT28wICsgJ3xSZWZlcmVyPSVzJlVzZXItYWdlbnQ9TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU3LjAuMjk4Ny4xMTAgU2FmYXJpLzUzNy4zNicgJSBPb09PbzBvb09vb29PCiAgaWYgNzggLSA3ODogb29PTzAwb09vCiAgaWYgNzIgLSA3Mjogb09vTzBvbzBPT09vIC8gTzAgJSBJSTExMWlpaWkgLyBJSTExMWlpaWkKICBpaUlpaSAuIGFkZCAoIG9vME9vb29PbzAgLCBJMSApCiAgSWlJaTExaUkgPSB4Ym1jIC4gUGxheWVyICggKQogIElpSWkxMWlJIC4gcGxheSAoIGlpSWlpICkKIGVsaWYgSTFpaWlpaUlJMUkxSSAuIHVwcGVyICggKSA9PSAiUExBWVdJUkUiIG9yICggSTFpaWlpaUlJMUkxSSA9PSAiIiBhbmQgb28wMDBvMDBvMG8wMCA9PSAiMiIgKSA6CiAgTzBvbzBvME9vTzAgPSAiUGxheWluZyBQbGF5d2lyZSBMaW5rIgogIHhibWNndWkgLiBEaWFsb2cgKCApIC4gbm90aWZpY2F0aW9uICggX19hZGRvbm5hbWVfXyAsIE8wb28wbzBPb08wICwgX19pY29uX18gLCB0aW1lICwgRmFsc2UgKQogIGlmIDQ4IC0gNDg6IElJMTFpaUlJICUgSUkxMWlpSUkgLyBpSWlpMUkxMUkxSUkxIC0gaTExaUlpaUlpaQogIE9vT09vMG9vT29vb08gPSByZSAuIGZpbmRhbGwgKCAnc3JjPVsiXCddLio/KHBsYXl3aXJlKS4qP2RhdGEtcHVibGlzaGVyLWlkPSIoLio/KSJccypkYXRhLXZpZGVvLWlkPSIoLio/KVsiXCddJyAsIE9Pb09PMG9vMG9vTyApCiAgTzAwME9pSWlpaSA9IDEKICBpZiBsZW4gKCBPb09PbzBvb09vb29PICkgPT0gMCA6CiAgIE9vT09vMG9vT29vb08gPSByZSAuIGZpbmRhbGwgKCAnZGF0YS1jb25maWc9IiguKj9jb25maWcucGxheXdpcmUuY29tLio/KSInICwgT09vT08wb28wb29PICkKICAgTzAwME9pSWlpaSA9IDIKICBpZiBsZW4gKCBPb09PbzBvb09vb29PICkgPT0gMCA6CiAgIE8wb28wbzBPb08wID0gIlBsYXl3aXJlIGxpbmsgbm90IGZvdW5kIgogICB4Ym1jZ3VpIC4gRGlhbG9nICggKSAuIG5vdGlmaWNhdGlvbiAoIF9fYWRkb25uYW1lX18gLCBPMG9vMG8wT29PMCAsIF9faWNvbl9fICwgdGltZSAsIEZhbHNlICkKICAgaWYgcmVkaXJlY3QgOiBpaTExaUlJaWlJMUkgKCB1cmwgLCBPT29PTzBvbzBvb08gKQogICByZXR1cm4KICBpZiBPMDAwT2lJaWlpID09IDEgOgogICAoIE8wb28wbzBvTyAsIE9PT28wME9vbzAwbzAgLCBvb29vbyApID0gT29PT28wb29Pb29vTyBbIDAgXQogICBpaTExaTFJaTFpMWlJID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggImFIUjBjRG92TDJOa2JpNXdiR0Y1ZDJseVpTNWpiMjB2ZGpJdkpYTXZZMjl1Wm1sbkx5VnpMbXB6YjI0PSIgKSAlICggT09PbzAwT29vMDBvMCAsIG9vb29vICkKICAgT28wT29PMDBvT08wbyA9IHVybGxpYjIgLiBSZXF1ZXN0ICggaWkxMWkxSWkxaTFpSSApCiAgIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wKGlQYWQ7IFU7IENQVSBpUGhvbmUgT1MgM18yIGxpa2UgTWFjIE9TIFg7IGVuLXVzKSBBcHBsZVdlYktpdC81MzEuMjEuMTAgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMC40IE1vYmlsZS83QjMxNCBTYWZhcmkvNTMxLjIxLjEwJyApCiAgIE9PTzAwTyA9IHVybGxpYjIgLiB1cmxvcGVuICggT28wT29PMDBvT08wbyApCiAgIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiAgIE9PTzAwTyAuIGNsb3NlICggKQogICBPb09PbzBvb09vb29PID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggImFIUjBjRG92TDJOa2JpNXdiR0Y1ZDJseVpTNWpiMjB2SlhNdkpYTT0iICkgJSAoIE9PT28wME9vbzAwbzAgLCByZSAuIGZpbmRhbGwgKCAnc3JjIjoiLio/bXA0OiguKj8pIicgLCBPT29PTzBvbzBvb08gKSBbIDAgXSApCiAgIGlmIDIxIC0gMjE6IE9vT08wb29PT29vME8KICBlbHNlIDoKICAgT29PT28wb29Pb29vTyA9IE9vT09vMG9vT29vb08gWyAwIF0KICAgaWYgT29PT28wb29Pb29vTyAuIHN0YXJ0c3dpdGggKCAnLy8nICkgOiBPb09PbzBvb09vb29PID0gJ2h0dHA6JyArIE9vT09vMG9vT29vb08KICAgaWYgNTkgLSA1OTogaTExaUlpaUlpaSAqIGlJaWkxSTExSTFJSTEKICAgaWkxMWkxSTFpaWlpID0gJ21lZGlhIjpceyIoLio/KSI6IiguKj8pIicKICAgT28wT29PMDBvT08wbyA9IHVybGxpYjIgLiBSZXF1ZXN0ICggT29PT28wb29Pb29vTyApCiAgIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wKGlQYWQ7IFU7IENQVSBpUGhvbmUgT1MgM18yIGxpa2UgTWFjIE9TIFg7IGVuLXVzKSBBcHBsZVdlYktpdC81MzEuMjEuMTAgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMC40IE1vYmlsZS83QjMxNCBTYWZhcmkvNTMxLjIxLjEwJyApCiAgIE9PTzAwTyA9IHVybGxpYjIgLiB1cmxvcGVuICggT28wT29PMDBvT08wbyApCiAgIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiAgIE9vT09vMG9vT29vb08gPSByZSAuIGZpbmRhbGwgKCBpaTExaTFJMWlpaWkgLCBPT29PTzBvbzBvb08gKQogICBpZiBsZW4gKCBPb09PbzBvb09vb29PICkgPiAwIDoKICAgIE9vT09vMG9vT29vb08gPSBPb09PbzBvb09vb29PIFsgMCBdCiAgICBpSUlJID0gT29PT28wb29Pb29vTyBbIDAgXQogICAgTzBPb28gPSBPb09PbzBvb09vb29PIFsgMSBdCiAgICBpZiA1NCAtIDU0OiBpSWlpMUkxMUkxSUkxIC8gSUkxMWlpSUkgKyBpaWlpSWkxMWkgJSBvT28wTzBPb28gKiBvT28wTzBPb28gLSBJSTExMWlpaWkKICAgIE9vME9vTzAwb09PMG8gPSB1cmxsaWIyIC4gUmVxdWVzdCAoIE8wT29vICkKICAgIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wKGlQYWQ7IFU7IENQVSBpUGhvbmUgT1MgM18yIGxpa2UgTWFjIE9TIFg7IGVuLXVzKSBBcHBsZVdlYktpdC81MzEuMjEuMTAgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMC40IE1vYmlsZS83QjMxNCBTYWZhcmkvNTMxLjIxLjEwJyApCiAgICBPT08wME8gPSB1cmxsaWIyIC4gdXJsb3BlbiAoIE9vME9vTzAwb09PMG8gKQogICAgT09vT08wb28wb29PID0gT09PMDBPIC4gcmVhZCAoICkKICAgIGlpMTFpMUkxaWlpaSA9ICdiYXNlVVJMPiguKj8pPFwvYmFzZVVSTD5ccyo/PG1lZGlhIHVybD0iKC4qPykiJwogICAgT29PT28wb29Pb29vTyA9IHJlIC4gZmluZGFsbCAoIGlpMTFpMUkxaWlpaSAsIE9Pb09PMG9vMG9vTyApIFsgMCBdCiAgICBPb09PbzBvb09vb29PID0gT29PT28wb29Pb29vTyBbIDAgXSArICcvJyArIE9vT09vMG9vT29vb08gWyAxIF0KICBpaUlpaSA9IHhibWMgLiBQbGF5TGlzdCAoIDEgKQogIGlpSWlpIC4gY2xlYXIgKCApCiAgSTEgPSB4Ym1jZ3VpIC4gTGlzdEl0ZW0gKCBvTzAwb09Pb29vTyAsIGljb25JbWFnZSA9ICJEZWZhdWx0VmlkZW8ucG5nIiApCiAgSTEgLiBzZXRJbmZvICggIlZpZGVvIiAsIHsgIlRpdGxlIiA6IG9PMDBvT09vb29PIH0gKQogIEkxIC4gc2V0UHJvcGVydHkgKCAnbWltZXR5cGUnICwgJ3ZpZGVvL3gtbXN2aWRlbycgKQogIEkxIC4gc2V0UHJvcGVydHkgKCAnSXNQbGF5YWJsZScgLCAndHJ1ZScgKQogIG9vME9vb29PbzAgPSBPb09PbzBvb09vb29PCiAgaWYgNDMgLSA0MzogbzAwMDBvT29Pb08wbyAvIG8wb28wbyAuIGlpaWlJaTExaSArIGlJaWkxSTExSTFJSTEKICBpaUlpaSAuIGFkZCAoIG9vME9vb29PbzAgLCBJMSApCiAgSWlJaTExaUkgPSB4Ym1jIC4gUGxheWVyICggKQogIElpSWkxMWlJIC4gcGxheSAoIGlpSWlpICkKICBpZiA5OSAtIDk5OiBvT29PMG9vME9PT28KIGVsc2UgOgogIE8wb28wbzBPb08wID0gIlBsYXlpbmcgWW91dHViZSBMaW5rIgogIHhibWNndWkgLiBEaWFsb2cgKCApIC4gbm90aWZpY2F0aW9uICggX19hZGRvbm5hbWVfXyAsIE8wb28wbzBPb08wICwgX19pY29uX18gLCB0aW1lICwgRmFsc2UgKQogIGlJSWlpSUkxMWkxSTEgPSBJMTExMUkxaUlJMTEgPSByZSAuIGZpbmRhbGwgKCAnPGlmcmFtZS4qP3NyYz1cIi4qP3lvdXR1YmUuKj9lbWJlZFwvKC4qPylcIicgLCBPT29PTzBvbzBvb08gLCByZSAuIERPVEFMTCB8IHJlIC4gSUdOT1JFQ0FTRSApCiAgaWYgbGVuICggaUlJaWlJSTExaTFJMSApID09IDAgOgogICBPMG9vMG8wT29PMCA9ICJZb3V0dWJlIGxpbmsgbm90IGZvdW5kIgogICB4Ym1jZ3VpIC4gRGlhbG9nICggKSAuIG5vdGlmaWNhdGlvbiAoIF9fYWRkb25uYW1lX18gLCBPMG9vMG8wT29PMCAsIF9faWNvbl9fICwgdGltZSAsIEZhbHNlICkKICAgaWYgcmVkaXJlY3QgOiBpaTExaUlJaWlJMUkgKCB1cmwgLCBPT29PTzBvbzBvb08gKQogICByZXR1cm4KICBpSUlpaUlJMTFpMUkxID0gaUlJaWlJSTExaTFJMSBbIDAgXQogIElpMTExSWkxaWlJaTEgPSAncGx1Z2luOi8vcGx1Z2luLnZpZGVvLnlvdXR1YmUvP2FjdGlvbj1wbGF5X3ZpZGVvJnZpZGVvaWQ9JXMnICUgaUlJaWlJSTExaTFJMQogIGlmIDI5IC0gMjk6IG9vIC4gb29vTzBvbzBvT09PTwogIHhibWMgLiBleGVjdXRlYnVpbHRpbiAoICJ4Ym1jLlBsYXlNZWRpYSgiICsgSWkxMTFJaTFpaUlpMSArICIpIiApCiAgaWYgOCAtIDg6IGkxSUlpICogTzAKIHJldHVybgogaWYgNjAgLSA2MDogT29PME8wMCAtIElJMTExaWlpaSArIG9vCmRlZiBpSWlpaUlJMTFJSSAoICkgOgogbzBPT08wTzAgPSAiIgogaW1wb3J0IG1hdGgKIGZvciBpSW8wMG9vIGluIFsgNS42CiAsIDEyLjEKICwgNy41CiAsIDMuMwogLCAxMS44CiAsIDcKICwgMTEuNgogLCA5CiAsIDEwLjcKICwgNi42CiAsIDMuNQogLCAxMC4xCiAsIDExLjgKICwgNy4xCiAsIDExLjUgXSA6CiAgbzBPT08wTzAgKz0gY2hyICggaW50ICggbWF0aCAuIGZsb29yICggaUlvMDBvbyAqIDEwICkgKSApIDsKIHJldHVybiBvME9PTzBPMAogaWYgNCAtIDQ6IE9vCiBpZiA3MSAtIDcxOiBvMG9vMG8gKyBpMUlJaSAqIE9vTzBPMDAKIGlmIDUxIC0gNTE6IE9vb29vb29vT08gKiBPMCAtIG9vT08wMG9PbyAuIE9vTzBPMDAgJSBJSTExMWlpaWkgKyBvb29PMG9vMG9PT09PCmRlZiBJMW9vME8wT29vME8wMCAoIHRva2VuZXhwaXJ5ICkgOgogaW1wb3J0IGhhc2hsaWIKIHJldHVybiBoYXNobGliIC4gbWQ1ICggdG9rZW5leHBpcnkgKyBpSWlpaUlJMTFJSSAoICkgKSAuIGhleGRpZ2VzdCAoICkKIGlmIDEgLSAxOiBvb09PMDBvT28gJSBJSTExaWlJSSAtIGkxSTFpaTFJSTFpSUkgKiBpSWlpMUkxMUkxSUkxCiBpZiAxNCAtIDE0OiBvT28wTzBPb28KZGVmIG8wT09vICggdXJsICkgOgogaW1wb3J0IHJlICwgdXJsbGliICwganNvbgogaTFpaTExMTFpMWkgPSBbICggJ1JlZmVyZXInICwgJ2h0dHA6Ly9zdHJlYW1oZGV1LmNvbS8nICkgLCAoICdVc2VyLUFnZW50JyAsICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTIuMC4yNzQzLjExNiBTYWZhcmkvNTM3LjM2JyApIF0KIGlmIDE3IC0gMTc6IE9vTzBPMDAgLiBPb29vb29vb09PICUgb09vTzBvbzBPT09vIC8gT29vb29vb29PTwogb08wT09PT28gPSBpMWlpSTExSSAoIHVybCAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiBpaUlpSTExMUlpMSA9IHJlIC4gZmluZGFsbCAoICcidmlkZW9pZnJhbWUiIHNyYz0iKC4qPykiJyAsIG9PME9PT09vICkgWyAwIF0KIGlmIDc4IC0gNzg6IG8wb28wbyAqIG8wb28wbwogSTFpMWlJMUlJID0gaTFpaUkxMUkgKCBpaUlpSTExMUlpMSAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiBPb29PMG9vID0gcmUgLiBmaW5kYWxsICggJ2lmcmFtZSBzcmM9IiguKj8pIicgLCBJMWkxaUkxSUkgKQogaWYgbGVuICggT29vTzBvbyApID4gMCA6CiAgaWYgNjMgLSA2Mzogb28gJSBpaWlpSWkxMWkgLyBpSWlpMUkxMUkxSUkxICogbzAwMDBvT29Pb08wbyAlIElJMTFpaUlJIC4gSUkxMTFpaWlpCiAgTzBvb28gPSBpMWlpSTExSSAoIE9vb08wb28gWyAwIF0gLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogIE9vb08wb28gPSBPb29PMG9vIFsgMCBdCiBlbHNlIDoKICBpZiAnaGRjYXN0JyBpbiBJMWkxaUkxSUkgb3IgJ3N0YXRpYy5icm8nIGluIEkxaTFpSTFJSSA6CiAgIHJldHVybiBvME8wICggaWlJaUkxMTFJaTEgLCAiaHR0cDovL3N0cmVhbWhkZXUuY29tLyIgLCAiaHR0cDovL3N0cmVhbWhkLmV1LyIgKQogIE8wb29vID0gSTFpMWlJMUlJCiBPb29PME8wbzAgPSByZSAuIGZpbmRhbGwgKCAnZmlsZTogIiguKj8pIicgLCBPMG9vbyApIFsgMCBdCiBpZiA0NyAtIDQ3OiBpSWlpMUkxMUkxSUkxIC4gSUkxMWlpSUkgLyBPb09PMG9vT09vbzBPICUgSUkxMTFpaWlpCiBPbzAwb08gKCBiYXNlNjQgLiBiNjRlbmNvZGUgKCBPb29PME8wbzAgKyAnfFVzZXItQWdlbnQ9TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUyLjAuMjc0My4xMTYgU2FmYXJpLzUzNy4zNicgKSApCiByZXR1cm4KIGlmIDkyIC0gOTI6IG9Pb08wb28wT09PbyAlIGkxMWlJaWlJaWkKZGVmIGkxSWlpSWkxaSAoIHVybCApIDoKIGltcG9ydCByZSAsIHVybGxpYiAsIGpzb24KIGkxaWkxMTExaTFpID0gWyAoICdSZWZlcmVyJyAsICdodHRwOi8vbWFtYWhkLmNvbS9pbmRleC5odG1sJyApICwgKCAnVXNlci1BZ2VudCcgLCAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUyLjAuMjc0My4xMTYgU2FmYXJpLzUzNy4zNicgKSBdCiBpZiA4MiAtIDgyOiBvMG9vMG8gKiBvT29PMG9vME9PT28gJSBvMDAwMG9Pb09vTzBvIC8gT29vMDBvT28wMG8KIG9PME9PT09vID0gaTFpaUkxMUkgKCB1cmwgLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogaWlJaUkxMTFJaTEgPSByZSAuIGZpbmRhbGwgKCAnPGlmcmFtZSB3aWQuKj9zcmM9IiguKj8pIicgLCBvTzBPT09PbyApIFsgMCBdCiBvTzBPT09PbyA9IGkxaWlJMTFJICggaWlJaUkxMTFJaTEgLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogaWYgJ2hkY2FzdCcgaW4gb08wT09PT28gb3IgJ3N0YXRpYy5icm8nIGluIG9PME9PT09vIDoKICByZXR1cm4gbzBPMCAoIGlpSWlJMTExSWkxICwgImh0dHA6Ly9tYW1haGQuY29tLyIgKQogcmV0dXJuCiBpZiAyOCAtIDI4OiBpMUkxaWkxSUkxaUlJICUgb29PTzAwb09vIC0gSUkxMWlpSUkgLSBPb08wTzAwCmRlZiBpaUkxaWlpMUkxMTEgKCB1cmwgLCBwcm9ncmVzcyApIDoKIGltcG9ydCByZSAsIHVybGxpYiAsIGpzb24KIEkxID0geGJtY2d1aSAuIExpc3RJdGVtICggbGFiZWwgPSBzdHIgKCBvTzAwb09Pb29vTyApICwgaWNvbkltYWdlID0gIkRlZmF1bHRWaWRlby5wbmciICwgdGh1bWJuYWlsSW1hZ2UgPSB4Ym1jIC4gZ2V0SW5mb0ltYWdlICggIkxpc3RJdGVtLlRodW1iIiApICkKIGlmIDE2IC0gMTY6IGkxMWlJaWlJaWkgLSBpMTFpSWlpSWlpIC4gb09vME8wT29vIC8gaTFJSWkKIElpSTFpaTFpaSA9ICcnCiB0cnkgOgogIHByb2dyZXNzIC4gdXBkYXRlICggMzAgLCAiIiAsICJnZXR0aW5nIGxpbmtzIiAsICIiICkKICBpMWlpMTExMWkxaSA9IFsgKCAnUmVmZXJlcicgLCAnaHR0cDovL3d3dy56ZW5nYXR2LmNvbS8nICkgLCAoICdVc2VyLUFnZW50JyAsICdNb3ppbGxhLzUuMCAoaVBob25lOyBDUFUgaVBob25lIE9TIDlfMF8yIGxpa2UgTWFjIE9TIFgpIEFwcGxlV2ViS2l0LzYwMS4xLjQ2IChLSFRNTCwgbGlrZSBHZWNrbykgTW9iaWxlLzEzQTQ1MiAoNTIxNTE2MTQ0MCknICkgXQogIGlmIDc2IC0gNzY6IE8wICogb29PTzAwb09vIC8gTzAKICBJSW9vb08gPSBpMWlpSTExSSAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyRmtZUzU2Wlc1bllYUjJMbU52YlM5amIyNTBjbTlzYkdWeWN5OU1hWFpsVUd4aGVXVnlRMjl1ZEhKdmJHeGxjaTVxY3c9PScgKSAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiAgaWkxMWkxSTFpaWlpID0gInZhciBkdnJpZC4qP1xzLio/XCIoaHR0cC4qKVwiXHMiCiAgaWYgNDAgLSA0MDogaTFJMWlpMUlJMWlJSSAtIG9vIC8gb09vME8wT29vICUgbzBvbzBvCiAgSWlJaWlpaWkxaTFJMUkgPSByZSAuIGZpbmRhbGwgKCBpaTExaTFJMWlpaWkgLCBJSW9vb08gKSBbIDAgXQogIElpSWlpaWlpMWkxSTFJID0gSWlJaWlpaWkxaTFJMUkgLiByZXBsYWNlICggJyIgKyBkdnJpZCArICInICwgdXJsICkKICBpMWlpMTExMWkxaSA9IFsgKCAnUmVmZXJlcicgLCAnaHR0cDovL3d3dy56ZW5nYXR2LmNvbS8nICkgLCAoICdPcmlnaW4nICwgJ3d3dy56ZW5nYXR2LmNvbS8nICkgLCAoICdVc2VyLUFnZW50JyAsICdNb3ppbGxhLzUuMCAoaVBob25lOyBDUFUgaVBob25lIE9TIDlfMF8yIGxpa2UgTWFjIE9TIFgpIEFwcGxlV2ViS2l0LzYwMS4xLjQ2IChLSFRNTCwgbGlrZSBHZWNrbykgTW9iaWxlLzEzQTQ1MiAoNTIxNTE2MTQ0MCknICkgXQogIElpMTFJT29vT28wID0gaTFpaUkxMUkgKCBJaUlpaWlpaTFpMUkxSSAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSApCiAgaWkxMWkxSTFpaWlpID0gIihodHRwLio/KVxdP1xdPz4iCiAgaTFpaWlpSTFpSWkgPSByZSAuIGZpbmRhbGwgKCBpaTExaTFJMWlpaWkgLCBJaTExSU9vb09vMCApIFsgMCBdCiAgaWYgMyAtIDM6IE9vTzBPMDAgLSBJSTExaWlJSSAqIG9vT08wMG9PbyAtIElJMTExaWlpaSAuIE9vb29vb29vT08KICBJaUkxaWkxaWkgPSBpMWlpaWlJMWlJaSArICd8VXNlci1BZ2VudD1Nb3ppbGxhLzUuMCAoaVBob25lOyBDUFUgaVBob25lIE9TIDlfMF8yIGxpa2UgTWFjIE9TIFgpIEFwcGxlV2ViS2l0LzYwMS4xLjQ2IChLSFRNTCwgbGlrZSBHZWNrbykgTW9iaWxlLzEzQTQ1MiAoNTIxNTE2MTQ0MCkmUmVmZXJlcj1odHRwOi8vd3d3LnplbmdhdHYuY29tLycKICB0cnkgOgogICBpbXBvcnQgdXJscGFyc2UKICAgaUlJMTFpSUlJID0gaTFpaUkxMUkgKCBJaUkxaWkxaWkgKQogICBvb09vID0gcmUgLiBmaW5kYWxsICggJyNFWFQtWC1TVFJFQU0tSU5GLipcbiguKiknICwgaUlJMTFpSUlJICkgWyAtIDEgXQogICBJSWkxMWlpSTEgPSB1cmxwYXJzZSAuIHVybGpvaW4gKCBpMWlpaWlJMWlJaSAsIG9vT28gKQogICBwcm9ncmVzcyAuIHVwZGF0ZSAoIDQwICwgIiIgLCAic2tpcHBpbmcgQWRzIiAsICIiICkKICAgSWlJSUlJaUlpID0gaTFpaUkxMUkgKCBJSWkxMWlpSTEgKyAnfFVzZXItQWdlbnQ9TW96aWxsYS81LjAgKGlQaG9uZTsgQ1BVIGlQaG9uZSBPUyA5XzBfMiBsaWtlIE1hYyBPUyBYKSBBcHBsZVdlYktpdC82MDEuMS40NiAoS0hUTUwsIGxpa2UgR2Vja28pIE1vYmlsZS8xM0E0NTIgKDUyMTUxNjE0NDApJlJlZmVyZXI9aHR0cDovL3d3dy56ZW5nYXR2LmNvbS8nICkKICAgSWlJMWlpMWlpID0gSUlpMTFpaUkxICsgJ3xVc2VyLUFnZW50PU1vemlsbGEvNS4wIChpUGhvbmU7IENQVSBpUGhvbmUgT1MgOV8wXzIgbGlrZSBNYWMgT1MgWCkgQXBwbGVXZWJLaXQvNjAxLjEuNDYgKEtIVE1MLCBsaWtlIEdlY2tvKSBNb2JpbGUvMTNBNDUyICg1MjE1MTYxNDQwKSZSZWZlcmVyPWh0dHA6Ly93d3cuemVuZ2F0di5jb20vJwogICBwcmludCBJaUlJSUlpSWkKICAgb28wSUlJSTEgPSAwCiAgIGlmIDEgPT0gMiA6CiAgICBmb3IgSUkxaWkxMTEgaW4gcmUgLiBmaW5kYWxsICggJyNFWFRJTkYuKlxuKC4qKScgLCBJaUlJSUlpSWkgKSA6CiAgICAgaUlJMUlpaWkxMUkxaSA9IHVybHBhcnNlIC4gdXJsam9pbiAoIElJaTExaWlJMSAsIElJMWlpMTExICkKICAgICBvbzBJSUlJMSArPSAxCiAgICAgcHJvZ3Jlc3MgLiB1cGRhdGUgKCA0MCArICggMTAgKiBvbzBJSUlJMSApICwgIiIgLCAic2tpcHBpbmcgQWRzIiAsICIiICkKICAgICBpMWlpSTExSSAoIGlJSTFJaWlpMTFJMWkgKyAnfFVzZXItQWdlbnQ9TW96aWxsYS81LjAgKGlQaG9uZTsgQ1BVIGlQaG9uZSBPUyA5XzBfMiBsaWtlIE1hYyBPUyBYKSBBcHBsZVdlYktpdC82MDEuMS40NiAoS0hUTUwsIGxpa2UgR2Vja28pIE1vYmlsZS8xM0E0NTIgKDUyMTUxNjE0NDApJlJlZmVyZXI9aHR0cDovL3d3dy56ZW5nYXR2LmNvbS8nICkKICAgcHJvZ3Jlc3MgLiB1cGRhdGUgKCA5NSAsICIiICwgImFsb21vc3QgZmluaXNoZWQiICwgIiIgKQogIGV4Y2VwdCA6CiAgIHByaW50ICdlcnJvciBhdm9pZGluZyBhZCcKICAgcHJpbnQgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgIGlmIDMwIC0gMzA6IGlpaWlJaTExaSAvIG8wb28wbyAqIE9vICUgb29PTzAwb09vICsgb29PTzAwb09vCiBleGNlcHQgOgogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogIElpSTFpaTFpaSA9ICcnCiBwcm9ncmVzcyAuIGNsb3NlICggKQogeGJtYyAuIFBsYXllciAoICkgLiBwbGF5ICggSWlJMWlpMWlpICwgSTEgKQogaWYgNiAtIDY6IG9vb08wb28wb09PT08gKyBvb09PMDBvT28KIGlmIDEzIC0gMTM6IE8wIC4gb28gJSBvb09PMDBvT28gLSBPb09PMG9vT09vbzBPIC4gTzAKIGlmIDE0IC0gMTQ6IGlJaWkxSTExSTFJSTEKZGVmIElpSUlJSWlpSUlJaWkgKCB1cGRhdGVkVU5hbWUgPSBGYWxzZSApIDoKIG9PTzBPb29vID0gTm9uZQogcHJpbnQgJ3VwZGF0ZWRVTmFtZScgLCB1cGRhdGVkVU5hbWUKIHRyeSA6CiAgb09PME9vb28gPSBjb29raWVsaWIgLiBMV1BDb29raWVKYXIgKCApCiAgaWYgbm90IHVwZGF0ZWRVTmFtZSA6CiAgIG9PTzBPb29vIC4gbG9hZCAoIElpSUlJaUkxSTEgLCBpZ25vcmVfZGlzY2FyZCA9IFRydWUgKQogZXhjZXB0IDoKICBvT08wT29vbyA9IE5vbmUKICBpZiA4MiAtIDgyOiBPb28wMG9PbzAwbyAvIG8wb28wbyArIElJMTExaWlpaSAuIE9vb29vb29vT08KIGlmIG5vdCBvT08wT29vbyA6CiAgb09PME9vb28gPSBjb29raWVsaWIgLiBMV1BDb29raWVKYXIgKCApCiByZXR1cm4gb09PME9vb28KIGlmIDMyIC0gMzI6IGkxMWlJaWlJaWkKZGVmIG8wT08wbyAoICkgOgogb09PME9vb28gPSBjb29raWVsaWIgLiBMV1BDb29raWVKYXIgKCApCiB0cnkgOgogIGlmIDI1IC0gMjU6IElJMTExaWlpaSAvIElJMTFpaUlJICsgT29PME8wMCAtIGlJaWkxSTExSTFJSTEgLSBvT28wTzBPb28KICBPbzBvT09vID0gImh0dHBzOi8vdHZwbGF5ZXIuY29tL2FjY291bnQiCiAgSWlvMG8wbyA9IG9vTzAwb09vbyAuIGdldFNldHRpbmcgKCAidHZwdXNlcm5hbWUiICkKICBpZiBJaW8wbzBvID09ICIiIDogcmV0dXJuIEZhbHNlICwgb09PME9vb28KICBJSUlJSTExSUlpID0gb29PMDBvT29vIC4gZ2V0U2V0dGluZyAoICJ0dnBwd2QiICkKICBPT29vME9vT29vbyA9IG9vTzAwb09vbyAuIGdldFNldHRpbmcgKCAibGFzdHR2cHVzZXJuYW1lIiApCiAgT29Pb08wMDBPME8gPSBvb08wMG9Pb28gLiBnZXRTZXR0aW5nICggImxhc3R0dnBwd2QiICkKICBvT08wT29vbyA9IElpSUlJSWlpSUlJaWkgKCBPT29vME9vT29vbyAhPSBJaW8wbzBvIG9yIE9vT29PMDAwTzBPICE9IElJSUlJMTFJSWkgKQogIG8wb08wb09PT28gPSBpMWlpSTExSSAoIE9vMG9PT28gLCBjb29raWVKYXIgPSBvT08wT29vbyApCiAgaWYgMTAwIC0gMTAwOiBPbyArIG8wb28wbwogIGlmIDQ5IC0gNDk6IG9vICUgaWlpaUlpMTFpICUgSUkxMTFpaWlpICogSUkxMTFpaWlpICsgT29vb29vb29PTyArIGkxSTFpaTFJSTFpSUkKICBpZiAnTG9naW4gdG8gVFZQbGF5ZXInIGluIG8wb08wb09PT28gOgogICBpaUkxSUlJaSA9IHVybGxpYiAuIHVucXVvdGUgKCByZSAuIGZpbmRhbGwgKCAnbmFtZT0idG9rZW4iIHZhbHVlPSIoLio/KSInICwgbzBvTzBvT09PbyApIFsgMCBdICkKICAgcHJpbnQgJ0xPR0lOIE5PVycKICAgT28wb09PbyA9ICJodHRwczovL3R2cGxheWVyLmNvbS9hY2NvdW50L2xvZ2luIgogICBpMWlpMTExMWkxaSA9IFsgKCAnUmVmZXJlcicgLCAiaHR0cHM6Ly90dnBsYXllci5jb20vYWNjb3VudC9sb2dpbiIgKSAsICggJ1VzZXItQWdlbnQnICwgJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS80OC4wLjI1NjQuMTE2IFNhZmFyaS81MzcuMzYnICkgLCAoICdPcmlnaW4nICwgJ2h0dHBzOi8vdHZwbGF5ZXIuY29tJyApIF0KICAgb28wT09vT29vME8wTyA9IHsgJ2VtYWlsJyA6IElpbzBvMG8gLCAncGFzc3dvcmQnIDogSUlJSUkxMUlJaSAsICd0b2tlbicgOiBpaUkxSUlJaSB9CiAgIG9vME9Pb09vbzBPME8gPSB1cmxsaWIgLiB1cmxlbmNvZGUgKCBvbzBPT29Pb28wTzBPICkKICAgbzBvTzBvT09PbyA9IGkxaWlJMTFJICggT28wb09PbyAsIGNvb2tpZUphciA9IG9PTzBPb29vICwgcG9zdCA9IG9vME9Pb09vbzBPME8gLCBoZWFkZXJzID0gaTFpaTExMTFpMWkgKQogICBvT08wT29vbyAuIHNhdmUgKCBJaUlJSWlJMUkxICwgaWdub3JlX2Rpc2NhcmQgPSBUcnVlICkKICAgb29PMDBvT29vIC4gc2V0U2V0dGluZyAoIGlkID0gImxhc3R0dnB1c2VybmFtZSIgLCB2YWx1ZSA9IElpbzBvMG8gKQogICBvb08wMG9Pb28gLiBzZXRTZXR0aW5nICggaWQgPSAibGFzdHR2cHB3ZCIgLCB2YWx1ZSA9IElJSUlJMTFJSWkgKQogICBpZiA1OCAtIDU4OiBpMTFpSWlpSWlpICUgaUlpaTFJMTFJMUlJMSArIG9vT08wMG9PbyAuIG9Pb08wb28wT09PbyAuIG9vCiAgcmV0dXJuIG5vdCAnPkxvZ2luPC9hPicgaW4gbzBvTzBvT09PbyAsIG9PTzBPb29vCiBleGNlcHQgOgogIHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogcmV0dXJuIEZhbHNlICwgb09PME9vb28KIGlmIDU0IC0gNTQ6IGkxSTFpaTFJSTFpSUkgLiBvb09PMDBvT28gLiBpSWlpMUkxMUkxSUkxCmRlZiBpSTFJMWkxMWkxICggdXJsICkgOgogaW1wb3J0IHJlICwgdXJsbGliICwganNvbgogSTEgPSB4Ym1jZ3VpIC4gTGlzdEl0ZW0gKCBsYWJlbCA9IHN0ciAoIG9PMDBvT09vb29PICkgLCBpY29uSW1hZ2UgPSAiRGVmYXVsdFZpZGVvLnBuZyIgLCB0aHVtYm5haWxJbWFnZSA9IHhibWMgLiBnZXRJbmZvSW1hZ2UgKCAiTGlzdEl0ZW0uVGh1bWIiICkgKQogaWYgNDUgLSA0NTogb09vTzBvbzBPT09vICsgb28gLyBpMTFpSWlpSWlpCiBJaUkxaWkxaWkgPSAnJwogdHJ5IDoKICBJMTFpSSAsIElpMTFJSTExaTEgPSBvME9PMG8gKCApCiAgb08wT09PT28gPSBpMWlpSTExSSAoIHVybCAsIGNvb2tpZUphciA9IElpMTFJSTExaTEgKQogIEkxaTFpSUkxMSA9IHJlIC4gZmluZGFsbCAoICdkYXRhLXJlc291cmNlPSIoLio/KSInICwgb08wT09PT28gKSBbIDAgXQogIGlmIDcwIC0gNzA6IG8wb28wbyAuIE9vT08wb29PT29vME8gKiBvb29PMG9vMG9PT09PICsgb29vTzBvbzBvT09PTyArIElJMTExaWlpaQogIGlpSTFJSUlpID0gJ251bGwnCiAgdHJ5IDoKICAgaWlJMUlJSWkgPSByZSAuIGZpbmRhbGwgKCAnZGF0YS10b2tlbj0iKC4qPykiJyAsIG9PME9PT09vICkgWyAwIF0KICBleGNlcHQgOiBwYXNzCiAgaWYgNjYgLSA2NjogaWlpaUlpMTFpIC8gTzAgLSBvT28wTzBPb28KICBPb29PMG9vTzBvME9PID0gaTFpaUkxMUkgKCAiaHR0cHM6Ly90dnBsYXllci5jb20vd2F0Y2gvY29udGV4dD9yZXNvdXJjZT0lcyZub25jZT0lcyIgJSAoIEkxaTFpSUkxMSAsIGlpSTFJSUlpICkgLCBjb29raWVKYXIgPSBJaTExSUkxMWkxICkKICBPb29PMG9vTzBvME9PID0ganNvbiAuIGxvYWRzICggT29vTzBvb08wbzBPTyApCiAgb08wME9vb28wbzAgPSBPb29PMG9vTzBvME9PIFsgInZhbGlkYXRlIiBdCiAgaWYgODUgLSA4NTogT29vMDBvT28wMG8gJSBJSTExMWlpaWkgLSBJSTExMWlpaWkgKyBPb28wMG9PbzAwbyAqIG8wMDAwb09vT29PMG8gLyBvb09PMDBvT28KICBPME9PID0gdXJsbGliIC4gdXJsZW5jb2RlICggeyAnc2VydmljZScgOiAnMScgLCAncGxhdGZvcm0nIDogJ2Nocm9tZScgLCAndmFsaWRhdGUnIDogb08wME9vb28wbzAgLCAnaWQnIDogSTFpMWlJSTExIH0gKQogIGkxaWkxMTExaTFpID0gWyAoICdSZWZlcmVyJyAsICdodHRwczovL3R2cGxheWVyLmNvbS93YXRjaC8nICkgLCAoICdPcmlnaW4nICwgJ2h0dHA6Ly90dnBsYXllci5jb20nICkgLCAoICdVc2VyLUFnZW50JyAsICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTIuMC4yNzQzLjExNiBTYWZhcmkvNTM3LjM2JyApIF0KICBJMUlJMUkxSTFJID0gaTFpaUkxMUkgKCAiaHR0cDovL2FwaS50dnBsYXllci5jb20vYXBpL3YyL3N0cmVhbS9saXZlIiAsIHBvc3QgPSBPME9PICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICwgY29va2llSmFyID0gSWkxMUlJMTFpMSApIDsKICBvbzBPMG8gPSBqc29uIC4gbG9hZHMgKCBJMUlJMUkxSTFJICkKICBpZiAyNiAtIDI2OiBvb29PMG9vMG9PT09PICogaTExaUlpaUlpaSAtIG8wb28wbyAqIE9vT08wb29PT29vME8gLyBvb29PMG9vMG9PT09PIC4gaUlpaTFJMTFJMUlJMQogIGlmIDYzIC0gNjM6IG9Pb08wb28wT09PbyAuIGkxMWlJaWlJaWkgLyBvb29PMG9vMG9PT09PIC0gaUlpaTFJMTFJMUlJMSAuIG9vCiAgaUkxMWkxaUlJSTEgPSBvbzBPMG8gWyAidHZwbGF5ZXIiIF0gWyAicmVzcG9uc2UiIF0gWyAic3RyZWFtIiBdCiAgaWlpMUkxMWkgPSBpMWlpSTExSSAoIGlJMTFpMWlJSUkxICwgaGVhZGVycyA9IGkxaWkxMTExaTFpICwgY29va2llSmFyID0gSWkxMUlJMTFpMSApIDsKICBpZiA2NCAtIDY0OiBPb28wMG9PbzAwbwogIElpSTFpaTFpaSA9IGlJMTFpMWlJSUkxICsgJ3xDb29raWU9JXMmVXNlci1BZ2VudD1Nb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTIuMC4yNzQzLjExNiBTYWZhcmkvNTM3LjM2JlgtUmVxdWVzdGVkLVdpdGg9U2hvY2t3YXZlRmxhc2gvMjIuMC4wLjIwOSZSZWZlcmVyPWh0dHBzOi8vdHZwbGF5ZXIuY29tL3dhdGNoLycgJSBJSWkxSUkgKCBJaTExSUkxMWkxICkKICBpZiAyMiAtIDIyOiBPb28wMG9PbzAwbyAvIE9vb29vb29vT08KIGV4Y2VwdCA6CiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgSWlJMWlpMWlpID0gJycKIGlmIElpSTFpaTFpaSA9PSAnJyBvciBub3QgSUkxMTExMWkgKCBJaUkxaWkxaWkgKyAnfENvb2tpZT0lcyZVc2VyLUFnZW50PU1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81Mi4wLjI3NDMuMTE2IFNhZmFyaS81MzcuMzYmWC1SZXF1ZXN0ZWQtV2l0aD1TaG9ja3dhdmVGbGFzaC8yMi4wLjAuMjA5JlJlZmVyZXI9aHR0cHM6Ly90dnBsYXllci5jb20vd2F0Y2gvJyAlIElJaTFJSSAoIElpMTFJSTExaTEgKSAsIEkxICkgOgogIG9Pb29vME9vbzBvMDAgKCB1cmwgKQogcmV0dXJuCiBpZiA2NiAtIDY2OiBJSTExaWlJSSAtIGkxSUlpIC0gT29PTzBvb09Pb28wTwpkZWYgb09vb28wT29vMG8wMCAoIHVybCApIDoKIGltcG9ydCByZSAsIHVybGxpYiAsIGpzb24KIG9PME9PT09vID0gaTFpaUkxMUkgKCB1cmwgLiByZXBsYWNlICggJy93YXRjaC8nICwgJy93YXRjaC9mYWxsYmFjay8nICkgKQogSTFpMWlJSTExID0gcmUgLiBmaW5kYWxsICggJ3ZhciBpbml0aWFsQ2hhbm5lbElkID0gIiguKj8pIicgLCBvTzBPT09PbyApIFsgMCBdCiBPTzBvT29PME8wID0gdXJsbGliIC4gdW5xdW90ZSAoIHJlIC4gZmluZGFsbCAoICdoYXNoID0gIiguKj8pIicgLCBvTzBPT09PbyApIFsgMCBdICkKIGlJMUlJaUkxID0gcmUgLiBmaW5kYWxsICggJ2V4cCA9ICIoLio/KSInICwgb08wT09PT28gKSBbIDAgXQogaUlJaWkxMTFpMSA9IEkxb28wTzBPb28wTzAwICggaUkxSUlpSTEgKQogSWkxMUlJMTFpMSA9IGNvb2tpZWxpYiAuIExXUENvb2tpZUphciAoICkKIE8wT08gPSB1cmxsaWIgLiB1cmxlbmNvZGUgKCB7ICdpZCcgOiBJMWkxaUlJMTEgfSApCiBpMWlpMTExMWkxaSA9IFsgKCAnVG9rZW4tRXhwaXJ5JyAsIGlJMUlJaUkxICkgLCAoICdIYXNoJyAsIE9PMG9Pb08wTzAgKSAsICggJ0tleScgLCBpSUlpaTExMWkxICkgLCAoICdSZWZlcmVyJyAsICdodHRwOi8vYXNzZXRzLnR2cGxheWVyLmNvbS93ZWIvZmxhc2gvdHZwbGF5ZXIvVFZQbGF5ZXItREZQLTMuc3dmJyApICwgKCAnWC1SZXF1ZXN0ZWQtV2l0aCcgLCAnU2hvY2t3YXZlRmxhc2gvMjIuMC4wLjIwOScgKSBdCiBJMUlJMUkxSTFJID0gaTFpaUkxMUkgKCAiaHR0cDovL2xpdmUudHZwbGF5ZXIuY29tL3N0cmVhbS13ZWItZW5jcnlwdGVkLnBocCIgLCBwb3N0ID0gTzBPTyAsIGhlYWRlcnMgPSBpMWlpMTExMWkxaSAsIGNvb2tpZUphciA9IElpMTFJSTExaTEgKSA7CiBvbzBPMG8gPSBqc29uIC4gbG9hZHMgKCBJMUlJMUkxSTFJICkKIGlmIDIxIC0gMjE6IE9vbzAwb09vMDBvICsgb09vTzBvbzBPT09vCiBJaUkxaWkxaWkgPSBvbzBPMG8gWyAidHZwbGF5ZXIiIF0gWyAicmVzcG9uc2UiIF0gWyAic3RyZWFtIiBdCiBJMSA9IHhibWNndWkgLiBMaXN0SXRlbSAoIGxhYmVsID0gc3RyICggb08wMG9PT29vb08gKSAsIGljb25JbWFnZSA9ICJEZWZhdWx0VmlkZW8ucG5nIiAsIHRodW1ibmFpbEltYWdlID0geGJtYyAuIGdldEluZm9JbWFnZSAoICJMaXN0SXRlbS5UaHVtYiIgKSApCiBpZiA0MyAtIDQzOiBPb08wTzAwIC4gaTFJSWkgKyBpMUlJaQogcmV0dXJuIElJMTExMTFpICggSWlJMWlpMWlpICsgJ3xDb29raWU9JXMmVXNlci1BZ2VudD1Nb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTIuMC4yNzQzLjExNiBTYWZhcmkvNTM3LjM2JlgtUmVxdWVzdGVkLVdpdGg9U2hvY2t3YXZlRmxhc2gvMjIuMC4wLjIwOSZSZWZlcmVyPWh0dHBzOi8vdHZwbGF5ZXIuY29tL3dhdGNoLycgJSBJSWkxSUkgKCBJaTExSUkxMWkxICkgLCBJMSApCiBpZiA2NiAtIDY2OiBJSTExMWlpaWkgLSBJSTExaWlJSSArIG8wb28wbyAuIG9vICUgaTExaUlpaUlpaQogaWYgNjkgLSA2OTogb29PTzAwb09vIC8gaWlpaUlpMTFpIC0gaTFJMWlpMUlJMWlJSSAvIG8wMDAwb09vT29PMG8KZGVmIGlpMTFpSUlpaUkxSSAoIHVybCAsIGxvYWRlZExpbmsgPSBOb25lICkgOgogZ2xvYmFsIEkxaWlpaWlJSTFJMUkKIGlmIDEgLSAxOiBPb29vb29vb09PICsgT29vb29vb29PTyAlIG9vT08wMG9PbyAlIGlpaWlJaTExaSAtIElJMTExaWlpaQogT09vT08wb28wb29PID0gbG9hZGVkTGluawogaWYgbm90IGxvYWRlZExpbmsgOgogIE9vME9vTzAwb09PMG8gPSB1cmxsaWIyIC4gUmVxdWVzdCAoIHVybCApCiAgT28wT29PMDBvT08wbyAuIGFkZF9oZWFkZXIgKCAnVXNlci1BZ2VudCcgLCAnTW96aWxsYS81LjAoaVBhZDsgVTsgQ1BVIGlQaG9uZSBPUyAzXzIgbGlrZSBNYWMgT1MgWDsgZW4tdXMpIEFwcGxlV2ViS2l0LzUzMS4yMS4xMCAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wLjQgTW9iaWxlLzdCMzE0IFNhZmFyaS81MzEuMjEuMTAnICkKICBPT08wME8gPSB1cmxsaWIyIC4gdXJsb3BlbiAoIE9vME9vTzAwb09PMG8gKQogIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiAgT09PMDBPIC4gY2xvc2UgKCApCiBpaWkxSWlpaTFJID0gWyBdCiBPb09PbzBvb09vb29PID0gcmUgLiBmaW5kYWxsICggJ3NyYz0iLio/KHBsYXl3aXJlKS4qP2RhdGEtcHVibGlzaGVyLWlkPSIoLio/KSJccypkYXRhLXZpZGVvLWlkPSIoLio/KSInICwgT09vT08wb28wb29PICkKIGlmIDIwIC0gMjA6IG9Pb08wb28wT09PbyAtIG9vb08wb28wb09PT08gKyBpaWlpSWkxMWkgKiBpMUlJaSAlIGkxSTFpaTFJSTFpSUkgKiBPbwogaWYgbm90IGxlbiAoIE9vT09vMG9vT29vb08gKSA9PSAwIDoKICBpaWkxSWlpaTFJIC4gYXBwZW5kICggJ1BsYXl3aXJlIFNvdXJjZScgKQogIGlmIDgwIC0gODA6IE9vICogb29vTzBvbzBvT09PTyAuIE9vbzAwb09vMDBvCiBPb09PbzBvb09vb29PID0gcmUgLiBmaW5kYWxsICggJ2RhdGEtY29uZmlnPSIoLio/Y29uZmlnLnBsYXl3aXJlLmNvbS4qPykiJyAsIE9Pb09PMG9vMG9vTyApCiBpZiAxNSAtIDE1OiBPb09PMG9vT09vbzBPCiBpZiBub3QgbGVuICggT29PT28wb29Pb29vTyApID09IDAgOgogIGlpaTFJaWlpMUkgLiBhcHBlbmQgKCAnUGxheXdpcmUgU291cmNlJyApCiAgaWYgNjYgLSA2NjogbzAwMDBvT29Pb08wbyAvIG9vT08wMG9PbyAuIE8wIC4gT29PTzBvb09Pb28wTyAlIE9vb29vb29vT08gLyBJSTExaWlJSQogT29PT28wb29Pb29vTyA9IHJlIC4gZmluZGFsbCAoICdzcmM9WyJcJ10oLio/ZWJvdW5kXFwudHYuKj8pWyJcJ10nICwgT09vT08wb28wb29PICkKIGlmIDQ5IC0gNDk6IG9vICogaTFJMWlpMUlJMWlJSSAtIG9vT08wMG9PbyAlIG8wMDAwb09vT29PMG8gKyBvMDAwMG9Pb09vTzBvICogbzBvbzBvCiBpZiBub3QgbGVuICggT29PT28wb29Pb29vTyApID09IDAgOgogIGlpaTFJaWlpMUkgLiBhcHBlbmQgKCAnRWJvdW5kIFNvdXJjZScgKQogZWxzZSA6CiAgT29PT28wb29Pb29vTyA9IHJlIC4gZmluZGFsbCAoICdzcmM9WyJcJ10oLio/cG9vdmVlXC5uZXQuKj8pWyJcJ10nICwgT09vT08wb28wb29PICkKICBpZiBub3QgbGVuICggT29PT28wb29Pb29vTyApID09IDAgOgogICBpaWkxSWlpaTFJIC4gYXBwZW5kICggJ0Vib3VuZCBTb3VyY2UnICkKICAgaWYgOTQgLSA5NDogb09vME8wT29vIC0gT29PTzBvb09Pb28wTyArIG8wMDAwb09vT29PMG8gKyBvT28wTzBPb28gKyBJSTExMWlpaWkKIE9vT09vMG9vT29vb08gPSBJMTExMUkxaUlJMTEgPSByZSAuIGZpbmRhbGwgKCAnc3JjPVsiXCddKC4qPyhkYWlseW1vdGlvbikuKj8pWyJcJ10nICwgT09vT08wb28wb29PICkKIGlmIG5vdCBsZW4gKCBPb09PbzBvb09vb29PICkgPT0gMCA6CiAgaWlpMUlpaWkxSSAuIGFwcGVuZCAoICdEYWlseSBNb3Rpb24gU291cmNlJyApCiAgaWYgNjEgLSA2MTogb29vTzBvbzBvT09PTyArIG8wMDAwb09vT29PMG8gLyBpaWlpSWkxMWkgLiBPb29vb29vb09PICsgaTFJMWlpMUlJMWlJSQogT29PT28wb29Pb29vTyA9IEkxMTExSTFpSUkxMSA9IHJlIC4gZmluZGFsbCAoICdzcmM9WyJcJ10oLio/KHZpZHJhaWxcLmNvbSkuKj8pWyJcJ10nICwgT09vT08wb28wb29PICkKIGlmIG5vdCBsZW4gKCBPb09PbzBvb09vb29PICkgPT0gMCA6CiAgaWlpMUlpaWkxSSAuIGFwcGVuZCAoICdWaWRyYWlsIFNvdXJjZScgKQogIGlmIDI5IC0gMjk6IElJMTFpaUlJCiBPb09PbzBvb09vb29PID0gSTExMTFJMWlJSTExID0gcmUgLiBmaW5kYWxsICggJ3NyYz1bXCciXSguKj8odHVuZVwucGspLio/KVtcJyJdJyAsIE9Pb09PMG9vMG9vTyApCiBpZiBub3QgbGVuICggT29PT28wb29Pb29vTyApID09IDAgOgogIGlpaTFJaWlpMUkgLiBhcHBlbmQgKCAnTGluayBTb3VyY2UnICkKICBpZiA2OSAtIDY5OiBpaWlpSWkxMWkgJSBPb29vb29vb09PICogaTFJMWlpMUlJMWlJSQogIGlmIDU4IC0gNTg6IGlpaWlJaTExaSAvIGkxMWlJaWlJaWkgLiBvT28wTzBPb28gJSBPMCAvIGlJaWkxSTExSTFJSTEKIE9vT09vMG9vT29vb08gPSBJMTExMUkxaUlJMTEgPSByZSAuIGZpbmRhbGwgKCAnPGlmcmFtZS4qP3NyYz1cIi4qP3lvdXR1YmUuKj9lbWJlZFwvKC4qPylcIicgLCBPT29PTzBvbzBvb08gLCByZSAuIERPVEFMTCB8IHJlIC4gSUdOT1JFQ0FTRSApCiBpZiA1MCAtIDUwOiBvMG9vMG8gLiBPb09PMG9vT09vbzBPIC8gTzAgLiBPb09PMG9vT09vbzBPCiBpZiBub3QgbGVuICggT29PT28wb29Pb29vTyApID09IDAgOgogIGlpaTFJaWlpMUkgLiBhcHBlbmQgKCAnWW91dHViZSBTb3VyY2UnICkKICBpZiA5MSAtIDkxOiBpMTFpSWlpSWlpIC4gb09vTzBvbzBPT09vICsgT29PTzBvb09Pb28wTwogaWYgbGVuICggaWlpMUlpaWkxSSApID4gMCA6CiAgaWYgbGVuICggaWlpMUlpaWkxSSApID09IDEgOgogICBJMWlpaWlpSUkxSTFJID0gaWlpMUlpaWkxSSBbIDAgXSAuIHJlcGxhY2UgKCAnIFNvdXJjZScgLCAnJyApIC4gcmVwbGFjZSAoICdEYWlseSBNb3Rpb24nICwgJ0RNJyApIC4gdXBwZXIgKCApCiAgIG9vME9vMDAwICggdXJsICwgcmVkaXJlY3QgPSBGYWxzZSApIDsKICBlbHNlIDoKICAgbzBvTyA9IHhibWNndWkgLiBEaWFsb2cgKCApCiAgIG8wb29vMDBvID0gbzBvTyAuIHNlbGVjdCAoICdDaG9vc2UgeW91ciBzdHJlYW0nICwgaWlpMUlpaWkxSSApCiAgIGlmIG8wb29vMDBvID4gLSAxIDoKICAgIEkxaWlpaWlJSTFJMUkgPSBpaWkxSWlpaTFJIFsgbzBvb28wMG8gXSAuIHJlcGxhY2UgKCAnIFNvdXJjZScgLCAnJyApIC4gcmVwbGFjZSAoICdEYWlseSBNb3Rpb24nICwgJ0RNJyApIC4gdXBwZXIgKCApCiAgICBpZiA2NyAtIDY3OiBvT29PMG9vME9PT28gKiBvMG9vMG8gKiBvbyAvIE9vT08wb29PT29vME8gLSBvb29PMG9vMG9PT09PICsgaWlpaUlpMTFpCiAgICBvbzBPbzAwMCAoIHVybCApIDsKZGVmIElpaWkxSUkgKCBsc3QgLCBrZXkgLCB2YWx1ZSApIDoKIGZvciBPME9Pb08wME9PMG8gLCBPb28wbzBPb09PIGluIGVudW1lcmF0ZSAoIGxzdCApIDoKICBpZiBPb28wbzBPb09PIFsga2V5IF0gPT0gdmFsdWUgOgogICByZXR1cm4gT29vMG8wT29PTwogcmV0dXJuIE5vbmUKZGVmIElpMTFpICggdXJsICkgOgogT28wbzBvb29vME8wID0geGJtY2d1aSAuIERpYWxvZ1Byb2dyZXNzICggKQogT28wbzBvb29vME8wIC4gY3JlYXRlICggJ1Byb2dyZXNzJyAsICdGZXRjaGluZyBTdHJlYW1pbmcgSW5mbycgKQogT28wbzBvb29vME8wIC4gdXBkYXRlICggMTAgLCAiIiAsICJGaW5kaW5nIGxpbmtzLi4iICwgIiIgKQogaWYgMTUgLSAxNTogT29vMDBvT28wMG8gLyBvb29PMG9vMG9PT09PIC8gT28gKiBvT28wTzBPb28KIE9vME9vTzAwb09PMG8gPSB1cmxsaWIyIC4gUmVxdWVzdCAoIHVybCApCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoICdSZWZlcmVyJyAsIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0RvdkwyOXlhV2RwYmk1a2FYUjBiM1IyTG1OdmJTOD0nICkgKQogT28wT29PMDBvT08wbyAuIGFkZF9oZWFkZXIgKCAnVXNlci1BZ2VudCcgLCAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzQ3LjAuMjUyNi4xMTEgU2FmYXJpLzUzNy4zNicgKQogT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICkKIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiBPT08wME8gLiBjbG9zZSAoICkKIGlmIDEzIC0gMTM6IGkxSTFpaTFJSTFpSUkKIE9vT29vMDBvTyA9ICd3aW5kb3cucGxfZGF0YSA9IChcey4qPyJrZXkiOi4qP1x9XH0pJwogaWYgNTYgLSA1NjogaUlpaTFJMTFJMUlJMSAvIG9vT08wMG9PbyAqIElJMTFpaUlJCiBPMDBvME8wMCA9IHVybCAuIHNwbGl0ICggJy8nICkgWyAtIDEgXQogT29vMDAwTzAwbyA9IHJlIC4gZmluZGFsbCAoIE9vT29vMDBvTyAsIE9Pb09PMG9vMG9vTyApIFsgMCBdCiBpZiAyIC0gMjogaTExaUlpaUlpaSAuIGkxSTFpaTFJSTFpSUkgLiBPMCAtIGlJaWkxSTExSTFJSTEgKyBvMG9vMG8gLiBvb29PMG9vMG9PT09PCiBpZiA1NCAtIDU0OiBPb28wMG9PbzAwbwogT28wbzBvb29vME8wIC4gdXBkYXRlICggNTAgLCAiIiAsICJGaW5kaW5nIGxpbmtzLi4iICwgIiIgKQogdHJ5IDoKICBpZiA5OSAtIDk5OiBJSTExMWlpaWkgJSBvbwogIGlmIDg5IC0gODk6IElJMTFpaUlJIC8gaTFJSWkgLSBPb09PMG9vT09vbzBPICogaWlpaUlpMTFpCiAgT29vMDAwTzAwbyA9IE9vbzAwME8wMG8gLiByZXBsYWNlICggJ251bGwnICwgJ05vbmUnICkKICBPb28wMDBPMDBvID0gT29vMDAwTzAwbyAuIHJlcGxhY2UgKCAnZmFsc2UnICwgJ0ZhbHNlJyApCiAgT29vMDAwTzAwbyA9IE9vbzAwME8wMG8gLiByZXBsYWNlICggJ3RydWUnICwgJ1RydWUnICkKICBPb28wMDBPMDBvID0gZXZhbCAoIE9vbzAwME8wMG8gKQogIGlmIDQyIC0gNDI6IG8wMDAwb09vT29PMG8KICBJSTFpaUlJSTEgPSBJaWlpMUlJICggT29vMDAwTzAwbyBbICJsaXZlIiBdIFsgImNoYW5uZWxfbGlzdCIgXSAsICd2aWRlb2lkJyAsIE8wMG8wTzAwICkKICBpZiA3NyAtIDc3OiBJSTExaWlJSSArIElJMTExaWlpaQogIHVybCA9IElJMWlpSUlJMSBbICJmaWxlIiBdCiAgaWYgbm90ICggdXJsIC4gc3RhcnRzd2l0aCAoICdodHRwJyApIG9yIHVybCAuIHN0YXJ0c3dpdGggKCAncnRtcCcgKSApIDoKICAgaW1wb3J0IHB5YWVzCiAgIHVybCA9IHVybCAuIGRlY29kZSAoICJiYXNlNjQiICkKICAgSWlJMWlpaUlpaSA9IE9vbzAwME8wMG8gWyAibGl2ZSIgXSBbICJrZXkiIF0gLiBkZWNvZGUgKCAiYmFzZTY0IiApCiAgIGlmIDQ2IC0gNDY6IG9vCiAgIG8wb09PbzBvME8wID0gcHlhZXMgLiBuZXcgKCBJaUkxaWlpSWlpICwgcHlhZXMgLiBNT0RFX0NCQyAsIElWID0gJ1wwJyAqIDE2ICkKICAgdXJsID0gbzBvT09vMG8wTzAgLiBkZWNyeXB0ICggdXJsICkgLiByZXBsYWNlICggJ1x4MDAnICwgJycgKSAuIHNwbGl0ICggJ1wwJyApIFsgMCBdCiAgIHVybCA9IHJlIC4gc3ViICggJ1teXHMhLX5dJyAsICcnICwgdXJsICkKICAgcHJpbnQgdXJsCiAgIE9vTzAwID0gdXJsICsgJ3xVc2VyLUFnZW50PU1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81MS4wLjI3MDQuMTAzIFNhZmFyaS81MzcuMzYmUmVmZXJlcj1odHRwOi8vb3JpZ2luLmRpdHRvdHYuY29tL2xpdmV0di96ZWUtdHYtdWsnCiAgIGlmIDE0IC0gMTQ6IE9vIC8gT29PME8wMCAlIGkxMWlJaWlJaWkKICAgaWYgNzMgLSA3Mzogb09vME8wT29vICsgT29vMDBvT28wMG8gKiBvT28wTzBPb28KICAgaWYgODcgLSA4NzogT29vMDBvT28wMG8KIGV4Y2VwdCA6CiAgdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCiAgaWYgODIgLSA4Mjogb29PTzAwb09vICogT29vMDBvT28wMG8KICBpZiA2NyAtIDY3OiBJSTExaWlJSSAuIG8wMDAwb09vT29PMG8gKiBPb29vb29vb09PCiAgaWYgOTMgLSA5Mzogb29PTzAwb09vIC4gb29PTzAwb09vCiBPbzBvMG9vb28wTzAgLiB1cGRhdGUgKCAxMDAgLCAiIiAsICJBbG1vc3QgZG9uZS4uIiAsICIiICkKIEkxID0geGJtY2d1aSAuIExpc3RJdGVtICggbGFiZWwgPSBzdHIgKCBvTzAwb09Pb29vTyApICwgaWNvbkltYWdlID0gIkRlZmF1bHRWaWRlby5wbmciICwgdGh1bWJuYWlsSW1hZ2UgPSB4Ym1jIC4gZ2V0SW5mb0ltYWdlICggIkxpc3RJdGVtLlRodW1iIiApICkKIHhibWMgLiBQbGF5ZXIgKCApIC4gcGxheSAoIE9vTzAwICwgSTEgKQogcmV0dXJuCmRlZiBPME9PMG9Pb29vMCAoIHVybCApIDoKIE9vMG8wb29vbzBPMCA9IHhibWNndWkgLiBEaWFsb2dQcm9ncmVzcyAoICkKIE9vMG8wb29vbzBPMCAuIGNyZWF0ZSAoICdQcm9ncmVzcycgLCAnRmV0Y2hpbmcgU3RyZWFtaW5nIEluZm8nICkKIE9vMG8wb29vbzBPMCAuIHVwZGF0ZSAoIDEwICwgIiIgLCAiRmluZGluZyBsaW5rcy4uIiAsICIiICkKIGlmIDUyIC0gNTI6IElJMTFpaUlJIC4gaWlpaUlpMTFpIC8gT29PME8wMCAuIE9vb29vb29vT08gJSBvT29PMG9vME9PT28KIHRyeSA6CiAgaWYgNjUgLSA2NTogT28gJSBJSTExMWlpaWkgLiBpMUkxaWkxSUkxaUlJIC0gaUlpaTFJMTFJMUlJMSAtIG9vCiAgT09vb09PMDAwID0gdXJsbGliMiAuIGJ1aWxkX29wZW5lciAoIG9PbzAwT28wME8gKQogIE9Pb29PTzAwMCAuIGFkZGhlYWRlcnMgPSBbICggJ1VzZXItYWdlbnQnICwgJ01vemlsbGEvNS4wKGlQYWQ7IFU7IENQVSBpUGhvbmUgT1MgM18yIGxpa2UgTWFjIE9TIFg7IGVuLXVzKSBBcHBsZVdlYktpdC81MzEuMjEuMTAgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMC40IE1vYmlsZS83QjMxNCBTYWZhcmkvNTMxLjIxLjEwJyApIF0KICBPT08wME8gPSBPT29vT08wMDAgLiBvcGVuICggJ2h0dHBzOi8vY2luZWZ1bnR2LmNvbS93YXRjaG5vdy5waHA/Y29udGVudD0nICsgdXJsICkKICBvME8wb29vb29vbzAwID0gT09PMDBPIC4gcmVhZCAoICkgOwogIGlmIDYzIC0gNjM6IG9vIC4gb09vME8wT29vIC0gSUkxMTFpaWlpCiAgT29PMDAgPSByZSAuIGZpbmRhbGwgKCAndmFyIGNtc191cmwgPSBbXCciXSguKj8pW1wnIl0nICwgbzBPMG9vb29vb28wMCApIFsgMCBdICsgJ3xVc2VyLUFnZW50PU1vemlsbGEvNS4wKGlQYWQ7IFU7IENQVSBpUGhvbmUgT1MgM18yIGxpa2UgTWFjIE9TIFg7IGVuLXVzKSBBcHBsZVdlYktpdC81MzEuMjEuMTAgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMC40IE1vYmlsZS83QjMxNCBTYWZhcmkvNTMxLjIxLjEwJwogZXhjZXB0IDoKICB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKICBPb08wMCA9ICcnCiAgaWYgNTUgLSA1NTogT28gLSBPb28wMG9PbzAwbwogaWYgT29PMDAgPT0gJycgOgogIE9vME9vTzAwb09PMG8gPSB1cmxsaWIyIC4gUmVxdWVzdCAoIGJhc2U2NCAuIGI2NGRlY29kZSAoICdhSFIwY0hNNkx5OWphVzVsWm5WdWRIWXVZMjl0TDNOdGRHRnNibU12WTI5dWRHVnVkQzV3YUhBL1kyMWtQV1JsZEdGcGJITW1RQ1prWlhacFkyVTlhVzl6Sm5abGNuTnBiMjQ5TUNaamIyNTBaVzUwYVdROUpYTW1jMmxrUFNaMVBXdDNjRE13Tmpjd1FISmpZWE5rTG1OdmJRPT0nICkgJSB1cmwgKQogIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ1VzZXItQWdlbnQnICwgYmFzZTY0IC4gYjY0ZGVjb2RlICggJ1EwWlZUbFJXTHpNdU1TQkRSazVsZEhkdmNtc3ZOelU0TGpBdU1pQkVZWEozYVc0dk1UVXVNQzR3JyApICkKICBPT08wME8gPSB1cmxsaWIyIC4gdXJsb3BlbiAoIE9vME9vTzAwb09PMG8gKQogIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiAgT09PMDBPIC4gY2xvc2UgKCApCiAgT28wbzBvb29vME8wIC4gdXBkYXRlICggNTAgLCAiIiAsICJGaW5kaW5nIGxpbmtzLi4iICwgIiIgKQogIGltcG9ydCBqc29uCiAgTzBPTyA9IGpzb24gLiBsb2FkcyAoIE9Pb09PMG9vMG9vTyApCiAgT29PMDAgPSAiIgogIGlmIDMyIC0gMzI6IG8wb28wbyAqIG8wMDAwb09vT29PMG8gLyBvMG9vMG8gLiBvT28wTzBPb28gKyBvT29PMG9vME9PT28gLSBPbwogIE9vTzAwID0gTzBPTyBbIDAgXSBbICJITFNVUkwiIF0KICBpZiBPb08wMCA9PSAiIiA6CiAgIE9vTzAwID0gTzBPTyBbIDAgXSBbICJTYW1zdW5nVVJMIiBdCiAgaWYgT29PMDAgPT0gIiIgOgogICBPb08wMCA9IE8wT08gWyAwIF0gWyAiUGFuYXNvbmljVVJMIiBdCiAgIGlmIDE0IC0gMTQ6IG9vb08wb28wb09PT08gKiBPMCArIE8wIC0gT28gLiBpMTFpSWlpSWlpIC0gb29vTzBvbzBvT09PTwogICBpZiAzNyAtIDM3OiBPb09PMG9vT09vbzBPCiAgT29PMDAgKz0gJ3xVc2VyLUFnZW50PUFwcGxlQ29yZU1lZGlhLzEuMC4wLjEzQTQ1MiAoaVBob25lOyBVOyBDUFUgT1MgOV8wXzIgbGlrZSBNYWMgT1MgWDsgZW5fZ2IpJwogIGlmIDE5IC0gMTk6IE9vb29vb29vT08gJSBvMG9vMG8KIE9vMG8wb29vbzBPMCAuIHVwZGF0ZSAoIDEwMCAsICIiICwgIkFsbW9zdCBkb25lLi4iICwgIiIgKQogSTEgPSB4Ym1jZ3VpIC4gTGlzdEl0ZW0gKCBsYWJlbCA9IHN0ciAoIG9PMDBvT09vb29PICkgLCBpY29uSW1hZ2UgPSAiRGVmYXVsdFZpZGVvLnBuZyIgLCB0aHVtYm5haWxJbWFnZSA9IHhibWMgLiBnZXRJbmZvSW1hZ2UgKCAiTGlzdEl0ZW0uVGh1bWIiICkgKQogeGJtYyAuIFBsYXllciAoICkgLiBwbGF5ICggT29PMDAgLCBJMSApCiByZXR1cm4KIGlmIDU3IC0gNTc6IG9PbzBPME9vbyArIGkxSUlpIC4gaUlpaTFJMTFJMUlJMSAuIGlJaWkxSTExSTFJSTEgLyBpSWlpMUkxMUkxSUkxICUgaWlpaUlpMTFpCmRlZiBJaWlJMUlJSTFpMUkgKCB1cmwgKSA6CiBpZiAyMiAtIDIyOiBvT29PMG9vME9PT28KIE9vMG8wb29vbzBPMCA9IHhibWNndWkgLiBEaWFsb2dQcm9ncmVzcyAoICkKIE9vMG8wb29vbzBPMCAuIGNyZWF0ZSAoICdQcm9ncmVzcycgLCAnRmV0Y2hpbmcgU3RyZWFtaW5nIEluZm8nICkKIE9vMG8wb29vbzBPMCAuIHVwZGF0ZSAoIDEwICwgIiIgLCAiRmluZGluZyBsaW5rcy4uIiAsICIiICkKIE9Pb09PMG9vMG9vTyA9IGkxaWlJMTFJICggJ2h0dHA6Ly9wb292ZWUubmV0L2VtYmVkLyVzLz9hdXRvcGxheT0wJyAlIHVybCApCiBPbzBvMG9vb28wTzAgLiB1cGRhdGUgKCA1MCAsICIiICwgIkZpbmRpbmcgbGlua3MuLiIgLCAiIiApCiB1cmwgPSByZSAuIGZpbmRhbGwgKCAndmlkZW9zcmMgOiIoLio/KSInICwgT09vT08wb28wb29PICkgWyAwIF0KIE9vTzAwID0gdXJsICsgJ3xVc2VyLUFnZW50PWlQaG9uZScKIE9vMG8wb29vbzBPMCAuIHVwZGF0ZSAoIDEwMCAsICIiICwgIkFsbW9zdCBkb25lLi4iICwgIiIgKQogT28wbzBvb29vME8wIC4gY2xvc2UgKCApCiBJMSA9IHhibWNndWkgLiBMaXN0SXRlbSAoIGxhYmVsID0gc3RyICggb08wMG9PT29vb08gKSAsIGljb25JbWFnZSA9ICJEZWZhdWx0VmlkZW8ucG5nIiAsIHRodW1ibmFpbEltYWdlID0geGJtYyAuIGdldEluZm9JbWFnZSAoICJMaXN0SXRlbS5UaHVtYiIgKSApCiB4Ym1jIC4gUGxheWVyICggKSAuIHBsYXkgKCBPb08wMCAsIEkxICkKIHJldHVybgogaWYgMzkgLSAzOTogT28gLiBpMTFpSWlpSWlpIC0gSUkxMTFpaWlpIC4gT29PME8wMCAvIGlJaWkxSTExSTFJSTEgJSBPb09PMG9vT09vbzBPCmRlZiBpMTExSUlJMWkxaSAoIHVybCApIDoKIGlmIG5vdCB1cmwgLiBzdGFydHN3aXRoICggJ2h0dHAnICkgOgogIHVybCA9ICdodHRwOi8vY2RuLmVib3VuZC50di90di8lcy9wbGF5bGlzdC5tM3U4JyAlIHVybAogT28wbzBvb29vME8wID0geGJtY2d1aSAuIERpYWxvZ1Byb2dyZXNzICggKQogT28wbzBvb29vME8wIC4gY3JlYXRlICggJ1Byb2dyZXNzJyAsICdGZXRjaGluZyBTdHJlYW1pbmcgSW5mbycgKQogT28wbzBvb29vME8wIC4gdXBkYXRlICggMTAgLCAiIiAsICJGaW5kaW5nIGxpbmtzLi4iICwgIiIgKQogaWYgNTggLSA1ODogbzAwMDBvT29Pb08wbyArIE9vIC0gSUkxMWlpSUkKIE9vME9vTzAwb09PMG8gPSB1cmxsaWIyIC4gUmVxdWVzdCAoICdodHRwOi8vZWJvdW5kc2VydmljZXMuY29tL2hhc2gvaGFzaF9hcHAucGhwP2NvZGU9Y29tLm1hYWlkcGsuUGFrVHZDb25uZWN0aWZ5JyApCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoICdVc2VyLUFnZW50JyAsICdjb20ubWFhaWRway5QYWtUdkNvbm5lY3RpZnkvNC4yIENGTmV0d29yay83NTguMC4yIERhcndpbi8xNS4wLjAnICkKIE9vME9vTzAwb09PMG8gLiBhZGRfaGVhZGVyICggJ0F1dGhvcml6YXRpb24nICwgJ0RpZ2VzdCB1c2VybmFtZT0iaGFzaGFwcCIsIHJlYWxtPSJSZXN0cmljdGVkIGFyZWEiLCBub25jZT0iNTY4OGFkM2JjNTU2NiIsIHVyaT0iL2hhc2gvaGFzaF9hcHAucGhwP2NvZGU9Y29tLm1hYWlkcGsuUGFrVHZDb25uZWN0aWZ5IiwgcmVzcG9uc2U9ImY0OTY0MjUxMjI3YjFjNGZjZTBkNmZmYjViNzA3YjRkIiwgb3BhcXVlPSJjZGNlOGE1Yzk1YTE0MjdkNzRkZjdhY2JmNDFjOWNlMCIsIGNub25jZT0iZjQ3MTdjZGYwOTJmYzM0NzMzNmQ1Y2MxYzc1NmViNTgiLCBuYz0wMDAwMDAwMywgcW9wPSJhdXRoIicgKQogT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICkKIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiBPT08wME8gLiBjbG9zZSAoICkKIE9vMG8wb29vbzBPMCAuIHVwZGF0ZSAoIDUwICwgIiIgLCAiRmluZGluZyBsaW5rcy4uIiAsICIiICkKIGlmIDMzIC0gMzM6IGkxSTFpaTFJSTFpSUkgJSBvbyAlIE9vICogb29PTzAwb09vICsgb09vME8wT29vICUgaTExaUlpaUlpaQogT29PMDAgPSB1cmwgKyAnP3dtc0F1dGhTaWduPScgKyBPT29PTzBvbzBvb08gKyAnfFVzZXItQWdlbnQ9TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzUyLjAuMjc0My4xMTYgU2FmYXJpLzUzNy4zNicKIE9vMG8wb29vbzBPMCAuIHVwZGF0ZSAoIDEwMCAsICIiICwgIkFsbW9zdCBkb25lLi4iICwgIiIgKQogSTEgPSB4Ym1jZ3VpIC4gTGlzdEl0ZW0gKCBsYWJlbCA9IHN0ciAoIG9PMDBvT09vb29PICkgLCBpY29uSW1hZ2UgPSAiRGVmYXVsdFZpZGVvLnBuZyIgLCB0aHVtYm5haWxJbWFnZSA9IHhibWMgLiBnZXRJbmZvSW1hZ2UgKCAiTGlzdEl0ZW0uVGh1bWIiICkgKQogeGJtYyAuIFBsYXllciAoICkgLiBwbGF5ICggT29PMDAgLCBJMSApCiByZXR1cm4KIGlmIDM5IC0gMzk6IE9vTzBPMDAgJSBvMG9vMG8gLyBvbyAvIE9vTzBPMDAgLiBPb28wMG9PbzAwbyArIE9vbzAwb09vMDBvCmRlZiBvT28wMDBvT28gKCB1cmwgKSA6CiBpMTExSUlJMWkxaSAoIHVybCApCiByZXR1cm4KIE9vMG8wb29vbzBPMCA9IHhibWNndWkgLiBEaWFsb2dQcm9ncmVzcyAoICkKIE9vMG8wb29vbzBPMCAuIGNyZWF0ZSAoICdQcm9ncmVzcycgLCAnRmV0Y2hpbmcgU3RyZWFtaW5nIEluZm8nICkKIE9vMG8wb29vbzBPMCAuIHVwZGF0ZSAoIDEwICwgIiIgLCAiRmluZGluZyBsaW5rcy4uIiAsICIiICkKIGlmIGkxSWlJID09IDQgOgogIE9vME9vTzAwb09PMG8gPSB1cmxsaWIyIC4gUmVxdWVzdCAoIHVybCApCiAgT28wT29PMDBvT08wbyAuIGFkZF9oZWFkZXIgKCAnVXNlci1BZ2VudCcgLCAnTW96aWxsYS81LjAoaVBhZDsgVTsgQ1BVIGlQaG9uZSBPUyAzXzIgbGlrZSBNYWMgT1MgWDsgZW4tdXMpIEFwcGxlV2ViS2l0LzUzMS4yMS4xMCAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wLjQgTW9iaWxlLzdCMzE0IFNhZmFyaS81MzEuMjEuMTAnICkKICBPT08wME8gPSB1cmxsaWIyIC4gdXJsb3BlbiAoIE9vME9vTzAwb09PMG8gKQogIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiAgT09PMDBPIC4gY2xvc2UgKCApCiAgaWYgODMgLSA4MzogT29vb29vb29PTyAqIElJMTExaWlpaSAlIE9vb29vb29vT08KICBpZiAzMCAtIDMwOiBvMG9vMG8gLyBPb28wMG9PbzAwbyArIE9vb29vb29vT08gKyBvT28wTzBPb28gKyBvb09PMDBvT28KICBJMTExMUkxaUlJMTEgPSByZSAuIGZpbmRhbGwgKCAnImh0dHAuKihlYm91bmQpLio/XD9zaXRlPSguKj8pIicgLCBPT29PTzBvbzBvb08gLCByZSAuIElHTk9SRUNBU0UgKSBbIDAgXQogIGlpMTFJID0gSTExMTFJMWlJSTExIFsgMSBdCiAgT28wbzBvb29vME8wIC4gdXBkYXRlICggMjAgLCAiIiAsICJGaW5kaW5nIGxpbmtzLi4iICwgIiIgKQogZWxzZSA6CiAgaWkxMUkgPSB1cmwKIGltcG9ydCBtYXRoICwgcmFuZG9tICwgdGltZQogb09vME8wT28gPSBzdHIgKCBpbnQgKCA1MDAwICsgbWF0aCAuIGZsb29yICggcmFuZG9tIC4gcmFuZG9tICggKSAqIDEwMDAwICkgKSApCiBvME9PSTExaWkxID0gc3RyICggaW50ICggdGltZSAuIHRpbWUgKCApICogMTAwMCApICkKIGlJMWlJID0gYmFzZTY0IC4gYjY0ZGVjb2RlICggJ2FIUjBjRG92TDNkM2R5NWxZbTkxYm1SelpYSjJhV05sY3k1amIyMHZhV1p5WVcxbEwyNWxkeTl0WVdsdVVHRm5aUzV3YUhBL2MzUnlaV0Z0UFE9PScgKSArIGlpMTFJICsgJyZ3aWR0aD11bmRlZmluZWQmaGVpZ2h0PXVuZGVmaW5lZCZjbGlwPScgKyBpaTExSSArICcmcnY9JyArIG9PbzBPME9vICsgJyZfPScgKyBvME9PSTExaWkxCiBPbzBPb08wMG9PTzBvID0gdXJsbGliMiAuIFJlcXVlc3QgKCBpSTFpSSApCiBPbzBPb08wMG9PTzBvIC4gYWRkX2hlYWRlciAoICdVc2VyLUFnZW50JyAsICdNb3ppbGxhLzUuMChpUGFkOyBVOyBDUFUgaVBob25lIE9TIDNfMiBsaWtlIE1hYyBPUyBYOyBlbi11cykgQXBwbGVXZWJLaXQvNTMxLjIxLjEwIChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAuNCBNb2JpbGUvN0IzMTQgU2FmYXJpLzUzMS4yMS4xMCcgKQogT09PMDBPID0gdXJsbGliMiAuIHVybG9wZW4gKCBPbzBPb08wMG9PTzBvICkKIE9Pb09PMG9vMG9vTyA9IE9PTzAwTyAuIHJlYWQgKCApCiBPT08wME8gLiBjbG9zZSAoICkKIE9vMG8wb29vbzBPMCAuIHVwZGF0ZSAoIDUwICwgIiIgLCAiRmluZGluZyBsaW5rcy4uIiAsICIiICkKIGlmIDI5IC0gMjk6IG8wMDAwb09vT29PMG8gJSBJSTExaWlJSSAtIG8wb28wbyArIGlJaWkxSTExSTFJSTEgKyBvbyAqIGlpaWlJaTExaQogT29PMDAgPSByZSAuIGZpbmRhbGwgKCAndmlkZW9MaW5rID1cJyguKj8pXCcnICwgT09vT08wb28wb29PICkgWyAwIF0KIGlmIDkzIC0gOTM6IGkxMWlJaWlJaWkgKiBpMTFpSWlpSWlpIC0gb28gKyBpSWlpMUkxMUkxSUkxICogaTExaUlpaUlpaQogT28wbzBvb29vME8wIC4gdXBkYXRlICggMTAwICwgIiIgLCAiQWxtb3N0IGRvbmUuLiIgLCAiIiApCiBJMSA9IHhibWNndWkgLiBMaXN0SXRlbSAoIGxhYmVsID0gc3RyICggb08wMG9PT29vb08gKSAsIGljb25JbWFnZSA9ICJEZWZhdWx0VmlkZW8ucG5nIiAsIHRodW1ibmFpbEltYWdlID0geGJtYyAuIGdldEluZm9JbWFnZSAoICJMaXN0SXRlbS5UaHVtYiIgKSApCiB4Ym1jIC4gUGxheWVyICggKSAuIHBsYXkgKCBPb08wMCAsIEkxICkKIHJldHVybgogaWYgMTQgLSAxNDogT28gLiBPb29vb29vb09PIC4gb28gLSBvb29PMG9vMG9PT09PICsgaUlpaTFJMTFJMUlJMQogaWYgNDcgLSA0NzogSUkxMWlpSUkgJSBpMUlJaQogaWYgMjMgLSAyMzogbzAwMDBvT29Pb08wbyAqIG8wMDAwb09vT29PMG8gLyBPb09PMG9vT09vbzBPCk9vT08gPSBpMSAoICkKT28wb09PbyA9IE5vbmUKb08wMG9PT29vb08gPSBOb25lCmkxSWlJID0gTm9uZQpJMWlpaWlpSUkxSTFJID0gTm9uZQppZiAxMSAtIDExOiBJSTExaWlJSQp0cnkgOgogT28wb09PbyA9IHVybGxpYiAuIHVucXVvdGVfcGx1cyAoIE9vT08gWyAidXJsIiBdICkKZXhjZXB0IDoKIHBhc3MKdHJ5IDoKIG9PMDBvT09vb29PID0gdXJsbGliIC4gdW5xdW90ZV9wbHVzICggT29PTyBbICJuYW1lIiBdICkKZXhjZXB0IDoKIHBhc3MKdHJ5IDoKIGkxSWlJID0gaW50ICggT29PTyBbICJtb2RlIiBdICkKZXhjZXB0IDoKIHBhc3MKIGlmIDU4IC0gNTg6IG9vT08wMG9PbyAqIE9vb29vb29vT08KcHJpbnQgT29PTwppMUlpMWlpSSA9IGNnaSAuIHBhcnNlX3FzICggc3lzIC4gYXJndiBbIDIgXSBbIDEgOiBdICkKSTFpaWlpaUlJMUkxSSA9ICcnCnRyeSA6CiBJMWlpaWlpSUkxSTFJID0gaTFJaTFpaUkgLiBnZXQgKCAnbGlua1R5cGUnICwgJycgKSBbIDAgXQpleGNlcHQgOgogcGFzcwogaWYgMjMgLSAyMzogT29PME8wMCAlIElJMTExaWlpaQogaWYgOTYgLSA5NjogT28gJSBvMDAwMG9Pb09vTzBvCnByaW50IGkxSWlJICwgT28wb09PbyAsIEkxaWlpaWlJSTFJMUkKaWYgODMgLSA4Mzogb28gLSBJSTExaWlJSSAuIG9vICogT29PME8wMAppZiA3NiAtIDc2OiBpMTFpSWlpSWlpICsgbzAwMDBvT29Pb08wbwppZiAxNCAtIDE0OiBvb09PMDBvT28gKiBPb29vb29vb09PCnRyeSA6CiBpZiBpMUlpSSA9PSBOb25lIG9yIE9vMG9PT28gPT0gTm9uZSBvciBsZW4gKCBPbzBvT09vICkgPCAxIDoKICBwcmludCAiSW5BZGRUeXBlcyIKICBjaGVja2JhZCAuIGRvX2Jsb2NrX2NoZWNrICggRmFsc2UgKQogIEkxaTFJaWlpaSAoICkKIGVsaWYgaTFJaUkgPT0gMiBvciBpMUlpSSA9PSA0MyA6CiAgcHJpbnQgIkVudCB1cmwgaXMgIiAsIG9PMDBvT09vb29PICwgT28wb09PbwogIG9vME9vT08wMDBPICggb08wMG9PT29vb08gLCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gMjkgOgogIHByaW50ICJFbnQgdXJsIGlzICIgLCBvTzAwb09Pb29vTyAsIE9vMG9PT28KICBPT09PMG9vMCAoICkKICBpZiA0NSAtIDQ1OiBpSWlpMUkxMUkxSUkxICogb28gLiBvT28wTzBPb28KIGVsaWYgaTFJaUkgPT0gMyA6CiAgcHJpbnQgIlBsYXkgdXJsIGlzICIgKyBPbzBvT09vCiAgb28wT28wMDAgKCBPbzBvT09vICkKICBpZiA5NyAtIDk3OiBPb09PMG9vT09vbzBPICUgSUkxMTFpaWlpICUgbzAwMDBvT29Pb08wbyAuIElJMTExaWlpaSAuIGlJaWkxSTExSTFJSTEKIGVsaWYgaTFJaUkgPT0gNCBvciBpMUlpSSA9PSA5IDoKICBwcmludCAiUGxheSB1cmwgaXMgIiArIE9vMG9PT28KICBvT28wMDBvT28gKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gMTEgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIG9PMDAgKCBPbzBvT09vICkKICBpZiA5OCAtIDk4OiBpMTFpSWlpSWlpICsgTzAgLSBPMCAtIGkxSTFpaTFJSTFpSUkKIGVsaWYgaTFJaUkgPT0gNiA6CiAgcHJpbnQgIlBsYXkgdXJsIGlzICIgKyBPbzBvT09vCiAgTzBPMDBvME9PTzAgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gNyA6CiAgcHJpbnQgIlBsYXkgdXJsIGlzICIgKyBPbzBvT09vCiAgbzBvbzBvME8wME9PICggT28wb09PbyApCiBlbGlmIGkxSWlJID09IDEzIDoKICBwcmludCAiUGxheSB1cmwgaXMgIiArIE9vMG9PT28KICBpaTExMUkgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gMTQgb3IgaTFJaUkgPT0gMTQ0IDoKICBwcmludCAiUGxheSB1cmwgaXMgIiArIE9vMG9PT28KICBJSTExSWlpSTFpICggT28wb09PbyApCiBlbGlmIGkxSWlJID09IDE1IDoKICBwcmludCAiUGxheSB1cmwgaXMgIiArIE9vMG9PT28KICBPMDBvT28wbzAgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gMTYgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIGkxSWkxaTExaWkgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gMTcgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIGlpICggT28wb09PbyApCiBlbGlmIGkxSWlJID09IDE5IDoKICBwcmludCAiUGxheSB1cmwgaXMgIiArIE9vMG9PT28KICBJMTExMUlJSTExMWlpICggT28wb09PbyApCiBlbGlmIGkxSWlJID09IDIwIDoKICBwcmludCAiUGxheSB1cmwgaXMgIiArIE9vMG9PT28KICBJaTFJaWlpSTFpaSAoIE9vMG9PT28gKQogZWxpZiBpMUlpSSA9PSAyMSBvciBpMUlpSSA9PSAyMiA6CiAgcHJpbnQgIlBsYXkgdXJsIGlzICIgKyBPbzBvT09vCiAgT29vT29PICggT28wb09PbyApCiBlbGlmIGkxSWlJID09IDIzIDoKICBwcmludCAiUGxheSB1cmwgaXMgIiArIE9vMG9PT28KICBJaTExaUlpaUkgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gMjQgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIE9vMG8wb29Pb08gKCBPbzBvT09vICkKICBpZiAyNSAtIDI1OiBpaWlpSWkxMWkgLyBPMCArIG8wb28wbyAlIGkxMWlJaWlJaWkgLyBvbwogZWxpZiBpMUlpSSA9PSAyNiA6CiAgcHJpbnQgIlBsYXkgdXJsIGlzICIgKyBPbzBvT09vCiAgaUkxaWlpMWlJMSAoIE9vMG9PT28gKQogZWxpZiBpMUlpSSA9PSAyNyA6CiAgcHJpbnQgIlBsYXkgdXJsIGlzICIgKyBPbzBvT09vCiAgT29PMG9vTyAoIE9vMG9PT28gKQogZWxpZiBpMUlpSSA9PSAzMSA6CiAgcHJpbnQgIlBsYXkgdXJsIGlzICIgKyBPbzBvT09vCiAgbzBPMG9vME9PME8gKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gMzAgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIEkxSUlJMTExMWlJaSAoIE9vMG9PT28gKQogZWxpZiBpMUlpSSA9PSAzMiA6CiAgcHJpbnQgIlBsYXkgdXJsIGlzICIgKyBPbzBvT09vCiAgb08wbzAgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gMzMgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIE9vMDBvTyAoIE9vMG9PT28gKQogZWxpZiBpMUlpSSA9PSAzNCA6CiAgcHJpbnQgIlBsYXkgdXJsIGlzICIgKyBPbzBvT09vCiAgaWkxSUlJSWlJMTEgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gMzUgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIE9vT29vTzAgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgaW4gWyAzNiBdIDoKICBwcmludCAiUGxheSB1cmwgaXMgIiArIE9vMG9PT28KICBpZiBub3QgJ2Vtb3ZpZXM6JyBpbiBPbzBvT09vIDoKICAgb29vbzBPTyAoIE9vMG9PT28gKQogIGVsc2UgOgogICBpaUkxSUkxMUlJMWkgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gMzcgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIElpSTFvMG8wb29vICggT28wb09PbyApCiAgaWYgNjIgLSA2MjogaTFJMWlpMUlJMWlJSSAuIE9vT08wb29PT29vME8gKiBpMUlJaSArIGkxSTFpaTFJSTFpSUkKIGVsaWYgaTFJaUkgPT0gMzkgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIE9PbzAgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gNDAgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIElJMWlJSSAoIE9vMG9PT28gKQogZWxpZiBpMUlpSSA9PSA0MSA6CiAgcHJpbnQgIlBsYXkgdXJsIGlzICIgKyBPbzBvT09vCiAgSUlpaTExMTEgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gNDIgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIE9vTzAwME8wT28gKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gNDUgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIGkxaUlJaWkxICggT28wb09PbyApCiBlbGlmIGkxSWlJID09IDQ2IDoKICBwcmludCAiUGxheSB1cmwgaXMgIiArIE9vMG9PT28KICBPMG8wICggT28wb09PbyApCiBlbGlmIGkxSWlJID09IDUxIDoKICBwcmludCAiUGxheSB1cmwgaXMgIiArIE9vMG9PT28KICBvT28wME9vb08wb08gKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gNTIgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIE9vME9vb08wICggT28wb09PbyApCiBlbGlmIGkxSWlJID09IDUzIDoKICBwcmludCAiUGxheSB1cmwgaXMgIiArIE9vMG9PT28KICBJaWlJT29PICggT28wb09PbyApCiBlbGlmIGkxSWlJID09IDU0IDoKICBwcmludCAiUGxheSB1cmwgaXMgIiArIE9vMG9PT28KICBvMDAwb08wb09PTyAoICkKIGVsaWYgaTFJaUkgPT0gNTUgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIG8wT08wT09PME8gKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gNjEgb3IgaTFJaUkgPT0gNjcgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIGlpaUkxSSAoIE9vMG9PT28gKQogZWxpZiBpMUlpSSA9PSA1NyA6CiAgcHJpbnQgIlBsYXkgdXJsIGlzIDU3IiArIE9vMG9PT28KICBJaUkgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gNjAgOgogIHByaW50ICJQbGF5IHVybCBpcyA2MCIgKyBPbzBvT09vCiAgT08wb29vMCAoIE9vMG9PT28gKQogZWxpZiBpMUlpSSA9PSA2MiA6CiAgcHJpbnQgIlBsYXkgdXJsIGlzICIgKyBPbzBvT09vCiAgb08wTyAoIE9vMG9PT28gKQogZWxpZiBpMUlpSSA9PSA2NiA6CiAgcHJpbnQgIlBsYXkgdXJsIGlzICIgKyBPbzBvT09vCiAgb08wb28gKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gNjggOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIElJaUkxMUkxSTFpMWkgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gNzAgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIElJMTExaTFpaTFpSUkgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gNzEgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIE9Pb08gKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gNzIgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIG8wME9PbzAwME8gKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gNzMgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIE8wb08wb28wTzAgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gNzQgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIG9Pb29vMDAwMDAgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gNzUgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIGlmIDk1IC0gOTU6IG8wMDAwb09vT29PMG8gLyBPb28wMG9PbzAwbyAlIE9vIC0gb28gLyBJSTExaWlJSSAqIElJMTFpaUlJCiAgaWlpaWkxMTEgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gNzYgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIGlJSTFJaWkxMTExMSAoIE9vMG9PT28gKQogZWxpZiBpMUlpSSA9PSA3NyA6CiAgcHJpbnQgIlBsYXkgdXJsIGlzICIgKyBPbzBvT09vCiAgaTFJSWlJSUlpMSAoIE9vMG9PT28gKQogZWxpZiBpMUlpSSA9PSA3OCA6CiAgcHJpbnQgIlBsYXkgdXJsIGlzICIgKyBPbzBvT09vCiAgb29vbzBvME9PTzAgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gNzkgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIE9PT29PT28wbyAoIE9vMG9PT28gKQogZWxpZiBpMUlpSSA9PSA4MSA6CiAgcHJpbnQgIlBsYXkgdXJsIGlzICIgKyBPbzBvT09vCiAgb28wMG8wICggT28wb09PbyApCiBlbGlmIGkxSWlJID09IDgyIDoKICBwcmludCAiUGxheSB1cmwgaXMgIiArIE9vMG9PT28KICBpaTFJMTFpSWlJSUkxICggT28wb09PbyApCiBlbGlmIGkxSWlJID09IDgzIDoKICBwcmludCAiUGxheSB1cmwgaXMgIiArIE9vMG9PT28KICBvMElpMSAoIE9vMG9PT28gKQogZWxpZiBpMUlpSSA9PSA4NCA6CiAgcHJpbnQgIlBsYXkgdXJsIGlzICIgKyBPbzBvT09vCiAgaWlpSUlJaWkgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gODUgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIGlJMTFpICggT28wb09PbyApCiBlbGlmIGkxSWlJID09IDg2IDoKICBwcmludCAiUGxheSB1cmwgaXMgIiArIE9vMG9PT28KICBPT09vICggT28wb09PbyApCiBlbGlmIGkxSWlJID09IDg3IDoKICBwcmludCAiUGxheSB1cmwgaXMgIiArIE9vMG9PT28KICBpaWkxSWlJMUkxICggT28wb09PbyApCiBlbGlmIGkxSWlJID09IDg4IDoKICBwcmludCAiUGxheSB1cmwgaXMgIiArIE9vMG9PT28KICBvMDBJaUkxaWlJSTFpMWkgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gODkgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIE8wMG9vICggT28wb09PbyApCiBlbGlmIGkxSWlJID09IDkxIDoKICBwcmludCAiUGxheSB1cmwgaXMgIiArIE9vMG9PT28KICBJMWlJMSAoIE9vMG9PT28gKQogZWxpZiBpMUlpSSA9PSA5MiA6CiAgcHJpbnQgIlBsYXkgdXJsIGlzICIgKyBPbzBvT09vCiAgb09vT28wICggT28wb09PbyApCiBlbGlmIGkxSWlJID09IDkzIDoKICBwcmludCAiUGxheSB1cmwgaXMgIiArIE9vMG9PT28KICBJaWlJMUlJSTFpMUkgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gOTQgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIElJSTFJSTExMUlJMTEgKCBPbzBvT09vICkKIGVsaWYgaTFJaUkgPT0gOTYgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIG8wb29PTzAwT08wbzBPICggT28wb09PbyAsIGFwcHR5cGUgPSAxICkKIGVsaWYgaTFJaUkgPT0gOTggOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIG8wb29PTzAwT08wbzBPICggT28wb09PbyAsIGFwcHR5cGUgPSAyICkKIGVsaWYgaTFJaUkgPT0gOTcgOgogIHByaW50ICJQbGF5IHVybCBpcyAiICsgT28wb09PbwogIGltcG9ydCB0aW1lCiAgdHJ5IDoKICAgaWYgT09vb28wMCAoIFsgKCAnc2NkZWMucHknICwgJ2h0dHBzOi8vb2Zmc2hvcmVnaXQuY29tL1NoYW5pLTA4L21haW4vcGx1Z2luLnZpZGVvLlplbVRWLXNoYW5pL3NjZGVjLnB5P3Q9JXMnICUgc3RyICggaW50ICggdGltZSAuIHRpbWUgKCApICkgKSAsIFRydWUgKSBdICkgOgogICAgbzBvTyA9IHhibWNndWkgLiBEaWFsb2cgKCApCiAgICBJMWkxaWlpID0gbzBvTyAuIG9rICggJ1hCTUMnICwgJ1VwZGF0ZWQgZmlsZXMhIFRyeSBjbGljayBSZWZyZXNoIExpc3RpbmcgdG8gc2VlIGlmIGl0IHdvcmtzJyApCiAgIGVsc2UgOgogICAgbzBvTyA9IHhibWNndWkgLiBEaWFsb2cgKCApCiAgICBJMWkxaWlpID0gbzBvTyAuIG9rICggJ1hCTUMnICwgJ05vdCB1cGRhdGVkLCBwZXJoYXBzIG5vIGNoYW5nZT8nICkKICAgIHByaW50ICdVcGRhdGVkIGZpbGVzJwogIGV4Y2VwdCA6IHRyYWNlYmFjayAuIHByaW50X2V4YyAoIGZpbGUgPSBzeXMgLiBzdGRvdXQgKQogZWxpZiBpMUlpSSA9PSA5OSA6CiAgcHJpbnQgIlBsYXkgdXJsIGlzIDU3IiArIE9vMG9PT28KICBpMWlpMUlpaWlpSWkxSSAoIE9vMG9PT28gKQogIGlmIDYgLSA2OiBvb09PMDBvT28gJSBvb29PMG9vMG9PT09PICsgaUlpaTFJMTFJMUlJMQogIGlmIDE4IC0gMTg6IElJMTExaWlpaSAuIG8wMDAwb09vT29PMG8gKyBvT28wTzBPb28gKyBPMCAtIE9vT08wb29PT29vME8KZXhjZXB0IDoKIGlmIDMwIC0gMzA6IElJMTExaWlpaQogcHJpbnQgJ3NvbWV0aGluZ3dyb25nJwogdHJhY2ViYWNrIC4gcHJpbnRfZXhjICggZmlsZSA9IHN5cyAuIHN0ZG91dCApCkkxSWkxSTFpID0gewogJ3RodW1ibmFpbCcgOiB7CiAnc2tpbi5jb25mbHVlbmNlJyA6IDUwMCAsCiAnc2tpbi5hZW9uLm5veCcgOiA1NTEgLAogJ3NraW4uY29uZmx1ZW5jZS12ZXJ0aWNhbCcgOiA1MDAgLAogJ3NraW4uang3MjAnIDogNTIgLAogJ3NraW4ucG0zLWhkJyA6IDUzICwKICdza2luLnJhcGllcicgOiA1MCAsCiAnc2tpbi5zaW1wbGljaXR5JyA6IDUwMCAsCiAnc2tpbi5zbGlrJyA6IDUzICwKICdza2luLnRvdWNoZWQnIDogNTAwICwKICdza2luLnRyYW5zcGFyZW5jeScgOiA1MyAsCiAnc2tpbi54ZWVibycgOiA1NSAsCiB9ICwKIH0KaWYgNCAtIDQ6IE9vIC4gaUlpaTFJMTFJMUlJMSArIG9vIC0gb29PTzAwb09vCmRlZiBvT28wMDAwb29vICggdmlld19tb2RlICkgOgogSWlJSUlpb29PMG8gPSBvb08wMG9Pb28gLiBnZXRTZXR0aW5nICggInVzZXRoaXN2aWV3bW9kZSIgKQogaWYgSWlJSUlpb29PMG8gPT0gIiIgOgogIGlJaUlJSUkxID0gSTFJaTFJMWkgLiBnZXQgKCB2aWV3X21vZGUgLiBsb3dlciAoICkgKQogIGlmIGlJaUlJSUkxIDoKICAgcmV0dXJuIGlJaUlJSUkxIC4gZ2V0ICggeGJtYyAuIGdldFNraW5EaXIgKCApICkKIGVsc2UgOgogIHJldHVybiBpbnQgKCBJaUlJSWlvb08wbyApCiByZXR1cm4gTm9uZQogaWYgMzggLSAzODogb28gLyBpMTFpSWlpSWlpCm9PMG9PTzAwb09vID0gWyAzICwgNCAsIDkgLCAxMSAsIDE1ICwgMjEgLCAyMiAsIDI3ICwgMzMgLCAzNSAsIDM3ICwgNDAgLCA0MiAsIDQ1ICwgOTEgLCA5MyAsIDk1IF0KT09vMG9PMCA9IFsgNTUgLCA2MSAsIDY3ICwgNTYgLCAxNCAsIDU3ICwgMTkgLCAyMCAsIDIxICwgMjIgLCAyMyAsIDI0ICwgNzkgLCA3NSAsIDc2ICwgNzggLCA4MSAsIDIgLCA1MSAsIDUyICwgNTMgLCA2MiAsIDcwICwgNzEgLCA4MSAsIDY2ICwgOTQgXQp0cnkgOgogaWYgKCBub3QgaTFJaUkgPT0gTm9uZSApIGFuZCBpMUlpSSA+IDEgYW5kIGkxSWlJIG5vdCBpbiBPT28wb08wIGFuZCBpMUlpSSBub3QgaW4gb08wb09PMDBvT28gOgogIGkxaWkxaTFJaWkgPSBvT28wMDAwb29vICggJ3RodW1ibmFpbCcgKQogIGlmIElpSUkxSWlpSWlJMSA6IGkxaWkxaTFJaWkgPSBJaUlJMUlpaUlpSTEKICBpZiBpMWlpMWkxSWlpIGlzIG5vdCBOb25lIDoKICAgcHJpbnQgJ3ZpZXdfbW9kZV9pZCcgLCBpMWlpMWkxSWlpCiAgIHhibWMgLiBleGVjdXRlYnVpbHRpbiAoICdDb250YWluZXIuU2V0Vmlld01vZGUoJWQpJyAlIGkxaWkxaTFJaWkgKQpleGNlcHQgOiB0cmFjZWJhY2sgLiBwcmludF9leGMgKCBmaWxlID0gc3lzIC4gc3Rkb3V0ICkKaWYgMjUgLSAyNTogT29vb29vb29PTyAuIG8wMDAwb09vT29PMG8gLiBpMUlJaSAuIE9vTzBPMDAKaWYgbm90ICggaTFJaUkgaW4gb08wb09PMDBvT28gKSA6CiBpZiBpMUlpSSBpbiBbIDE0NCAsIDE1NiBdIDoKICB4Ym1jcGx1Z2luIC4gZW5kT2ZEaXJlY3RvcnkgKCBpbnQgKCBzeXMgLiBhcmd2IFsgMSBdICkgLCB1cGRhdGVMaXN0aW5nID0gVHJ1ZSApCiBlbHNlIDoKICB4Ym1jcGx1Z2luIC4gZW5kT2ZEaXJlY3RvcnkgKCBpbnQgKCBzeXMgLiBhcmd2IFsgMSBdICkgKQogIGlmIDExIC0gMTE6IE8wIC4gT29vMDBvT28wMG8KICBpZiA1NSAtIDU1OiBpMTFpSWlpSWlpIC8gT29vb29vb29PTyAtIE9vT08wb29PT29vME8KICBpZiA4OSAtIDg5OiBPb09PMG9vT09vbzBPIC0gaTFJSWkgLSBpMUlJaSAqIElJMTFpaUlJIC0gTzAKIyBkZDY3OGZhYWU5YWMxNjdiYzgzYWJmNzhlNWNiMmYzZjA2ODhkM2EzCg==]')