<?xml version="1.0" encoding="UTF-8"?>
<includes>	
	<include name="TVShowsListInfoView">
		<control type="group" id="500">
			<defaultcontrol always="true">61</defaultcontrol>
			<visible>Control.IsVisible(61)</visible>
			<include>MediaViewOpenCloseAnim</include>
			<include>ListInfoViewContentPanel</include>
			
			<include condition="!Skin.HasSetting(UseTVShowsPosterCover)">TVShowsListInfoBannerMode</include>
			<include condition="Skin.HasSetting(UseTVShowsPosterCover)">TVShowsListInfoPosterMode</include>
			<include>SeasonsListInfoPosterMode</include>
			
			<control type="list" id="61">
				<viewtype label="31111">list</viewtype>
				<left>720</left>
				<top>332</top>
				<width>505</width>
				<height>296</height>
				<pagecontrol>90606</pagecontrol>
				<preloaditems>2</preloaditems>
				<onup>61</onup>
				<ondown>61</ondown>
				<onleft>850</onleft>
				<onright>150</onright>
				<visible>Container.Content(TVShows) | Container.Content(Seasons)</visible>
				<itemlayout height="37">
					<control type="image">
						<width>505</width>
						<height>37</height>
						<texture border="0,0,10,2">views/list-separator.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Icon</description>
						<left>5</left>
						<top>6</top>
						<width>23</width>
						<height>23</height>
						<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>String.IsEmpty(ListItem.Title)</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>5</left>
						<width>26</width>
						<height>37</height>
						<font>ListFont3</font>
						<textcolor>ListColor</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<visible>$EXP[UnwatchedEpisodes99-]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>5</left>
						<width>26</width>
						<height>37</height>
						<font>ListFont4</font>
						<textcolor>ListColor</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<visible>$EXP[UnwatchedEpisodes99+]</visible>
					</control>
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>5</left>
						<width>26</width>
						<height>37</height>
						<aligny>center</aligny>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<visible>$EXP[UnwatchedEpisodesOverlay]</visible>
					</control>
					<control type="image">
						<description>Watched Overlay</description>
						<left>5</left>
						<width>26</width>
						<height>37</height>
						<aligny>center</aligny>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
					<control type="label">
						<description>Label</description>
						<left>35</left>
						<width>365</width>
						<height>37</height>
						<font>ListFont</font>
						<textcolor>ListColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Label]</label>
					</control>
					<control type="label">
						<description>Label2</description>
						<left>295</left>
						<width>200</width>
						<height>37</height>
						<font>ListFont2</font>
						<textcolor>ListColor3</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<align>right</align>
						<aligny>center</aligny>
						<info>ListItem.Label2</info>
						<visible>[[Container.Content(TVShows) + Skin.HasSetting(DoNotUseStarRatingTVShows)] | Container.Content(Seasons)] + !String.IsEqual(Container.SortMethod,$LOCALIZE[369])</visible>
					</control>
					<control type="image">
						<description>Star Rating</description>
						<left>395</left>
						<top>10</top>
						<width>100</width>
						<height>16</height>
						<texture background="true">$VAR[StarRating]</texture>
						<aspectratio align="right">keep</aspectratio>
						<visible>![String.IsEmpty(ListItem.Rating) + String.IsEmpty(ListItem.UserRating)] + !Skin.HasSetting(DoNotUseStarRatingTVShows) + !Container.Content(Seasons)</visible>
						<animation effect="fade" end="70" condition="true">Conditional</animation>
					</control>
				</itemlayout>
				<focusedlayout height="37">
					<control type="image">
						<width>505</width>
						<height>37</height>
						<texture border="0,0,10,2">views/list-separator.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<width>505</width>
						<height>36</height>
						<texture border="4">views/list-focus.png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>Control.HasFocus(61)</visible>
						<include>ListViewSelectFadeAnim</include>
						<include condition="!Skin.HasSetting(DisableListScrollAnim)">ListViewScrollAnim</include>
					</control>
					<control type="image">
						<width>505</width>
						<height>36</height>
						<texture border="4">views/list-alt-focus.png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>!Control.HasFocus(61)</visible>
						<include>ListViewSelectFadeAnim2</include>
					</control>
					<control type="group">
						<include condition="!Skin.HasSetting(DisableListFocusAnim)">ListViewFocusAnim</include>
						<control type="image">
							<description>Icon</description>
							<left>5</left>
							<top>6</top>
							<width>23</width>
							<height>23</height>
							<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
							<aspectratio>stretch</aspectratio>
							<visible>String.IsEmpty(ListItem.Title)</visible>
						</control>
						<control type="label">
							<description>Unwatched Episodes</description>
							<left>5</left>
							<width>26</width>
							<height>37</height>
							<font>ListFont3</font>
							<textcolor>white</textcolor>
							<align>center</align>
							<aligny>center</aligny>
							<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
							<visible>$EXP[UnwatchedEpisodes99-]</visible>
						</control>
						<control type="label">
							<description>Unwatched Episodes</description>
							<left>5</left>
							<width>26</width>
							<height>37</height>
							<font>ListFont4</font>
							<textcolor>white</textcolor>
							<align>center</align>
							<aligny>center</aligny>
							<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
							<visible>$EXP[UnwatchedEpisodes99+]</visible>
						</control>
						<control type="image">
							<description>Unwatched Overlay</description>
							<left>5</left>
							<width>26</width>
							<height>37</height>
							<aligny>center</aligny>
							<texture background="true">OverlayClean.png</texture>
							<aspectratio>keep</aspectratio>
							<visible>$EXP[UnwatchedEpisodesOverlay]</visible>
						</control>
						<control type="image">
							<description>Watched Overlay</description>
							<left>5</left>
							<width>26</width>
							<height>37</height>
							<aligny>center</aligny>
							<texture background="true">$INFO[ListItem.Overlay]</texture>
							<aspectratio>keep</aspectratio>
							<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
						<control type="label">
							<description>Label</description>
							<left>35</left>
							<width>365</width>
							<height>37</height>
							<font>ListFont</font>
							<textcolor>SelectedColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<aligny>center</aligny>
							<label>$INFO[ListItem.Label]</label>
							<scroll>true</scroll>
						</control>
						<control type="label">
							<description>Label2</description>
							<left>295</left>
							<width>200</width>
							<height>37</height>
							<font>ListFont2</font>
							<textcolor>ListColor3</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<align>right</align>
							<aligny>center</aligny>
							<info>ListItem.Label2</info>
							<visible>[[Container.Content(TVShows) + Skin.HasSetting(DoNotUseStarRatingTVShows)] | Container.Content(Seasons)] + !String.IsEqual(Container.SortMethod,$LOCALIZE[369])</visible>
						</control>
						<control type="image">
							<description>Star Rating</description>
							<left>395</left>
							<top>10</top>
							<width>100</width>
							<height>16</height>
							<texture background="true">$VAR[StarRating]</texture>
							<aspectratio align="right">keep</aspectratio>
							<visible>![String.IsEmpty(ListItem.Rating) + String.IsEmpty(ListItem.UserRating)] + !Skin.HasSetting(DoNotUseStarRatingTVShows) + !Container.Content(Seasons)</visible>
							<animation effect="fade" end="70" condition="true">Conditional</animation>
						</control>
					</control>
				</focusedlayout>
			</control>
		
			<include content="ListInfoViewScrollbar">
				<param name="id" value="90606" />
			</include>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<top>BottomPaneOffsetY</top>
				<!--<include>InfoPaneImage</include>-->
				<include>InfoPaneMediaDetails</include>
				<include condition="!Skin.HasSetting(DisableTVShowsLogo)">InfoPaneClearLogo</include>
				<include>BottomPaneOpenCloseAnim</include>
			</control>
			
			<include>ViewsDialogPopUpScreenDim</include>
		</control>
	</include>
	
	<include name="TVShowsListInfoBannerMode">
		<control type="group">
			<visible>!String.IsEmpty(ListItem.Title) + !Container.Content(Seasons)</visible>
			
			<control type="group">
				<description>Cover</description>
				
				<control type="image">
					<description>Cover Background</description>
					<left>39</left>
					<top>337</top>
					<width>671</width>
					<height>127</height>
					<texture background="true" border="4">panels/panel3.png</texture>
					<aspectratio>stretch</aspectratio>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
				</control>
				
				<control type="image">
					<description>Default Cover</description>
					<left>39</left>
					<top>337</top>
					<width>671</width>
					<height>127</height>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<bordersize>15</bordersize>
					<aspectratio>keep</aspectratio>
					<fadetime>IconCrossfadeTime</fadetime>
					<visible>String.IsEmpty(ListItem.Thumb)</visible>
					<animation effect="fade" end="60" condition="true">Conditional</animation>
				</control>
					
				<control type="image">
					<description>Cover</description>
					<left>39</left>
					<top>337</top>
					<width>671</width>
					<height>127</height>
					<texture background="true" diffuse="covers/list-info-banner-diffuse.png">$VAR[BannerThumb]</texture>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<bordersize>1</bordersize>
					<fadetime>IconCrossfadeTime</fadetime>
				</control>
			</control>
			
			<control type="image">
				<description>Genre Background</description>
				<left>43</left>
				<top>341</top>
				<width>250</width>
				<height>27</height>
				<texture border="8">views/genre-background.png</texture>
				<visible>!String.IsEmpty(ListItem.Genre) + !String.IsEmpty(Window(Home).Property(NextAired.Genre)) + !Skin.HasSetting(HideTVShowsGenres)</visible>
			</control>
						
			<control type="label">
				<description>Genre</description>
				<left>50</left>
				<top>343</top>
				<width>234</width>
				<font>MediaInfoFont3</font>
				<textcolor>WhiteColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>[UPPERCASE]$INFO[ListItem.Genre][/UPPERCASE]</label>
				<scroll>false</scroll>
				<animation effect="fade" end="90" condition="true">Conditional</animation>
				<visible>!String.IsEmpty(ListItem.Genre) + !Skin.HasSetting(HideTVShowsGenres)</visible>
			</control>
			
			<control type="label">
				<description>Next Aired Genre</description>
				<left>50</left>
				<top>343</top>
				<width>234</width>
				<font>MediaInfoFont3</font>
				<textcolor>WhiteColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>[UPPERCASE]$INFO[Window(Home).Property(NextAired.Genre)][/UPPERCASE]</label>
				<scroll>false</scroll>
				<animation effect="fade" end="90" condition="true">Conditional</animation>
				<visible>String.IsEmpty(ListItem.Genre) + !String.IsEmpty(Window(Home).Property(NextAired.Genre)) + !Skin.HasSetting(HideTVShowsGenres)</visible>
			</control>
	
			<control type="textbox">
				<description>Plot</description>
				<left>43</left>
				<top>473</top>
				<width>662</width>
				<height>112</height>
				<font>MediaInfoDescFont</font>
				<textcolor>MediaInfoColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>justify</align>
				<label fallback="31203">$INFO[ListItem.Plot]</label>
				<wrapmultiline>true</wrapmultiline>
				<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
				<visible>!Container.OnNext + !Container.OnPrevious</visible> 
				<include>ControlsOpenCloseAnim</include>
			</control>
			
			<control type="grouplist">
				<description>Media Info</description>
				<left>44</left>
				<top>585</top>
				<width>660</width>
				<align>center</align>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="label">
					<description>Seasons</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[33054]:</label>
				</control>
				<control type="label">
					<description>Seasons Value</description>
					<width min="0" max="166">auto</width>
					<scroll>true</scroll>
					<include>ListInfoViewCatValueLabel</include>
					<label fallback="31001">$INFO[ListItem.Property(TotalSeasons)]</label>
				</control>
				<include>ListInfoViewDot</include>
				<control type="label">
					<description>Episodes</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[20360]:</label>
				</control>
				<control type="label">
					<description>Episodes Value</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatValueLabel</include>
					<label fallback="31001">$INFO[ListItem.Episode]</label>
				</control>
				<include>ListInfoViewDot</include>
				<control type="label">
					<description>Year</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[345]:</label>
				</control>
				<control type="label">
					<description>Year Value</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatValueLabel</include>
					<label fallback="31001">$INFO[ListItem.Year]</label>
				</control>
				<include>ListInfoViewDot</include>
				<control type="label">
					<description>Rating</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[563]:</label>
				</control>
				<control type="label">
					<description>Rating Value</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatValueLabel</include>
					<label fallback="31001">$VAR[RatingType]</label>
				</control>
			</control>
		</control>
	</include>
	
	<include name="TVShowsListInfoPosterMode">
		<control type="group">
			<visible>!String.IsEmpty(ListItem.Title) + !Container.Content(Seasons)</visible>
			
			<control type="image">
				<description>Cover Background</description>
				<left>39</left>
				<top>337</top>
				<width>177</width>
				<height>250</height>
				<texture background="true" border="4">panels/panel3.png</texture>
				<aspectratio>stretch</aspectratio>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
			</control>
			
			<control type="image">
				<description>Default Cover</description>
				<left>39</left>
				<top>337</top>
				<width>177</width>
				<height>250</height>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<bordersize>30</bordersize>
				<aspectratio>keep</aspectratio>
				<fadetime>IconCrossfadeTime</fadetime>
				<visible>String.IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="60" condition="true">Conditional</animation>
			</control>
			
			<control type="image">
				<description>Cover</description>
				<left>39</left>
				<top>337</top>
				<width>177</width>
				<height>250</height>
				<texture background="true" diffuse="covers/list-info-poster-diffuse.png">$VAR[PosterThumb]</texture>
				<bordersize>1</bordersize>
				<aspectratio scalediffuse="false">scale</aspectratio>
				<fadetime>IconCrossfadeTime</fadetime>
			</control>

			<control type="label">
				<description>Genre</description>
				<left>227</left>
				<top>341</top>
				<width>476</width>
				<align>center</align>
				<font>MediaInfoFont2</font>
				<textcolor>MediaInfoItemColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>[UPPERCASE]$INFO[ListItem.Genre][/UPPERCASE]</label>
				<scroll>false</scroll>
			</control>
			
			<control type="group">
				<left>227</left>
				<top>378</top>
				<control type="grouplist">
					<description>Latest episode</description>
					<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
					<width>476</width>
					<orientation>horizontal</orientation>
					<control type="label">
						<width min="0" max="140">auto</width>
						<font>MediaInfoFont</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$LOCALIZE[31966]:</label>
					</control>
					<control type="label">
						<width min="0" max="336">auto</width>
						<font>MediaInfoFont2</font>
						<textcolor>MediaInfoItemColor2</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<scroll>true</scroll>
						<label fallback="31001">$INFO[Window(Home).Property(NextAired.LatestSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.LatestEpisodeNumber),E,.]$INFO[Window(Home).Property(NextAired.LatestTitle), ,]$INFO[Window(Home).Property(NextAired.LatestDate), (,)]</label>
					</control>
				</control>
				
				<control type="grouplist">
					<description>Next episode</description>
					<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + !String.IsEmpty(Window(Home).Property(NextAired.Nextdate))</visible>
					<top>25</top>
					<width>476</width>
					<orientation>horizontal</orientation>
					<control type="label">
						<width min="0" max="140">auto</width>
						<font>MediaInfoFont</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$LOCALIZE[31967]:</label>
					</control>
					<control type="label">
						<width min="0" max="351">auto</width>
						<font>MediaInfoFont2</font>
						<textcolor>MediaInfoItemColor2</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<scroll>true</scroll>
						<label fallback="31001">$INFO[Window(Home).Property(NextAired.NextSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.NextEpisodeNumber),E,.]$INFO[Window(Home).Property(NextAired.NextTitle), ,]$INFO[Window(Home).Property(NextAired.NextDate), (,)]</label>
					</control>
				</control>
				
				<control type="grouplist">
					<description>Next episode</description>
					<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + String.IsEmpty(Window(Home).Property(NextAired.Nextdate))</visible>
					<top>25</top>
					<width>476</width>
					<orientation>horizontal</orientation>
					<control type="label">
						<width min="0" max="140">auto</width>
						<font>MediaInfoFont</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$LOCALIZE[20416]:</label>
					</control>
					<control type="label">
						<width min="0" max="351">auto</width>
						<font>MediaInfoFont2</font>
						<textcolor>MediaInfoItemColor2</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label fallback="31001">$INFO[ListItem.Premiered]</label>
					</control>
				</control>
			</control>
			
			<control type="textbox">
				<description>Plot</description>
				<left>227</left>
				<top>376</top>
				<width>476</width>
				<height>208</height>
				<font>MediaInfoDescFont</font>
				<textcolor>MediaInfoColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>justify</align>
				<label fallback="31203">$INFO[ListItem.Plot]</label>
				<wrapmultiline>true</wrapmultiline>
				<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
				<visible>!Container.OnNext + !Container.OnPrevious</visible> 
				<include>ControlsOpenCloseAnim</include>
				<visible>!System.HasAddon(script.tv.show.next.aired) | [System.HasAddon(script.tv.show.next.aired) + Skin.HasSetting(EnableNextAiredInfo)]</visible>
			</control>
			
			<control type="textbox">
				<description>Plot</description>
				<left>227</left>
				<top>438</top>
				<width>476</width>
				<height>146</height>
				<font>MediaInfoDescFont</font>
				<textcolor>MediaInfoColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>justify</align>
				<label fallback="31203">$INFO[ListItem.Plot]</label>
				<wrapmultiline>true</wrapmultiline>
				<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
				<visible>!Container.OnNext + !Container.OnPrevious</visible> 
				<include>ControlsOpenCloseAnim</include>
				<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
			</control>
			
			<control type="grouplist">
				<description>Media Info</description>
				<left>44</left>
				<top>585</top>
				<width>660</width>
				<align>center</align>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="label">
					<description>Seasons</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[33054]:</label>
				</control>
				<control type="label">
					<description>Seasons Value</description>
					<width min="0" max="166">auto</width>
					<scroll>true</scroll>
					<include>ListInfoViewCatValueLabel</include>
					<label fallback="31001">$INFO[ListItem.Property(TotalSeasons)]</label>
				</control>
				<include>ListInfoViewDot</include>
				<control type="label">
					<description>Episodes</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[20360]:</label>
				</control>
				<control type="label">
					<description>Episodes Value</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatValueLabel</include>
					<label fallback="31001">$INFO[ListItem.Episode]</label>
				</control>
				<include>ListInfoViewDot</include>
				<control type="label">
					<description>Year</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[345]:</label>
				</control>
				<control type="label">
					<description>Year Value</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatValueLabel</include>
					<label fallback="31001">$INFO[ListItem.Year]</label>
				</control>
				<include>ListInfoViewDot</include>
				<control type="label">
					<description>Rating</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[563]:</label>
				</control>
				<control type="label">
					<description>Rating Value</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatValueLabel</include>
					<label fallback="31001">$VAR[RatingType]</label>
				</control>
			</control>
		</control>
	</include>
	
	<include name="SeasonsListInfoPosterMode">
		<control type="group">
			<visible>Container.Content(Seasons)</visible>
			
			<control type="image">
				<description>Cover Background</description>
				<left>39</left>
				<top>337</top>
				<width>177</width>
				<height>250</height>
				<texture background="true" border="4">panels/panel3.png</texture>
				<aspectratio>stretch</aspectratio>
				<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
			</control>
			
			<control type="image">
				<description>Default Cover</description>
				<left>39</left>
				<top>337</top>
				<width>177</width>
				<height>250</height>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<bordersize>30</bordersize>
				<aspectratio>keep</aspectratio>
				<fadetime>IconCrossfadeTime</fadetime>
				<visible>String.IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="60" condition="true">Conditional</animation>
			</control>
			
			<control type="image">
				<description>Cover</description>
				<left>39</left>
				<top>337</top>
				<width>177</width>
				<height>250</height>
				<texture background="true" diffuse="covers/list-info-poster-diffuse.png">$VAR[PosterThumb]</texture>
				<bordersize>1</bordersize>
				<aspectratio scalediffuse="false">scale</aspectratio>
				<fadetime>IconCrossfadeTime</fadetime>
			</control>

			<control type="label">
				<description>Genre</description>
				<left>227</left>
				<top>341</top>
				<width>476</width>
				<align>center</align>
				<font>MediaInfoFont2</font>
				<textcolor>MediaInfoItemColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>[UPPERCASE]$VAR[SeasonGenre][/UPPERCASE]</label>
				<scroll>true</scroll>
			</control>
			
			<control type="group">
				<left>227</left>
				<top>378</top>
				<control type="grouplist">
					<description>Latest episode</description>
					<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
					<width>476</width>
					<orientation>horizontal</orientation>
					<control type="label">
						<width min="0" max="140">auto</width>
						<font>MediaInfoFont</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$LOCALIZE[31966]:</label>
					</control>
					<control type="label">
						<width min="0" max="336">auto</width>
						<font>MediaInfoFont2</font>
						<textcolor>MediaInfoItemColor2</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<scroll>true</scroll>
						<label fallback="31001">$INFO[Window(Home).Property(NextAired.LatestSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.LatestEpisodeNumber),E,.]$INFO[Window(Home).Property(NextAired.LatestTitle), ,]$INFO[Window(Home).Property(NextAired.LatestDate), (,)]</label>
					</control>
				</control>
				
				<control type="grouplist">
					<description>Next episode</description>
					<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + !String.IsEmpty(Window(Home).Property(NextAired.Nextdate))</visible>
					<top>25</top>
					<width>476</width>
					<orientation>horizontal</orientation>
					<control type="label">
						<width min="0" max="140">auto</width>
						<font>MediaInfoFont</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$LOCALIZE[31967]:</label>
					</control>
					<control type="label">
						<width min="0" max="351">auto</width>
						<font>MediaInfoFont2</font>
						<textcolor>MediaInfoItemColor2</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<scroll>true</scroll>
						<label fallback="31001">$INFO[Window(Home).Property(NextAired.NextSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.NextEpisodeNumber),E,.]$INFO[Window(Home).Property(NextAired.NextTitle), ,]$INFO[Window(Home).Property(NextAired.NextDate), (,)]</label>
					</control>
				</control>
				
				<control type="grouplist">
					<description>Next episode</description>
					<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + String.IsEmpty(Window(Home).Property(NextAired.Nextdate))</visible>
					<top>25</top>
					<width>476</width>
					<orientation>horizontal</orientation>
					<control type="label">
						<width min="0" max="140">auto</width>
						<font>MediaInfoFont</font>
						<textcolor>MediaInfoItemColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label>$LOCALIZE[20416]:</label>
					</control>
					<control type="label">
						<width min="0" max="351">auto</width>
						<font>MediaInfoFont2</font>
						<textcolor>MediaInfoItemColor2</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<label fallback="31001">$INFO[ListItem.Premiered]</label>
					</control>
				</control>
			</control>
			
			<control type="textbox">
				<description>Plot</description>
				<left>227</left>
				<top>376</top>
				<width>476</width>
				<height>208</height>
				<font>MediaInfoDescFont</font>
				<textcolor>MediaInfoColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>justify</align>
				<label fallback="31203">$INFO[Container.ShowPlot]</label>
				<wrapmultiline>true</wrapmultiline>
				<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
				<include>ControlsOpenCloseAnim</include>
				<visible>!System.HasAddon(script.tv.show.next.aired) | [System.HasAddon(script.tv.show.next.aired) + Skin.HasSetting(EnableNextAiredInfo)]</visible>
			</control>
			
			<control type="textbox">
				<description>Plot</description>
				<left>227</left>
				<top>438</top>
				<width>476</width>
				<height>146</height>
				<font>MediaInfoDescFont</font>
				<textcolor>MediaInfoColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>justify</align>
				<label fallback="31203">$INFO[Container.ShowPlot]</label>
				<wrapmultiline>true</wrapmultiline>
				<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
				<include>ControlsOpenCloseAnim</include>
				<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
			</control>
			
			<control type="grouplist">
				<description>Media Info</description>
				<left>44</left>
				<top>585</top>
				<width>660</width>
				<align>center</align>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="label">
					<description>Studio</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[572]:</label>
				</control>
				<control type="label">
					<description>Studio Value</description>
					<width min="0" max="200">auto</width>
					<include>ListInfoViewCatValueLabel</include>
					<scroll>true</scroll>
					<label fallback="31001">$VAR[SeasonStudio]</label>
				</control>
				<include>ListInfoViewDot</include>
				<control type="label">
					<description>Premiered</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[31936]:</label>
				</control>
				<control type="label">
					<description>Premiered Value</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatValueLabel</include>
					<label fallback="31001">$VAR[SeasonPremiered]</label>
				</control>
				<include>ListInfoViewDot</include>
				<control type="label">
					<description>Episodes</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[20360]:</label>
				</control>
				<control type="label">
					<description>Episodes Value</description>
					<width min="0" max="110">auto</width>
					<include>ListInfoViewCatValueLabel</include>
					<label fallback="31001">$INFO[ListItem.Episode]</label>
				</control>
			</control>
		</control>
	</include>
	
	<include name="TVShowsListInfoView2">
		<control type="group" id="500">
	        <defaultcontrol always="true">65</defaultcontrol>
			<visible>Control.IsVisible(65)</visible>
			<include>MediaViewOpenCloseAnim</include>
			<include>ViewContentPanel</include>
			<include>ListInfo2MediaInfoPanelCommon</include>
			
			<control type="group">
				<visible>!ListItem.IsParentFolder</visible>
				<include condition="!Skin.HasSetting(ShowTVShowsLandscape)">ListInfo2PanelFanart</include>
				<include condition="Skin.HasSetting(ShowTVShowsLandscape)">ListInfo2PanelLandscape</include>
				
				<control type="group">
					<visible>!Container.Content(Seasons)</visible>
					<include content="ListInfo2MediaInfoArea">
						<param name="visible" value="true" />
						<param name="Grouplist1LabelWidth" value="110" />
						<param name="Grouplist1Label" value="$LOCALIZE[33054]" />
						<param name="Grouplist1InfoWidth" value="310" />
						<param name="Grouplist1Info" value="$INFO[ListItem.Property(TotalSeasons)]" />
						<param name="Grouplist2LabelWidth" value="110" />
						<param name="Grouplist2Label" value="$LOCALIZE[20360]" />
						<param name="Grouplist2InfoWidth" value="310" />
						<param name="Grouplist2Info" value="$INFO[ListItem.Episode]" />
						<param name="Grouplist3LabelWidth" value="110" />
						<param name="Grouplist3Label" value="$LOCALIZE[345]" />
						<param name="Grouplist3InfoWidth" value="110" />
						<param name="Grouplist3Info" value="$INFO[ListItem.Year]" />
						<param name="Grouplist4LabelWidth" value="110" />
						<param name="Grouplist4Label" value="$LOCALIZE[563]" />
						<param name="Grouplist4InfoWidth" value="110" />
						<param name="Grouplist4Info" value="$VAR[RatingType]" />
					</include>
					
					<include content="ListInfo2Plot">
						<param name="fallback" value="31203" />
						<param name="label" value="$INFO[ListItem.Plot]" />
						<param name="visible" value="!Container.OnNext + !Container.OnPrevious" />
					</include>
				</control>
				
				<control type="group">
					<visible>Container.Content(Seasons)</visible>
					<include content="ListInfo2MediaInfoArea">
						<param name="visible" value="true" />
						<param name="Grouplist1LabelWidth" value="110" />
						<param name="Grouplist1Label" value="$LOCALIZE[20364]" />
						<param name="Grouplist1InfoWidth" value="310" />
						<param name="Grouplist1Info" value="$INFO[Container.ShowTitle]" />
						<param name="Grouplist2LabelWidth" value="110" />
						<param name="Grouplist2Label" value="$LOCALIZE[572]" />
						<param name="Grouplist2InfoWidth" value="310" />
						<param name="Grouplist2Info" value="$VAR[SeasonStudio]" />
						<param name="Grouplist3LabelWidth" value="110" />
						<param name="Grouplist3Label" value="$LOCALIZE[345]" />
						<param name="Grouplist3InfoWidth" value="110" />
						<param name="Grouplist3Info" value="$INFO[ListItem.Year]" />
						<param name="Grouplist4LabelWidth" value="110" />
						<param name="Grouplist4Label" value="$LOCALIZE[20360]" />
						<param name="Grouplist4InfoWidth" value="110" />
						<param name="Grouplist4Info" value="$INFO[ListItem.Property(TotalEpisodes)]" />
					</include>
					
					<include content="ListInfo2Plot">
						<param name="fallback" value="31203" />
						<param name="label" value="$INFO[Container.ShowPlot]" />
						<param name="visible" value="true" />
					</include>
				</control>
			</control>
			
			<control type="list" id="65">
				<viewtype label="31112">list</viewtype>
				<left>595</left>
				<top>110</top>
				<width>630</width>
				<height>518</height>
				<pagecontrol>90708</pagecontrol>
				<preloaditems>2</preloaditems>
				<scrolltime tween="sine" easing="inout">300</scrolltime>
				<onup>65</onup>
				<ondown>65</ondown>
				<onleft>850</onleft>
				<onright>150</onright>
				<visible>Container.Content(TVShows) | Container.Content(Seasons)</visible>
				<include condition="Skin.String(TVShowsListInfo2Style,1) | Skin.String(TVShowsListInfo2Style,3)">TVShowsListInfo2ItemLayout</include>
				<include condition="[String.IsEmpty(Skin.String(TVShowsListInfo2Style)) | Skin.String(TVShowsListInfo2Style,2)] + Skin.HasSetting(UseTVShowsPosterCover)">TVShowsListInfo2TallStyleItemLayout</include>
				<include condition="[String.IsEmpty(Skin.String(TVShowsListInfo2Style)) | Skin.String(TVShowsListInfo2Style,2)] + !Skin.HasSetting(UseTVShowsPosterCover)">TVShowsListInfo2BannerStyleItemLayout</include>
				<include condition="Skin.String(TVShowsListInfo2Style,1)">TVShowsListInfo2FocusedLayout</include>
				<include condition="[String.IsEmpty(Skin.String(TVShowsListInfo2Style)) | Skin.String(TVShowsListInfo2Style,2) | Skin.String(TVShowsListInfo2Style,3)] + Skin.HasSetting(UseTVShowsPosterCover)">TVShowsListInfo2TallStyleFocusedLayout</include>
				<include condition="[String.IsEmpty(Skin.String(TVShowsListInfo2Style)) | Skin.String(TVShowsListInfo2Style,2) | Skin.String(TVShowsListInfo2Style,3)] + !Skin.HasSetting(UseTVShowsPosterCover)">TVShowsListInfo2BannerStyleFocusedLayout</include>
			</control>
			
			<include content="ListInfo2ViewScrollbar">
					<param name="id" value="90708" />
				</include>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<top>BottomPaneOffsetY</top>
				<!--<include>InfoPaneImage</include>-->
				<include>InfoPaneMediaDetails</include>
				<include condition="!Skin.HasSetting(DisableTVShowsLogo)">InfoPaneClearLogo</include>
				<include>BottomPaneOpenCloseAnim</include>
			</control>

			<include>ViewsDialogPopUpScreenDim</include>
		</control>
	</include>
	
	<include name="TVShowsListInfo2ItemLayout">
		<itemlayout height="37">
			<control type="image">
				<width>630</width>
				<height>37</height>
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<description>Icon</description>
				<left>5</left>
				<top>6</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>String.IsEmpty(ListItem.Title)</visible>
			</control>
			<control type="label">
				<description>Unwatched Episodes</description>
				<left>5</left>
				<width>26</width>
				<height>37</height>
				<font>ListFont3</font>
				<textcolor>ListColor</textcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<visible>$EXP[UnwatchedEpisodes99-]</visible>
			</control>
			<control type="label">
				<description>Unwatched Episodes</description>
				<left>5</left>
				<width>26</width>
				<height>37</height>
				<font>ListFont4</font>
				<textcolor>ListColor</textcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
				<visible>$EXP[UnwatchedEpisodes99+]</visible>
			</control>
			<control type="image">
				<description>Unwatched Overlay</description>
				<left>5</left>
				<width>26</width>
				<height>37</height>
				<aligny>center</aligny>
				<texture background="true">OverlayClean.png</texture>
				<aspectratio>keep</aspectratio>
				<visible>$EXP[UnwatchedEpisodesOverlay]</visible>
			</control>
			<control type="image">
				<description>Watched Overlay</description>
				<left>5</left>
				<width>26</width>
				<height>37</height>
				<aligny>center</aligny>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio>keep</aspectratio>
				<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
			</control>
			<control type="label">
				<description>Label</description>
				<left>35</left>
				<width>490</width>
				<height>37</height>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<aligny>center</aligny>
				<info>ListItem.Label</info>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>420</left>
				<width>200</width>
				<height>37</height>
				<font>ListFont2</font>
				<textcolor>ListColor3</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>right</align>
				<aligny>center</aligny>
				<info>ListItem.Label2</info>
				<visible>[Container.Content(TVShows) + Skin.HasSetting(DoNotUseStarRatingTVShows)] | Container.Content(Seasons)</visible>
			</control>
			<control type="image">
				<description>Star Rating</description>
				<left>520</left>
				<top>10</top>
				<width>100</width>
				<height>16</height>
				<texture background="true">$VAR[StarRating]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>![String.IsEmpty(ListItem.Rating) + String.IsEmpty(ListItem.UserRating)] + !Skin.HasSetting(DoNotUseStarRatingTVShows) + !Container.Content(Seasons)</visible>
				<animation effect="fade" end="70" condition="true">Conditional</animation>
			</control>
		</itemlayout>
	</include>
	
	<include name="TVShowsListInfo2FocusedLayout">
		<focusedlayout height="37">
			<control type="image">
				<width>630</width>
				<height>37</height>
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<width>630</width>
				<height>36</height>
				<texture border="4">views/list-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>Control.HasFocus(65)</visible>
				<include>ListViewSelectFadeAnim</include>
				<include condition="!Skin.HasSetting(DisableListScrollAnim)">ListViewScrollAnim</include>
			</control>
			<control type="image">
				<width>630</width>
				<height>36</height>
				<texture border="4">views/list-alt-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!Control.HasFocus(65)</visible>
				<include>ListViewSelectFadeAnim2</include>
			</control>
			<control type="group">
				<include condition="!Skin.HasSetting(DisableListFocusAnim)">ListViewFocusAnim</include>
				<control type="image">
					<description>Icon</description>
					<left>5</left>
					<top>6</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
					<aspectratio>stretch</aspectratio>
					<visible>String.IsEmpty(ListItem.Title)</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<left>5</left>
					<width>26</width>
					<height>37</height>
					<font>ListFont3</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<visible>$EXP[UnwatchedEpisodes99-]</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<left>5</left>
					<width>26</width>
					<height>37</height>
					<font>ListFont4</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<visible>$EXP[UnwatchedEpisodes99+]</visible>
				</control>
				<control type="image">
					<description>Unwatched Overlay</description>
					<left>5</left>
					<width>26</width>
					<height>37</height>
					<aligny>center</aligny>
					<texture background="true">OverlayClean.png</texture>
					<aspectratio>keep</aspectratio>
					<visible>$EXP[UnwatchedEpisodesOverlay]</visible>
				</control>
				<control type="image">
					<description>Watched Overlay</description>
					<left>5</left>
					<width>26</width>
					<height>37</height>
					<aligny>center</aligny>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
				</control>
				<control type="label">
					<description>Label</description>
					<left>35</left>
					<width>490</width>
					<height>37</height>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<aligny>center</aligny>
					<info>ListItem.Label</info>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>420</left>
					<width>200</width>
					<height>37</height>
					<font>ListFont2</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>right</align>
					<aligny>center</aligny>
					<info>ListItem.Label2</info>
					<visible>[Container.Content(TVShows) + Skin.HasSetting(DoNotUseStarRatingTVShows)] | Container.Content(Seasons)</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>520</left>
					<top>10</top>
					<width>100</width>
					<height>16</height>
					<texture background="true">$VAR[StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>![String.IsEmpty(ListItem.Rating) + String.IsEmpty(ListItem.UserRating)] + !Skin.HasSetting(DoNotUseStarRatingTVShows) + !Container.Content(Seasons)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
			</control>
		</focusedlayout>
	</include>
	
	<include name="TVShowsListInfo2TallStyleItemLayout">
		<itemlayout height="74">
			<control type="image">
				<width>630</width>
				<height>74</height>
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<description>Cover</description>
				<width>53</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$VAR[PosterThumb]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image">
				<description>Dim</description>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">dim.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!String.IsEmpty(ListItem.Thumb)</visible>
				<include>CoverDimAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>String.IsEmpty(ListItem.Thumb)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>
			<control type="label">
				<description>Label</description>
				<left>60</left>
				<top>12</top>
				<width>465</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="label">
				<description>Label2</description>
				<left>60</left>
				<top>38</top>
				<width>465</width>
				<font>ListFont2</font>
				<textcolor>ListColor2</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$INFO[ListItem.Label2]$INFO[ListItem.Studio,  •  ,]</label>
			</control>
			<control type="label">
				<description>Year</description>
				<left>520</left>
				<top>38</top>
				<width>100</width>
				<font>ListFont2</font>
				<textcolor>ListColor3</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>right</align>
				<label>$INFO[ListItem.Year]</label>
			</control>
			<control type="label">
				<description>Rating</description>
				<left>520</left>
				<top>12</top>
				<width>100</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<label>$VAR[RatingType]</label>
				<align>right</align>
				<visible>Skin.HasSetting(DoNotUseStarRatingTVShows) + !Container.Content(Seasons) + ![String.IsEmpty(ListItem.Rating) + String.IsEmpty(ListItem.UserRating)]</visible>
			</control>
			<control type="image">
				<description>Star Rating</description>
				<left>520</left>
				<top>16</top>
				<width>100</width>
				<height>16</height>
				<texture background="true">$VAR[StarRating]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>![String.IsEmpty(ListItem.Rating) + String.IsEmpty(ListItem.UserRating)] + !Skin.HasSetting(DoNotUseStarRatingTVShows) + !Container.Content(Seasons)</visible>
				<animation effect="fade" end="70" condition="true">Conditional</animation>
			</control>
			<control type="image">
				<description>Overlay</description>
				<left>24</left>
				<top>45</top>
				<width>20</width>
				<height>20</height>
				<texture background="true">$INFO[ListItem.Overlay]</texture>
				<aspectratio align="right">keep</aspectratio>
				<visible>!Skin.HasSetting(HideTVShowsListInfo2Overlay) + !Container.Content(Seasons)</visible>
			</control>
			<control type="group">
				<visible>Container.Content(Seasons) + !Skin.HasSetting(HideTVShowsListInfo2Overlay)</visible>
				<left>595</left>
				<top>8</top>
				<control type="image">
					<description>Unwatched Overlay</description>
					<width>26</width>
					<height>26</height>
					<texture>OverlayClean.png</texture>
					<aspectratio>keep</aspectratio>
					<visible>$EXP[UnwatchedEpisodesOverlay]</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<width>26</width>
					<height>26</height>
					<font>ListFont3</font>
					<textcolor>ListColor</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<visible>$EXP[UnwatchedEpisodes99-]</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<width>26</width>
					<height>26</height>
					<font>ListFont4</font>
					<textcolor>ListColor</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<visible>$EXP[UnwatchedEpisodes99+]</visible>
				</control>
				<control type="image">
					<description>Watched Overlay</description>
					<width>26</width>
					<height>26</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
				</control>
			</control>
		</itemlayout>
	</include>
	
	<include name="TVShowsListInfo2TallStyleFocusedLayout">
		<focusedlayout height="74">
			<control type="image">
				<width>630</width>
				<height>74</height>
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<width>630</width>
				<height>73</height>
				<texture border="4">views/list-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>Control.HasFocus(65)</visible>
				<include>ListViewSelectFadeAnim</include>
				<include condition="!Skin.HasSetting(DisableListScrollAnim) + ![String.IsEmpty(Skin.String(TVShowsListInfo2Style)) | Skin.String(TVShowsListInfo2Style,3)]">ListViewScrollAnim2</include>
				<include condition="!Skin.HasSetting(DisableListScrollAnim) + [String.IsEmpty(Skin.String(TVShowsListInfo2Style)) | Skin.String(TVShowsListInfo2Style,3)]">ListViewScrollAnim</include>
			</control>
			<control type="image">
				<width>630</width>
				<height>73</height>
				<texture border="4">views/list-alt-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!Control.HasFocus(65)</visible>
				<include>ListViewSelectFadeAnim2</include>
			</control>
			<control type="image">
				<description>Cover</description>
				<width>53</width>
				<height>73</height>
				<bordertexture border="7">covers/cover-case-nofocus.png</bordertexture>
				<bordersize>5</bordersize>
				<texture background="true">$VAR[PosterThumb]</texture>
				<aspectratio>scale</aspectratio>
				<include condition="!Skin.HasSetting(DisableListFocusAnim)">ListViewCoverFocusAnim</include>
			</control>
			<control type="image">
				<description>Default Cover</description>
				<width>53</width>
				<height>73</height>
				<bordersize>5</bordersize>
				<texture background="true">$INFO[ListItem.ActualIcon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>String.IsEmpty(ListItem.Thumb)</visible>
				<include condition="!Skin.HasSetting(DisableListFocusAnim)">ListViewCoverFocusAnim</include>
			</control>
			<control type="group">
				<include condition="!Skin.HasSetting(DisableListFocusAnim)">ListViewFocusAnim</include>
				<control type="label">
					<description>Label</description>
					<left>60</left>
					<top>12</top>
					<width>465</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Label]</label>
					<scroll>true</scroll>
				</control>
				<control type="label">
					<description>Label2</description>
					<left>60</left>
					<top>38</top>
					<width>465</width>
					<font>ListFont2</font>
					<textcolor>ListColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$INFO[ListItem.Label2]$INFO[ListItem.Studio,  •  ,]</label>
				</control>
				<control type="label">
					<description>Year</description>
					<left>520</left>
					<top>38</top>
					<width>100</width>
					<font>ListFont2</font>
					<textcolor>ListColor3</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>right</align>
					<label>$INFO[ListItem.Year]</label>
				</control>
				<control type="label">
					<description>Rating</description>
					<left>520</left>
					<top>12</top>
					<width>100</width>
					<font>ListFont</font>
					<textcolor>ListColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>$VAR[RatingType]</label>
					<align>right</align>
					<visible>Skin.HasSetting(DoNotUseStarRatingTVShows) + !Container.Content(Seasons) + ![String.IsEmpty(ListItem.Rating) + String.IsEmpty(ListItem.UserRating)]</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>520</left>
					<top>16</top>
					<width>100</width>
					<height>16</height>
					<texture background="true">$VAR[StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>![String.IsEmpty(ListItem.Rating) + String.IsEmpty(ListItem.UserRating)] + !Skin.HasSetting(DoNotUseStarRatingTVShows) + !Container.Content(Seasons)</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>24</left>
					<top>45</top>
					<width>20</width>
					<height>20</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio align="right">keep</aspectratio>
					<include condition="!Skin.HasSetting(DisableListFocusAnim)">ListViewCoverFocusAnim</include>
					<visible>!Skin.HasSetting(HideTVShowsListInfo2Overlay) + !Container.Content(Seasons)</visible>
				</control>
				<control type="group">
					<visible>Container.Content(Seasons) + !Skin.HasSetting(HideTVShowsListInfo2Overlay)</visible>
					<left>595</left>
					<top>8</top>
					<control type="image">
						<description>Unwatched Overlay</description>
						<width>26</width>
						<height>26</height>
						<texture>OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<visible>$EXP[UnwatchedEpisodesOverlay]</visible>
					</control>
					<control type="image">
						<description>Unwatched Overlay</description>
						<width>26</width>
						<height>26</height>
						<texture>OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<visible>$EXP[UnwatchedEpisodesOverlay]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<width>26</width>
						<height>26</height>
						<font>ListFont3</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<visible>$EXP[UnwatchedEpisodes99-]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<width>26</width>
						<height>26</height>
						<font>ListFont4</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<visible>$EXP[UnwatchedEpisodes99+]</visible>
					</control>
					<control type="image">
						<description>Watched Overlay</description>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
				</control>
			</control>
		</focusedlayout>
	</include>
	
	<include name="TVShowsListInfo2BannerStyleItemLayout">
		<itemlayout height="129">
			<control type="image">
				<width>630</width>
				<height>129</height>
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<top>2</top>
				<width>630</width>
				<height>124</height>
				<align>center</align>
				<bordersize>20</bordersize>
				<texture background="true">$INFO[ListItem.Icon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>String.IsEmpty(ListItem.Title)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>
			<control type="group">
				<visible>!String.IsEmpty(ListItem.Title)</visible>
				<control type="image">
					<description>Cover</description>
					<left>5</left>
					<top>7</top>
					<width>620</width>
					<height>114</height>
					<texture background="true">$VAR[BannerThumb]</texture>
					<aspectratio>scale</aspectratio>
				</control>
				<control type="image">
					<description>Dim</description>
					<left>5</left>
					<top>7</top>
					<width>620</width>
					<height>114</height>
					<texture background="true">dim.png</texture>
					<aspectratio>stretch</aspectratio>
					<visible>!String.IsEmpty(ListItem.Thumb)</visible>
					<include>CoverDimAnim</include>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<width>124</width>
					<height>124</height>
					<bordersize>10</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>String.IsEmpty(ListItem.Thumb)</visible>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
				</control>
				<control type="label">
					<description>Label</description>
					<top>26</top>
					<left>134</left>
					<width>372</width>
					<font>ListFont</font>
					<textcolor>ListColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
					<visible>String.IsEmpty(ListItem.Thumb)</visible>
				</control>
				<control type="label">
					<description>Label</description>
					<top>26</top>
					<width>610</width>
					<align>center</align>
					<font>ListFont</font>
					<textcolor>ListColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
					<visible>String.IsEmpty(ListItem.Art(banner)) + ![String.IsEqual(ListItem.Label,$LOCALIZE[20366]) + String.IsEmpty(ListItem.Thumb)]</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>516</left>
					<top>10</top>
					<width>100</width>
					<height>16</height>
					<texture background="true">$VAR[StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows) + !Container.Content(Seasons) + ![String.IsEmpty(ListItem.Rating) + String.IsEmpty(ListItem.UserRating)]</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>585</left>
					<top>84</top>
					<width>26</width>
					<height>26</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsListInfo2Overlay)</visible>
					<animation effect="fade" end="80" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Unwatched Overlay</description>
					<left>585</left>
					<top>84</top>
					<width>26</width>
					<height>26</height>
					<aligny>center</aligny>
					<texture background="true">OverlayClean.png</texture>
					<aspectratio align="right">keep</aspectratio>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsListInfo2Overlay) + $EXP[UnwatchedEpisodesOverlay]</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<top>88</top>
					<left>585</left>
					<width>26</width>
					<font>ListFont3</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsListInfo2Overlay) + $EXP[UnwatchedEpisodes99-]</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<top>88</top>
					<left>585</left>
					<width>26</width>
					<font>ListFont4</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsListInfo2Overlay) + $EXP[UnwatchedEpisodes99+]</visible>
				</control>
			</control>
		</itemlayout>
	</include>
	
	<include name="TVShowsListInfo2BannerStyleFocusedLayout">
		<focusedlayout height="129">
			<control type="image">
				<width>630</width>
				<height>129</height>
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<width>630</width>
				<height>128</height>
				<texture border="4">views/list-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>Control.HasFocus(65)</visible>
				<include>ListViewSelectFadeAnim</include>
				<include condition="!Skin.HasSetting(DisableListScrollAnim) + [String.IsEmpty(Skin.String(TVShowsListInfo2Style)) | Skin.String(TVShowsListInfo2Style,3)]">ListViewScrollAnim</include>
			</control>
			<control type="image">
				<width>630</width>
				<height>128</height>
				<texture border="4">views/list-alt-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!Control.HasFocus(65)</visible>
				<include>ListViewSelectFadeAnim2</include>
			</control>
			<control type="image">
				<top>2</top>
				<width>630</width>
				<height>124</height>
				<align>center</align>
				<bordersize>20</bordersize>
				<texture background="true">$INFO[ListItem.Icon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>String.IsEmpty(ListItem.Title)</visible>
			</control>
			<control type="group">
				<visible>!String.IsEmpty(ListItem.Title)</visible>
				<include condition="!Skin.HasSetting(DisableListFocusAnim)">ListViewFocusAnim</include>
				<control type="image">
					<description>Cover</description>
					<left>5</left>
					<top>7</top>
					<width>620</width>
					<height>114</height>
					<texture background="true">$VAR[BannerThumb]</texture>
					<aspectratio>scale</aspectratio>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<width>124</width>
					<height>124</height>
					<bordersize>10</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>String.IsEmpty(ListItem.Thumb)</visible>
				</control>
				<control type="label">
					<description>Label</description>
					<top>26</top>
					<left>134</left>
					<width>372</width>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
					<visible>String.IsEmpty(ListItem.Thumb)</visible>
				</control>
				<control type="label">
					<description>Label</description>
					<top>26</top>
					<width>610</width>
					<align>center</align>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
					<visible>String.IsEmpty(ListItem.Art(banner)) + ![String.IsEqual(ListItem.Label,$LOCALIZE[20366]) + String.IsEmpty(ListItem.Thumb)]</visible>
				</control>
				<control type="image">
					<description>Star Rating</description>
					<left>516</left>
					<top>10</top>
					<width>100</width>
					<height>16</height>
					<texture background="true">$VAR[StarRating]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows) + !Container.Content(Seasons) + ![String.IsEmpty(ListItem.Rating) + String.IsEmpty(ListItem.UserRating)]</visible>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Overlay</description>
					<left>585</left>
					<top>84</top>
					<width>26</width>
					<height>26</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio align="right">keep</aspectratio>
					<visible>!Skin.HasSetting(HideTVShowsListInfo2Overlay)</visible>
					<animation effect="fade" end="80" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Unwatched Overlay</description>
					<left>585</left>
					<top>84</top>
					<width>26</width>
					<height>26</height>
					<aligny>center</aligny>
					<texture background="true">OverlayClean.png</texture>
					<aspectratio align="right">keep</aspectratio>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsListInfo2Overlay) + $EXP[UnwatchedEpisodesOverlay]</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<top>88</top>
					<left>585</left>
					<width>26</width>
					<font>ListFont3</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsListInfo2Overlay) + $EXP[UnwatchedEpisodes99-]</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<top>88</top>
					<left>585</left>
					<width>26</width>
					<font>ListFont4</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<animation effect="fade" end="85" condition="true">Conditional</animation>
					<visible>!Skin.HasSetting(HideTVShowsListInfo2Overlay) + $EXP[UnwatchedEpisodes99+]</visible>
				</control>
			</control>
		</focusedlayout>
	</include>
	
	<include name="TVShowsListInfoView3">
		<control type="group" id="500">
	        <defaultcontrol always="true">589</defaultcontrol>
			<visible>Control.IsVisible(589)</visible>
			<include>MediaViewOpenCloseAnim</include>
			<include>ViewContentPanel</include>
			<include>ListInfo3MediaInfoPanelCommon</include>
			
			<control type="group">
				<visible>!String.IsEmpty(ListItem.Title)</visible>
				<include condition="!Skin.HasSetting(ShowTVShowsLandscape)">ListInfo3PanelFanart</include>
				<include condition="Skin.HasSetting(ShowTVShowsLandscape)">ListInfo3PanelLandscape</include>
				
				<control type="group">
					<description>Media Info Area</description>
					<left>38</left>
					<top>354</top>
		
					<control type="group">
						<visible>!Container.Content(Seasons)</visible>
					
						<control type="grouplist">
							<description>Seasons</description>
							<left>10</left>
							<width>400</width>
							<orientation>horizontal</orientation>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label>$LOCALIZE[33054]:</label>
							</control>
							<control type="label">
								<width min="0" max="190">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor2</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label fallback="31001">$INFO[ListItem.Property(TotalSeasons)]</label>
							</control>
						</control>
						
						<control type="grouplist">
							<description>Episodes</description>
							<left>10</left>
							<top>22</top>
							<width>400</width>
							<orientation>horizontal</orientation>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label>$LOCALIZE[20360]:</label>
							</control>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor2</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label fallback="31001">$INFO[ListItem.Property(TotalEpisodes)]</label>
							</control>
						</control>
						
						<control type="grouplist">
							<description>Year</description>
							<left>268</left>
							<width>130</width>
							<orientation>horizontal</orientation>
							<align>right</align>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label>$LOCALIZE[345]:</label>
							</control>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor2</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label fallback="31001">$INFO[ListItem.Year]</label>
							</control>
						</control>
						
						<control type="grouplist">
							<description>Rating</description>
							<left>268</left>
							<top>22</top>
							<width>130</width>
							<orientation>horizontal</orientation>
							<align>right</align>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label>$LOCALIZE[563]:</label>
							</control>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor2</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label fallback="31001">$VAR[RatingType]</label>
							</control>
						</control>
					</control>
					
					<control type="group">
						<visible>Container.Content(Seasons)</visible>
					
						<control type="grouplist">
							<description>TV Show</description>
							<left>10</left>
							<width>400</width>
							<orientation>horizontal</orientation>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label>$LOCALIZE[20364]:</label>
							</control>
							<control type="label">
								<width min="0" max="190">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor2</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label fallback="31001">$INFO[Container.ShowTitle]</label>
							</control>
						</control>
						
						<control type="grouplist">
							<description>Studio</description>
							<left>10</left>
							<top>22</top>
							<width>400</width>
							<orientation>horizontal</orientation>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label>$LOCALIZE[572]:</label>
							</control>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor2</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label fallback="31001">$VAR[SeasonStudio]</label>
							</control>
						</control>
						
						<control type="grouplist">
							<description>Year</description>
							<left>268</left>
							<width>130</width>
							<orientation>horizontal</orientation>
							<align>right</align>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label>$LOCALIZE[345]:</label>
							</control>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor2</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label fallback="31001">$INFO[ListItem.Year]</label>
							</control>
						</control>
						
						<control type="grouplist">
							<description>Episodes</description>
							<left>268</left>
							<top>22</top>
							<width>130</width>
							<orientation>horizontal</orientation>
							<align>right</align>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label>$LOCALIZE[20360]:</label>
							</control>
							<control type="label">
								<width min="0" max="110">auto</width>
								<font>MediaInfoFont</font>
								<textcolor>MediaInfoItemColor2</textcolor>
								<shadowcolor>ShadowColor</shadowcolor>
								<label fallback="31001">$INFO[ListItem.Property(TotalEpisodes)]</label>
							</control>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Latest episode</description>
						<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
						<left>10</left>
						<top>62</top>
						<width>400</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="140">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[31966]:</label>
						</control>
						<control type="label">
							<width min="0" max="250">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<scroll>true</scroll>
							<label fallback="31001">$INFO[Window(Home).Property(NextAired.LatestSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.LatestEpisodeNumber),E,.]$INFO[Window(Home).Property(NextAired.LatestTitle), ,]$INFO[Window(Home).Property(NextAired.LatestDate), (,)]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Next episode</description>
						<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + !String.IsEmpty(Window(Home).Property(NextAired.Nextdate))</visible>
						<left>10</left>
						<top>84</top>
						<width>400</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="140">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[31967]:</label>
						</control>
						<control type="label">
							<width min="0" max="265">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<scroll>true</scroll>
							<label fallback="31001">$INFO[Window(Home).Property(NextAired.NextSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.NextEpisodeNumber),E,.]$INFO[Window(Home).Property(NextAired.NextTitle), ,]$INFO[Window(Home).Property(NextAired.NextDate), (,)]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Premiered</description>
						<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + String.IsEmpty(Window(Home).Property(NextAired.Nextdate))</visible>
						<left>10</left>
						<top>84</top>
						<width>400</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="140">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[20416]:</label>
						</control>
						<control type="label">
							<width min="0" max="240">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$VAR[SeasonPremiered]</label>
						</control>
					</control>
				</control>
				
				<control type="textbox">
					<description>Plot</description>
					<left>48</left>
					<top>479</top>
					<width>388</width>
					<height>138</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$INFO[ListItem.Plot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
					<include>ControlsOpenCloseAnim</include>
					<visible>!Container.OnNext + !Container.OnPrevious</visible>
					<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + !Container.Content(Seasons)</visible>
				</control>
				
				<control type="textbox">
					<description>Plot</description>
					<left>48</left>
					<top>479</top>
					<width>388</width>
					<height>138</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$INFO[Container.ShowPlot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
					<include>ControlsOpenCloseAnim</include>
					<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + Container.Content(Seasons)</visible>
				</control>
				
				<control type="textbox">
					<left>48</left>
					<top>418</top>
					<width>388</width>
					<height>189</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$INFO[ListItem.Plot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
					<include>ControlsOpenCloseAnim</include>
					<visible>!Container.OnNext + !Container.OnPrevious</visible>
					<visible>[!System.HasAddon(script.tv.show.next.aired) | [System.HasAddon(script.tv.show.next.aired) + Skin.HasSetting(EnableNextAiredInfo)]] + !Container.Content(Seasons)</visible>
				</control>
				
				<control type="textbox">
					<left>48</left>
					<top>418</top>
					<width>388</width>
					<height>189</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$INFO[Container.ShowPlot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
					<include>ControlsOpenCloseAnim</include>
					<visible>[!System.HasAddon(script.tv.show.next.aired) | [System.HasAddon(script.tv.show.next.aired) + Skin.HasSetting(EnableNextAiredInfo)]] + Container.Content(Seasons)</visible>
				</control>
				
				<include>ListInfo3RightPanelCover</include>
			</control>
			
			<control type="list" id="589">
				<viewtype label="31115">list</viewtype>
				<left>456</left>
				<top>110</top>
				<width>354</width>
				<height>518</height>
				<pagecontrol>90806</pagecontrol>
				<preloaditems>2</preloaditems>
				<scrolltime tween="sine" easing="inout">300</scrolltime>
				<onup>589</onup>
				<ondown>589</ondown>
				<onleft>850</onleft>
				<onright>150</onright>
				<visible>Container.Content(TVShows) | Container.Content(Seasons)</visible>
				<include condition="String.IsEmpty(Skin.String(TVShowsListInfo3Style)) | Skin.String(TVShowsListInfo3Style,1)">TVShowsListInfo3DefaultStyle</include>
				<include condition="Skin.String(TVShowsListInfo3Style,2)">TVShowsListInfo3BannerStyle</include>
			</control>
			
			<include content="ListInfo3ViewScrollbar">
				<param name="id" value="90806" />
			</include>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<top>BottomPaneOffsetY</top>
				<!--<include>InfoPaneImage</include>-->
				<include>InfoPaneMediaDetails</include>
				<include condition="!Skin.HasSetting(DisableTVShowsLogo)">InfoPaneClearLogo</include>
				<include>BottomPaneOpenCloseAnim</include>
			</control>

			<include>ViewsDialogPopUpScreenDim</include>
		</control>
	</include>
	
	<include name="TVShowsListInfo3DefaultStyle">
		<itemlayout height="37">
			<control type="image">
				<width>354</width>
				<height>37</height>
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<description>Icon</description>
				<left>4</left>
				<top>6</top>
				<width>24</width>
				<height>24</height>
				<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>String.IsEmpty(ListItem.Title)</visible>
				<include>ListViewOverlayFadeAnim</include>
			</control>
			<control type="label">
				<description>Label</description>
				<left>35</left>
				<width>310</width>
				<height>37</height>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<aligny>center</aligny>
				<info>ListItem.Label</info>
				<visible>String.IsEmpty(ListItem.Title)</visible>
			</control>
			<control type="group">
				<visible>!String.IsEmpty(ListItem.Title)</visible>
				<control type="label">
					<description>Label</description>
					<left>35</left>
					<width>310</width>
					<height>37</height>
					<font>ListFont</font>
					<textcolor>white</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<aligny>center</aligny>
					<info>ListItem.Label</info>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<left>3</left>
					<width>26</width>
					<height>37</height>
					<font>ListFont3</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<visible>$EXP[UnwatchedEpisodes99-]</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<left>3</left>
					<width>26</width>
					<height>37</height>
					<font>ListFont4</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<visible>$EXP[UnwatchedEpisodes99+]</visible>
				</control>
				<control type="image">
					<description>Unwatched Overlay</description>
					<left>3</left>
					<width>26</width>
					<height>37</height>
					<aligny>center</aligny>
					<texture background="true">OverlayClean.png</texture>
					<aspectratio>keep</aspectratio>
					<visible>$EXP[UnwatchedEpisodesOverlay]</visible>
				</control>
				<control type="image">
					<description>Watched Overlay</description>
					<left>3</left>
					<width>26</width>
					<height>37</height>
					<aligny>center</aligny>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
				</control>
			</control>
		</itemlayout>
		<focusedlayout height="37">
			<control type="image">
				<width>354</width>
				<height>37</height>
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<width>354</width>
				<height>36</height>
				<texture border="4">views/list-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>Control.HasFocus(589)</visible>
				<include>ListViewSelectFadeAnim</include>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewScrollAnim</include>
			</control>
			<control type="image">
				<width>354</width>
				<height>36</height>
				<texture border="4">views/list-alt-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!Control.HasFocus(589)</visible>
				<include>ListViewSelectFadeAnim2</include>
			</control>
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="image">
					<description>Icon</description>
					<left>4</left>
					<top>6</top>
					<width>24</width>
					<height>24</height>
					<texture background="true">$INFO[ListItem.ActualIcon].png</texture>
					<aspectratio>stretch</aspectratio>
					<visible>String.IsEmpty(ListItem.Title)</visible>
				</control>
				<control type="label">
					<description>Label</description>
					<left>35</left>
					<width>310</width>
					<height>37</height>
					<font>ListFont</font>
					<textcolor>SelectedColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<aligny>center</aligny>
					<info>ListItem.Label</info>
					<scroll>true</scroll>
					<visible>String.IsEmpty(ListItem.Title)</visible>
				</control>
				<control type="group">
					<visible>!String.IsEmpty(ListItem.Title)</visible>
					<control type="label">
						<description>Label</description>
						<left>35</left>
						<width>310</width>
						<height>37</height>
						<font>ListFont</font>
						<textcolor>SelectedColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Label]</label>
						<scroll>true</scroll>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>3</left>
						<width>26</width>
						<height>37</height>
						<font>ListFont3</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<visible>$EXP[UnwatchedEpisodes99-]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>3</left>
						<width>26</width>
						<height>37</height>
						<font>ListFont4</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<visible>$EXP[UnwatchedEpisodes99+]</visible>
					</control>
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>3</left>
						<width>26</width>
						<height>37</height>
						<aligny>center</aligny>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<visible>$EXP[UnwatchedEpisodesOverlay]</visible>
					</control>
					<control type="image">
						<description>Watched Overlay</description>
						<left>3</left>
						<width>26</width>
						<height>37</height>
						<aligny>center</aligny>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
				</control>
			</control>
		</focusedlayout>
	</include>
	
	<include name="TVShowsListInfo3BannerStyle">
		<itemlayout height="74">
			<control type="image">
				<width>354</width>
				<height>74</height>
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<description>Icon</description>
				<left>5</left>
				<width>74</width>
				<height>74</height>
				<bordersize>2</bordersize>
				<texture background="true">$INFO[ListItem.Icon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>String.IsEmpty(ListItem.Title)</visible>
				<animation effect="fade" end="40" condition="true">Conditional</animation>
			</control>
			<control type="label">
				<description>Label</description>
				<top>10</top>
				<left>89</left>
				<width>255</width>
				<font>ListFont</font>
				<textcolor>ListColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<info>ListItem.Label</info>
				<visible>String.IsEmpty(ListItem.Thumb)</visible>
			</control>
			<control type="group">
				<visible>!String.IsEmpty(ListItem.Title)</visible>
				<control type="image">
					<description>Cover</description>
					<left>5</left>
					<top>5</top>
					<width>344</width>
					<height>64</height>
					<texture background="true">$VAR[BannerThumb]</texture>
					<aspectratio>scale</aspectratio>
				</control>
				<control type="image">
					<description>Dim</description>
					<left>5</left>
					<top>5</top>
					<width>344</width>
					<height>64</height>
					<texture background="true">dim.png</texture>
					<aspectratio>stretch</aspectratio>
					<visible>!String.IsEmpty(ListItem.Thumb)</visible>
					<include>CoverDimAnim</include>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<left>5</left>
					<width>74</width>
					<height>74</height>
					<bordersize>2</bordersize>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>String.IsEmpty(ListItem.Thumb)</visible>
					<animation effect="fade" end="40" condition="true">Conditional</animation>
				</control>
					<control type="label">
					<description>Label</description>
					<top>10</top>
					<width>344</width>
					<align>center</align>
					<font>ListFont</font>
					<textcolor>ListColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
					<visible>String.IsEmpty(ListItem.Art(banner)) + ![String.IsEqual(ListItem.Label,$LOCALIZE[20366]) + String.IsEmpty(ListItem.Thumb)]</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<top>38</top>
					<left>317</left>
					<width>26</width>
					<height>26</height>
					<font>ListFont3</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<visible>$EXP[UnwatchedEpisodes99-]</visible>
				</control>
				<control type="label">
					<description>Unwatched Episodes</description>
					<top>38</top>
					<left>317</left>
					<width>26</width>
					<height>26</height>
					<font>ListFont4</font>
					<textcolor>white</textcolor>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
					<visible>$EXP[UnwatchedEpisodes99+]</visible>
				</control>
				<control type="image">
					<description>Unwatched Overlay</description>
					<top>38</top>
					<left>317</left>
					<width>26</width>
					<height>26</height>
					<texture background="true">OverlayClean.png</texture>
					<aspectratio>keep</aspectratio>
					<visible>$EXP[UnwatchedEpisodesOverlay]</visible>
				</control>
				<control type="image">
					<description>Watched Overlay</description>
					<top>38</top>
					<left>317</left>
					<width>26</width>
					<height>26</height>
					<texture background="true">$INFO[ListItem.Overlay]</texture>
					<aspectratio>keep</aspectratio>
					<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
				</control>
			</control>
		</itemlayout>
		<focusedlayout height="74">
			<control type="image">
				<width>354</width>
				<height>74</height>
				<texture border="0,0,10,2">views/list-separator.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<width>354</width>
				<height>73</height>
				<texture border="4">views/list-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>Control.HasFocus(589)</visible>
				<include>ListViewSelectFadeAnim</include>
				<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ListViewScrollAnim</include>
			</control>
			<control type="image">
				<width>354</width>
				<height>73</height>
				<texture border="4">views/list-alt-focus.png</texture>
				<aspectratio>stretch</aspectratio>
				<visible>!Control.HasFocus(589)</visible>
				<include>ListViewSelectFadeAnim2</include>
			</control>
			<control type="label">
				<description>Label</description>
				<top>10</top>
				<left>89</left>
				<width>255</width>
				<font>ListFont</font>
				<textcolor>SelectedColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<scroll>true</scroll>
				<info>ListItem.Label</info>
				<visible>String.IsEmpty(ListItem.Thumb)</visible>
			</control>
			<control type="group">
				<include>ListViewFocusAnim</include>
				<control type="image">
					<description>Icon</description>
					<left>5</left>
					<width>74</width>
					<height>74</height>
					<align>center</align>
					<bordersize>2</bordersize>
					<texture background="true">$INFO[ListItem.Icon]</texture>
					<aspectratio>keep</aspectratio>
					<visible>String.IsEmpty(ListItem.Title)</visible>
				</control>
				<control type="group">
					<visible>!String.IsEmpty(ListItem.Title)</visible>
					<control type="image">
						<description>Cover</description>
						<left>5</left>
						<top>5</top>
						<width>344</width>
						<height>64</height>
						<texture background="true">$VAR[BannerThumb]</texture>
						<aspectratio>scale</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<left>5</left>
						<width>74</width>
						<height>74</height>
						<bordersize>2</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>String.IsEmpty(ListItem.Thumb)</visible>
					</control>
					<control type="label">
						<description>Label</description>
						<top>10</top>
						<width>344</width>
						<align>center</align>
						<font>ListFont</font>
						<textcolor>SelectedColor</textcolor>
						<shadowcolor>ShadowColor</shadowcolor>
						<scroll>true</scroll>
						<label>[UPPERCASE]$INFO[ListItem.Label][/UPPERCASE]</label>
						<visible>String.IsEmpty(ListItem.Art(banner)) + ![String.IsEqual(ListItem.Label,$LOCALIZE[20366]) + String.IsEmpty(ListItem.Thumb)]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>38</top>
						<left>317</left>
						<width>26</width>
						<height>26</height>
						<font>ListFont3</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<visible>$EXP[UnwatchedEpisodes99-]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>38</top>
						<left>317</left>
						<width>26</width>
						<height>26</height>
						<font>ListFont4</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<visible>$EXP[UnwatchedEpisodes99+]</visible>
					</control>
					<control type="image">
						<description>Unwatched Overlay</description>
						<top>38</top>
						<left>317</left>
						<width>26</width>
						<height>26</height>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<visible>$EXP[UnwatchedEpisodesOverlay]</visible>
					</control>
					<control type="image">
						<description>Watched Overlay</description>
						<top>38</top>
						<left>317</left>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
				</control>
			</control>
		</focusedlayout>
	</include>
	
	<include name="TVShowsThumbsInfoView">
		<control type="group" id="500">
	        <defaultcontrol always="true">100</defaultcontrol>
			<visible>Control.IsVisible(100)</visible>
			<include>MediaViewOpenCloseAnim</include>
			<include>ViewContentPanel</include>
			<include>ListInfo3MediaInfoPanelCommon</include>
			
			<control type="group">
				<visible>!ListItem.IsParentFolder</visible>
				<include condition="!Skin.HasSetting(ShowTVShowsLandscape)">ListInfo3PanelFanart</include>
				<include condition="Skin.HasSetting(ShowTVShowsLandscape)">ListInfo3PanelLandscape</include>
				
				<control type="group">
					<description>Media Info Area</description>
					<left>38</left>
					<top>354</top>
		
					<control type="grouplist">
						<description>Studio</description>
						<left>10</left>
						<width>400</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[33054]:</label>
						</control>
						<control type="label">
							<width min="0" max="190">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Property(TotalSeasons)]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Episodes</description>
						<left>10</left>
						<top>22</top>
						<width>400</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[20360]:</label>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Episode]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Year</description>
						<left>268</left>
						<width>130</width>
						<orientation>horizontal</orientation>
						<align>right</align>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[345]:</label>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Year]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Rating</description>
						<left>268</left>
						<top>22</top>
						<width>130</width>
						<orientation>horizontal</orientation>
						<align>right</align>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[563]:</label>
						</control>
						<control type="label">
							<width min="0" max="110">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$VAR[RatingType]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Latest episode</description>
						<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
						<left>10</left>
						<top>62</top>
						<width>400</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="140">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[31966]:</label>
						</control>
						<control type="label">
							<width min="0" max="250">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<scroll>true</scroll>
							<label fallback="31001">$INFO[Window(Home).Property(NextAired.LatestSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.LatestEpisodeNumber),E,.]$INFO[Window(Home).Property(NextAired.LatestTitle), ,]$INFO[Window(Home).Property(NextAired.LatestDate), (,)]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Next episode</description>
						<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + !String.IsEmpty(Window(Home).Property(NextAired.Nextdate))</visible>
						<left>10</left>
						<top>84</top>
						<width>400</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="140">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[31967]:</label>
						</control>
						<control type="label">
							<width min="0" max="265">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<scroll>true</scroll>
							<label fallback="31001">$INFO[Window(Home).Property(NextAired.NextSeasonNumber),S,]$INFO[Window(Home).Property(NextAired.NextEpisodeNumber),E,.]$INFO[Window(Home).Property(NextAired.NextTitle), ,]$INFO[Window(Home).Property(NextAired.NextDate), (,)]</label>
						</control>
					</control>
					
					<control type="grouplist">
						<description>Next episode</description>
						<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo) + String.IsEmpty(Window(Home).Property(NextAired.Nextdate))</visible>
						<left>10</left>
						<top>84</top>
						<width>400</width>
						<orientation>horizontal</orientation>
						<control type="label">
							<width min="0" max="140">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label>$LOCALIZE[20416]:</label>
						</control>
						<control type="label">
							<width min="0" max="240">auto</width>
							<font>MediaInfoFont</font>
							<textcolor>MediaInfoItemColor2</textcolor>
							<shadowcolor>ShadowColor</shadowcolor>
							<label fallback="31001">$INFO[ListItem.Premiered]</label>
						</control>
					</control>
				</control>
				
				<include content="ThumbsInfoPlot" condition="!System.HasAddon(script.tv.show.next.aired) | [System.HasAddon(script.tv.show.next.aired) + Skin.HasSetting(EnableNextAiredInfo)]">
					<param name="fallback" value="31203" />
					<param name="label" value="$INFO[ListItem.Plot]" />
				</include>
				
				<control type="textbox">
					<description>Plot</description>
					<left>48</left>
					<top>479</top>
					<width>388</width>
					<height>138</height>
					<font>MediaInfoDescFont</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$INFO[ListItem.Plot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
					<include>ControlsOpenCloseAnim</include>
					<visible>!Container.OnNext + !Container.OnPrevious</visible>
					<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredInfo)</visible>
				</control>
			</control>
			
			<include condition="Skin.String(ThumbsInfoTVShowStyle,1) | String.IsEmpty(Skin.String(ThumbsInfoTVShowStyle))">TVShowsThumbsInfoDefaultStyle</include>
			<include condition="Skin.String(ThumbsInfoTVShowStyle,2)">TVShowsThumbsInfoLogoStyle</include>
			<include condition="Skin.String(ThumbsInfoTVShowStyle,3)">TVShowsThumbsInfoClearArtStyle</include>

			<include content="ThumbsInfoViewScrollbar">
				<param name="id" value="90905" />
			</include>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<top>BottomPaneOffsetY</top>
				<!--<include>InfoPaneImage</include>-->
				<include>InfoPaneMediaDetails</include>
				<include condition="!Skin.HasSetting(DisableTVShowsLogo)">InfoPaneClearLogo</include>
				<include>BottomPaneOpenCloseAnim</include>
			</control>

			<include>ViewsDialogPopUpScreenDim</include>
		</control>
	</include>
	
	<include name="TVShowsThumbsInfoDefaultStyle">
		<control type="panel" id="100">
			<viewtype label="31116">icon</viewtype>
			<left>450</left>
			<top>111</top>
			<width>776</width>
			<height>514</height>
			<pagecontrol>90905</pagecontrol>
			<scrolltime tween="sine" easing="inout">350</scrolltime>
			<orientation>vertical</orientation>
			<preloaditems>2</preloaditems>
			<onleft>850</onleft>
			<onright>150</onright>
			<onup>100</onup>
			<ondown>100</ondown>
			<visible>Container.Content(TVShows)</visible>
			<itemlayout width="129" height="171" condition="Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<top>-2</top>
					<control type="image">
						<description>Default Cover Case</description>
						<width>135</width>
						<height>178</height>
						<texture background="true" border="4">covers/cover-case2.png</texture>
						<aspectratio>stretch</aspectratio>
						<bordersize>6</bordersize>
						<animation effect="fade" end="50" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<width>135</width>
						<height>178</height>
						<bordersize>12</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>String.IsEmpty(ListItem.Thumb)</visible>
						<animation effect="fade" end="60" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Cover</description>
						<width>135</width>
						<height>178</height>
						<texture background="true">$VAR[PosterThumb]</texture>
						<aspectratio>scale</aspectratio>
						<bordersize>10</bordersize>
					</control>
					<control type="image">
						<description>Dim</description>
						<width>135</width>
						<height>178</height>
						<texture background="true">dim.png</texture>
						<aspectratio>stretch</aspectratio>
						<bordersize>10</bordersize>
						<visible>!String.IsEmpty(ListItem.Thumb)</visible>
						<include>CoverDimAnim</include>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>96</left>
						<top>138</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay)</visible>
						<animation effect="fade" end="80" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>96</left>
						<top>138</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio align="right">keep</aspectratio>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + $EXP[UnwatchedEpisodesOverlay]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>142</top>
						<left>96</left>
						<width>26</width>
						<font>ListFont3</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + $EXP[UnwatchedEpisodes99-]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>142</top>
						<left>96</left>
						<width>26</width>
						<font>ListFont4</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + $EXP[UnwatchedEpisodes99+]</visible>
					</control>
				</control>
			</itemlayout>
			<itemlayout width="386" height="73" condition="!Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<top>-3</top>
					<control type="image">
						<description>Default Cover Case</description>
						<width>395</width>
						<height>83</height>
						<texture background="true" border="4">covers/cover-case2.png</texture>
						<aspectratio>stretch</aspectratio>
						<bordersize>6</bordersize>
						<animation effect="fade" end="50" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<width>395</width>
						<height>83</height>
						<bordersize>12</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>String.IsEmpty(ListItem.Thumb)</visible>
						<animation effect="fade" end="60" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Cover</description>
						<width>395</width>
						<height>83</height>
						<texture background="true">$INFO[ListItem.Art(banner)]</texture>
						<aspectratio>scale</aspectratio>
						<bordersize>10</bordersize>
					</control>
					<control type="image">
						<description>Dim</description>
						<width>395</width>
						<height>83</height>
						<texture background="true">dim.png</texture>
						<aspectratio>stretch</aspectratio>
						<bordersize>10</bordersize>
						<visible>!String.IsEmpty(ListItem.Thumb)</visible>
						<include>CoverDimAnim</include>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>355</left>
						<top>43</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay)</visible>
						<animation effect="fade" end="80" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>355</left>
						<top>43</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio align="right">keep</aspectratio>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + $EXP[UnwatchedEpisodesOverlay]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>47</top>
						<left>355</left>
						<width>26</width>
						<font>ListFont3</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + $EXP[UnwatchedEpisodes99-]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>47</top>
						<left>355</left>
						<width>26</width>
						<font>ListFont4</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + $EXP[UnwatchedEpisodes99+]</visible>
					</control>
				</control>
			</itemlayout>
			<focusedlayout width="129" height="171" condition="!String.IsEmpty(ListItem.Thumb) + Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<top>-2</top>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ThumbsInfoDefaultStyleFocusAnim</include>
					<include>DVDThumbsStyleCoverImage</include>
					<include>DVDThumbsStyleOverlayImage</include>
				</control>
			</focusedlayout>
			<focusedlayout width="129" height="171" condition="String.IsEmpty(ListItem.Thumb) + Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<top>-2</top>
					<control type="image">
						<description>Default Cover Case</description>
						<width>135</width>
						<height>178</height>
						<aspectratio>stretch</aspectratio>
						<bordersize>7</bordersize>
						<texture background="true" border="2">covers/cover-case-noshadow-focus.png</texture>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<width>135</width>
						<height>178</height>
						<bordersize>12</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>String.IsEmpty(ListItem.Thumb)</visible>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>96</left>
						<top>133</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>stretch</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay)</visible>
					</control>
				</control>
			</focusedlayout>
			<focusedlayout width="386" height="73" condition="!String.IsEmpty(ListItem.Thumb) + !Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<top>-3</top>
					<include>DVDThumbsStyleCoverImageBanner</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ThumbsInfoBannerStyleFocusAnim</include>
					<include>DVDThumbsStyleOverlayImageBanner</include>
				</control>
			</focusedlayout>
			<focusedlayout width="386" height="73" condition="String.IsEmpty(ListItem.Thumb) + !Skin.HasSetting(UseTVShowsPosterCover)">
				<control type="group">
					<top>-3</top>
					<control type="image">
						<description>Default Cover Case</description>
						<width>395</width>
						<height>83</height>
						<aspectratio>stretch</aspectratio>
						<bordersize>7</bordersize>
						<texture background="true" border="2">covers/cover-case-noshadow-focus.png</texture>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<width>395</width>
						<height>83</height>
						<bordersize>12</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>String.IsEmpty(ListItem.Thumb)</visible>
					</control>
					<control type="image">
						<description>Cover</description>
						<width>395</width>
						<height>83</height>
						<texture background="true">$INFO[ListItem.Art(banner)]</texture>
						<bordertexture border="12">covers/cover-case-focus2.png</bordertexture>
						<bordersize>12</bordersize>
						<aspectratio aligny="bottom">scale</aspectratio>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>355</left>
						<top>45</top>
						<width>24</width>
						<height>24</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>stretch</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay)</visible>
					</control>
				</control>
			</focusedlayout>
		</control>
	</include>
	
	<include name="TVShowsThumbsInfoLogoStyle">
		<control type="panel" id="100">
			<viewtype label="31116">icon</viewtype>
			<left>450</left>
			<top>110</top>
			<width>778</width>
			<height>517</height>
			<pagecontrol>90905</pagecontrol>
			<scrolltime tween="sine" easing="inout">350</scrolltime>
			<orientation>vertical</orientation>
			<preloaditems>2</preloaditems>
			<onleft>850</onleft>
			<onright>150</onright>
			<onup>100</onup>
			<ondown>100</ondown>
			<visible>Container.Content(TVShows)</visible>
			<itemlayout width="257" height="129">
				<control type="group">
					<top>-6</top>
					<control type="image">
						<description>Default Cover Case</description>
						<width>269</width>
						<height>142</height>
						<texture background="true" border="4">covers/cover-case2.png</texture>
						<aspectratio>stretch</aspectratio>
						<bordersize>6</bordersize>
						<animation effect="fade" end="50" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Logo</description>
						<width>269</width>
						<height>142</height>
						<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<aspectratio>keep</aspectratio>
						<bordersize>10</bordersize>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<width>269</width>
						<height>142</height>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio align="center">keep</aspectratio>
						<bordersize>8</bordersize>
						<animation effect="fade" end="50" condition="true">Conditional</animation>
						<visible>String.IsEmpty(ListItem.Art(clearlogo))</visible>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>234</left>
						<top>9</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay)</visible>
						<animation effect="fade" end="80" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>234</left>
						<top>9</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<colordiffuse>CC99CCFF</colordiffuse>
						<animation effect="fade" end="80" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + $EXP[UnwatchedEpisodesOverlay]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>13</top>
						<left>234</left>
						<width>26</width>
						<font>ListFont3</font>
						<textcolor>ListColor3</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + $EXP[UnwatchedEpisodes99-]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>13</top>
						<left>234</left>
						<width>26</width>
						<font>ListFont4</font>
						<textcolor>ListColor3</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + $EXP[UnwatchedEpisodes99+]</visible>
					</control>
				</control>
			</itemlayout>
			<focusedlayout condition="String.IsEmpty(ListItem.Title)" width="257" height="129">
				<control type="group">
					<top>-6</top>
					<control type="image">
						<width>269</width>
						<height>142</height>
						<texture border="7">covers/cover-case-focus.png</texture>
						<aspectratio>stretch</aspectratio>
						<animation effect="fade" start="0" end="100" time="150" reversible="false">Focus</animation>
					</control>
					<control type="image">
						<left>5</left>
						<top>5</top>
						<width>259</width>
						<height>132</height>
						<bordersize>4</bordersize>
						<texture background="true">dim.png</texture>
						<aspectratio>stretch</aspectratio>
						<animation effect="fade" end="60" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<width>269</width>
						<height>142</height>
						<bordersize>8</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio align="center">keep</aspectratio>
					</control>
				</control>
			</focusedlayout>
			<focusedlayout width="257" height="129">
				<control type="group">
					<top>-6</top>
					<include>LogoThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ThumbsInfoLogoStyleFocusAnim</include>
				</control>
			</focusedlayout>
		</control>
	</include>
	
	<include name="TVShowsThumbsInfoClearArtStyle">
		<control type="panel" id="100">
			<viewtype label="31116">icon</viewtype>
			<left>450</left>
			<top>110</top>
			<width>778</width>
			<height>517</height>
			<pagecontrol>90905</pagecontrol>
			<scrolltime tween="sine" easing="inout">350</scrolltime>
			<orientation>vertical</orientation>
			<preloaditems>2</preloaditems>
			<onleft>850</onleft>
			<onright>150</onright>
			<onup>100</onup>
			<ondown>100</ondown>
			<visible>Container.Content(TVShows)</visible>
			<itemlayout width="256" height="172">
				<control type="group">
					<top>-6</top>
					<control type="image">
						<description>Default Cover Case</description>
						<width>268</width>
						<height>184</height>
						<texture background="true" border="4">covers/cover-case2.png</texture>
						<aspectratio>stretch</aspectratio>
						<bordersize>6</bordersize>
						<animation effect="fade" end="50" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Clear Art</description>
						<top>14</top>
						<width>268</width>
						<height>184</height>
						<texture background="true">$INFO[ListItem.Art(clearart)]</texture>
						<aspectratio>keep</aspectratio>
						<bordersize>10</bordersize>
						<visible>!String.IsEmpty(ListItem.Art(clearart))</visible>
					</control>
					<control type="image">
						<description>Clear Logo</description>
						<width>268</width>
						<height>184</height>
						<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
						<aspectratio>keep</aspectratio>
						<bordersize>10</bordersize>
						<visible>String.IsEmpty(ListItem.Art(clearart)) + !String.IsEmpty(ListItem.Art(clearlogo))</visible>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<width>268</width>
						<height>184</height>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio align="center">keep</aspectratio>
						<bordersize>24</bordersize>
						<animation effect="fade" end="50" condition="true">Conditional</animation>
						<visible>String.IsEmpty(ListItem.Art(clearlogo))</visible>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>231</left>
						<top>11</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay)</visible>
						<animation effect="fade" end="80" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>231</left>
						<top>11</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<colordiffuse>CC99CCFF</colordiffuse>
						<animation effect="fade" end="80" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + $EXP[UnwatchedEpisodesOverlay]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>15</top>
						<left>231</left>
						<width>26</width>
						<font>ListFont3</font>
						<textcolor>ListColor3</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + $EXP[UnwatchedEpisodes99-]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<top>15</top>
						<left>231</left>
						<width>26</width>
						<font>ListFont4</font>
						<textcolor>ListColor3</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsThumbsInfoOverlay) + $EXP[UnwatchedEpisodes99+]</visible>
					</control>
				</control>
			</itemlayout>
			<focusedlayout condition="String.IsEmpty(ListItem.Title)" width="256" height="129">
				<control type="group">
					<top>-6</top>
					<control type="image">
						<width>268</width>
						<height>184</height>
						<texture border="7">covers/cover-case-focus.png</texture>
						<aspectratio>stretch</aspectratio>
						<animation effect="fade" start="0" end="100" time="150" reversible="false">Focus</animation>
					</control>
					<control type="image">
						<left>5</left>
						<top>5</top>
						<width>258</width>
						<height>174</height>
						<bordersize>4</bordersize>
						<texture background="true">dim.png</texture>
						<aspectratio>stretch</aspectratio>
						<animation effect="fade" end="60" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<width>268</width>
						<height>184</height>
						<bordersize>24</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio align="center">keep</aspectratio>
					</control>
				</control>
			</focusedlayout>
			<focusedlayout width="256" height="172">
				<control type="group">
					<top>-6</top>
					<include>ClearArtThumbsStyleCoverImage</include>
					<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">ThumbsInfoClearArtStyleFocusAnim</include>
				</control>
			</focusedlayout>
		</control>
	</include>
	
	<!--//// START WRAP LIST INFO VIEW ////////////////////////////////////////////////////////////////-->
	<include name="TVShowsWrapListInfoView">
		<control type="group" id="500">
		    <defaultcontrol always="true">577</defaultcontrol>
			<visible>Control.IsVisible(577)</visible>
			<include>MediaViewOpenCloseAnim</include>
			
			<control type="group" id="254">
				<animation effect="slide" end="0,120" time="500" condition="Skin.HasSetting(EnableMoviesWrapListInfoCompactMode)">Conditional</animation>
				<include condition="Skin.String(MoviesWrapListInfoStyle,1) | String.IsEmpty(Skin.String(MoviesWrapListInfoStyle))">TVShowsWrapListInfoStyle1</include>
				<include condition="Skin.String(MoviesWrapListInfoStyle,2)">TVShowsWrapListInfoStyle2</include>
			</control>
			
			<control type="group">
				<description>Bottom Bar Area</description>
				<top>BottomPaneOffsetY</top>
				<!--<include>InfoPaneImage</include>-->
				<include condition="!Skin.HasSetting(DisableTVShowsLogo)">InfoPaneClearLogo</include>
				<include>InfoPaneMediaDetails</include>
				<include>BottomPaneOpenCloseAnim</include>
			</control>

			<include>ViewsDialogPopUpScreenDim</include>
		</control>
	</include>
	
	<include name="TVShowsWrapListInfoStyle1">
		<control type="image">
			<description>Bottom Pane Background</description>
			<top>378</top>
			<width>ScreenWidth</width>
			<height>347</height>
			<texture border="0,6,0,0">gui/bottom-info-background.png</texture>
		</control>
		
		<control type="image">
			<description>Background Glow</description>
			<left>492</left>
			<top>382</top>
			<width>755</width>
			<height>345</height>
			<texture flipy="true">gui/background-glow.png</texture>
			<animation effect="fade" end="20" condition="true">Conditional</animation>
		</control> 
		
		<control type="image">
			<description>Cover Glow</description>
			<left>41</left>
			<top>382</top>
			<width>600</width>
			<height>345</height>
			<texture>views/cover-glow.png</texture>
			<aspectratio aligny="bottom">center</aspectratio>
			<visible>!Container.OnNext + !Container.OnPrevious</visible>
			<include>WrapListInfoCoverGlowScrollAnim</include>
		</control>
		
		<control type="image">
			<top>211</top>
			<width>ScreenWidth</width>
			<height>171</height>
			<texture border="0,0,0,2">views/wrap-list-header.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>

		<control type="label">
			<description>Title</description>
			<left>485</left>
			<top>211</top>
			<width>765</width>
			<height>33</height>
			<font>WrapListFont</font>
			<textcolor>DefaultColor</textcolor>
			<shadowcolor>ShadowColor</shadowcolor>
			<label>$INFO[ListItem.Label]</label>
			<aligny>center</aligny>
			<scroll>true</scroll>
		</control>
		
		<control type="image">
			<top>244</top>
			<width>ScreenWidth</width>
			<height>2</height>
			<texture>panels/panel-separator.png</texture>
		</control>
		
		<include content="WrapListInfoCast">
			<param name="id" value="8001" />
			<param name="content" value="plugin://script.skin.helper.service/?action=getcast&amp;tvshow=$INFO[ListItem.DBID]&amp;castaction=extendedinfo" />
		</include>
		
		<control type="grouplist">
			<description>Media Info</description>
			<depth>DepthContent+</depth>
			<left>485</left>
			<top>472</top>
			<width>765</width>
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<visible>!String.IsEmpty(ListItem.Title)</visible>
			<control type="label">
				<description>Seasons</description>
				<width min="0" max="110">auto</width>
				<include>WrapInfoViewCatLabel</include>
				<label>$LOCALIZE[33054]:</label>
			</control>
			<control type="label">
				<description>Seasons Value</description>
				<width min="0" max="150">auto</width>
				<include>WrapInfoViewCatValueLabel</include>
				<label fallback="31001">$INFO[ListItem.Property(TotalSeasons)]</label>
			</control>
			<include>WrapInfoViewDot</include>
			<control type="label">
				<description>Episode</description>
				<width min="0" max="110">auto</width>
				<include>WrapInfoViewCatLabel</include>
				<label>$LOCALIZE[20360]:</label>
			</control>
			<control type="label">
				<description>Episode Value</description>
				<width min="0" max="140">auto</width>
				<include>WrapInfoViewCatValueLabel</include>
				<label fallback="31001">$INFO[ListItem.Episode]</label>
			</control>
			<include>WrapInfoViewDot</include>
			<control type="label">
				<description>Year</description>
				<width min="0" max="110">auto</width>
				<include>WrapInfoViewCatLabel</include>
				<label>$LOCALIZE[345]:</label>
			</control>
			<control type="label">
				<description>Year Value</description>
				<width min="0" max="110">auto</width>
				<include>WrapInfoViewCatValueLabel</include>
				<label fallback="31001">$INFO[ListItem.Year]</label>
			</control>
			<control type="label">
				<height>33</height>
				<width>26</width>
				<align>center</align>
				<aligny>center</aligny>
				<font>PanelTitleFont</font>
				<textcolor>GreyColor3</textcolor>
				<label>&#x2022;</label>
				<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
			</control>
			<control type="label">
				<description>Rating</description>
				<width min="0" max="110">auto</width>
				<include>WrapInfoViewCatLabel</include>
				<label>$LOCALIZE[563]:</label>
				<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
			</control>
			<control type="label">
				<description>Rating Value</description>
				<width min="0" max="110">auto</width>
				<include>WrapInfoViewCatValueLabel</include>
				<label fallback="31001">$VAR[RatingType]</label>
				<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows)</visible>
			</control>
			<control type="label">
				<height>33</height>
				<width>26</width>
				<align>center</align>
				<aligny>center</aligny>
				<font>PanelTitleFont</font>
				<textcolor>GreyColor3</textcolor>
				<label>&#x2022;</label>
				<visible>Skin.HasSetting(DisableMediaFlags)</visible>
			</control>
			<control type="label">
				<description>Studio</description>
				<width min="0" max="110">auto</width>
				<include>WrapInfoViewCatLabel</include>
				<label>$LOCALIZE[572]:</label>
				<visible>Skin.HasSetting(DisableMediaFlags)</visible>
			</control>
			<control type="label">
				<description>Studio Value</description>
				<width min="0" max="110">auto</width>
				<include>WrapInfoViewCatValueLabel</include>
				<label fallback="31001">$INFO[ListItem.Studio]</label>
				<visible>Skin.HasSetting(DisableMediaFlags)</visible>
			</control>
		</control>
		
		<control type="group">
			<visible>!String.IsEmpty(ListItem.Title) + !Skin.HasSetting(EnableMoviesWrapListInfoCompactMode)</visible>
			<depth>DepthContent+</depth>

			<control type="textbox">
				<description>Plot</description>
				<left>485</left>
				<top>507</top>
				<width>765</width>
				<height>123</height>
				<font>MediaInfoDescFont</font>
				<textcolor>MediaInfoColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>justify</align>
				<label fallback="31203">$VAR[MoviePlot]</label>
				<wrapmultiline>true</wrapmultiline>
				<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
				<visible>!Container.OnNext + !Container.OnPrevious</visible>
				<include>ControlsOpenCloseAnim</include>
			</control>
			
			<control type="group">
				<left>239</left>
				<top>520</top>
				
				<control type="label">
					<description>Genre</description>
					<top>10</top>
					<width>204</width>
					<font>MediaInfoFont2</font>
					<textcolor>WhiteColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>center</align>
					<label>[UPPERCASE]$VAR[MovieGenre][/UPPERCASE]</label>
				</control>
				
				<control type="label">
					<description>Rating</description>
					<top>30</top>
					<width>204</width>
					<font>WrapListRatingFont</font>
					<textcolor>DefaultColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>center</align>
					<label>[UPPERCASE]$VAR[RatingType][/UPPERCASE]</label>
					<visible>Skin.HasSetting(DoNotUseStarRatingTVShows) + ![String.IsEmpty(ListItem.Rating) + String.IsEmpty(ListItem.UserRating)]</visible>
				</control>
				
				<control type="image">
					<description>Star Rating</description>
					<top>35</top>
					<width>204</width>
					<height>22</height>
					<texture>$VAR[StarRating]</texture>
					<aspectratio align="center">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows) + ![String.IsEmpty(ListItem.Rating) + String.IsEmpty(ListItem.UserRating)]</visible>
					<include>StarRatingFadeAnim</include>
				</control>
			</control>
		</control>
		
		<control type="wraplist" id="577">
			<viewtype label="31106">bigwrap</viewtype>
			<left>-38</left>
			<top>244</top>
			<width>1350</width>
			<height>330</height>
			<focusposition>2</focusposition>
			<pagecontrol>91105</pagecontrol>
			<orientation>horizontal</orientation>
			<preloaditems>4</preloaditems>
			<scrolltime tween="sine" easing="inout">401</scrolltime>
			<onup>850</onup>
			<ondown>150</ondown>
			<visible>Container.Content(TVShows)</visible>
			<itemlayout width="150">
				<control type="image">
					<description>Cover Case</description>
					<width>155</width>
					<height>214</height>
					<texture border="7">covers/cover-case-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Cover</description>
					<width>155</width>
					<height>214</height>
					<texture background="true">$VAR[PosterThumb]</texture>
					<bordersize>9</bordersize>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Default Cover Background</description>
					<width>155</width>
					<height>214</height>
					<texture>dim.png</texture>
					<bordersize>9</bordersize>
					<aspectratio>stretch</aspectratio>
					<visible>String.IsEmpty(ListItem.Thumb)</visible>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<width>155</width>
					<height>214</height>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<bordersize>12</bordersize>
					<aspectratio>keep</aspectratio>
					<visible>String.IsEmpty(ListItem.Thumb)</visible>
					<animation effect="fade" end="30" condition="true">Conditional</animation>
				</control>
				<control type="image">
					<description>Reflection</description>
					<left>4</left>
					<top>211</top>
					<width>147</width>
					<height>214</height>
					<texture flipy="true" diffuse="views/reflection.png" background="true">$INFO[ListItem.Icon]</texture>
					<bordertexture flipy="true" diffuse="views/reflection.png" border="4">covers/cover-case2.png</bordertexture>
					<bordersize>5</bordersize>
					<aspectratio>stretch</aspectratio>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
				<control type="group">
					<visible>!Skin.HasSetting(HideTVShowsWrapListInfoOverlay)</visible>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>110</left>
						<top>169</top>
						<width>26</width>
						<height>26</height>
						<font>ListFont3</font>
						<textcolor>ListColor</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<visible>$EXP[UnwatchedEpisodes99-]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>110</left>
						<top>169</top>
						<width>26</width>
						<height>26</height>
						<font>ListFont4</font>
						<textcolor>ListColor</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<visible>$EXP[UnwatchedEpisodes99+]</visible>
					</control>
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>110</left>
						<top>169</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<visible>$EXP[UnwatchedEpisodesOverlay]</visible>
					</control>
					<control type="image">
						<description>Watched Overlay</description>
						<left>110</left>
						<top>169</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
				</control>
			</itemlayout>
			<focusedlayout width="150">
				<control type="group">
					<depth>DepthContent+</depth>
					<animation effect="zoom" start="100" end="145" center="78,90" time="300" tween="back" easing="out" reversible="false" delay="150">Focus</animation>
					<animation effect="zoom" start="145" end="100" center="78,90" time="100" reversible="false">UnFocus</animation>
					<control type="image">
						<description>Cover Case</description>
						<width>155</width>
						<height>214</height>
						<texture border="7">covers/cover-case-focus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Cover</description>
						<width>155</width>
						<height>214</height>
						<texture background="true">$VAR[PosterThumb]</texture>
						<bordersize>10</bordersize>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover Background</description>
						<width>155</width>
						<height>214</height>
						<texture>dim.png</texture>
						<bordersize>10</bordersize>
						<aspectratio>stretch</aspectratio>
						<visible>String.IsEmpty(ListItem.Thumb)</visible>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<width>155</width>
						<height>214</height>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<bordersize>12</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>String.IsEmpty(ListItem.Thumb)</visible>
					</control>
					<control type="image">
						<description>Reflection</description>
						<left>4</left>
						<top>211</top>
						<width>147</width>
						<height>214</height>
						<texture flipy="true" diffuse="views/reflection.png" background="true">$INFO[ListItem.Icon]</texture>
						<bordertexture flipy="true" diffuse="views/reflection.png" border="4">covers/cover-case2.png</bordertexture>
						<bordersize>6</bordersize>
						<aspectratio>stretch</aspectratio>
						<animation effect="fade" end="70" condition="true">Conditional</animation>
					</control>
					<control type="group">
						<visible>!Skin.HasSetting(HideTVShowsWrapListInfoOverlay)</visible>
						<control type="label">
							<description>Unwatched Episodes</description>
							<left>110</left>
							<top>169</top>
							<width>26</width>
							<height>26</height>
							<font>ListFont3</font>
							<textcolor>ListColor</textcolor>
							<align>center</align>
							<aligny>center</aligny>
							<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
							<visible>$EXP[UnwatchedEpisodes99-]</visible>
						</control>
						<control type="label">
							<description>Unwatched Episodes</description>
							<left>110</left>
							<top>169</top>
							<width>26</width>
							<height>26</height>
							<font>ListFont4</font>
							<textcolor>ListColor</textcolor>
							<align>center</align>
							<aligny>center</aligny>
							<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
							<visible>$EXP[UnwatchedEpisodes99+]</visible>
						</control>
						<control type="image">
							<description>Unwatched Overlay</description>
							<left>110</left>
							<top>169</top>
							<width>26</width>
							<height>26</height>
							<texture background="true">OverlayClean.png</texture>
							<aspectratio>keep</aspectratio>
							<visible>$EXP[UnwatchedEpisodesOverlay]</visible>
						</control>
						<control type="image">
							<description>Watched Overlay</description>
							<left>110</left>
							<top>169</top>
							<width>26</width>
							<height>26</height>
							<texture background="true">$INFO[ListItem.Overlay]</texture>
							<aspectratio>keep</aspectratio>
							<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
					</control>
				</control>
			</focusedlayout>
		</control>
		
		<control type="group">
			<depth>DepthContent+</depth>
			<include content="WrapInfoViewScrollbar">
				<param name="id" value="91105" />
			</include>
		</control>
	</include>
	
	<include name="TVShowsWrapListInfoStyle2">
		<control type="image">
			<description>Bottom Pane Background</description>
			<top>345</top>
			<width>ScreenWidth</width>
			<height>380</height>
			<texture border="0,6,0,0">gui/bottom-info-background.png</texture>
		</control>

		<control type="image">
			<description>Background Glow</description>
			<left>492</left>
			<top>349</top>
			<width>755</width>
			<height>415</height>
			<texture flipy="true">gui/background-glow.png</texture>
			<animation effect="fade" end="20" condition="true">Conditional</animation>
		</control> 
		
		<control type="image">
			<description>Cover Glow</description>
			<left>-52</left>
			<top>334</top>
			<width>744</width>
			<height>415</height>
			<texture>views/cover-glow.png</texture>
			<aspectratio aligny="bottom">center</aspectratio>
			<visible>!Container.OnNext + !Container.OnPrevious</visible>
			<include>WrapListInfoCoverGlowScrollAnim2</include>
		</control>
		
		<control type="image">
			<top>137</top>
			<width>ScreenWidth</width>
			<height>212</height>
			<texture border="0,0,0,2">views/wrap-list-header.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>
		
		<control type="label">
			<description>Title</description>
			<left>485</left>
			<top>137</top>
			<width>765</width>
			<height>33</height>
			<font>WrapListFont</font>
			<textcolor>DefaultColor</textcolor>
			<shadowcolor>ShadowColor</shadowcolor>
			<label>$INFO[ListItem.Title]</label>
			<aligny>center</aligny>
			<scroll>true</scroll>
		</control>
		
		<control type="image">
			<top>170</top>
			<width>ScreenWidth</width>
			<height>2</height>
			<texture>panels/panel-separator.png</texture>
		</control>
		
		<control type="grouplist">
			<description>Media Info</description>
			<depth>DepthContent+</depth>
			<left>485</left>
			<top>472</top>
			<width>765</width>
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<visible>!String.IsEmpty(ListItem.Title)</visible>
			<control type="label">
				<description>Seasons</description>
				<width min="0" max="110">auto</width>
				<include>WrapInfoViewCatLabel</include>
				<label>$LOCALIZE[33054]:</label>
			</control>
			<control type="label">
				<description>Seasons Value</description>
				<width min="0" max="150">auto</width>
				<include>WrapInfoViewCatValueLabel</include>
				<label fallback="31001">$INFO[ListItem.Property(TotalSeasons)]</label>
			</control>
			<include>WrapInfoViewDot</include>
			<control type="label">
				<description>Episode</description>
				<width min="0" max="110">auto</width>
				<include>WrapInfoViewCatLabel</include>
				<label>$LOCALIZE[20360]:</label>
			</control>
			<control type="label">
				<description>Episode Value</description>
				<width min="0" max="140">auto</width>
				<include>WrapInfoViewCatValueLabel</include>
				<label fallback="31001">$INFO[ListItem.Episode]</label>
			</control>
			<include>WrapInfoViewDot</include>
			<control type="label">
				<description>Year</description>
				<width min="0" max="110">auto</width>
				<include>WrapInfoViewCatLabel</include>
				<label>$LOCALIZE[345]:</label>
			</control>
			<control type="label">
				<description>Year Value</description>
				<width min="0" max="110">auto</width>
				<include>WrapInfoViewCatValueLabel</include>
				<label fallback="31001">$INFO[ListItem.Year]</label>
			</control>
			<include>WrapInfoViewDot</include>
			<control type="label">
				<description>Rating</description>
				<width min="0" max="110">auto</width>
				<include>WrapInfoViewCatLabel</include>
				<label>$LOCALIZE[563]:</label>
			</control>
			<control type="label">
				<description>Rating Value</description>
				<width min="0" max="110">auto</width>
				<include>WrapInfoViewCatValueLabel</include>
				<label fallback="31001">$VAR[RatingType]</label>
			</control>
		</control>
	
		<control type="group">
			<visible>!String.IsEmpty(ListItem.Title) + !Skin.HasSetting(EnableMoviesWrapListInfoCompactMode)</visible>
			<depth>DepthContent+</depth>

			<control type="textbox">
				<description>Plot</description>
				<left>485</left>
				<top>507</top>
				<width>765</width>
				<height>123</height>
				<font>MediaInfoDescFont</font>
				<textcolor>MediaInfoColor</textcolor>
				<shadowcolor>ShadowColor</shadowcolor>
				<align>justify</align>
				<label fallback="31203">$VAR[MoviePlot]</label>
				<wrapmultiline>true</wrapmultiline>
				<autoscroll time="2000" delay="6000" repeat="10000">!Skin.HasSetting(DoNotAutoScrollPlot)</autoscroll>
				<visible>!Container.OnNext + !Container.OnPrevious</visible>
				<include>ControlsOpenCloseAnim</include>
			</control>
			
			<control type="group">
				<left>188</left>
				<top>520</top>
				
				<control type="label">
					<description>Genre</description>
					<top>10</top>
					<width>268</width>
					<font>MediaInfoFont2</font>
					<textcolor>WhiteColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>center</align>
					<label>[UPPERCASE]$VAR[MovieGenre][/UPPERCASE]</label>
				</control>
				
				<control type="label">
					<description>Rating</description>
					<top>30</top>
					<width>268</width>
					<font>WrapListRatingFont</font>
					<textcolor>DefaultColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>center</align>
					<label>[UPPERCASE]$VAR[RatingType][/UPPERCASE]</label>
					<visible>Skin.HasSetting(DoNotUseStarRatingTVShows) + ![String.IsEmpty(ListItem.Rating) + String.IsEmpty(ListItem.UserRating)]</visible>
				</control>
				
				<control type="image">
					<description>Star Rating</description>
					<top>35</top>
					<width>268</width>
					<height>22</height>
					<texture>$VAR[StarRating]</texture>
					<aspectratio align="center">keep</aspectratio>
					<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows) + ![String.IsEmpty(ListItem.Rating) + String.IsEmpty(ListItem.UserRating)]</visible>
					<include>StarRatingFadeAnim</include>
				</control>
			</control>
		</control>
		
		<control type="wraplist" id="577">
			<viewtype label="31106">bigwrap</viewtype>
			<left>-3</left>
			<top>170</top>
			<width>ScreenWidth</width>
			<height>470</height>
			<focusposition>1</focusposition>
			<pagecontrol>91105</pagecontrol>
			<orientation>horizontal</orientation>
			<preloaditems>4</preloaditems>
			<scrolltime tween="sine" easing="inout">500</scrolltime>
			<onup>850</onup>
			<ondown>150</ondown>
			<visible>Container.Content(TVShows)</visible>
			<itemlayout width="214">
				<control type="image">
					<description>Cover Case</description>
					<width>214</width>
					<height>288</height>
					<texture border="7">covers/cover-case-nofocus.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Cover</description>
					<width>214</width>
					<height>288</height>
					<texture background="true">$VAR[PosterThumb]</texture>
					<bordersize>12</bordersize>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="image">
					<description>Default Cover Background</description>
					<width>214</width>
					<height>288</height>
					<texture>dim.png</texture>
					<bordersize>12</bordersize>
					<aspectratio>stretch</aspectratio>
					<visible>String.IsEmpty(ListItem.Thumb)</visible>
				</control>
				<control type="image">
					<description>Default Cover</description>
					<width>214</width>
					<height>288</height>
					<texture background="true">$INFO[ListItem.ActualIcon]</texture>
					<bordersize>20</bordersize>
					<aspectratio>keep</aspectratio>
					<animation effect="fade" end="30" condition="true">Conditional</animation>
					<visible>String.IsEmpty(ListItem.Thumb)</visible>
				</control>
				<control type="image">
					<description>Reflection</description>
					<left>4</left>
					<top>285</top>
					<width>206</width>
					<height>288</height>
					<texture flipy="true" diffuse="views/reflection.png" background="true">$INFO[ListItem.Icon]</texture>
					<bordertexture flipy="true" diffuse="views/reflection.png" border="4">covers/cover-case2.png</bordertexture>
					<bordersize>8</bordersize>
					<aspectratio>stretch</aspectratio>
					<animation effect="fade" end="70" condition="true">Conditional</animation>
				</control>
				<control type="group">
					<visible>!Skin.HasSetting(HideTVShowsWrapListInfoOverlay)</visible>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>169</left>
						<top>243</top>
						<width>26</width>
						<height>26</height>
						<font>ListFont3</font>
						<textcolor>ListColor</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<visible>$EXP[UnwatchedEpisodes99-]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>169</left>
						<top>243</top>
						<width>26</width>
						<height>26</height>
						<font>ListFont4</font>
						<textcolor>ListColor</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<visible>$EXP[UnwatchedEpisodes99+]</visible>
					</control>
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>169</left>
						<top>243</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<visible>$EXP[UnwatchedEpisodesOverlay]</visible>
					</control>
					<control type="image">
						<description>Watched Overlay</description>
						<left>169</left>
						<top>243</top>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
				</control>
			</itemlayout>
			<focusedlayout width="214">
				<control type="group">
					<depth>DepthContent+</depth>
					<animation effect="zoom" start="100" end="130" center="107,132" time="360" tween="back" easing="out" reversible="false" delay="200">Focus</animation>
					<animation effect="zoom" start="130" end="100" center="107,132" time="200" reversible="false">UnFocus</animation>
					<control type="image">
						<description>Cover Case</description>
						<width>214</width>
						<height>288</height>
						<texture border="7">covers/cover-case-focus.png</texture>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Cover</description>
						<width>214</width>
						<height>288</height>
						<texture background="true">$VAR[PosterThumb]</texture>
						<bordersize>12</bordersize>
						<aspectratio>stretch</aspectratio>
					</control>
					<control type="image">
						<description>Default Cover Background</description>
						<width>214</width>
						<height>288</height>
						<texture>dim.png</texture>
						<bordersize>12</bordersize>
						<aspectratio>stretch</aspectratio>
						<visible>String.IsEmpty(ListItem.Thumb)</visible>
					</control>
					<control type="image">
						<description>Default Cover</description>
						<width>214</width>
						<height>288</height>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<bordersize>20</bordersize>
						<aspectratio>keep</aspectratio>
						<visible>String.IsEmpty(ListItem.Thumb)</visible>
					</control>
					<control type="image">
						<description>Reflection</description>
						<left>4</left>
						<top>285</top>
						<width>206</width>
						<height>288</height>
						<texture flipy="true" diffuse="views/reflection.png" background="true">$INFO[ListItem.Icon]</texture>
						<bordertexture flipy="true" diffuse="views/reflection.png" border="4">covers/cover-case2.png</bordertexture>
						<bordersize>8</bordersize>
						<aspectratio>stretch</aspectratio>
						<animation effect="fade" end="70" condition="true">Conditional</animation>
					</control>
					<control type="group">
						<visible>!Skin.HasSetting(HideTVShowsWrapListInfoOverlay)</visible>
						<control type="label">
							<description>Unwatched Episodes</description>
							<left>169</left>
							<top>243</top>
							<width>26</width>
							<height>26</height>
							<font>ListFont3</font>
							<textcolor>ListColor</textcolor>
							<align>center</align>
							<aligny>center</aligny>
							<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
							<visible>$EXP[UnwatchedEpisodes99-]</visible>
						</control>
						<control type="label">
							<description>Unwatched Episodes</description>
							<left>169</left>
							<top>243</top>
							<width>26</width>
							<height>26</height>
							<font>ListFont4</font>
							<textcolor>ListColor</textcolor>
							<align>center</align>
							<aligny>center</aligny>
							<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
							<visible>$EXP[UnwatchedEpisodes99+]</visible>
						</control>
						<control type="image">
							<description>Unwatched Overlay</description>
							<left>169</left>
							<top>243</top>
							<width>26</width>
							<height>26</height>
							<texture background="true">OverlayClean.png</texture>
							<aspectratio>keep</aspectratio>
							<visible>$EXP[UnwatchedEpisodesOverlay]</visible>
						</control>
						<control type="image">
							<description>Watched Overlay</description>
							<left>169</left>
							<top>243</top>
							<width>26</width>
							<height>26</height>
							<texture background="true">$INFO[ListItem.Overlay]</texture>
							<aspectratio>keep</aspectratio>
							<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
					</control>
				</control>
			</focusedlayout>
		</control>
			
		<control type="group">
			<depth>DepthContent+</depth>
			<include content="WrapInfoViewScrollbar">
				<param name="id" value="91105" />
			</include>
		</control>
	</include>
	<!--//// END WRAP LIST INFO VIEW //////////////////////////////////////////////////////////////////-->
	
	<!--//// START WALL VIEW //////////////////////////////////////////////////////////////////////////-->
	<include name="TVShowsWallView">
		<control type="group" id="500">
		    <defaultcontrol always="true">586</defaultcontrol>
			<visible>Control.IsVisible(586)</visible>
			<include>MediaViewOpenCloseAnim</include>
			
			<control type="panel" id="586">
				<viewtype label="31113">bigicon</viewtype>
				<left>-10</left>
				<width>1300</width>
				<pagecontrol>91204</pagecontrol>
				<preloaditems>2</preloaditems>
				<scrolltime tween="sine" easing="inout">403</scrolltime>
				<include condition="Skin.HasSetting(WallViewVerticalNavigation)">WallViewVertical</include>
				<include condition="!Skin.HasSetting(WallViewVerticalNavigation)">WallViewHorizontal</include>
				<visible>Container.Content(TVShows)</visible>
				<itemlayout width="160" height="225" condition="Skin.String(TVShowsWallStyle,1) | String.IsEmpty(Skin.String(TVShowsWallStyle))">
					<control type="image">
						<description>Default Cover</description>
						<left>10</left>
						<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="10" /></include>
						<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="45" /></include>
						<width>160</width>
						<height>225</height>
						<bordersize>18</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>String.IsEmpty(ListItem.Thumb)</visible>
						<animation effect="fade" end="60" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>10</left>
						<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="10" /></include>
						<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="45" /></include>
						<width>160</width>
						<height>225</height>
						<texture background="true">$VAR[PosterThumb]</texture>
						<aspectratio>scale</aspectratio>
					</control>
					<control type="image">
						<description>Dim</description>
						<left>10</left>
						<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="10" /></include>
						<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="45" /></include>
						<width>160</width>
						<height>225</height>
						<texture background="true">dim.png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>!Skin.HasSetting(DoNotDimTVShowsWallCover)</visible>
						<include>CoverDimAnim</include>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>133</left>
						<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="200" /></include>
						<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="235" /></include>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsWallOverlay)</visible>
					</control>
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>133</left>
						<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="200" /></include>
						<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="235" /></include>
						<width>26</width>
						<height>26</height>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<animation effect="fade" end="80" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsWallOverlay) + $EXP[UnwatchedEpisodesOverlay]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="204" /></include>
						<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="239" /></include>
						<left>133</left>
						<width>26</width>
						<font>ListFont3</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsWallOverlay) + $EXP[UnwatchedEpisodes99-]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="204" /></include>
						<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="239" /></include>
						<left>133</left>
						<width>26</width>
						<font>ListFont4</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsWallOverlay) + $EXP[UnwatchedEpisodes99+]</visible>
					</control>
				</itemlayout>
				<itemlayout width="92" height="135" condition="Skin.String(TVShowsWallStyle,2)">
					<control type="image">
						<description>Default Cover</description>
						<left>8</left>
						<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="10" /></include>
						<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="45" /></include>
						<width>92</width>
						<height>135</height>
						<bordersize>18</bordersize>
						<texture background="true">$INFO[ListItem.ActualIcon]</texture>
						<aspectratio>keep</aspectratio>
						<visible>String.IsEmpty(ListItem.Thumb)</visible>
						<animation effect="fade" end="60" condition="true">Conditional</animation>
					</control>
					<control type="image">
						<description>Cover</description>
						<left>8</left>
						<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="10" /></include>
						<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="45" /></include>
						<width>92</width>
						<height>135</height>
						<texture background="true">$VAR[PosterThumb]</texture>
						<aspectratio>scale</aspectratio>
					</control>
					<control type="image">
						<description>Dim</description>
						<left>8</left>
						<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="10" /></include>
						<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="45" /></include>
						<width>92</width>
						<height>135</height>
						<texture background="true">dim.png</texture>
						<aspectratio>stretch</aspectratio>
						<visible>!Skin.HasSetting(DoNotDimTVShowsWallCover)</visible>
						<include>CoverDimAnim</include>
					</control>
					<control type="image">
						<description>Overlay</description>
						<left>63</left>
						<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="110" /></include>
						<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="145" /></include>
						<width>26</width>
						<height>26</height>
						<texture background="true">$INFO[ListItem.Overlay]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(HideTVShowsWallOverlay)</visible>
					</control>
					<control type="image">
						<description>Unwatched Overlay</description>
						<left>63</left>
						<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="110" /></include>
						<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="145" /></include>
						<width>26</width>
						<height>26</height>
						<texture background="true">OverlayClean.png</texture>
						<aspectratio>keep</aspectratio>
						<animation effect="fade" end="80" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsWallOverlay) + $EXP[UnwatchedEpisodesOverlay]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>63</left>
						<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="114" /></include>
						<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="149" /></include>
						<width>26</width>
						<font>ListFont3</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsWallOverlay) + $EXP[UnwatchedEpisodes99-]</visible>
					</control>
					<control type="label">
						<description>Unwatched Episodes</description>
						<left>63</left>
						<include content="WallViewTop" condition="!Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="114" /></include>
						<include content="WallViewTop" condition="Skin.HasSetting(WallViewVerticalNavigation)"><param name="top" value="149" /></include>
						<width>26</width>
						<font>ListFont4</font>
						<textcolor>white</textcolor>
						<align>center</align>
						<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
						<animation effect="fade" end="85" condition="true">Conditional</animation>
						<visible>!Skin.HasSetting(HideTVShowsWallOverlay) + $EXP[UnwatchedEpisodes99+]</visible>
					</control>
				</itemlayout>
				<focusedlayout width="160" height="225" condition="Skin.String(TVShowsWallStyle,1) | String.IsEmpty(Skin.String(TVShowsWallStyle))">
					<control type="group">
						<depth>DepthContent+</depth>
						<include>DVDWallCoverImage</include>
						<include>DVDWallOverlayImage</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">WallStyle1FocusAnim</include>
					</control>
				</focusedlayout>
				<focusedlayout width="92" height="135" condition="Skin.String(TVShowsWallStyle,2)">
					<control type="group">
						<depth>DepthContent+</depth>
						<left>-2</left>
						<include>DVDWallCoverImageSmall</include>
						<include>DVDWallOverlayImageSmall</include>
						<include condition="![Skin.String(LowCPUPowerMode,Animations) | Skin.String(LowCPUPowerMode,Full)]">WallStyle2FocusAnim</include>
					</control>
				</focusedlayout>
			</control>
			
			<control type="group">
				<visible>Control.HasFocus(586) + System.IdleTime(1) + Skin.HasSetting(HideTVShowsWallExtendedInfoPanel) + !String.IsEmpty(ListItem.Title)</visible>
				<depth>DepthContent+</depth>
				<left>-3</left>
				<top>43</top>
				
				<animation effect="slide" end="159,0" condition="Container(586).Row(0) + Container(586).Column(5)">Conditional</animation>
				<animation effect="slide" end="319,0" condition="Container(586).Row(0) + [Container(586).Column(0) | Container(586).Column(6)]">Conditional</animation>
				<animation effect="slide" end="479,0" condition="Container(586).Row(0) + [Container(586).Column(1) | Container(586).Column(7)]">Conditional</animation>
				<animation effect="slide" end="639,0" condition="Container(586).Row(0) + Container(586).Column(2)">Conditional</animation>
				<animation effect="slide" end="799,0" condition="Container(586).Row(0) + Container(586).Column(3)">Conditional</animation>
				<animation effect="slide" end="159,177" condition="Container(586).Row(1) + Container(586).Column(5)">Conditional</animation>
				<animation effect="slide" end="319,177" condition="Container(586).Row(1) + [Container(586).Column(0) | Container(586).Column(6)]">Conditional</animation>
				<animation effect="slide" end="479,177" condition="Container(586).Row(1) + [Container(586).Column(1) | Container(586).Column(7)]">Conditional</animation>
				<animation effect="slide" end="639,177" condition="Container(586).Row(1) + Container(586).Column(2)">Conditional</animation>
				<animation effect="slide" end="799,177" condition="Container(586).Row(1) + Container(586).Column(3)">Conditional</animation>
				<animation effect="slide" end="0,177" condition="Container(586).Row(1) + Container(586).Column(4)">Conditional</animation>
				<animation effect="slide" end="159,347" condition="Container(586).Row(2) + Container(586).Column(5)">Conditional</animation>
				<animation effect="slide" end="319,347" condition="Container(586).Row(2) + [Container(586).Column(0) | Container(586).Column(6)]">Conditional</animation>
				<animation effect="slide" end="479,347" condition="Container(586).Row(2) + [Container(586).Column(1) | Container(586).Column(7)]">Conditional</animation>
				<animation effect="slide" end="639,347" condition="Container(586).Row(2) + Container(586).Column(2)">Conditional</animation>
				<animation effect="slide" end="799,347" condition="Container(586).Row(2) + Container(586).Column(3)">Conditional</animation>
				<animation effect="slide" end="0,347" condition="Container(586).Row(2) + Container(586).Column(4)">Conditional</animation>
				
				<animation type="Visible">
					<effect type="fade" start="0" end="100" time="300"/>
					<effect type="zoom" end="100" start="50" time="400" tween="back" easing="out" center="243,166"/>
				</animation>
				
				<control type="image">
					<width>487</width>
					<height>333</height>
					<texture border="8">panels/panel.png</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				
				<control type="image">
					<description>Content Background</description>
					<left>8</left>
					<top>8</top>
					<width>471</width>
					<height>317</height>
					<texture border="4">panels/panel-content-border2.png</texture>
					<include>ListInfoViewContentBackgroundFadeAnim</include>
				</control>
				
				<control type="image">
					<left>13</left>
					<top>72</top>
					<width>461</width>
					<height>25</height>
					<texture border="4">panels/panel3.png</texture>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
				</control>
				
				<control type="image">
					<left>13</left>
					<top>101</top>
					<width>461</width>
					<height>149</height>
					<texture border="4">panels/panel3.png</texture>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
				</control>
				
				<control type="image">
					<left>13</left>
					<top>255</top>
					<width>461</width>
					<height>25</height>
					<texture border="4">panels/panel3.png</texture>
					<include>ListInfoViewMediaInfoBackgroundFadeAnim</include>
				</control>
				
				<control type="image">
					<left>13</left>
					<top>11</top>
					<width>461</width>
					<height>58</height>
					<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<visible>!String.IsEmpty(ListItem.Art(clearlogo)) + !Skin.HasSetting(DisableTVShowsLogo)</visible>
				</control>
				
				<control type="label">
					<description>Title</description>
					<top>10</top>
					<left>13</left>
					<width>461</width>
					<height>58</height>
					<align>center</align>
					<aligny>center</aligny>
					<font>KaraokeFont</font>
					<textcolor>MediaInfoTitleColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Title][/UPPERCASE]</label>
					<scroll>true</scroll>
					<visible>String.IsEmpty(ListItem.Art(clearlogo)) | Skin.HasSetting(DisableTVShowsLogo)</visible>
				</control>
				
				<control type="label">
					<description>Genre</description>
					<left>18</left>
					<top>72</top>
					<width>451</width>
					<height>25</height>
					<align>center</align>
					<aligny>center</aligny>
					<font>MediaInfoFont2</font>
					<textcolor>MediaInfoItemColor2</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<label>[UPPERCASE]$INFO[ListItem.Genre][/UPPERCASE]</label>
					<scroll>true</scroll>
				</control>
				
				<control type="textbox">
					<description>Plot</description>
					<left>18</left>
					<top>108</top>
					<width>451</width>
					<height>137</height>
					<font>SettingsContentFont2</font>
					<textcolor>MediaInfoColor</textcolor>
					<shadowcolor>ShadowColor</shadowcolor>
					<align>justify</align>
					<label fallback="31203">$INFO[ListItem.Plot]</label>
					<wrapmultiline>true</wrapmultiline>
					<autoscroll time="2000" delay="6000" repeat="10000">true</autoscroll>
					<include>ControlsOpenCloseAnim</include>
				</control>
				
				<control type="label">
					<description>Media Info</description>
					<left>14</left>
					<top>255</top>
					<width>459</width>
					<height>25</height>
					<align>center</align>
					<aligny>center</aligny>
					<include>ListInfoViewCatLabel</include>
					<label>$LOCALIZE[20360]:$INFO[ListItem.Property(TotalSeasons),[COLOR=MediaInfoItemColor2] ,  &#x2022;  [/COLOR]]$LOCALIZE[33054]:$INFO[ListItem.Episode,[COLOR=MediaInfoItemColor2] ,  &#x2022;  [/COLOR]]$LOCALIZE[345]:$INFO[ListItem.Year,[COLOR=MediaInfoItemColor2] ,  &#x2022;  [/COLOR]]$LOCALIZE[563]:$VAR[RatingType,[COLOR=MediaInfoItemColor2] ,[/COLOR]]</label>
				</control>
				
				<control type="grouplist">
					<description>Media Flags Area</description>
					<visible>!Skin.HasSetting(DisableMediaFlags)</visible>
					<left>13</left>
					<top>285</top>
					<width>461</width>
					<height>35</height>
					<itemgap>5</itemgap>
					<align>center</align>
					<usecontrolcoords>true</usecontrolcoords>
					<orientation>horizontal</orientation>
					<include>MediaFlagFadeAnim</include>
					<control type="group">
						<visible>System.HasAddon(script.tv.show.next.aired) + !Skin.HasSetting(EnableNextAiredStatusMediaFlag)</visible>
						<width>104</width>
						<control type="image">
							<width>104</width>
							<height>35</height>
							<texture border="6">flagging/$VAR[MediaFlagTheme]/flag-big-bg.png</texture>
							<animation effect="fade" time="200">VisibleChange</animation>
							<visible>!String.IsEmpty(Window(Home).Property(NextAired.Status))</visible>
						</control>
						<control type="label">
							<description>Next Aired Status</description>
							<left>2</left>
							<width>100</width>
							<height>35</height>
							<font>NextAiredTimeFont</font>
							<textcolor>SelectedColor</textcolor>
							<align>center</align>
							<aligny>center</aligny>
							<wrapmultiline>true</wrapmultiline>
							<label>$INFO[Window(Home).Property(NextAired.Status)]</label>
							<visible>!String.IsEqual(Window(Home).Property(NextAired.StatusID),1)</visible>
						</control>
						<control type="label">
							<description>Next Aired Status Cancelled/Ended</description>
							<left>2</left>
							<width>100</width>
							<height>35</height>
							<font>NextAiredTimeFont</font>
							<textcolor>SelectedColor</textcolor>
							<align>center</align>
							<aligny>center</aligny>
							<wrapmultiline>true</wrapmultiline>
							<label>$LOCALIZE[31965]</label>
							<visible>String.IsEqual(Window(Home).Property(NextAired.StatusID),1)</visible>
						</control>
					</control>
					<control type="group">
						<visible>!String.IsEmpty(ListItem.Studio)</visible>
						<width>58</width>
						<control type="image">
							<width>58</width>
							<height>35</height>
							<texture border="6">flagging/$VAR[MediaFlagTheme]/flag-bg.png</texture>
						</control>
						<control type="image">
							<description>Studio Flag</description>
							<width>58</width>
							<height>35</height>
							<aspectratio>stretch</aspectratio>
							<texture>resource://resource.images.studios.white/$INFO[ListItem.Studio].png</texture>
						</control>
					</control>
				</control>
			</control>
			
			<include content="WallViewScrollbar">
				<param name="id" value="91204" />
			</include>
			
			<control type="group" id="659">
				<description>Bottom Bar Area</description>
				<depth>DepthContent+</depth>
				<top>BottomPaneOffsetY</top>
				<visible>Control.HasFocus(586) + System.IdleTime(2) + !Skin.HasSetting(HideTVShowsWallInfoPanel)</visible>
				<animation effect="slide" start="0,65" time="300">Visible</animation>
				<include>InfoPaneImage</include>
				<include>InfoPaneMediaDetails</include>
				<include>BottomPaneOpenCloseAnim</include>
				
				<control type="label">
					<include>InfoPaneItemTitle</include>
					<label>[B]$INFO[ListItem.Label][/B]</label>
					<visible>String.IsEmpty(ListItem.Art(clearlogo)) | Skin.HasSetting(DisableTVShowsLogo)</visible>
				</control>
				
				<control type="group">
					<animation effect="slide" end="0,-6" condition="true">Conditional</animation>
					<include condition="!Skin.HasSetting(DisableTVShowsLogo)">InfoPaneClearLogo</include>
				</control>
				
				<control type="group">
					<visible>!Skin.HasSetting(ShowTVShowsWallRating)</visible>
					<animation effect="slide" end="0,12" time="100" condition="!String.IsEmpty(ListItem.Art(clearlogo)) + !Skin.HasSetting(DisableTVShowsLogo)">Conditional</animation>
						
					<control type="label">
						<include>InfoPaneItemTitle2</include>
						<label>$INFO[ListItem.Genre]</label>
						<visible>Window.IsActive(Videos)</visible>
					</control>
					
					<control type="label">
						<include>InfoPaneItemTitle2</include>
						<label>$INFO[ListItem.Label2]</label>
						<visible>Window.IsActive(Videos,Files) + !Container.Content(TVShows)</visible>
					</control>
				</control>
				
				<control type="group">
					<visible>Skin.HasSetting(ShowTVShowsWallRating)</visible>
					<animation effect="slide" end="0,12" time="100" condition="!String.IsEmpty(ListItem.Art(clearlogo)) + !Skin.HasSetting(DisableTVShowsLogo)">Conditional</animation>
					
					<control type="label">
						<include>InfoPaneItemTitle2</include>
						<label>$VAR[RatingType]</label>
						<visible>Skin.HasSetting(DoNotUseStarRatingTVShows) + ![String.IsEmpty(ListItem.Rating) + String.IsEmpty(ListItem.UserRating)]</visible>
					</control>
					
					<control type="image">
						<left>590</left>
						<top>24</top>
						<width>100</width>
						<height>16</height>
						<texture background="true">$VAR[StarRating]</texture>
						<aspectratio>keep</aspectratio>
						<visible>!Skin.HasSetting(DoNotUseStarRatingTVShows) + ![String.IsEmpty(ListItem.Rating) + String.IsEmpty(ListItem.UserRating)]</visible>
						<include>MediaFlagFadeAnim</include>
					</control>
				</control>
			</control>
			
			<include>ViewsDialogPopUpScreenDim</include>
		</control>
	</include>
	<!--//// END WALL VIEW ////////////////////////////////////////////////////////////////////////////-->
</includes>